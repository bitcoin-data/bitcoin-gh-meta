[
   {
      "author_association" : "MEMBER",
      "body" : "Here is an extra simplification we discussed IRL: https://github.com/sipa/bitcoin/commits/achow_sigdata-partial-sigs",
      "created_at" : "2018-06-09T03:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-395937612",
      "id" : 395937612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTkzNzYxMg==",
      "updated_at" : "2018-06-09T03:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395937612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236571"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `CScriptID` as key type?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:11:54Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;\n+    std::map<uint160, CScript> scripts;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236571",
      "id" : 194236571,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjU3MQ==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 5,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236571",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236575"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you use `CKeyID` as key type here, you can avoid the iteration to find matches.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:12:15Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236575",
      "id" : 194236575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjU3NQ==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 4,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236575",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `> >`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:12:48Z",
      "diff_hunk" : "@@ -184,12 +184,101 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (MutableTransactionSignatureChecker::CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey, scriptSig);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker);\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char> > solutions;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236583",
      "id" : 194236583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjU4Mw==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 52,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236583",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps add a comment that explains the overlap in relevance of these fields:\r\n* `scriptSig` and `scriptWitness` are used for both complete signatures, and for old-style partial signatures.\r\n* `signatures` and `scripts` are only used for new-style partial signatures, but may be present for complete signatures too.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:15:17Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236633",
      "id" : 194236633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjYzMw==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 2,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236633",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It feels a bit ugly to hardcode the dependency on `MutableTransactionSignatureChecker`, as there isn't technically anything in this class that requires it (you could pass in a `BaseSignatureChecker` reference instead).\r\n\r\nThis is just a nit, as it's really only used in `DataFromTransaction` and probably won't ever be used elsewhere.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:18:21Z",
      "diff_hunk" : "@@ -81,4 +84,14 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public MutableTransactionSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236723",
      "id" : 194236723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjcyMw==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 26,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236723",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In \"Replace CombineSignatures with ProduceSignature\"\r\n\r\nSee my suggested commits in https://github.com/sipa/bitcoin/tree/achow_sigdata-partial-sigs to avoid introducing the `SignatureDataSigningProvider` and `SignatureDataSignatureCreator` classes here.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:22:58Z",
      "diff_hunk" : "@@ -648,10 +648,8 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n         SignatureData sigdata = DataFromTransaction(mergedTx, i, coin.out);\n         // Only sign SIGHASH_SINGLE if there's a corresponding output:\n         if (!fHashSingle || (i < mergedTx.vout.size()))\n-            ProduceSignature(keystore, MutableTransactionSignatureCreator(&mergedTx, i, amount, nHashType), prevPubKey, sigdata);\n+            ProduceSignature(SignatureDataSigningProvider(&sigdata, &keystore), SignatureDataSignatureCreator(&sigdata, &mergedTx, i, amount, nHashType), prevPubKey, sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236827",
      "id" : 194236827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjgyNw==",
      "original_commit_id" : "d0f96c4544f13e6c44896b2338859ee10c273f11",
      "original_position" : 5,
      "path" : "src/bitcoin-tx.cpp",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236845"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to introduce a wrapper here as well for the pattern that replaces the `CombineSignatures` calls?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:23:53Z",
      "diff_hunk" : "@@ -629,7 +629,10 @@ BOOST_AUTO_TEST_CASE(test_witness)\n     CreateCreditAndSpend(keystore2, scriptMulti, output2, input2, false);\n     CheckWithFlag(output2, input2, 0, false);\n     BOOST_CHECK(*output1 == *output2);\n-    UpdateInput(input1.vin[0], CombineSignatures(output1->vout[0].scriptPubKey, MutableTransactionSignatureChecker(&input1, 0, output1->vout[0].nValue), DataFromTransaction(input1, 0, output1->vout[0]), DataFromTransaction(input2, 0, output1->vout[0])));\n+    sigdata = DataFromTransaction(input1, 0, output1->vout[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194236845",
      "id" : 194236845,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNjg0NQ==",
      "original_commit_id" : "40d5ce7016afb2ec61e3155018aed3b635eac58d",
      "original_position" : 5,
      "path" : "src/test/transaction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 127376095,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194236845",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GetPubKey` won't work if these are `CKeyID`s",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:37:23Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237125",
      "id" : 194237125,
      "in_reply_to_id" : 194236575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNzEyNQ==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 4,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237258"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, good point. You could have an `std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char>>>` though, which stores both full public key and signature.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:42:35Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237258",
      "id" : 194237258,
      "in_reply_to_id" : 194236575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNzI1OA==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 4,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127376854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237258",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have included squashed in @sipa's suggested commits.",
      "created_at" : "2018-06-09T19:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-395993832",
      "id" : 395993832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTk5MzgzMg==",
      "updated_at" : "2018-06-09T19:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395993832",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you'd introduce a `sigdata.scripts.emplace(CScriptID(subscript), subscript);` here (and similarly below for the `TX_WITNESS_V0_SCRIPTHASH` case), you get (I think) all functionality you need for operating on `SignatureData` objects without the need for the legacy partial signatures.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T19:51:27Z",
      "diff_hunk" : "@@ -152,7 +180,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n         // the final scriptSig is the signatures from that\n         // and then the serialized subscript:\n         subscript = CScript(result[0].begin(), result[0].end());\n-        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE) && whichType != TX_SCRIPTHASH;\n+        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE, sigdata) && whichType != TX_SCRIPTHASH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194237501",
      "id" : 194237501,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzNzUwMQ==",
      "original_commit_id" : "6ce5a289bd6db2d7392957745601d0acff35a41e",
      "original_position" : 155,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127377053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194237501",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You're missing the `DUMMY_SIGNING_PROVIDER` instance.",
      "created_at" : "2018-06-09T19:54:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-395994552",
      "id" : 395994552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTk5NDU1Mg==",
      "updated_at" : "2018-06-09T19:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395994552",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure that that is possible since I need to use `MutableTransactionSignatureChecker::CheckSig` as I do not want to re-implement a signature checker when one already exists.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:25:45Z",
      "diff_hunk" : "@@ -81,4 +84,14 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public MutableTransactionSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238177",
      "id" : 194238177,
      "in_reply_to_id" : 194236723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODE3Nw==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 26,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127377741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238177",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238270"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh of course; I just mean that you pass in a `BaseSignatureChecker*` which is stored inside. You can then call its CheckSig member function (which is public).",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:30:19Z",
      "diff_hunk" : "@@ -81,4 +84,14 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public MutableTransactionSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238270",
      "id" : 194238270,
      "in_reply_to_id" : 194236723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODI3MA==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 26,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127377832,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238270",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:49:02Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;\n+    std::map<uint160, CScript> scripts;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238659",
      "id" : 194238659,
      "in_reply_to_id" : 194236571,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODY1OQ==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 5,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127378199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238659",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:49:48Z",
      "diff_hunk" : "@@ -184,12 +184,101 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (MutableTransactionSignatureChecker::CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey, scriptSig);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker);\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char> > solutions;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238674",
      "id" : 194238674,
      "in_reply_to_id" : 194236583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODY3NA==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 52,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238674",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238677"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:49:53Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238677",
      "id" : 194238677,
      "in_reply_to_id" : 194236633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODY3Nw==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 2,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127378228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238677",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:50:06Z",
      "diff_hunk" : "@@ -648,10 +648,8 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n         SignatureData sigdata = DataFromTransaction(mergedTx, i, coin.out);\n         // Only sign SIGHASH_SINGLE if there's a corresponding output:\n         if (!fHashSingle || (i < mergedTx.vout.size()))\n-            ProduceSignature(keystore, MutableTransactionSignatureCreator(&mergedTx, i, amount, nHashType), prevPubKey, sigdata);\n+            ProduceSignature(SignatureDataSigningProvider(&sigdata, &keystore), SignatureDataSignatureCreator(&sigdata, &mergedTx, i, amount, nHashType), prevPubKey, sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238684",
      "id" : 194238684,
      "in_reply_to_id" : 194236827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODY4NA==",
      "original_commit_id" : "d0f96c4544f13e6c44896b2338859ee10c273f11",
      "original_position" : 5,
      "path" : "src/bitcoin-tx.cpp",
      "position" : null,
      "pull_request_review_id" : 127378237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238684",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T20:50:14Z",
      "diff_hunk" : "@@ -152,7 +180,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n         // the final scriptSig is the signatures from that\n         // and then the serialized subscript:\n         subscript = CScript(result[0].begin(), result[0].end());\n-        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE) && whichType != TX_SCRIPTHASH;\n+        solved = solved && SignStep(provider, creator, subscript, result, whichType, SigVersion::BASE, sigdata) && whichType != TX_SCRIPTHASH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194238688",
      "id" : 194238688,
      "in_reply_to_id" : 194237501,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzODY4OA==",
      "original_commit_id" : "6ce5a289bd6db2d7392957745601d0acff35a41e",
      "original_position" : 155,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194238688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You're missing the `DUMMY_SIGNING_PROVIDER` instance.\r\n\r\nFixed",
      "created_at" : "2018-06-09T20:50:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-395997934",
      "id" : 395997934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTk5NzkzNA==",
      "updated_at" : "2018-06-09T20:50:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395997934",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `mi->second`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:12:11Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239067",
      "id" : 194239067,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTA2Nw==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 18,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be `const auto&`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:12:32Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;\n+        return true;\n+    }\n+    return false;\n }\n \n-static bool SignN(const SigningProvider& provider, const std::vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetPubKey(const SigningProvider* provider, const SignatureData* sigdata, const CKeyID &address, CPubKey& vchPubKeyOut)\n {\n-    int nSigned = 0;\n-    int nRequired = multisigdata.front()[0];\n-    for (unsigned int i = 1; i < multisigdata.size()-1 && nSigned < nRequired; i++)\n-    {\n-        const valtype& pubkey = multisigdata[i];\n-        CKeyID keyID = CPubKey(pubkey).GetID();\n-        if (Sign1(provider, keyID, creator, scriptCode, ret, sigversion))\n-            ++nSigned;\n+    if (provider != nullptr && provider->GetPubKey(address, vchPubKeyOut)) {\n+        return true;\n     }\n-    return nSigned==nRequired;\n+    // Look for pubkey in all partial sigs\n+    for (auto& it : sigdata->signatures) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239072",
      "id" : 194239072,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTA3Mg==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 40,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239072",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can probably rename `vchPubKeyOut` to `pubkey` or so now.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:13:37Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;\n+        return true;\n+    }\n+    return false;\n }\n \n-static bool SignN(const SigningProvider& provider, const std::vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetPubKey(const SigningProvider* provider, const SignatureData* sigdata, const CKeyID &address, CPubKey& vchPubKeyOut)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239095",
      "id" : 194239095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTA5NQ==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 25,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239101"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should probably rename this to `pubkey`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:14:00Z",
      "diff_hunk" : "@@ -81,37 +88,56 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion))\n-            return false;\n-        else\n-        {\n-            CPubKey vch;\n-            provider.GetPubKey(keyID, vch);\n-            ret.push_back(ToByteVector(vch));\n-        }\n+        if (!creator.CreateSig(provider, sig, keyID, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        CPubKey vch;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239101",
      "id" : 194239101,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTEwMQ==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 86,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239101",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239124"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`next_script = std::move(redeem_script)`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:15:22Z",
      "diff_hunk" : "@@ -298,89 +247,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239124",
      "id" : 194239124,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTEyNA==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 369,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239124",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239135"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`next_script = std::move(witness_script);`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:16:02Z",
      "diff_hunk" : "@@ -298,89 +247,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239135",
      "id" : 194239135,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTEzNQ==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 379,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239135",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:16:07Z",
      "diff_hunk" : "@@ -56,9 +56,12 @@ extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n struct SignatureData {\n     CScript scriptSig;\n     CScriptWitness scriptWitness;\n+    std::map<CPubKey, std::vector<unsigned char>> signatures;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239138",
      "id" : 194239138,
      "in_reply_to_id" : 194236575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTEzOA==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 4,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127378690,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239138",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're computing `pubkey.GetID()` twice; perhaps store in a variable and reuse?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:19:45Z",
      "diff_hunk" : "@@ -81,37 +87,56 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion))\n-            return false;\n-        else\n-        {\n-            CPubKey vch;\n-            provider.GetPubKey(keyID, vch);\n-            ret.push_back(ToByteVector(vch));\n-        }\n+        if (!creator.CreateSig(provider, sig, keyID, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        CPubKey vch;\n+        GetPubKey(&provider, &sigdata, keyID, vch);\n+        ret.push_back(ToByteVector(vch));\n         return true;\n+    }\n     case TX_SCRIPTHASH:\n-        if (provider.GetCScript(uint160(vSolutions[0]), scriptRet)) {\n+        if (GetCScript(&provider, &sigdata, uint160(vSolutions[0]), scriptRet)) {\n             ret.push_back(std::vector<unsigned char>(scriptRet.begin(), scriptRet.end()));\n             return true;\n         }\n         return false;\n \n-    case TX_MULTISIG:\n+    case TX_MULTISIG: {\n+        size_t required = vSolutions.front()[0];\n+        std::map<CKeyID, SigPair> newsigs;\n         ret.push_back(valtype()); // workaround CHECKMULTISIG bug\n-        return (SignN(provider, vSolutions, creator, scriptPubKey, ret, sigversion));\n-\n+        for (size_t i = 1; i < vSolutions.size() - 1; ++i) {\n+            CPubKey pubkey = CPubKey(vSolutions[i]);\n+            auto it = sigdata.signatures.find(pubkey.GetID());\n+            if (it != sigdata.signatures.end()) {\n+                sig = it->second.second;\n+            } else {\n+                if (!creator.CreateSig(provider, sig, pubkey.GetID(), scriptPubKey, sigversion)) sig.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239207",
      "id" : 194239207,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTIwNw==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 111,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239207",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`stack.script = std::move(stack.witness);`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:20:49Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239223",
      "id" : 194239223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTIyMw==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 383,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239223",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Style nit: `{` on the same line as `for`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:21:13Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239228",
      "id" : 194239228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTIyOA==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 410,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Style nit: `continue` either on the same line as `if`, or indented while surrounded by braces.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:21:39Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID()))\n+                    continue; // Already got a sig for this pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239232",
      "id" : 194239232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTIzMg==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 413,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239232",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239234"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Style nit: `{` on the same line as `if`.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:21:50Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID()))\n+                    continue; // Already got a sig for this pubkey\n+\n+                if (checker.CheckSig(sig, pubkey, next_script, sigversion))\n+                {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239234",
      "id" : 194239234,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTIzNA==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 416,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239234",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ultra nit: \"update with signature data\" sounds a bit weird for signature data itself. Perhaps call it `Merge` or so?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:23:44Z",
      "diff_hunk" : "@@ -53,12 +55,18 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain complete signatures\n+    std::map<CScriptID, CScript> scripts; // BIP 174 style scripts for the input\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void UpdateWithSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239269",
      "id" : 194239269,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTI2OQ==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 34,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127378620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239269",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, right. Done.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:31:01Z",
      "diff_hunk" : "@@ -81,4 +84,14 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker : public MutableTransactionSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239389",
      "id" : 194239389,
      "in_reply_to_id" : 194236723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTM4OQ==",
      "original_commit_id" : "642a8b867430684aefbf99f038666b25c7ddc5af",
      "original_position" : 26,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127378924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239389",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:52:33Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239781",
      "id" : 194239781,
      "in_reply_to_id" : 194239067,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc4MQ==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 18,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239781",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:52:38Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;\n+        return true;\n+    }\n+    return false;\n }\n \n-static bool SignN(const SigningProvider& provider, const std::vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetPubKey(const SigningProvider* provider, const SignatureData* sigdata, const CKeyID &address, CPubKey& vchPubKeyOut)\n {\n-    int nSigned = 0;\n-    int nRequired = multisigdata.front()[0];\n-    for (unsigned int i = 1; i < multisigdata.size()-1 && nSigned < nRequired; i++)\n-    {\n-        const valtype& pubkey = multisigdata[i];\n-        CKeyID keyID = CPubKey(pubkey).GetID();\n-        if (Sign1(provider, keyID, creator, scriptCode, ret, sigversion))\n-            ++nSigned;\n+    if (provider != nullptr && provider->GetPubKey(address, vchPubKeyOut)) {\n+        return true;\n     }\n-    return nSigned==nRequired;\n+    // Look for pubkey in all partial sigs\n+    for (auto& it : sigdata->signatures) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239783",
      "id" : 194239783,
      "in_reply_to_id" : 194239072,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc4Mw==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 40,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239783",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239788"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239788"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:52:42Z",
      "diff_hunk" : "@@ -33,27 +33,33 @@ bool MutableTransactionSignatureCreator::CreateSig(const SigningProvider& provid\n     return true;\n }\n \n-static bool Sign1(const SigningProvider& provider, const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetCScript(const SigningProvider* provider, const SignatureData* sigdata, const CScriptID &scriptid, CScript& script)\n {\n-    std::vector<unsigned char> vchSig;\n-    if (!creator.CreateSig(provider, vchSig, address, scriptCode, sigversion))\n-        return false;\n-    ret.push_back(vchSig);\n-    return true;\n+    if (provider != nullptr && provider->GetCScript(scriptid, script)) {\n+        return true;\n+    }\n+    // Look for scripts in SignatureData\n+    auto mi = sigdata->scripts.find(scriptid);\n+    if (mi != sigdata->scripts.end()) {\n+        script = (*mi).second;\n+        return true;\n+    }\n+    return false;\n }\n \n-static bool SignN(const SigningProvider& provider, const std::vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool GetPubKey(const SigningProvider* provider, const SignatureData* sigdata, const CKeyID &address, CPubKey& vchPubKeyOut)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239788",
      "id" : 194239788,
      "in_reply_to_id" : 194239095,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc4OA==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 25,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239788",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239791"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:52:48Z",
      "diff_hunk" : "@@ -81,37 +88,56 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion))\n-            return false;\n-        else\n-        {\n-            CPubKey vch;\n-            provider.GetPubKey(keyID, vch);\n-            ret.push_back(ToByteVector(vch));\n-        }\n+        if (!creator.CreateSig(provider, sig, keyID, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        CPubKey vch;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239791",
      "id" : 194239791,
      "in_reply_to_id" : 194239101,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc5MQ==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 86,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239791",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:52:52Z",
      "diff_hunk" : "@@ -298,89 +247,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239793",
      "id" : 194239793,
      "in_reply_to_id" : 194239124,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc5Mw==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 369,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239793",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:00Z",
      "diff_hunk" : "@@ -298,89 +247,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239796",
      "id" : 194239796,
      "in_reply_to_id" : 194239135,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTc5Ng==",
      "original_commit_id" : "340201bfff0328ec4f7867ce5d957412804808f8",
      "original_position" : 379,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379364,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239796",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:06Z",
      "diff_hunk" : "@@ -81,37 +87,56 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion))\n-            return false;\n-        else\n-        {\n-            CPubKey vch;\n-            provider.GetPubKey(keyID, vch);\n-            ret.push_back(ToByteVector(vch));\n-        }\n+        if (!creator.CreateSig(provider, sig, keyID, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        CPubKey vch;\n+        GetPubKey(&provider, &sigdata, keyID, vch);\n+        ret.push_back(ToByteVector(vch));\n         return true;\n+    }\n     case TX_SCRIPTHASH:\n-        if (provider.GetCScript(uint160(vSolutions[0]), scriptRet)) {\n+        if (GetCScript(&provider, &sigdata, uint160(vSolutions[0]), scriptRet)) {\n             ret.push_back(std::vector<unsigned char>(scriptRet.begin(), scriptRet.end()));\n             return true;\n         }\n         return false;\n \n-    case TX_MULTISIG:\n+    case TX_MULTISIG: {\n+        size_t required = vSolutions.front()[0];\n+        std::map<CKeyID, SigPair> newsigs;\n         ret.push_back(valtype()); // workaround CHECKMULTISIG bug\n-        return (SignN(provider, vSolutions, creator, scriptPubKey, ret, sigversion));\n-\n+        for (size_t i = 1; i < vSolutions.size() - 1; ++i) {\n+            CPubKey pubkey = CPubKey(vSolutions[i]);\n+            auto it = sigdata.signatures.find(pubkey.GetID());\n+            if (it != sigdata.signatures.end()) {\n+                sig = it->second.second;\n+            } else {\n+                if (!creator.CreateSig(provider, sig, pubkey.GetID(), scriptPubKey, sigversion)) sig.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239801",
      "id" : 194239801,
      "in_reply_to_id" : 194239207,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgwMQ==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 111,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239805"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:11Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239805",
      "id" : 194239805,
      "in_reply_to_id" : 194239223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgwNQ==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 383,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239805",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239806"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:16Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239806",
      "id" : 194239806,
      "in_reply_to_id" : 194239228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgwNg==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 410,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239806",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239807"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:21Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID()))\n+                    continue; // Already got a sig for this pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239807",
      "id" : 194239807,
      "in_reply_to_id" : 194239232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgwNw==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 413,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239807",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:26Z",
      "diff_hunk" : "@@ -298,89 +246,112 @@ struct Stacks\n };\n }\n \n-static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n-                                 Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n-    switch (txType)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-    case TX_WITNESS_UNKNOWN:\n-        // Don't know anything about this, assume bigger one is correct:\n-        if (sigs1.script.size() >= sigs2.script.size())\n-            return sigs1;\n-        return sigs2;\n-    case TX_PUBKEY:\n-    case TX_PUBKEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.script.empty() || sigs1.script[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_WITNESS_V0_KEYHASH:\n-        // Signatures are bigger than placeholders or empty scripts:\n-        if (sigs1.witness.empty() || sigs1.witness[0].empty())\n-            return sigs2;\n-        return sigs1;\n-    case TX_SCRIPTHASH:\n-        if (sigs1.script.empty() || sigs1.script.back().empty())\n-            return sigs2;\n-        else if (sigs2.script.empty() || sigs2.script.back().empty())\n-            return sigs1;\n-        else\n-        {\n-            // Recur to combine:\n-            valtype spk = sigs1.script.back();\n-            CScript pubKey2(spk.begin(), spk.end());\n-\n-            txnouttype txType2;\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.script.pop_back();\n-            sigs2.script.pop_back();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, sigversion);\n-            result.script.push_back(spk);\n-            return result;\n-        }\n-    case TX_MULTISIG:\n-        return Stacks(CombineMultisig(scriptPubKey, checker, vSolutions, sigs1.script, sigs2.script, sigversion));\n-    case TX_WITNESS_V0_SCRIPTHASH:\n-        if (sigs1.witness.empty() || sigs1.witness.back().empty())\n-            return sigs2;\n-        else if (sigs2.witness.empty() || sigs2.witness.back().empty())\n-            return sigs1;\n-        else\n+    SignatureData data;\n+    assert(tx.vin.size() > nIn);\n+    data.scriptSig = tx.vin[nIn].scriptSig;\n+    data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    SignatureExtractorChecker checker(&tx, nIn, txout.nValue, &data);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = redeem_script;\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = witness_script;\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = stack.witness;\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script)\n         {\n-            // Recur to combine:\n-            CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n-            txnouttype txType2;\n-            std::vector<valtype> vSolutions2;\n-            Solver(pubKey2, txType2, vSolutions2);\n-            sigs1.witness.pop_back();\n-            sigs1.script = sigs1.witness;\n-            sigs1.witness.clear();\n-            sigs2.witness.pop_back();\n-            sigs2.script = sigs2.witness;\n-            sigs2.witness.clear();\n-            Stacks result = CombineSignatures(pubKey2, checker, txType2, vSolutions2, sigs1, sigs2, SigVersion::WITNESS_V0);\n-            result.witness = result.script;\n-            result.script.clear();\n-            result.witness.push_back(valtype(pubKey2.begin(), pubKey2.end()));\n-            return result;\n+            for (unsigned int i = 0; i < num_pubkeys; i++)\n+            {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID()))\n+                    continue; // Already got a sig for this pubkey\n+\n+                if (checker.CheckSig(sig, pubkey, next_script, sigversion))\n+                {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239808",
      "id" : 194239808,
      "in_reply_to_id" : 194239234,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgwOA==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 416,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 127379376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239811"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T21:53:31Z",
      "diff_hunk" : "@@ -53,12 +55,18 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain complete signatures\n+    std::map<CScriptID, CScript> scripts; // BIP 174 style scripts for the input\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void UpdateWithSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194239811",
      "id" : 194239811,
      "in_reply_to_id" : 194239269,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzOTgxMQ==",
      "original_commit_id" : "64f4a710bbddace7ee51ff6cfbc19f039e7739fa",
      "original_position" : 34,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 127379377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194239811",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194240786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194240786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-09T22:51:19Z",
      "diff_hunk" : "@@ -629,7 +629,10 @@ BOOST_AUTO_TEST_CASE(test_witness)\n     CreateCreditAndSpend(keystore2, scriptMulti, output2, input2, false);\n     CheckWithFlag(output2, input2, 0, false);\n     BOOST_CHECK(*output1 == *output2);\n-    UpdateInput(input1.vin[0], CombineSignatures(output1->vout[0].scriptPubKey, MutableTransactionSignatureChecker(&input1, 0, output1->vout[0].nValue), DataFromTransaction(input1, 0, output1->vout[0]), DataFromTransaction(input2, 0, output1->vout[0])));\n+    sigdata = DataFromTransaction(input1, 0, output1->vout[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194240786",
      "id" : 194240786,
      "in_reply_to_id" : 194236845,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI0MDc4Ng==",
      "original_commit_id" : "40d5ce7016afb2ec61e3155018aed3b635eac58d",
      "original_position" : 5,
      "path" : "src/test/transaction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 127380398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194240786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 862c0d1749e28c46fd7c5fb951ac41f6d5dfad06\r\n\r\nPerhaps something to add to the rationale: by having all processing be done by `ProduceSignature` (which now can take existing partial signatures as input), the model much more closely matches BIP 174 procedures. The changes here should make it possible for the BIP174 implementation to largely reuse the existing signing code.",
      "created_at" : "2018-06-09T23:56:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-396007404",
      "id" : 396007404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjAwNzQwNA==",
      "updated_at" : "2018-06-09T23:56:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396007404",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I added a helper function for `createSig` which handles the fetching and placing of signatures from the SignatureData.",
      "created_at" : "2018-06-11T19:03:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-396351220",
      "id" : 396351220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjM1MTIyMA==",
      "updated_at" : "2018-06-11T19:03:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396351220",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed the `newsigs` map from the first commit. Also moved some changes around to commits where they actually made sense to be in.",
      "created_at" : "2018-06-12T18:03:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-396681093",
      "id" : 396681093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjY4MTA5Mw==",
      "updated_at" : "2018-06-12T18:03:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396681093",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194842111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194842111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could start this loop after the last successful key in previous iterations, as keys and signature need to have a corresponding order.\r\n\r\nOtherwise you risk O(n^2) behaviour if they're in opposite order (perhaps we want to support that, but I don't think we currently do).",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-12T18:23:29Z",
      "diff_hunk" : "@@ -181,15 +217,104 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = 0; i < num_pubkeys; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194842111",
      "id" : 194842111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg0MjExMQ==",
      "original_commit_id" : "93f4cec9b9b18351d2f1a317327e233c25caff12",
      "original_position" : 279,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128090737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194842111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194842208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194842208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can end with a `break` as well, I think.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-12T18:23:47Z",
      "diff_hunk" : "@@ -181,15 +217,104 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = 0; i < num_pubkeys; i++) {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID())) continue; // Already got a sig for this pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194842208",
      "id" : 194842208,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg0MjIwOA==",
      "original_commit_id" : "93f4cec9b9b18351d2f1a317327e233c25caff12",
      "original_position" : 281,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128090737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194842208",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Perhaps this PR can be renamed to \"PSBT signer logic\"; it may not be clear right now that in addition to being a code simplification, this also effectively reduces the PSBT PR to serialization + RPC implementations.",
      "created_at" : "2018-06-12T18:55:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-396696793",
      "id" : 396696793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjY5Njc5Mw==",
      "updated_at" : "2018-06-12T18:55:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396696793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194854134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194854134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-12T19:02:48Z",
      "diff_hunk" : "@@ -181,15 +217,104 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = 0; i < num_pubkeys; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194854134",
      "id" : 194854134,
      "in_reply_to_id" : 194842111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1NDEzNA==",
      "original_commit_id" : "93f4cec9b9b18351d2f1a317327e233c25caff12",
      "original_position" : 279,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128105733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194854134",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194854164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194854164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-12T19:02:54Z",
      "diff_hunk" : "@@ -181,15 +217,104 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = 0; i < num_pubkeys; i++) {\n+                const valtype& pubkey = solutions[i+1];\n+                if (data.signatures.count(CPubKey(pubkey).GetID())) continue; // Already got a sig for this pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r194854164",
      "id" : 194854164,
      "in_reply_to_id" : 194842208,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1NDE2NA==",
      "original_commit_id" : "93f4cec9b9b18351d2f1a317327e233c25caff12",
      "original_position" : 281,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128105771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194854164",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated the title to include \"PSBT signer logic\".",
      "created_at" : "2018-06-12T19:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-396698967",
      "id" : 396698967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjY5ODk2Nw==",
      "updated_at" : "2018-06-12T19:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396698967",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2018-06-13T21:01:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-397085336",
      "id" : 397085336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NzA4NTMzNg==",
      "updated_at" : "2018-06-13T21:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397085336",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195269367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195269367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`i + 1` even, I think (the same signature can't be reused for another pubkey).",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-13T23:52:59Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        unsigned int last_success_key = 0;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = last_success_key; i < num_pubkeys; i++) {\n+                const valtype& pubkey = solutions[i+1];\n+                // We either have a signature for this pubkey, or we have found a signature and it is valid\n+                if (data.signatures.count(CPubKey(pubkey).GetID()) || checker.CheckSig(sig, pubkey, next_script, sigversion)) {\n+                    last_success_key = i;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195269367",
      "id" : 195269367,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTM2Nw==",
      "original_commit_id" : "ef4602f9005fb0a31a062f00828278fee8307a07",
      "original_position" : 108,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128603688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195269367",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195277213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195277213"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very nitty: this line and the next will perform an unnecessary copy. You can avoid it with `scripts.insert(std::make_move_iterator(sigdata.scripts.begin()), std::make_move_iterator(sigdata.scripts.end());` etc.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-14T00:53:53Z",
      "diff_hunk" : "@@ -187,6 +280,17 @@ void UpdateInput(CTxIn& input, const SignatureData& data)\n     input.scriptWitness = data.scriptWitness;\n }\n \n+void SignatureData::MergeSignatureData(SignatureData sigdata)\n+{\n+    if (complete) return;\n+    if (sigdata.complete) {\n+        *this = std::move(sigdata);\n+        return;\n+    }\n+    scripts.insert(sigdata.scripts.begin(), sigdata.scripts.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195277213",
      "id" : 195277213,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3NzIxMw==",
      "original_commit_id" : "ef4602f9005fb0a31a062f00828278fee8307a07",
      "original_position" : 129,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128603688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195277213",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195283618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195283618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-14T01:49:14Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n+}\n+\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);\n+    if (VerifyScript(data.scriptSig, txout.scriptPubKey, &data.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, checker)) {\n+        data.complete = true;\n+        return data;\n+    }\n+\n+    // Get scripts\n+    txnouttype script_type;\n+    std::vector<std::vector<unsigned char>> solutions;\n+    Solver(txout.scriptPubKey, script_type, solutions);\n+    SigVersion sigversion = SigVersion::BASE;\n+    CScript next_script = txout.scriptPubKey;\n+\n+    if (script_type == TX_SCRIPTHASH && !stack.script.empty() && !stack.script.back().empty()) {\n+        // Get the redeemScript\n+        CScript redeem_script(stack.script.back().begin(), stack.script.back().end());\n+        data.scripts.emplace(CScriptID(redeem_script), redeem_script);\n+        next_script = std::move(redeem_script);\n+\n+        // Get redeemScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.script.pop_back();\n+    }\n+    if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n+        // Get the witnessScript\n+        CScript witness_script(stack.witness.back().begin(), stack.witness.back().end());\n+        data.scripts.emplace(CScriptID(witness_script), witness_script);\n+        next_script = std::move(witness_script);\n+\n+        // Get witnessScript type\n+        Solver(next_script, script_type, solutions);\n+        stack.witness.pop_back();\n+        stack.script = std::move(stack.witness);\n+        stack.witness.clear();\n+        sigversion = SigVersion::WITNESS_V0;\n+    }\n+    if (script_type == TX_MULTISIG && !stack.script.empty()) {\n+        // Build a map of pubkey -> signature by matching sigs to pubkeys:\n+        assert(solutions.size() > 1);\n+        unsigned int num_pubkeys = solutions.size()-2;\n+        unsigned int last_success_key = 0;\n+        for (const valtype& sig : stack.script) {\n+            for (unsigned int i = last_success_key; i < num_pubkeys; i++) {\n+                const valtype& pubkey = solutions[i+1];\n+                // We either have a signature for this pubkey, or we have found a signature and it is valid\n+                if (data.signatures.count(CPubKey(pubkey).GetID()) || checker.CheckSig(sig, pubkey, next_script, sigversion)) {\n+                    last_success_key = i;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195283618",
      "id" : 195283618,
      "in_reply_to_id" : 195269367,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI4MzYxOA==",
      "original_commit_id" : "ef4602f9005fb0a31a062f00828278fee8307a07",
      "original_position" : 108,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128619627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195283618",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195283624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195283624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-14T01:49:19Z",
      "diff_hunk" : "@@ -187,6 +280,17 @@ void UpdateInput(CTxIn& input, const SignatureData& data)\n     input.scriptWitness = data.scriptWitness;\n }\n \n+void SignatureData::MergeSignatureData(SignatureData sigdata)\n+{\n+    if (complete) return;\n+    if (sigdata.complete) {\n+        *this = std::move(sigdata);\n+        return;\n+    }\n+    scripts.insert(sigdata.scripts.begin(), sigdata.scripts.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r195283624",
      "id" : 195283624,
      "in_reply_to_id" : 195277213,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI4MzYyNA==",
      "original_commit_id" : "ef4602f9005fb0a31a062f00828278fee8307a07",
      "original_position" : 129,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 128619635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195283624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13449 ([WIP] support new multisig template in wallet for Solver, signing, and signature combining by instagibbs)\n* #13429 (Return the script type from Solver by Empact)\n* #13360 ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012)\n* #13266 (refactoring: Inline DataFromTransaction via new SignatureData constructor by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-06-14T20:25:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-397427171",
      "id" : 397427171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NzQyNzE3MQ==",
      "updated_at" : "2018-06-30T11:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397427171",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 3d2cbe67e413e8de0b7144280a19bb348d1a76ca. Only change is addressing my last nits.",
      "created_at" : "2018-06-14T23:09:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-397465271",
      "id" : 397465271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NzQ2NTI3MQ==",
      "updated_at" : "2018-06-14T23:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397465271",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I rebased this and have also updated the SignatureData to match the planned changes for BIP 174.",
      "created_at" : "2018-06-27T03:03:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-400528161",
      "id" : 400528161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMDUyODE2MQ==",
      "updated_at" : "2018-06-27T03:03:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400528161",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 33b85bb01f71d6da7cde39eb5cf42dd581de14b6.",
      "created_at" : "2018-06-27T04:03:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-400536102",
      "id" : 400536102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMDUzNjEwMg==",
      "updated_at" : "2018-06-27T04:03:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400536102",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "may want to rephrase or define \"complete signatures\". I assume you mean it in the PSBT sense.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:07:54Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain complete signatures",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487474",
      "id" : 198487474,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ4NzQ3NA==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 14,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487474",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since we're heavily augmenting this struct could we get a description of the struct's purpose in a comment above it?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:08:21Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487653",
      "id" : 198487653,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ4NzY1Mw==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"from a transaction input\"?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:09:09Z",
      "diff_hunk" : "@@ -72,7 +79,7 @@ bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom,\n SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker, const SignatureData& scriptSig1, const SignatureData& scriptSig2);\n \n /** Extract signature data from a transaction, and insert it. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198487913",
      "id" : 198487913,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ4NzkxMw==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 25,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198487913",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198490355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198490355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "witness script vs script witness.... let's explain this one as well.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:16:22Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198490355",
      "id" : 198490355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ5MDM1NQ==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 12,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198490355",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198490828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198490828"
         }
      },
      "author_association" : "MEMBER",
      "body" : "May want to note it won't extract scripts(redeem script and witness script) if the signatures are already complete",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:17:47Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198490828",
      "id" : 198490828,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ5MDgyOA==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 51,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198490828",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198501291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198501291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion: rename this `extractor_checker` to make later code more clear. Final code block looks like it doesn't change any state if reader thinks it's a different checker.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:47:01Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198501291",
      "id" : 198501291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODUwMTI5MQ==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 62,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198501291",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198502519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198502519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, I presume this function is only dealing with multisigs, since it doesn't need to know any special scripts to otherwise sign or extract signatures for pubkey-based outputs?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T13:50:22Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198502519",
      "id" : 198502519,
      "in_reply_to_id" : 198490828,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODUwMjUxOQ==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 51,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132424724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198502519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Comments on just making it clearer to readers of the code what's going on.",
      "created_at" : "2018-06-27T13:51:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-400678911",
      "id" : 400678911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMDY3ODkxMQ==",
      "updated_at" : "2018-06-27T13:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400678911",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638639"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T20:57:59Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain complete signatures",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638639",
      "id" : 198638639,
      "in_reply_to_id" : 198487474,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzODYzOQ==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 14,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132605846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638639",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T20:58:06Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638666",
      "id" : 198638666,
      "in_reply_to_id" : 198487653,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzODY2Ng==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132605889,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638666",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638699"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T20:58:13Z",
      "diff_hunk" : "@@ -53,12 +53,19 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638699",
      "id" : 198638699,
      "in_reply_to_id" : 198490355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzODY5OQ==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 12,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132605922,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638699",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638743"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T20:58:23Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638743",
      "id" : 198638743,
      "in_reply_to_id" : 198490828,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzODc0Mw==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 51,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132605982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638743",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638784"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T20:58:32Z",
      "diff_hunk" : "@@ -169,15 +171,106 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     sigdata.scriptSig = PushAll(result);\n \n     // Test solution\n-    return solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    sigdata.complete = solved && VerifyScript(sigdata.scriptSig, fromPubKey, &sigdata.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker());\n+    return sigdata.complete;\n }\n \n-SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn)\n+bool SignatureExtractorChecker::CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+{\n+    if (checker->CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        CPubKey pubkey(vchPubKey);\n+        sigdata->signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+namespace\n+{\n+struct Stacks\n+{\n+    std::vector<valtype> script;\n+    std::vector<valtype> witness;\n+\n+    Stacks() {}\n+    explicit Stacks(const std::vector<valtype>& scriptSigStack_) : script(scriptSigStack_), witness() {}\n+    explicit Stacks(const SignatureData& data) : witness(data.scriptWitness.stack) {\n+        EvalScript(script, data.scriptSig, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker(), SigVersion::BASE);\n+    }\n+\n+    SignatureData Output() const {\n+        SignatureData result;\n+        result.scriptSig = PushAll(script);\n+        result.scriptWitness.stack = witness;\n+        return result;\n+    }\n+};\n+}\n+\n+// Extracts signatures and scripts from scriptSigs. Please do not extend this, use PSBT instead\n+SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout)\n {\n     SignatureData data;\n     assert(tx.vin.size() > nIn);\n     data.scriptSig = tx.vin[nIn].scriptSig;\n     data.scriptWitness = tx.vin[nIn].scriptWitness;\n+    Stacks stack(data);\n+\n+    // Get signatures\n+    MutableTransactionSignatureChecker tx_checker(&tx, nIn, txout.nValue);\n+    SignatureExtractorChecker checker(&data, &tx_checker);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198638784",
      "id" : 198638784,
      "in_reply_to_id" : 198501291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzODc4NA==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 62,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 132606032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198638784",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198639737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198639737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-27T21:01:53Z",
      "diff_hunk" : "@@ -72,7 +79,7 @@ bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom,\n SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker, const SignatureData& scriptSig1, const SignatureData& scriptSig2);\n \n /** Extract signature data from a transaction, and insert it. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r198639737",
      "id" : 198639737,
      "in_reply_to_id" : 198487913,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzOTczNw==",
      "original_commit_id" : "d102f08f8fbac938f40b1077dd4771c9b3ffa8c3",
      "original_position" : 25,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 132607235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/198639737",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/13425/commits/95f5a38dd0da039e34aeb805c80e38d3374b9077",
      "created_at" : "2018-06-28T19:04:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-401140466",
      "id" : 401140466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMTE0MDQ2Ng==",
      "updated_at" : "2018-06-28T19:04:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401140466",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @promag's comments from https://github.com/bitcoin/bitcoin/pull/13557#pullrequestreview-132751570",
      "created_at" : "2018-06-28T19:12:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-401142578",
      "id" : 401142578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMTE0MjU3OA==",
      "updated_at" : "2018-06-28T19:12:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401142578",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reutACK a0982864893db999484850282822472cce16913c",
      "created_at" : "2018-06-29T01:32:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-401221255",
      "id" : 401221255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMTIyMTI1NQ==",
      "updated_at" : "2018-06-29T01:32:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401221255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199296949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199296949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: these comments could be doxygenized, e.g. https://www.stack.nl/~dimitri/doxygen/manual/docblocks.html#memberdoc",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-29T22:46:27Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199296949",
      "id" : 199296949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI5Njk0OQ==",
      "original_commit_id" : "b48348d137401f29788663df3f2a253558b5955d",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 133397310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199296949",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199297841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199297841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you leave this pure virtual, it will continue to require that all inheritors implement the associated functions. With this change there's no such forward requirement.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-29T22:52:50Z",
      "diff_hunk" : "@@ -21,11 +21,13 @@ class SigningProvider\n {\n public:\n     virtual ~SigningProvider() {}\n-    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const =0;\n-    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const =0;\n-    virtual bool GetKey(const CKeyID &address, CKey& key) const =0;\n+    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n+    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n+    virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199297841",
      "id" : 199297841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI5Nzg0MQ==",
      "original_commit_id" : "1b5de926f0547a973dcab2bb62809c9e2cfc5ac2",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : 9,
      "pull_request_review_id" : 133398228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199297841",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199300317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199300317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: This is the only use of `keyID` now, so you could declare it in this block.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-29T23:14:43Z",
      "diff_hunk" : "@@ -81,30 +59,40 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199300317",
      "id" : 199300317,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwMDMxNw==",
      "original_commit_id" : "fdcbcb3802d78da06e99253f16c48e4773495c1e",
      "original_position" : 49,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 133400976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199300317",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199305859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199305859"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-30T00:23:30Z",
      "diff_hunk" : "@@ -21,11 +21,13 @@ class SigningProvider\n {\n public:\n     virtual ~SigningProvider() {}\n-    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const =0;\n-    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const =0;\n-    virtual bool GetKey(const CKeyID &address, CKey& key) const =0;\n+    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n+    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n+    virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199305859",
      "id" : 199305859,
      "in_reply_to_id" : 199297841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwNTg1OQ==",
      "original_commit_id" : "1b5de926f0547a973dcab2bb62809c9e2cfc5ac2",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : 9,
      "pull_request_review_id" : 133407423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199305859",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199306530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199306530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-30T00:33:18Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; // Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; // The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; // The redeemScript (if any) for the input\n+    CScript witness_script; // The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; // The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; // BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199306530",
      "id" : 199306530,
      "in_reply_to_id" : 199296949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwNjUzMA==",
      "original_commit_id" : "b48348d137401f29788663df3f2a253558b5955d",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 133408164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199306530",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199306536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199306536"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-30T00:33:23Z",
      "diff_hunk" : "@@ -81,30 +59,40 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        keyID = CPubKey(vSolutions[0]).GetID();\n-        return Sign1(provider, keyID, creator, scriptPubKey, ret, sigversion);\n-    case TX_PUBKEYHASH:\n+        if (!creator.CreateSig(provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n+        return true;\n+    case TX_PUBKEYHASH: {\n         keyID = CKeyID(uint160(vSolutions[0]));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199306536",
      "id" : 199306536,
      "in_reply_to_id" : 199300317,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwNjUzNg==",
      "original_commit_id" : "fdcbcb3802d78da06e99253f16c48e4773495c1e",
      "original_position" : 49,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 133408170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199306536",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199310878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199310878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The theory is that if this stays an abstract base class, any future descendant are more likely to be correct & intentional if the compiler ensures that each of these methods is defined. ItÃ¢ÂÂs a more defensive and theoretical concern than a practical one, but I also think itÃ¢ÂÂs cleaner if a dummy class does not influence the base class for all of the other classes.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-30T02:47:07Z",
      "diff_hunk" : "@@ -21,11 +21,13 @@ class SigningProvider\n {\n public:\n     virtual ~SigningProvider() {}\n-    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const =0;\n-    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const =0;\n-    virtual bool GetKey(const CKeyID &address, CKey& key) const =0;\n+    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n+    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n+    virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199310878",
      "id" : 199310878,
      "in_reply_to_id" : 199297841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMxMDg3OA==",
      "original_commit_id" : "1b5de926f0547a973dcab2bb62809c9e2cfc5ac2",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : 9,
      "pull_request_review_id" : 133413122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199310878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199311590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199311590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The question is really whether \"return false;\" is a reasonable default implementation for someone who doesn't want to implement one or more of the methods. I believe it is, though it can still be split up into an interface pure virtual class, and a dummy implementation you can inherit from when one or more things are intentionally missing.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-06-30T03:24:35Z",
      "diff_hunk" : "@@ -21,11 +21,13 @@ class SigningProvider\n {\n public:\n     virtual ~SigningProvider() {}\n-    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const =0;\n-    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const =0;\n-    virtual bool GetKey(const CKeyID &address, CKey& key) const =0;\n+    virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n+    virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n+    virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199311590",
      "id" : 199311590,
      "in_reply_to_id" : 199297841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMxMTU5MA==",
      "original_commit_id" : "1b5de926f0547a973dcab2bb62809c9e2cfc5ac2",
      "original_position" : 9,
      "path" : "src/script/sign.h",
      "position" : 9,
      "pull_request_review_id" : 133413943,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199311590",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is the same as CryptedKeyMap in keystore.h, might make sense to integrate the definitions.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-01T20:49:56Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361091",
      "id" : 199361091,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM2MTA5MQ==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : 34,
      "pull_request_review_id" : 133465137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361091",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No it's not. This stores signatures and pubkeys.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-01T21:00:25Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361322",
      "id" : 199361322,
      "in_reply_to_id" : 199361091,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM2MTMyMg==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : 34,
      "pull_request_review_id" : 133465375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361322",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's a bit strange that this commit adds MergeSignatureData but doesn't use it.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-01T21:02:38Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void MergeSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361374",
      "id" : 199361374,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM2MTM3NA==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 21,
      "path" : "src/script/sign.h",
      "position" : 38,
      "pull_request_review_id" : 133465432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361374",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To be clear, the type definitions are the same:\r\nhttps://github.com/bitcoin/bitcoin/blob/686e97a0c7358291d628213447cf33e99cde7ce8/src/keystore.h#L78",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-01T21:04:31Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361412",
      "id" : 199361412,
      "in_reply_to_id" : 199361091,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM2MTQxMg==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : 34,
      "pull_request_review_id" : 133465458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361412",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I see.\n\nI generally don't think types should be identical because their construction is the same. The contents has a very different meaning, so having separate names makes sense.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-01T21:19:30Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199361827",
      "id" : 199361827,
      "in_reply_to_id" : 199361091,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM2MTgyNw==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 17,
      "path" : "src/script/sign.h",
      "position" : 34,
      "pull_request_review_id" : 133465839,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199361827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199622592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199622592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved to the commit where it is used.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-02T21:12:31Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void MergeSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199622592",
      "id" : 199622592,
      "in_reply_to_id" : 199361374,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTYyMjU5Mg==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 21,
      "path" : "src/script/sign.h",
      "position" : 38,
      "pull_request_review_id" : 133778956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199622592",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199978729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199978729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The implementation is now in the next commit, but the definition is still in \"Make SignatureData able to store signatures and scripts\".",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-03T23:51:47Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void MergeSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199978729",
      "id" : 199978729,
      "in_reply_to_id" : 199361374,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk3ODcyOQ==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 21,
      "path" : "src/script/sign.h",
      "position" : 38,
      "pull_request_review_id" : 134202986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199978729",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199978883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199978883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this class is used (or intended to be used) outside of `sign.cpp`, so perhaps move it there, inside the anonymous namespace?",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-03T23:52:47Z",
      "diff_hunk" : "@@ -81,4 +91,15 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker final : public BaseSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199978883",
      "id" : 199978883,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk3ODg4Mw==",
      "original_commit_id" : "187c348d889edaeb4661dca2225698f6fd1dc661",
      "original_position" : 40,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 134202986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199978883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199981914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199981914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved the definition.",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-04T00:20:06Z",
      "diff_hunk" : "@@ -53,12 +53,22 @@ class MutableTransactionSignatureCreator : public BaseSignatureCreator {\n /** A signature creator that just produces 72-byte empty signatures. */\n extern const BaseSignatureCreator& DUMMY_SIGNATURE_CREATOR;\n \n+typedef std::pair<CPubKey, std::vector<unsigned char>> SigPair;\n+\n+// This struct contains information from a transaction input and also contains signatures for that input.\n+// The information contained here can be used to create a signature and is also filled by ProduceSignature\n+// in order to construct final scriptSigs and scriptWitnesses.\n struct SignatureData {\n-    CScript scriptSig;\n-    CScriptWitness scriptWitness;\n+    bool complete = false; ///< Stores whether the scriptSig and scriptWitness are complete\n+    CScript scriptSig; ///< The scriptSig of an input. Contains complete signatures or the traditional partial signatures format\n+    CScript redeem_script; ///< The redeemScript (if any) for the input\n+    CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n+    CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n+    std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n+    void MergeSignatureData(SignatureData sigdata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199981914",
      "id" : 199981914,
      "in_reply_to_id" : 199361374,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk4MTkxNA==",
      "original_commit_id" : "a96d2e579bf1fec3048ed32f4aa2b5bfe86827a5",
      "original_position" : 21,
      "path" : "src/script/sign.h",
      "position" : 38,
      "pull_request_review_id" : 134206735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:20:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199981914",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199981926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199981926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved",
      "commit_id" : "b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-04T00:20:12Z",
      "diff_hunk" : "@@ -81,4 +91,15 @@ void UpdateInput(CTxIn& input, const SignatureData& data);\n  * Solvability is unrelated to whether we consider this output to be ours. */\n bool IsSolvable(const SigningProvider& provider, const CScript& script);\n \n+class SignatureExtractorChecker final : public BaseSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#discussion_r199981926",
      "id" : 199981926,
      "in_reply_to_id" : 199978883,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk4MTkyNg==",
      "original_commit_id" : "187c348d889edaeb4661dca2225698f6fd1dc661",
      "original_position" : 40,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 134206753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13425",
      "updated_at" : "2018-07-04T00:20:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/199981926",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b815600295bd5e7b274c8ee32da65f1419a79ab2",
      "created_at" : "2018-07-05T15:17:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13425#issuecomment-402757868",
      "id" : 402757868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13425",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMjc1Nzg2OA==",
      "updated_at" : "2018-07-05T15:17:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/402757868",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
