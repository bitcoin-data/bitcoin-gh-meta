[
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/27254#pullrequestreview-1363094144) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/27254#pullrequestreview-1353224413) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27302](https://github.com/bitcoin/bitcoin/pull/27302) (init: Error if ignored bitcoin.conf file is found by ryanofsky)\n* [#27294](https://github.com/bitcoin/bitcoin/pull/27294) (refactor: Move chain names to the util library by TheCharlatan)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n* [#27231](https://github.com/bitcoin/bitcoin/pull/27231) (Fix logging RPC and -debugexclude with 0/none values, add test coverage, improve docs by jonatack)\n* [#26832](https://github.com/bitcoin/bitcoin/pull/26832) (compat: move (win) S_* defines into bdb by fanquake)\n* [#26715](https://github.com/bitcoin/bitcoin/pull/26715) (Introduce `MockableDatabase` for wallet unit tests by achow101)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#26654](https://github.com/bitcoin/bitcoin/pull/26654) (util: Show descriptive error messages when FileCommit fails by john-moffett)\n* [#25390](https://github.com/bitcoin/bitcoin/pull/25390) (sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es by vasild)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n* [#24539](https://github.com/bitcoin/bitcoin/pull/24539) (Add a \"tx output spender\" index by sstone)\n* [#23561](https://github.com/bitcoin/bitcoin/pull/23561) (BIP324: Handshake prerequisites by dhruv)\n* [#19792](https://github.com/bitcoin/bitcoin/pull/19792) (rpc: Add dumpcoinstats by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-14T11:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1467899476",
      "id" : 1467899476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585Xfl5U",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467899476/reactions"
      },
      "updated_at" : "2023-03-31T18:36:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467899476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135396391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135396391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n#include <cstdint>\r\n#include <cstdio>\r\n```\r\n\r\nnit",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:25:28Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FS_H\n+#define BITCOIN_UTIL_FS_H\n+\n+#include <fs.h>\n+\n+#include <iosfwd>\n+#include <limits>\n+#include <stdint.h>\n+#include <stdio.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135396391",
      "id" : 1135396391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrMYn",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : 13,
      "path" : "src/util/fs.h",
      "position" : null,
      "pull_request_review_id" : 1339049171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135396391/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135396391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135397641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135397641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated change?",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:26:43Z",
      "diff_hunk" : "@@ -8,12 +8,11 @@\n #include <flatfile.h>\n #include <logging.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/fs.h>\n \n-FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) :\n-    m_dir(std::move(dir)),\n-    m_prefix(prefix),\n-    m_chunk_size(chunk_size)\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) : m_dir(std::move(dir)),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135397641",
      "id" : 1135397641,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrMsJ",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 13,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/flatfile.cpp",
      "position" : null,
      "pull_request_review_id" : 1339049171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135397641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135397641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135402195"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135402195"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: missing newline",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:30:42Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FS_H\n+#define BITCOIN_UTIL_FS_H\n+\n+#include <fs.h>\n+\n+#include <iosfwd>\n+#include <limits>\n+#include <stdint.h>\n+#include <stdio.h>\n+\n+/**\n+ * Ensure file contents are fully committed to disk, using a platform-specific\n+ * feature analogous to fsync().\n+ */\n+bool FileCommit(FILE* file);\n+\n+/**\n+ * Sync directory contents. This is required on some environments to ensure that\n+ * newly created files are committed to disk.\n+ */\n+void DirectoryCommit(const fs::path& dirname);\n+\n+bool TruncateFile(FILE* file, unsigned int length);\n+int RaiseFileDescriptorLimit(int nMinFD);\n+void AllocateFileRange(FILE* file, unsigned int offset, unsigned int length);\n+\n+/**\n+ * Rename src to dest.\n+ * @return true if the rename was successful.\n+ */\n+[[nodiscard]] bool RenameOver(fs::path src, fs::path dest);\n+\n+bool LockDirectory(const fs::path& directory, const fs::path& lockfile_name, bool probe_only = false);\n+void UnlockDirectory(const fs::path& directory, const fs::path& lockfile_name);\n+bool DirIsWritable(const fs::path& directory);\n+bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes = 0);\n+\n+/** Get the size of a file by scanning it.\n+ *\n+ * @param[in] path The file path\n+ * @param[in] max Stop seeking beyond this limit\n+ * @return The file size or max\n+ */\n+std::streampos GetFileSize(const char* path, std::streamsize max = std::numeric_limits<std::streamsize>::max());\n+\n+/** Release all directory locks. This is used for unit testing only, at runtime\n+ * the global destructor will take care of the locks.\n+ */\n+void ReleaseDirectoryLocks();\n+\n+bool TryCreateDirectories(const fs::path& p);\n+fs::path GetDefaultDataDir();\n+\n+#ifdef WIN32\n+fs::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n+#endif\n+\n+#endif // BITCOIN_UTIL_FS_H",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135402195",
      "id" : 1135402195,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrNzT",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/util/fs.h",
      "position" : null,
      "pull_request_review_id" : 1339059002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135402195/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135402195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135404419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135404419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is from clang format diff. Should I drop these kind of changes in the future? There are also some other not strictly related include order fixes.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:32:53Z",
      "diff_hunk" : "@@ -8,12 +8,11 @@\n #include <flatfile.h>\n #include <logging.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/fs.h>\n \n-FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) :\n-    m_dir(std::move(dir)),\n-    m_prefix(prefix),\n-    m_chunk_size(chunk_size)\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) : m_dir(std::move(dir)),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135404419",
      "id" : 1135404419,
      "in_reply_to_id" : 1135397641,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrOWD",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 13,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/flatfile.cpp",
      "position" : null,
      "pull_request_review_id" : 1339062406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135404419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:32:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135404419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135405169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135405169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pretty sure this can just be merged into the includes below.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:33:32Z",
      "diff_hunk" : "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <util/system.h>\n+#include <util/fs.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135405169",
      "id" : 1135405169,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrOhx",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1339063448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135405169/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135405169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135406000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406000"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think include fixing is fine. However theres no need to include unrelated clang-format changes.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:34:20Z",
      "diff_hunk" : "@@ -8,12 +8,11 @@\n #include <flatfile.h>\n #include <logging.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/fs.h>\n \n-FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) :\n-    m_dir(std::move(dir)),\n-    m_prefix(prefix),\n-    m_chunk_size(chunk_size)\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) : m_dir(std::move(dir)),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135406000",
      "id" : 1135406000,
      "in_reply_to_id" : 1135397641,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrOuw",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 13,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/flatfile.cpp",
      "position" : null,
      "pull_request_review_id" : 1339064760,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:34:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135406385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You'll need to set `-U0` for the context to avoid unrelated changes, no?",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:34:41Z",
      "diff_hunk" : "@@ -8,12 +8,11 @@\n #include <flatfile.h>\n #include <logging.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/fs.h>\n \n-FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) :\n-    m_dir(std::move(dir)),\n-    m_prefix(prefix),\n-    m_chunk_size(chunk_size)\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) : m_dir(std::move(dir)),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135406385",
      "id" : 1135406385,
      "in_reply_to_id" : 1135397641,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrO0x",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 13,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/flatfile.cpp",
      "position" : null,
      "pull_request_review_id" : 1339065302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406385/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:34:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135406385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135417534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135417534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm formatting each commit with `git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v`. I think I must have included this unrelated change somewhere. Will fix.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-14T11:44:56Z",
      "diff_hunk" : "@@ -8,12 +8,11 @@\n #include <flatfile.h>\n #include <logging.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n+#include <util/fs.h>\n \n-FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) :\n-    m_dir(std::move(dir)),\n-    m_prefix(prefix),\n-    m_chunk_size(chunk_size)\n+FlatFileSeq::FlatFileSeq(fs::path dir, const char* prefix, size_t chunk_size) : m_dir(std::move(dir)),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1135417534",
      "id" : 1135417534,
      "in_reply_to_id" : 1135397641,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DrRi-",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 13,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/flatfile.cpp",
      "position" : null,
      "pull_request_review_id" : 1339082294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135417534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T11:44:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135417534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review!\r\n\r\nUpdated b67efe778d4e4ad359fb8dccea7f92e17d1b1f95 -> ea278094e9937bf96157161941d38a0c08a0aa4e ([splitSystemFs_0](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_0) -> [splitSystemFs_1](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_1), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_0..splitSystemFs_1)) to address review comments.",
      "created_at" : "2023-03-14T12:08:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1467983104",
      "id" : 1467983104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585Xf6UA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467983104/reactions"
      },
      "updated_at" : "2023-03-14T12:08:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467983104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree these functions should not be combined into existing `src/fs.h` since they are doing higher level things than accessing the filesystem. But instead of having two `fs.h` files in different locations, I would move `src/fs.h` to `src/util/fs.h` and move these functions to `src/util/fs_misc.h` or another place like that.",
      "created_at" : "2023-03-14T12:43:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1468037295",
      "id" : 1468037295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585XgHiv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468037295/reactions"
      },
      "updated_at" : "2023-03-14T12:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468037295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated ea278094e9937bf96157161941d38a0c08a0aa4e -> c4f2b6d619f6c0faee5aa3118ade1040105fdd8b ([splitSystemFs_1](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_1) -> [splitSystemFs_2](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_2), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_1..splitSystemFs_2)) to rename `util/fs.*` to `util/fs_helpers.*`\r\n\r\nAdded commit dac4d1dc3d75d510efe6c84c2cb6d7d7dc96e2c6 ([splitSystemFs_3](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_3)) as a scripted diff moving `src/fs.*` to `src/util/fs.*` as requested by @ryanofsky in https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1468037295 . ",
      "created_at" : "2023-03-15T09:58:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1469699591",
      "id" : 1469699591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585XmdYH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469699591/reactions"
      },
      "updated_at" : "2023-03-15T09:58:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469699591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated dac4d1dc3d75d510efe6c84c2cb6d7d7dc96e2c6 -> b22cf8d563a469e29c9942b4fd9f93351d8b9766 ([splitSystemFs_3](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_3) -> [splitSystemFs_4](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_4), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_3..splitSystemFs_4)) to fix a broken rename and include an additional header in `compat/assumptions.h`. Up until this point `compat/assumptions.h` relied on being included after `compat/compat.h`. `clang-format-diff` revealed this by changing the order of the includes. I'm not sure if this inclusion order has to be preserved.",
      "created_at" : "2023-03-15T11:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1469855782",
      "id" : 1469855782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585XnDgm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469855782/reactions"
      },
      "updated_at" : "2023-03-15T11:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469855782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Besides the remaining CI failure, it looks like the lint job does not support `clang-format-diff`. @MarcoFalke is this the case? I took the formatting line from one of your commits (fac5c373006a9e4bcbb56843bb85f1aca4d87599).\r\nEDIT: Ah, I found https://github.com/bitcoin/bitcoin/pull/26256 . So no formatting in scripted diffs then?",
      "created_at" : "2023-03-15T12:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1469898496",
      "id" : 1469898496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585XnN8A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469898496/reactions"
      },
      "updated_at" : "2023-03-15T12:27:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469898496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I guess it can be added back? No strong opinion. Though, we might want to look into docker image caching to avoid the `apt` overhead.\r\n\r\n> `sed -i '11 i #include <cstddef>' src/compat/assumptions.h`\r\n\r\nNot sure if this should be hidden like this. A separate commit or pull request seems better for this bugfix. Also, could add it to ci iwyu for reviewers to check for other missing includes?\r\n",
      "created_at" : "2023-03-15T12:50:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1469950032",
      "id" : 1469950032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585XnahQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469950032/reactions"
      },
      "updated_at" : "2023-03-15T12:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1469950032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased b22cf8d563a469e29c9942b4fd9f93351d8b9766 -> cc662d09386e50eb92a7ccbaa1edff62fd8cdd44 ([splitSystemFs_4](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_4) -> [splitSystemFs_5](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_5), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_4..splitSystemFs_5)) to fix conflicts and update the commit message to exclude the scripted diff.",
      "created_at" : "2023-03-20T10:49:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1476003813",
      "id" : 1476003813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585X-gfl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476003813/reactions"
      },
      "updated_at" : "2023-03-20T10:49:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476003813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2023-03-20T13:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1476260377",
      "id" : 1476260377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585X_fIZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476260377/reactions"
      },
      "updated_at" : "2023-03-20T13:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476260377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1142160746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142160746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3665c1bdf7b9d47ccab39916c13a8cd9dfbf0eea\r\n\r\nThere is no `src/util/fs.cpp` file at this commit. It is renamed in the last commit only.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-20T13:55:23Z",
      "diff_hunk" : "@@ -70,6 +70,7 @@ if [ \"${RUN_TIDY}\" = \"true\" ]; then\n           \" src/util/check.cpp\"\\\n           \" src/util/error.cpp\"\\\n           \" src/util/exception.cpp\"\\\n+          \" src/util/fs.cpp\"\\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1142160746",
      "id" : 1142160746,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EE_1q",
      "original_commit_id" : "cc662d09386e50eb92a7ccbaa1edff62fd8cdd44",
      "original_line" : 73,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "ci/test/06_script_b.sh",
      "position" : null,
      "pull_request_review_id" : 1348607104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142160746/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T13:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142160746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1142161665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142161665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sort files after renaming?",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-20T13:56:03Z",
      "diff_hunk" : "@@ -154,7 +154,7 @@ BITCOIN_CORE_H = \\\n   deploymentstatus.h \\\n   external_signer.h \\\n   flatfile.h \\\n-  fs.h \\\n+  util/fs.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1142161665",
      "id" : 1142161665,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EFAEB",
      "original_commit_id" : "cc662d09386e50eb92a7ccbaa1edff62fd8cdd44",
      "original_line" : 157,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/Makefile.am",
      "position" : null,
      "pull_request_review_id" : 1348608524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142161665/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T13:56:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142161665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you for the review @hebasto,\r\n\r\nUpdated cc662d09386e50eb92a7ccbaa1edff62fd8cdd44 -> 3ceb8dde48fc12f4f16372f661a4cccf7104e194 ([splitSystemFs_5](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_5) -> [splitSystemFs_6](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_6), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_5..splitSystemFs_6)) to fix sorting in the Makefile and remove `fs.cpp`, which was still supposed to refer to `fs_helpers.cpp`, from the iwyu list in the CI script. I did not re-include `fs_helpers.cpp` in the list, because `iwyu` produced false positives when including `<fstream>`.",
      "created_at" : "2023-03-20T14:41:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1476359052",
      "id" : 1476359052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585X_3OM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476359052/reactions"
      },
      "updated_at" : "2023-03-20T15:47:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476359052",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145230536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145230536"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit \"refactor: Extract util/fs_helpers from util/system\" (59c02e68f75f7b727162d2ea36bf3ed99fabf035)\r\n\r\nAnybody have advice on easiest way to review changes like this when blocks of code are moving but also changing slightly at the same time?\r\n\r\nI find it pretty easy to review blocks of moved code in git with the `--color-moved` option, but once code is moved and reformatted at the same time (the `{` at the end of this line was previously on its own line) it becomes very tedious to find the matching blocks of old and new code, and then compare them to make sure the differences are not significant.\r\n\r\nIf there isn't some more convenient way to review changes like this, I would definitely appreciate it if the code could just be moved and not reformatted.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-22T18:12:50Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/fs_helpers.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <sync.h>\n+#include <tinyformat.h>\n+#include <util/getuniquepath.h>\n+\n+#include <cerrno>\n+#include <filesystem>\n+#include <fstream>\n+#include <map>\n+#include <memory>\n+#include <string>\n+#include <system_error>\n+#include <utility>\n+\n+#ifdef WIN32\n+#include <io.h>\n+#include <shlobj.h>\n+#else\n+#include <fcntl.h>\n+#include <sys/resource.h>\n+#include <unistd.h>\n+#endif // WIN32\n+\n+/** Mutex to protect dir_locks. */\n+static GlobalMutex cs_dir_locks;\n+/** A map that contains all the currently held directory locks. After\n+ * successful locking, these will be held here until the global destructor\n+ * cleans them up and thus automatically unlocks them, or ReleaseDirectoryLocks\n+ * is called.\n+ */\n+static std::map<std::string, std::unique_ptr<fsbridge::FileLock>> dir_locks GUARDED_BY(cs_dir_locks);\n+\n+bool LockDirectory(const fs::path& directory, const fs::path& lockfile_name, bool probe_only)\n+{\n+    LOCK(cs_dir_locks);\n+    fs::path pathLockFile = directory / lockfile_name;\n+\n+    // If a lock for this directory already exists in the map, don't try to re-lock it\n+    if (dir_locks.count(fs::PathToString(pathLockFile))) {\n+        return true;\n+    }\n+\n+    // Create empty lock file if it doesn't exist.\n+    FILE* file = fsbridge::fopen(pathLockFile, \"a\");\n+    if (file) fclose(file);\n+    auto lock = std::make_unique<fsbridge::FileLock>(pathLockFile);\n+    if (!lock->TryLock()) {\n+        return error(\"Error while attempting to lock directory %s: %s\", fs::PathToString(directory), lock->GetReason());\n+    }\n+    if (!probe_only) {\n+        // Lock successful and we're not just probing, put it into the map\n+        dir_locks.emplace(fs::PathToString(pathLockFile), std::move(lock));\n+    }\n+    return true;\n+}\n+\n+void UnlockDirectory(const fs::path& directory, const fs::path& lockfile_name)\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.erase(fs::PathToString(directory / lockfile_name));\n+}\n+\n+void ReleaseDirectoryLocks()\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.clear();\n+}\n+\n+bool DirIsWritable(const fs::path& directory)\n+{\n+    fs::path tmpFile = GetUniquePath(directory);\n+\n+    FILE* file = fsbridge::fopen(tmpFile, \"a\");\n+    if (!file) return false;\n+\n+    fclose(file);\n+    remove(tmpFile);\n+\n+    return true;\n+}\n+\n+bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes)\n+{\n+    constexpr uint64_t min_disk_space = 52428800; // 50 MiB\n+\n+    uint64_t free_bytes_available = fs::space(dir).available;\n+    return free_bytes_available >= min_disk_space + additional_bytes;\n+}\n+\n+std::streampos GetFileSize(const char* path, std::streamsize max)\n+{\n+    std::ifstream file{path, std::ios::binary};\n+    file.ignore(max);\n+    return file.gcount();\n+}\n+\n+bool FileCommit(FILE* file)\n+{\n+    if (fflush(file) != 0) { // harmless if redundantly called\n+        LogPrintf(\"%s: fflush failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#ifdef WIN32\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    if (FlushFileBuffers(hFile) == 0) {\n+        LogPrintf(\"%s: FlushFileBuffers failed: %d\\n\", __func__, GetLastError());\n+        return false;\n+    }\n+#elif defined(MAC_OSX) && defined(F_FULLFSYNC)\n+    if (fcntl(fileno(file), F_FULLFSYNC, 0) == -1) { // Manpage says \"value other than -1\" is returned on success\n+        LogPrintf(\"%s: fcntl F_FULLFSYNC failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#elif HAVE_FDATASYNC\n+    if (fdatasync(fileno(file)) != 0 && errno != EINVAL) { // Ignore EINVAL for filesystems that don't support sync\n+        LogPrintf(\"%s: fdatasync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#else\n+    if (fsync(fileno(file)) != 0 && errno != EINVAL) {\n+        LogPrintf(\"%s: fsync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#endif\n+    return true;\n+}\n+\n+void DirectoryCommit(const fs::path& dirname)\n+{\n+#ifndef WIN32\n+    FILE* file = fsbridge::fopen(dirname, \"r\");\n+    if (file) {\n+        fsync(fileno(file));\n+        fclose(file);\n+    }\n+#endif\n+}\n+\n+bool TruncateFile(FILE* file, unsigned int length)\n+{\n+#if defined(WIN32)\n+    return _chsize(_fileno(file), length) == 0;\n+#else\n+    return ftruncate(fileno(file), length) == 0;\n+#endif\n+}\n+\n+/**\n+ * this function tries to raise the file descriptor limit to the requested number.\n+ * It returns the actual file descriptor limit (which may be more or less than nMinFD)\n+ */\n+int RaiseFileDescriptorLimit(int nMinFD)\n+{\n+#if defined(WIN32)\n+    return 2048;\n+#else\n+    struct rlimit limitFD;\n+    if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+        if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n+            limitFD.rlim_cur = nMinFD;\n+            if (limitFD.rlim_cur > limitFD.rlim_max)\n+                limitFD.rlim_cur = limitFD.rlim_max;\n+            setrlimit(RLIMIT_NOFILE, &limitFD);\n+            getrlimit(RLIMIT_NOFILE, &limitFD);\n+        }\n+        return limitFD.rlim_cur;\n+    }\n+    return nMinFD; // getrlimit failed, assume it's fine\n+#endif\n+}\n+\n+/**\n+ * this function tries to make a particular range of a file allocated (corresponding to disk space)\n+ * it is advisory, and the range specified in the arguments will never contain live data\n+ */\n+void AllocateFileRange(FILE* file, unsigned int offset, unsigned int length)\n+{\n+#if defined(WIN32)\n+    // Windows-specific version\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    LARGE_INTEGER nFileSize;\n+    int64_t nEndPos = (int64_t)offset + length;\n+    nFileSize.u.LowPart = nEndPos & 0xFFFFFFFF;\n+    nFileSize.u.HighPart = nEndPos >> 32;\n+    SetFilePointerEx(hFile, nFileSize, 0, FILE_BEGIN);\n+    SetEndOfFile(hFile);\n+#elif defined(MAC_OSX)\n+    // OSX specific version\n+    // NOTE: Contrary to other OS versions, the OSX version assumes that\n+    // NOTE: offset is the size of the file.\n+    fstore_t fst;\n+    fst.fst_flags = F_ALLOCATECONTIG;\n+    fst.fst_posmode = F_PEOFPOSMODE;\n+    fst.fst_offset = 0;\n+    fst.fst_length = length; // mac os fst_length takes the # of free bytes to allocate, not desired file size\n+    fst.fst_bytesalloc = 0;\n+    if (fcntl(fileno(file), F_PREALLOCATE, &fst) == -1) {\n+        fst.fst_flags = F_ALLOCATEALL;\n+        fcntl(fileno(file), F_PREALLOCATE, &fst);\n+    }\n+    ftruncate(fileno(file), static_cast<off_t>(offset) + length);\n+#else\n+#if defined(HAVE_POSIX_FALLOCATE)\n+    // Version using posix_fallocate\n+    off_t nEndPos = (off_t)offset + length;\n+    if (0 == posix_fallocate(fileno(file), 0, nEndPos)) return;\n+#endif\n+    // Fallback version\n+    // TODO: just write one byte per block\n+    static const char buf[65536] = {};\n+    if (fseek(file, offset, SEEK_SET)) {\n+        return;\n+    }\n+    while (length > 0) {\n+        unsigned int now = 65536;\n+        if (length < now)\n+            now = length;\n+        fwrite(buf, 1, now, file); // allowed to fail; this function is advisory anyway\n+        length -= now;\n+    }\n+#endif\n+}\n+\n+#ifdef WIN32\n+fs::path GetSpecialFolderPath(int nFolder, bool fCreate)\n+{\n+    WCHAR pszPath[MAX_PATH] = L\"\";\n+\n+    if (SHGetSpecialFolderPathW(nullptr, pszPath, nFolder, fCreate)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145230536",
      "id" : 1145230536,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII585EQtTI",
      "original_commit_id" : "59c02e68f75f7b727162d2ea36bf3ed99fabf035",
      "original_line" : 252,
      "original_position" : 241,
      "original_start_line" : null,
      "path" : "src/util/fs_helpers.cpp",
      "position" : 252,
      "pull_request_review_id" : 1353213975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145230536/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-22T18:12:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145230536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145331263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145331263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If there isn't some more convenient way to review changes like this, I would definitely appreciate it if the code could just be moved and not reformatted.\r\n\r\nACK, I will stop using `clang-format-diff` on all moved code. Thank you for the review!",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-22T19:48:39Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/fs_helpers.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <sync.h>\n+#include <tinyformat.h>\n+#include <util/getuniquepath.h>\n+\n+#include <cerrno>\n+#include <filesystem>\n+#include <fstream>\n+#include <map>\n+#include <memory>\n+#include <string>\n+#include <system_error>\n+#include <utility>\n+\n+#ifdef WIN32\n+#include <io.h>\n+#include <shlobj.h>\n+#else\n+#include <fcntl.h>\n+#include <sys/resource.h>\n+#include <unistd.h>\n+#endif // WIN32\n+\n+/** Mutex to protect dir_locks. */\n+static GlobalMutex cs_dir_locks;\n+/** A map that contains all the currently held directory locks. After\n+ * successful locking, these will be held here until the global destructor\n+ * cleans them up and thus automatically unlocks them, or ReleaseDirectoryLocks\n+ * is called.\n+ */\n+static std::map<std::string, std::unique_ptr<fsbridge::FileLock>> dir_locks GUARDED_BY(cs_dir_locks);\n+\n+bool LockDirectory(const fs::path& directory, const fs::path& lockfile_name, bool probe_only)\n+{\n+    LOCK(cs_dir_locks);\n+    fs::path pathLockFile = directory / lockfile_name;\n+\n+    // If a lock for this directory already exists in the map, don't try to re-lock it\n+    if (dir_locks.count(fs::PathToString(pathLockFile))) {\n+        return true;\n+    }\n+\n+    // Create empty lock file if it doesn't exist.\n+    FILE* file = fsbridge::fopen(pathLockFile, \"a\");\n+    if (file) fclose(file);\n+    auto lock = std::make_unique<fsbridge::FileLock>(pathLockFile);\n+    if (!lock->TryLock()) {\n+        return error(\"Error while attempting to lock directory %s: %s\", fs::PathToString(directory), lock->GetReason());\n+    }\n+    if (!probe_only) {\n+        // Lock successful and we're not just probing, put it into the map\n+        dir_locks.emplace(fs::PathToString(pathLockFile), std::move(lock));\n+    }\n+    return true;\n+}\n+\n+void UnlockDirectory(const fs::path& directory, const fs::path& lockfile_name)\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.erase(fs::PathToString(directory / lockfile_name));\n+}\n+\n+void ReleaseDirectoryLocks()\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.clear();\n+}\n+\n+bool DirIsWritable(const fs::path& directory)\n+{\n+    fs::path tmpFile = GetUniquePath(directory);\n+\n+    FILE* file = fsbridge::fopen(tmpFile, \"a\");\n+    if (!file) return false;\n+\n+    fclose(file);\n+    remove(tmpFile);\n+\n+    return true;\n+}\n+\n+bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes)\n+{\n+    constexpr uint64_t min_disk_space = 52428800; // 50 MiB\n+\n+    uint64_t free_bytes_available = fs::space(dir).available;\n+    return free_bytes_available >= min_disk_space + additional_bytes;\n+}\n+\n+std::streampos GetFileSize(const char* path, std::streamsize max)\n+{\n+    std::ifstream file{path, std::ios::binary};\n+    file.ignore(max);\n+    return file.gcount();\n+}\n+\n+bool FileCommit(FILE* file)\n+{\n+    if (fflush(file) != 0) { // harmless if redundantly called\n+        LogPrintf(\"%s: fflush failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#ifdef WIN32\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    if (FlushFileBuffers(hFile) == 0) {\n+        LogPrintf(\"%s: FlushFileBuffers failed: %d\\n\", __func__, GetLastError());\n+        return false;\n+    }\n+#elif defined(MAC_OSX) && defined(F_FULLFSYNC)\n+    if (fcntl(fileno(file), F_FULLFSYNC, 0) == -1) { // Manpage says \"value other than -1\" is returned on success\n+        LogPrintf(\"%s: fcntl F_FULLFSYNC failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#elif HAVE_FDATASYNC\n+    if (fdatasync(fileno(file)) != 0 && errno != EINVAL) { // Ignore EINVAL for filesystems that don't support sync\n+        LogPrintf(\"%s: fdatasync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#else\n+    if (fsync(fileno(file)) != 0 && errno != EINVAL) {\n+        LogPrintf(\"%s: fsync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#endif\n+    return true;\n+}\n+\n+void DirectoryCommit(const fs::path& dirname)\n+{\n+#ifndef WIN32\n+    FILE* file = fsbridge::fopen(dirname, \"r\");\n+    if (file) {\n+        fsync(fileno(file));\n+        fclose(file);\n+    }\n+#endif\n+}\n+\n+bool TruncateFile(FILE* file, unsigned int length)\n+{\n+#if defined(WIN32)\n+    return _chsize(_fileno(file), length) == 0;\n+#else\n+    return ftruncate(fileno(file), length) == 0;\n+#endif\n+}\n+\n+/**\n+ * this function tries to raise the file descriptor limit to the requested number.\n+ * It returns the actual file descriptor limit (which may be more or less than nMinFD)\n+ */\n+int RaiseFileDescriptorLimit(int nMinFD)\n+{\n+#if defined(WIN32)\n+    return 2048;\n+#else\n+    struct rlimit limitFD;\n+    if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+        if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n+            limitFD.rlim_cur = nMinFD;\n+            if (limitFD.rlim_cur > limitFD.rlim_max)\n+                limitFD.rlim_cur = limitFD.rlim_max;\n+            setrlimit(RLIMIT_NOFILE, &limitFD);\n+            getrlimit(RLIMIT_NOFILE, &limitFD);\n+        }\n+        return limitFD.rlim_cur;\n+    }\n+    return nMinFD; // getrlimit failed, assume it's fine\n+#endif\n+}\n+\n+/**\n+ * this function tries to make a particular range of a file allocated (corresponding to disk space)\n+ * it is advisory, and the range specified in the arguments will never contain live data\n+ */\n+void AllocateFileRange(FILE* file, unsigned int offset, unsigned int length)\n+{\n+#if defined(WIN32)\n+    // Windows-specific version\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    LARGE_INTEGER nFileSize;\n+    int64_t nEndPos = (int64_t)offset + length;\n+    nFileSize.u.LowPart = nEndPos & 0xFFFFFFFF;\n+    nFileSize.u.HighPart = nEndPos >> 32;\n+    SetFilePointerEx(hFile, nFileSize, 0, FILE_BEGIN);\n+    SetEndOfFile(hFile);\n+#elif defined(MAC_OSX)\n+    // OSX specific version\n+    // NOTE: Contrary to other OS versions, the OSX version assumes that\n+    // NOTE: offset is the size of the file.\n+    fstore_t fst;\n+    fst.fst_flags = F_ALLOCATECONTIG;\n+    fst.fst_posmode = F_PEOFPOSMODE;\n+    fst.fst_offset = 0;\n+    fst.fst_length = length; // mac os fst_length takes the # of free bytes to allocate, not desired file size\n+    fst.fst_bytesalloc = 0;\n+    if (fcntl(fileno(file), F_PREALLOCATE, &fst) == -1) {\n+        fst.fst_flags = F_ALLOCATEALL;\n+        fcntl(fileno(file), F_PREALLOCATE, &fst);\n+    }\n+    ftruncate(fileno(file), static_cast<off_t>(offset) + length);\n+#else\n+#if defined(HAVE_POSIX_FALLOCATE)\n+    // Version using posix_fallocate\n+    off_t nEndPos = (off_t)offset + length;\n+    if (0 == posix_fallocate(fileno(file), 0, nEndPos)) return;\n+#endif\n+    // Fallback version\n+    // TODO: just write one byte per block\n+    static const char buf[65536] = {};\n+    if (fseek(file, offset, SEEK_SET)) {\n+        return;\n+    }\n+    while (length > 0) {\n+        unsigned int now = 65536;\n+        if (length < now)\n+            now = length;\n+        fwrite(buf, 1, now, file); // allowed to fail; this function is advisory anyway\n+        length -= now;\n+    }\n+#endif\n+}\n+\n+#ifdef WIN32\n+fs::path GetSpecialFolderPath(int nFolder, bool fCreate)\n+{\n+    WCHAR pszPath[MAX_PATH] = L\"\";\n+\n+    if (SHGetSpecialFolderPathW(nullptr, pszPath, nFolder, fCreate)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145331263",
      "id" : 1145331263,
      "in_reply_to_id" : 1145230536,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII585ERF4_",
      "original_commit_id" : "59c02e68f75f7b727162d2ea36bf3ed99fabf035",
      "original_line" : 252,
      "original_position" : 241,
      "original_start_line" : null,
      "path" : "src/util/fs_helpers.cpp",
      "position" : 252,
      "pull_request_review_id" : 1353373356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145331263/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-22T19:48:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145331263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145848255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145848255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could do it in a separate commit, after the move",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-23T08:41:22Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/fs_helpers.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <fs.h>\n+#include <logging.h>\n+#include <sync.h>\n+#include <tinyformat.h>\n+#include <util/getuniquepath.h>\n+\n+#include <cerrno>\n+#include <filesystem>\n+#include <fstream>\n+#include <map>\n+#include <memory>\n+#include <string>\n+#include <system_error>\n+#include <utility>\n+\n+#ifdef WIN32\n+#include <io.h>\n+#include <shlobj.h>\n+#else\n+#include <fcntl.h>\n+#include <sys/resource.h>\n+#include <unistd.h>\n+#endif // WIN32\n+\n+/** Mutex to protect dir_locks. */\n+static GlobalMutex cs_dir_locks;\n+/** A map that contains all the currently held directory locks. After\n+ * successful locking, these will be held here until the global destructor\n+ * cleans them up and thus automatically unlocks them, or ReleaseDirectoryLocks\n+ * is called.\n+ */\n+static std::map<std::string, std::unique_ptr<fsbridge::FileLock>> dir_locks GUARDED_BY(cs_dir_locks);\n+\n+bool LockDirectory(const fs::path& directory, const fs::path& lockfile_name, bool probe_only)\n+{\n+    LOCK(cs_dir_locks);\n+    fs::path pathLockFile = directory / lockfile_name;\n+\n+    // If a lock for this directory already exists in the map, don't try to re-lock it\n+    if (dir_locks.count(fs::PathToString(pathLockFile))) {\n+        return true;\n+    }\n+\n+    // Create empty lock file if it doesn't exist.\n+    FILE* file = fsbridge::fopen(pathLockFile, \"a\");\n+    if (file) fclose(file);\n+    auto lock = std::make_unique<fsbridge::FileLock>(pathLockFile);\n+    if (!lock->TryLock()) {\n+        return error(\"Error while attempting to lock directory %s: %s\", fs::PathToString(directory), lock->GetReason());\n+    }\n+    if (!probe_only) {\n+        // Lock successful and we're not just probing, put it into the map\n+        dir_locks.emplace(fs::PathToString(pathLockFile), std::move(lock));\n+    }\n+    return true;\n+}\n+\n+void UnlockDirectory(const fs::path& directory, const fs::path& lockfile_name)\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.erase(fs::PathToString(directory / lockfile_name));\n+}\n+\n+void ReleaseDirectoryLocks()\n+{\n+    LOCK(cs_dir_locks);\n+    dir_locks.clear();\n+}\n+\n+bool DirIsWritable(const fs::path& directory)\n+{\n+    fs::path tmpFile = GetUniquePath(directory);\n+\n+    FILE* file = fsbridge::fopen(tmpFile, \"a\");\n+    if (!file) return false;\n+\n+    fclose(file);\n+    remove(tmpFile);\n+\n+    return true;\n+}\n+\n+bool CheckDiskSpace(const fs::path& dir, uint64_t additional_bytes)\n+{\n+    constexpr uint64_t min_disk_space = 52428800; // 50 MiB\n+\n+    uint64_t free_bytes_available = fs::space(dir).available;\n+    return free_bytes_available >= min_disk_space + additional_bytes;\n+}\n+\n+std::streampos GetFileSize(const char* path, std::streamsize max)\n+{\n+    std::ifstream file{path, std::ios::binary};\n+    file.ignore(max);\n+    return file.gcount();\n+}\n+\n+bool FileCommit(FILE* file)\n+{\n+    if (fflush(file) != 0) { // harmless if redundantly called\n+        LogPrintf(\"%s: fflush failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#ifdef WIN32\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    if (FlushFileBuffers(hFile) == 0) {\n+        LogPrintf(\"%s: FlushFileBuffers failed: %d\\n\", __func__, GetLastError());\n+        return false;\n+    }\n+#elif defined(MAC_OSX) && defined(F_FULLFSYNC)\n+    if (fcntl(fileno(file), F_FULLFSYNC, 0) == -1) { // Manpage says \"value other than -1\" is returned on success\n+        LogPrintf(\"%s: fcntl F_FULLFSYNC failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#elif HAVE_FDATASYNC\n+    if (fdatasync(fileno(file)) != 0 && errno != EINVAL) { // Ignore EINVAL for filesystems that don't support sync\n+        LogPrintf(\"%s: fdatasync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#else\n+    if (fsync(fileno(file)) != 0 && errno != EINVAL) {\n+        LogPrintf(\"%s: fsync failed: %d\\n\", __func__, errno);\n+        return false;\n+    }\n+#endif\n+    return true;\n+}\n+\n+void DirectoryCommit(const fs::path& dirname)\n+{\n+#ifndef WIN32\n+    FILE* file = fsbridge::fopen(dirname, \"r\");\n+    if (file) {\n+        fsync(fileno(file));\n+        fclose(file);\n+    }\n+#endif\n+}\n+\n+bool TruncateFile(FILE* file, unsigned int length)\n+{\n+#if defined(WIN32)\n+    return _chsize(_fileno(file), length) == 0;\n+#else\n+    return ftruncate(fileno(file), length) == 0;\n+#endif\n+}\n+\n+/**\n+ * this function tries to raise the file descriptor limit to the requested number.\n+ * It returns the actual file descriptor limit (which may be more or less than nMinFD)\n+ */\n+int RaiseFileDescriptorLimit(int nMinFD)\n+{\n+#if defined(WIN32)\n+    return 2048;\n+#else\n+    struct rlimit limitFD;\n+    if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+        if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n+            limitFD.rlim_cur = nMinFD;\n+            if (limitFD.rlim_cur > limitFD.rlim_max)\n+                limitFD.rlim_cur = limitFD.rlim_max;\n+            setrlimit(RLIMIT_NOFILE, &limitFD);\n+            getrlimit(RLIMIT_NOFILE, &limitFD);\n+        }\n+        return limitFD.rlim_cur;\n+    }\n+    return nMinFD; // getrlimit failed, assume it's fine\n+#endif\n+}\n+\n+/**\n+ * this function tries to make a particular range of a file allocated (corresponding to disk space)\n+ * it is advisory, and the range specified in the arguments will never contain live data\n+ */\n+void AllocateFileRange(FILE* file, unsigned int offset, unsigned int length)\n+{\n+#if defined(WIN32)\n+    // Windows-specific version\n+    HANDLE hFile = (HANDLE)_get_osfhandle(_fileno(file));\n+    LARGE_INTEGER nFileSize;\n+    int64_t nEndPos = (int64_t)offset + length;\n+    nFileSize.u.LowPart = nEndPos & 0xFFFFFFFF;\n+    nFileSize.u.HighPart = nEndPos >> 32;\n+    SetFilePointerEx(hFile, nFileSize, 0, FILE_BEGIN);\n+    SetEndOfFile(hFile);\n+#elif defined(MAC_OSX)\n+    // OSX specific version\n+    // NOTE: Contrary to other OS versions, the OSX version assumes that\n+    // NOTE: offset is the size of the file.\n+    fstore_t fst;\n+    fst.fst_flags = F_ALLOCATECONTIG;\n+    fst.fst_posmode = F_PEOFPOSMODE;\n+    fst.fst_offset = 0;\n+    fst.fst_length = length; // mac os fst_length takes the # of free bytes to allocate, not desired file size\n+    fst.fst_bytesalloc = 0;\n+    if (fcntl(fileno(file), F_PREALLOCATE, &fst) == -1) {\n+        fst.fst_flags = F_ALLOCATEALL;\n+        fcntl(fileno(file), F_PREALLOCATE, &fst);\n+    }\n+    ftruncate(fileno(file), static_cast<off_t>(offset) + length);\n+#else\n+#if defined(HAVE_POSIX_FALLOCATE)\n+    // Version using posix_fallocate\n+    off_t nEndPos = (off_t)offset + length;\n+    if (0 == posix_fallocate(fileno(file), 0, nEndPos)) return;\n+#endif\n+    // Fallback version\n+    // TODO: just write one byte per block\n+    static const char buf[65536] = {};\n+    if (fseek(file, offset, SEEK_SET)) {\n+        return;\n+    }\n+    while (length > 0) {\n+        unsigned int now = 65536;\n+        if (length < now)\n+            now = length;\n+        fwrite(buf, 1, now, file); // allowed to fail; this function is advisory anyway\n+        length -= now;\n+    }\n+#endif\n+}\n+\n+#ifdef WIN32\n+fs::path GetSpecialFolderPath(int nFolder, bool fCreate)\n+{\n+    WCHAR pszPath[MAX_PATH] = L\"\";\n+\n+    if (SHGetSpecialFolderPathW(nullptr, pszPath, nFolder, fCreate)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1145848255",
      "id" : 1145848255,
      "in_reply_to_id" : 1145230536,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII585ETEG_",
      "original_commit_id" : "59c02e68f75f7b727162d2ea36bf3ed99fabf035",
      "original_line" : 252,
      "original_position" : 241,
      "original_start_line" : null,
      "path" : "src/util/fs_helpers.cpp",
      "position" : 252,
      "pull_request_review_id" : 1354094188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145848255/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-23T08:41:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1145848255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1146057675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1146057675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `_POSIX_C_SOURCE` should be moved here too.",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-23T11:41:54Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/fs_helpers.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <logging.h>\n+#include <sync.h>\n+#include <tinyformat.h>\n+#include <util/fs.h>\n+#include <util/getuniquepath.h>\n+\n+#include <cerrno>\n+#include <filesystem>\n+#include <fstream>\n+#include <map>\n+#include <memory>\n+#include <string>\n+#include <system_error>\n+#include <utility>\n+\n+#ifdef WIN32",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1146057675",
      "id" : 1146057675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ET3PL",
      "original_commit_id" : "3ceb8dde48fc12f4f16372f661a4cccf7104e194",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/util/fs_helpers.cpp",
      "position" : null,
      "pull_request_review_id" : 1354406362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1146057675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-23T11:41:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1146057675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 3ceb8dde48fc12f4f16372f661a4cccf7104e194 -> 00e9b97f37e0bdf4c647236838c10b68b7ad5be3 ([splitSystemFs_6](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_6) -> [splitSystemFs_7](https://github.com/TheCharlatan/bitcoin/commits/splitSystemFs_7), [compare](https://github.com/TheCharlatan/bitcoin/compare/splitSystemFs_6..splitSystemFs_7)):\r\n* Addressed my [comment](https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1146057675) by moving the `_POSIX_C_SOURCE` handling to `fs_helpers`. These lines were introduced in https://github.com/bitcoin/bitcoin/commit/288fdc092aff9d7e0cea159196b2e96044a786c7 for code that is now moved to `fs_helpers`.\r\n* Addressed @hebasto [comment](https://github.com/bitcoin/bitcoin/pull/27254#pullrequestreview-1349221788) by adding another missing include.\r\n\r\nApologies for going another round here.",
      "created_at" : "2023-03-23T13:49:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#issuecomment-1481231791",
      "id" : 1481231791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27254",
      "node_id" : "IC_kwDOABII585YSc2v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481231791/reactions"
      },
      "updated_at" : "2023-03-23T13:49:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481231791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1151910811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151910811"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Considering switching s/`stdio.h`/`cstdio`/, does it make sense to s/`FILE`/`std::FILE`/ as well? Maybe as a follow up?",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-29T13:02:54Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FS_H\n+#define BITCOIN_UTIL_FS_H\n+\n+#include <fs.h>\n+\n+#include <iosfwd>\n+#include <limits>\n+#include <stdint.h>\n+#include <stdio.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1151910811",
      "id" : 1151910811,
      "in_reply_to_id" : 1135396391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EqMOb",
      "original_commit_id" : "b67efe778d4e4ad359fb8dccea7f92e17d1b1f95",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : 13,
      "path" : "src/util/fs.h",
      "position" : null,
      "pull_request_review_id" : 1363052301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151910811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-29T13:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151910811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1151936439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151936439"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: \r\n\r\n```diff\r\n--- a/src/qt/intro.cpp\r\n+++ b/src/qt/intro.cpp\r\n@@ -6,16 +6,16 @@\r\n #include <config/bitcoin-config.h>\r\n #endif\r\n \r\n-#include <chainparams.h>\r\n #include <qt/intro.h>\r\n #include <qt/forms/ui_intro.h>\r\n-#include <util/fs.h>\r\n \r\n #include <qt/guiconstants.h>\r\n #include <qt/guiutil.h>\r\n #include <qt/optionsmodel.h>\r\n \r\n+#include <chainparams.h>\r\n #include <interfaces/node.h>\r\n+#include <util/fs.h>\r\n #include <util/fs_helpers.h>\r\n #include <util/system.h>\r\n #include <validation.h>\r\n```",
      "commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "created_at" : "2023-03-29T13:22:00Z",
      "diff_hunk" : "@@ -7,15 +7,16 @@\n #endif\n \n #include <chainparams.h>\n-#include <fs.h>\n #include <qt/intro.h>\n #include <qt/forms/ui_intro.h>\n+#include <util/fs.h>\n \n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n \n #include <interfaces/node.h>\n+#include <util/fs_helpers.h>\n #include <util/system.h>\n #include <validation.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27254#discussion_r1151936439",
      "id" : 1151936439,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII585EqSe3",
      "original_commit_id" : "00e9b97f37e0bdf4c647236838c10b68b7ad5be3",
      "original_line" : 21,
      "original_position" : 16,
      "original_start_line" : 9,
      "path" : "src/qt/intro.cpp",
      "position" : 16,
      "pull_request_review_id" : 1363094144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27254",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151936439/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 9,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-29T13:22:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1151936439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
