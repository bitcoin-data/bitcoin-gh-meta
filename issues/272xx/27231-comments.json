[
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/27231#pullrequestreview-1383617680) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27632](https://github.com/bitcoin/bitcoin/pull/27632) (Raise on invalid -debug and -loglevel config options by jonatack)\n* [#27101](https://github.com/bitcoin/bitcoin/pull/27101) (Support JSON-RPC 2.0 when requested by client by pinheadmz)\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-09T01:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461139731",
      "id" : 1461139731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XFzkT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461139731/reactions"
      },
      "updated_at" : "2023-05-12T07:06:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461139731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1130705346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    for (const auto& c:categories.get_array().getValues()) {\r\n        const std::string& c{c.get_str()};\r\n```\r\n\r\nno need to create three copies of the same thing",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-03-09T09:23:27Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1130705346",
      "id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DZTHC",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1332329362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T09:23:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  or none are passed, including not recognizing none:\r\n\r\nAny idea when/how this was broken?",
      "created_at" : "2023-03-09T09:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461655213",
      "id" : 1461655213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XHxat",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461655213/reactions"
      },
      "updated_at" : "2023-03-09T09:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461655213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Probably in f1379aeca9d3a8c4d3528de4d0af8298cb42fee4 from #25614:\r\n> replace the unused BCLog::Level:None string \"none\" with an empty string\r\n  as the case will never be hit\r\n\r\nSo only broken for 24.x.",
      "created_at" : "2023-03-09T09:38:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461666350",
      "id" : 1461666350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XH0Iu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461666350/reactions"
      },
      "updated_at" : "2023-03-09T09:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461666350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The behavior was intended to be added in https://github.com/bitcoin/bitcoin/pull/11191.\r\n\r\nI downloaded and tested v23.1 and the behavior wasn't functional: passing `0` or `none` had no effect. \r\n\r\nIn v24, f1379aeca9d3a8c4d3528de4d0af8298cb42fee4 made `none` not be recognized, but the logic for the intended behavior remained absent anyway.\r\n\r\nI've added this information to the PR description.",
      "created_at" : "2023-03-09T18:51:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1462594692",
      "id" : 1462594692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XLWyE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462594692/reactions"
      },
      "updated_at" : "2023-03-09T18:51:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462594692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @MarcoFalke, done as follows.\r\n\r\n```cpp\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n    const std::vector<UniValue>& category_values{categories.get_array().getValues()};\r\n    for (const auto& category : category_values) {\r\n        const std::string& c{category.get_str()};\r\n        if (c == \"0\" || c == \"none\") return; // no-op if one of these logging categories is passed\r\n    }\r\n    for (const auto& category : category_values) {\r\n        const std::string& c{category.get_str()};\r\n        const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n        if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unknown logging category: \" + c);\r\n     }\r\n }\r\n```\r\n\r\nThe following also works, if reviewers prefer that (seems a little more complex, not sure it's worth it).\r\n\r\n```cpp\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n    std::vector<std::string> cats;\r\n    cats.reserve(categories.size());\r\n    for (const auto& c : categories.get_array().getValues()) {\r\n        cats.emplace_back(c.get_str());\r\n    }\r\n    if (std::any_of(cats.cbegin(), cats.cend(), [](const auto& c) { return c == \"0\" || c == \"none\"; })) return;\r\n    for (const auto& c : cats) {\r\n        const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n        if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unknown logging category: \" + c);\r\n     }\r\n }\r\n```\r\n",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-03-09T18:57:04Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027",
      "id" : 1131465027,
      "in_reply_to_id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DcMlD",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1333541937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T18:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131469401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(Noting that this logic is similar to that in `SetLoggingCategories()` in `src/init/common.cpp`).",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-03-09T19:01:01Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131469401",
      "id" : 1131469401,
      "in_reply_to_id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DcNpZ",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1333552338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T19:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132214754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n```\r\n\r\nnit: While touching this, can avoid the forth copy of the same thing here as well :)",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-03-10T10:38:45Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132214754",
      "id" : 1132214754,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DfDni",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 211,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1334558916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-10T10:38:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The behavior was intended to be added in https://github.com/bitcoin/bitcoin/pull/11191.\r\n\r\nIt's still not clear if this was broken from the time it was merged, or at some other later point. This also does not work with 22.x, and any earlier versions are EOL.\r\n\r\nIf it's been broken forever (or at least is in all currently maintained releases), and no ones even noticed, we could take advantage of that, to remove some of the complexity here; do we definitely need multiple different ways of achieving the same logging toggling?",
      "created_at" : "2023-03-10T15:15:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1463949565",
      "id" : 1463949565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XQhj9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1463949565/reactions"
      },
      "updated_at" : "2023-03-10T15:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1463949565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132759246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yep :) done as in https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-03-10T18:49:21Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132759246",
      "id" : 1132759246,
      "in_reply_to_id" : 1132214754,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DhIjO",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 211,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1335440051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-10T18:49:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.\r\n\r\n> could take advantage of that, to remove some of the complexity here; do we definitely need multiple different ways of achieving the same logging toggling?\r\n\r\nExploring this, it doesn't look like there would be much code simplification gained by dropping `none` for `0` only, which would no longer be in symmetry with `all/1` that have been operational for a long time.  A couple lines could be saved by removing the `-debugexclude` config option, but that option is practical to have, as seen by its use in our own unit/fuzz and functional test frameworks.\r\n\r\nIt seems the way forward from here is to detect `none/0` values, add test coverage and then either:\r\n    \r\n- leave the functionality out, raise with an error message if `none/0` values are passed, and update the RPC help documentation, or\r\n\r\n- simply fix the original behavior by returning early.\r\n\r\nBoth involve similar code size/complexity and the second option seems preferable.  The updated code here is about the same length as before, modulo missing test coverage and improved documentation.\r\n\r\nIn the last pushes I've updated the PR description and first commit message with this info and improved the code and tests.  This should be ready for further review!",
      "created_at" : "2023-03-31T16:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1492195680",
      "id" : 1492195680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585Y8Rlg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492195680/reactions"
      },
      "updated_at" : "2023-03-31T16:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492195680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158916354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`DEBUG_LOG_OPTS[0] `\r\n\r\nFeels like this is undoing whatever convenience/readability you set up by defining `DEBUG_LOG_OPTS` in the first place. Do you think more debug args will be added in the future? Or can we just use\r\n\r\n`args.IsArgSet(\"-debug\") || args.IsArgSet(\"-debugexclude\")` ... etc",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-05T19:13:30Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158916354",
      "id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE6kC",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158920648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Recommend putting \"all\" and \"none\" in quotes to be super-duper explicit",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-05T19:18:35Z",
      "diff_hunk" : "@@ -26,10 +26,10 @@ namespace init {\n void AddLoggingArgs(ArgsManager& argsman)\n {\n     argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file (default: %s). Relative paths will be prefixed by a net-specific datadir location. Pass -nodebuglogfile to disable writing the log to a file.\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debug and trace logging. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n+    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: 0). \"\n+        \"If <category> is omitted, or is 1 or all, output all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories. See also the -debugexclude configuration option that takes priority over -debug.\",\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category. Can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category (default: 1). Takes priority over -debug and can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. If <category> is 1 or all, exclude all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158920648",
      "id" : 1158920648,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE7nI",
      "original_commit_id" : "fba713a172ff574563b03e9765894c59db807093",
      "original_line" : 32,
      "original_position" : 10,
      "original_start_line" : 30,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why `0` and not `\"none\"`? \r\n\r\nLike this one:\r\n\r\n```cpp\r\n\r\n    case BCLog::LogFlags::ALL:\r\n        return \"all\";\r\n```",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-05T19:20:58Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922586",
      "id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE8Fa",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not going to add `\"none\"` here?",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-05T19:21:09Z",
      "diff_hunk" : "@@ -150,7 +150,6 @@ struct CLogCategoryDesc {\n const CLogCategoryDesc LogCategories[] =\n {\n     {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922726",
      "id" : 1158922726,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII585FE8Hm",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 153,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 5,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158925769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769"
         }
      },
      "author_association" : "MEMBER",
      "body" : "GREAT",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-05T19:24:14Z",
      "diff_hunk" : "@@ -238,22 +238,31 @@ static RPCHelpMan logging()\n                 {\n                     {\"include\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED, \"The categories to add to debug logging\",\n                         {\n-                            {\"include_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"the valid logging category\"},\n+                            {\"include_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"a valid logging category\"},\n                         }},\n                     {\"exclude\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED, \"The categories to remove from debug logging\",\n                         {\n-                            {\"exclude_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"the valid logging category\"},\n+                            {\"exclude_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"a valid logging category\"},\n                         }},\n                 },\n                 RPCResult{\n-                    RPCResult::Type::OBJ_DYN, \"\", \"keys are the logging categories, and values indicates its status\",\n+                    RPCResult::Type::OBJ_DYN, \"\", \"keys are the logging categories and values indicate their status\",\n                     {\n-                        {RPCResult::Type::BOOL, \"category\", \"if being debug logged or not. false:inactive, true:active\"},\n+                        {RPCResult::Type::BOOL, \"category\", \"whether debug logging is active for the category\"},\n                     }\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n-            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], [\\\"libevent\\\"]\")\n+                   \"\\nTurn on tor and i2p logging categories\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[\\\"tor\\\", \\\"i2p\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"include='[\\\"tor\\\", \\\"i2p\\\"]'\")\n+                   + \"\\nTurn on all logging categories, except http\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[\\\"all\\\"]' '[\\\"http\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"include='[\\\"all\\\"]' exclude='[\\\"http\\\"]'\")\n+                   + \"\\nTurn off all logging categories\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[]' '[\\\"all\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"exclude='[\\\"all\\\"]'\")\n+                   + \"\\nTurn on all logging categories, except libevent\\n\"\n+                   + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], [\\\"libevent\\\"]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158925769",
      "id" : 1158925769,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585FE83J",
      "original_commit_id" : "22e77cc5f70360408a508f1b43f37c75b2eff9e1",
      "original_line" : 264,
      "original_position" : 47,
      "original_start_line" : 255,
      "path" : "src/rpc/node.cpp",
      "position" : 89,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 254,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looking again (thanks!), both of these `NONE` entries can be dropped.  Updated to add prior test coverage to spec affected behavior, then removed them.",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-11T20:52:14Z",
      "diff_hunk" : "@@ -150,7 +150,6 @@ struct CLogCategoryDesc {\n const CLogCategoryDesc LogCategories[] =\n {\n     {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319014",
      "id" : 1163319014,
      "in_reply_to_id" : 1158922726,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII585FVtbm",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 153,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 5,
      "pull_request_review_id" : 1380069869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for making me re-verify.  This case will never be hit and is only present to appease the compiler (`error: enumeration value 'NONE' not handled in switch`), so leaving it as an empty string, added a comment, and moved it to the last case in the switch.",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-11T20:52:22Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319182",
      "id" : 1163319182,
      "in_reply_to_id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVteO",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This commit is to have the same behavior (and code) for the -debug and -debugexclude config options. I'm not sure what your suggestion is, but I'm happy to look at a working example.",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-11T20:52:32Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319415",
      "id" : 1163319415,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVth3",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070229,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I left them without quotes as none of the other category values in the -debug and -debugexclude helps are in quotes. But you may be right that it's nevertheless clearer to add them here. Done.",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-11T20:52:37Z",
      "diff_hunk" : "@@ -26,10 +26,10 @@ namespace init {\n void AddLoggingArgs(ArgsManager& argsman)\n {\n     argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file (default: %s). Relative paths will be prefixed by a net-specific datadir location. Pass -nodebuglogfile to disable writing the log to a file.\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debug and trace logging. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n+    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: 0). \"\n+        \"If <category> is omitted, or is 1 or all, output all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories. See also the -debugexclude configuration option that takes priority over -debug.\",\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category. Can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category (default: 1). Takes priority over -debug and can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. If <category> is 1 or all, exclude all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319528",
      "id" : 1163319528,
      "in_reply_to_id" : 1158920648,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVtjo",
      "original_commit_id" : "fba713a172ff574563b03e9765894c59db807093",
      "original_line" : 32,
      "original_position" : 10,
      "original_start_line" : 30,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164350707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I meant something like a switch statement with `\"-debug\"` and `\"-debugexclude\"` literal strings as cases. I think that would make it more readable and if anything is ever added to `DEBUG_LOG_OPTS[]` it won't necessarily break. But that might just be too long or out of style",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T16:07:27Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164350707",
      "id" : 1164350707,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FZpTz",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381651815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T16:07:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164360080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah I see, these cases are essentially handled by `IsNoneCategory()` ð ",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T16:15:57Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164360080",
      "id" : 1164360080,
      "in_reply_to_id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FZrmQ",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1381665894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T16:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164470470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you combine this into one function? You have another method called `EnableOrDisableLogCategories()` in `node.cpp` which might be confusing. And unlike in `node.cpp`, I don't think the `common.cpp` method is called anywhere else besides `SetLoggingCategories()`",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T17:58:53Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164470470",
      "id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaGjG",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381837068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-12T18:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good question. Both of the `EnableOrDisableLogCategories()` functions are created in this PR. They are doing pretty much the same thing, but are not trivially combinable into one function. If one is changed, it's likely that both should be (maybe a comment to that effect should be added to them -- *Edit: done*).  I therefore wanted both to be standalone functions with the same name in order that searching/git grepping returns both. *(Edit: updated this sentence to clarify.)*\r\n\r\nThat, along with how extracting that function simplifies `SetLoggingCategories` to highlight that both options are being plugged into the same code, were the motivations.\r\n",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T19:01:00Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898",
      "id" : 1164530898,
      "in_reply_to_id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaVTS",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381931446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-13T18:14:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164533054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Cool, just to be clear I meant combining this `EnableOrDisableLogCategories()` into ` SetLoggingCategories()`  and then you only have one named `EnableOrDisableLogCategories()` in the code over in node.cpp\r\n\r\n> That, along with how extracting that function simplifies SetLoggingCategories to highlight that both options are being plugged into the same code, were the motivations.\r\n\r\nokie doke ð ",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T19:03:20Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164533054",
      "id" : 1164533054,
      "in_reply_to_id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaV0-",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381934777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-12T19:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164585860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Well I meant something like a switch statement with `\"-debug\"` and `\"-debugexclude\"` literal strings as cases.\r\n\r\nThe condition in a [switch](https://en.cppreference.com/w/cpp/language/switch) statement must be of integer or enum type, or of a class type implicitly convertible to one.\r\n\r\nBut we can still use conditionals. Do you like this better?\r\n\r\n```diff\r\n static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\r\n \r\n+static bool EnableOrDisable(const std::string& opt, const std::string& category)\r\n+{\r\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\r\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\r\n+    NONFATAL_UNREACHABLE();\r\n+}\r\n+\r\n static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\r\n@@ -90,8 +97,7 @@ static void EnableOrDisableLogCategories(const ArgsManager& args, const std::str\r\n     const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n     if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n     for (const auto& c : categories) {\r\n-        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n-        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n+        if (!EnableOrDisable(opt, c)) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n     }\r\n }\r\n```\r\n",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T20:01:56Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164585860",
      "id" : 1164585860,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaiuE",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382031652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164601290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah ð¬ waddaya think?",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T20:13:02Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164601290",
      "id" : 1164601290,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FamfK",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382049186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:13:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164606990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, will update. And add the comments mentioned in https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898.",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T20:17:51Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164606990",
      "id" : 1164606990,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Fan4O",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382055523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164674497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, and also dropped `DEBUG_LOG_OPTS` and the no-longer useful `Assume` check (the `NONFATAL_UNREACHABLE` check does it better), and made the two `EnableOrDisableLogCategories` functions simpler and more similar. Very helpful feedback (thanks!)\r\n\r\n<details><summary><code>git diff e9f6fd0 5991edd</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/src/init/common.cpp b/src/init/common.cpp\r\nindex a5b07420d94..c99a512459b 100644\r\n--- a/src/init/common.cpp\r\n+++ b/src/init/common.cpp\r\n@@ -77,26 +77,28 @@ void SetLoggingLevel(const ArgsManager& args)\r\n     }\r\n }\r\n \r\n-// We run each of these configuration options through SetLoggingCategories. The order matters;\r\n-// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\r\n-static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\r\n+static bool EnableOrDisable(const std::string& opt, const std::string& category)\r\n+{\r\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\r\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\r\n+    NONFATAL_UNREACHABLE();\r\n+}\r\n \r\n+// Maintain the same logic in both of the EnableOrDisableLogCategories functions in the codebase.\r\n static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\r\n {\r\n-    if (!args.IsArgSet(opt)) return;\r\n-    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\r\n     const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n     if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n     for (const auto& c : categories) {\r\n-        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n-        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n+        if (!EnableOrDisable(opt, c)) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n     }\r\n }\r\n \r\n void SetLoggingCategories(const ArgsManager& args)\r\n {\r\n-    for (const std::string& opt : DEBUG_LOG_OPTS) {\r\n-        EnableOrDisableLogCategories(args, opt);\r\n+    // debugexclude settings take priority over debug ones, so run debugexclude last\r\n+    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {\r\n+        if (args.IsArgSet(opt)) EnableOrDisableLogCategories(args, opt);\r\n     }\r\n }\r\n \r\ndiff --git a/src/rpc/node.cpp b/src/rpc/node.cpp\r\nindex 3bae7bef722..9c32839231f 100644\r\n--- a/src/rpc/node.cpp\r\n+++ b/src/rpc/node.cpp\r\n@@ -209,14 +209,13 @@ static RPCHelpMan getmemoryinfo()\r\n     };\r\n }\r\n \r\n+// Maintain the same logic in both of the EnableOrDisableLogCategories functions in the codebase.\r\n static void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n {\r\n-    const std::vector<UniValue>& category_values{categories.get_array().getValues()};\r\n-    for (const auto& category : category_values) {\r\n-        if (LogInstance().IsNoneCategory(category.get_str())) return;\r\n-    }\r\n-    for (const auto& category : category_values) {\r\n-        const std::string& c{category.get_str()};\r\n+    const std::vector<UniValue>& cats{categories.get_array().getValues()};\r\n+    if (std::any_of(cats.cbegin(), cats.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c.get_str()); })) return;\r\n+    for (const auto& cat : cats) {\r\n+        const std::string& c{cat.get_str()};\r\n         const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n         if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unsupported logging category: \" + c);\r\n     }\r\n```\r\n</p></details>\r\n",
      "commit_id" : "5991eddb98ce59b883ae695752d4e90f32d43960",
      "created_at" : "2023-04-12T21:33:19Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164674497",
      "id" : 1164674497,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Fa4XB",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382150078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T21:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
