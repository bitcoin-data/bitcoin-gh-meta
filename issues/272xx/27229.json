{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This  was running #27226 rebased on master (at the time 8d12127a9c19cb218d661a88ab9b6871c9d853b9).\r\n```bash\r\n256/256 - wallet_importdescriptors.py --descriptors failed, Duration: 3065 s \r\n\r\nstdout:\r\n2023-03-08T19:51:27.647000Z TestFramework (INFO): PRNG seed is: 266766692547859291\r\n2023-03-08T19:51:27.648000Z TestFramework (INFO): Initializing test directory /home/ubuntu/ci_scratch/ci/scratch/test_runner/test_runner_â¿_ð_20230308_165259/wallet_importdescriptors_86\r\n2023-03-08T19:51:44.422000Z TestFramework (INFO): Setting up wallets\r\n2023-03-08T19:51:48.643000Z TestFramework (INFO): Mining coins\r\n2023-03-08T19:52:01.196000Z TestFramework (INFO): Import should fail if a descriptor is not provided\r\n2023-03-08T19:52:01.232000Z TestFramework (INFO): Should import a p2pkh descriptor\r\n2023-03-08T19:52:02.257000Z TestFramework (INFO): Test can import same descriptor with public key twice\r\n2023-03-08T19:52:02.481000Z TestFramework (INFO): Test can update descriptor label\r\n2023-03-08T19:52:02.732000Z TestFramework (INFO): Internal addresses cannot have labels\r\n2023-03-08T19:52:02.746000Z TestFramework (INFO): Internal addresses should be detected as such\r\n2023-03-08T19:52:02.987000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor without checksum\r\n2023-03-08T19:52:03.000000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor that has range specified\r\n2023-03-08T19:52:03.049000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor and have it set to active\r\n2023-03-08T19:52:03.065000Z TestFramework (INFO): Should import a (non-active) p2sh-p2wpkh descriptor\r\n2023-03-08T19:52:03.976000Z TestFramework (INFO): Should import a 1-of-2 bare multisig from descriptor\r\n2023-03-08T19:52:04.260000Z TestFramework (INFO): Should not treat individual keys from the imported bare multisig as watchonly\r\n2023-03-08T19:52:04.284000Z TestFramework (INFO): Ranged descriptors cannot have labels\r\n2023-03-08T19:52:04.346000Z TestFramework (INFO): Private keys required for private keys enabled wallet\r\n2023-03-08T19:52:04.407000Z TestFramework (INFO): Ranged descriptor import should warn without a specified range\r\n2023-03-08T19:52:04.902000Z TestFramework (INFO): Should not import a ranged descriptor that includes xpriv into a watch-only wallet\r\n2023-03-08T19:52:04.959000Z TestFramework (INFO): Should not import a descriptor with hardened derivations when private keys are disabled\r\n2023-03-08T19:52:05.233000Z TestFramework (INFO): Verify we can only extend descriptor's range\r\n2023-03-08T19:52:07.965000Z TestFramework (INFO): Check we can change descriptor internal flag\r\n2023-03-08T19:52:09.524000Z TestFramework (INFO): Key ranges should be imported in order\r\n2023-03-08T19:52:13.027000Z TestFramework (INFO): Check we can change next_index\r\n2023-03-08T19:52:16.359000Z TestFramework (INFO): Check imported descriptors are not active by default\r\n2023-03-08T19:52:16.960000Z TestFramework (INFO): Check can activate inactive descriptor\r\n2023-03-08T19:52:17.750000Z TestFramework (INFO): Check can deactivate active descriptor\r\n2023-03-08T19:52:18.480000Z TestFramework (INFO): Verify activation state is persistent\r\n2023-03-08T19:52:19.073000Z TestFramework (INFO): Should import a descriptor with a WIF private key as spendable\r\n2023-03-08T19:52:19.323000Z TestFramework (INFO): Test can import same descriptor with private key twice\r\n2023-03-08T19:52:25.121000Z TestFramework (INFO): Test that multisigs can be imported, signed for, and getnewaddress'd\r\n2023-03-08T19:53:23.322000Z TestFramework (INFO): Multisig with distributed keys\r\n2023-03-08T19:53:58.924000Z TestFramework (INFO): We can create and use a huge multisig under P2WSH\r\n2023-03-08T19:55:33.870000Z TestFramework (INFO): Under P2SH, multisig are standard with up to 15 compressed keys\r\n2023-03-08T19:56:49.926000Z TestFramework (INFO): Amending multisig with new private keys\r\n2023-03-08T19:57:09.705000Z TestFramework (INFO): Combo descriptors cannot be active\r\n2023-03-08T19:57:09.748000Z TestFramework (INFO): Descriptors with no type cannot be active\r\n2023-03-08T19:57:10.542000Z TestFramework (INFO): Test importing a descriptor to an encrypted wallet\r\n2023-03-08T20:02:32.611000Z TestFramework (INFO): Stopping nodes\r\n2023-03-08T20:42:32.654000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n'''\r\n[node 1] Cleaning up leftover process\r\n[node 0] Cleaning up leftover process\r\n\r\n\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_importdescriptors.py\", line 699, in <module>\r\n    ImportDescriptorsTest().main()\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 157, in main\r\n    exit_code = self.shutdown()\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 313, in shutdown\r\n    self.stop_nodes()\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 581, in stop_nodes\r\n    node.wait_until_stopped()\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 388, in wait_until_stopped\r\n    wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\r\n  File \"/home/ubuntu/ci_scratch/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 281, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n''' not true after 2400.0 seconds\r\n```\r\n\r\nSee here for combined log: https://gist.github.com/fanquake/b9e9669a2023118908d7a91e9cb117b7",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229/comments",
   "created_at" : "2023-03-08T21:03:00Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27229",
   "id" : 1615934221,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585gUTMN",
   "number" : 27229,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229/timeline",
   "title" : "Issue with `wallet_importdescriptors.py --descriptors` under valgrind",
   "updated_at" : "2023-03-08T21:08:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27229",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
