{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Seen on a aarch64 Alpine box. Master @ https://github.com/bitcoin/bitcoin/commit/40e1c4d4024b8ad35f2511b2e10bf80c5531dfde. Binaries compiled with Clang 15.0.7. Valgrind `valgrind-3.21.0.GIT`.\r\n\r\nWe saw some issues with this test recently (#27229), but this looks like a different issue:\r\n\r\n```bash\r\n261/262 - wallet_importdescriptors.py --descriptors failed, Duration: 411 s\r\n\r\nstdout:\r\n2023-03-20T10:39:03.422000Z TestFramework (INFO): PRNG seed is: 4441145092714460381\r\n2023-03-20T10:39:03.423000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_â¿_ð_20230320_101936/wallet_importdescriptors_88\r\n2023-03-20T10:39:08.174000Z TestFramework (INFO): Setting up wallets\r\n2023-03-20T10:39:09.056000Z TestFramework (INFO): Mining coins\r\n2023-03-20T10:39:10.636000Z TestFramework (INFO): Import should fail if a descriptor is not provided\r\n2023-03-20T10:39:10.649000Z TestFramework (INFO): Should import a p2pkh descriptor\r\n2023-03-20T10:39:10.799000Z TestFramework (INFO): Test can import same descriptor with public key twice\r\n2023-03-20T10:39:10.835000Z TestFramework (INFO): Test can update descriptor label\r\n2023-03-20T10:39:10.870000Z TestFramework (INFO): Internal addresses cannot have labels\r\n2023-03-20T10:39:10.874000Z TestFramework (INFO): Internal addresses should be detected as such\r\n2023-03-20T10:39:10.915000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor without checksum\r\n2023-03-20T10:39:10.919000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor that has range specified\r\n2023-03-20T10:39:10.926000Z TestFramework (INFO): Should not import a p2sh-p2wpkh descriptor and have it set to active\r\n2023-03-20T10:39:10.930000Z TestFramework (INFO): Should import a (non-active) p2sh-p2wpkh descriptor\r\n2023-03-20T10:39:11.107000Z TestFramework (INFO): Should import a 1-of-2 bare multisig from descriptor\r\n2023-03-20T10:39:11.147000Z TestFramework (INFO): Should not treat individual keys from the imported bare multisig as watchonly\r\n2023-03-20T10:39:11.151000Z TestFramework (INFO): Ranged descriptors cannot have labels\r\n2023-03-20T10:39:11.160000Z TestFramework (INFO): Private keys required for private keys enabled wallet\r\n2023-03-20T10:39:11.177000Z TestFramework (INFO): Ranged descriptor import should warn without a specified range\r\n2023-03-20T10:39:11.234000Z TestFramework (INFO): Should not import a ranged descriptor that includes xpriv into a watch-only wallet\r\n2023-03-20T10:39:11.242000Z TestFramework (INFO): Should not import a descriptor with hardened derivations when private keys are disabled\r\n2023-03-20T10:39:11.281000Z TestFramework (INFO): Verify we can only extend descriptor's range\r\n2023-03-20T10:39:11.765000Z TestFramework (INFO): Check we can change descriptor internal flag\r\n2023-03-20T10:39:12.046000Z TestFramework (INFO): Key ranges should be imported in order\r\n2023-03-20T10:39:12.431000Z TestFramework (INFO): Check we can change next_index\r\n2023-03-20T10:39:12.709000Z TestFramework (INFO): Check imported descriptors are not active by default\r\n2023-03-20T10:39:12.754000Z TestFramework (INFO): Check can activate inactive descriptor\r\n2023-03-20T10:39:12.811000Z TestFramework (INFO): Check can deactivate active descriptor\r\n2023-03-20T10:39:12.862000Z TestFramework (INFO): Verify activation state is persistent\r\n2023-03-20T10:39:12.942000Z TestFramework (INFO): Should import a descriptor with a WIF private key as spendable\r\n2023-03-20T10:39:12.978000Z TestFramework (INFO): Test can import same descriptor with private key twice\r\n2023-03-20T10:39:14.574000Z TestFramework (INFO): Test that multisigs can be imported, signed for, and getnewaddress'd\r\n2023-03-20T10:39:35.707000Z TestFramework (INFO): Multisig with distributed keys\r\n2023-03-20T10:39:46.670000Z TestFramework (INFO): We can create and use a huge multisig under P2WSH\r\n2023-03-20T10:40:19.550000Z TestFramework (INFO): Under P2SH, multisig are standard with up to 15 compressed keys\r\n2023-03-20T10:40:45.496000Z TestFramework (INFO): Amending multisig with new private keys\r\n2023-03-20T10:40:51.063000Z TestFramework (INFO): Combo descriptors cannot be active\r\n2023-03-20T10:40:51.068000Z TestFramework (INFO): Descriptors with no type cannot be active\r\n2023-03-20T10:40:51.127000Z TestFramework (INFO): Test importing a descriptor to an encrypted wallet\r\n2023-03-20T10:41:54.188000Z TestFramework (INFO): Stopping nodes\r\n2023-03-20T10:45:54.240000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n'''\r\n[node 1] Cleaning up leftover process\r\n[node 0] Cleaning up leftover process\r\n\r\n\r\nstderr:\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.10/threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/bitcoin/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/bitcoin/test/functional/test_framework/authproxy.py\", line 149, in __call__\r\n    raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: Error: Please enter the wallet passphrase with walletpassphrase first. (-13)\r\nTraceback (most recent call last):\r\n  File \"/bitcoin/test/functional/wallet_importdescriptors.py\", line 717, in <module>\r\n    ImportDescriptorsTest().main()\r\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 155, in main\r\n    exit_code = self.shutdown()\r\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 314, in shutdown\r\n    self.stop_nodes()\r\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 582, in stop_nodes\r\n    node.wait_until_stopped()\r\n  File \"/bitcoin/test/functional/test_framework/test_node.py\", line 388, in wait_until_stopped\r\n    wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\r\n  File \"/bitcoin/test/functional/test_framework/util.py\", line 281, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n''' not true after 240 seconds\r\n```",
   "closed_at" : "2023-03-28T14:42:09Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 9,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282/comments",
   "created_at" : "2023-03-20T11:11:40Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27282",
   "id" : 1631892545,
   "labels" : [
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      },
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 21,
      "created_at" : "2022-03-03T18:51:29Z",
      "creator" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/56",
      "id" : 7733968,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/56/labels",
      "node_id" : "MI_kwDOABII584AdgLQ",
      "number" : 56,
      "open_issues" : 10,
      "state" : "open",
      "title" : "25.0",
      "updated_at" : "2023-03-28T14:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/56"
   },
   "node_id" : "I_kwDOABII585hRLRB",
   "number" : 27282,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282/timeline",
   "title" : "test: `wallet_importdescriptors.py --descriptors` failure",
   "updated_at" : "2023-03-28T14:42:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27282",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
