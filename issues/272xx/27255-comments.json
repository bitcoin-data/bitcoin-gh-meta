[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095), [josibake](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-03-14T12:24:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468010901",
      "id" : 1468010901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585XgBGV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468010901/reactions"
      },
      "updated_at" : "2023-03-27T15:30:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468010901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, an important piece in opening up Taproot scripting.\r\n\r\n> The design of Miniscript for Tapscript is the result of discussions between various people over the past year(s).\r\n\r\nYour PR description is great but perhaps you can link to a few of those discussions for extra background reading for those that are interested? e.g. https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e\r\n\r\nAlso just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\n",
      "created_at" : "2023-03-14T12:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095",
      "id" : 1468032095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585XgGRf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468032095/reactions"
      },
      "updated_at" : "2023-03-14T12:40:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468032095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, thanks for the suggestion. Reviewers may be interested in https://github.com/sipa/miniscript/pull/134 as well.\r\n\r\n> Also just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\nIt is ready for (extensive or not) review. Otherwise i'd have opened it as a draft. But please tell me clearly if you disagree.",
      "created_at" : "2023-03-14T14:31:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468209943",
      "id" : 1468209943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585XgxsX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468209943/reactions"
      },
      "updated_at" : "2023-03-14T14:31:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468209943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As it stands in this PR it would be possible to import a `tr()` descriptor unspendable by standardness: in addition to the script itself, we also need to check if the whole witness (including the control block, which is outside Miniscript..) isn't larger than the maximum standard transaction size.\r\n\r\nEDIT: Actually since we are still bounded by the `MAX_STACK_SIZE`Â of `1000` and no element is larger than `65` bytes, i think we can do something more elegant than having to compute the maximum witness size of a script. Just have the following conservative bound: refuse any script whose size is larger than `MAX_STANDARD_TX_WEIGHT - (1 + 65) * MAX_STACK_SIZE - TAPROOT_CONTROL_MAX_SIZE` (i.e. `329871` bytes). This is still plenty, and should there ever be a usecase for a larger script we can always relax this check by having an accurate max witness size calculation.",
      "created_at" : "2023-03-14T14:58:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468263557",
      "id" : 1468263557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585Xg-yF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468263557/reactions"
      },
      "updated_at" : "2023-03-16T11:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468263557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1136724397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397"
         }
      },
      "author_association" : "NONE",
      "body" : "Perhaps `multi_a` for consistency, since `multi` is a valid fragment elsewhere?\r\nOr `Tapscript multisig` if you want to explicitly _not_ refer to the fragment.",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T08:57:45Z",
      "diff_hunk" : "@@ -1901,7 +2136,38 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n                 if (!k || *k < 1 || *k > *n) return {};\n                 in += 3 + *n;\n                 std::reverse(keys.begin(), keys.end());\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), *k));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::MULTI, std::move(keys), *k));\n+                break;\n+            }\n+            // Tapscript's multi",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1136724397",
      "id" : 1136724397,
      "line" : 2142,
      "node_id" : "PRRC_kwDOABII585DwQmt",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 2142,
      "original_position" : 965,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 965,
      "pull_request_review_id" : 1340932665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T08:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137201661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661"
         }
      },
      "author_association" : "NONE",
      "body" : "It might be worth explicitly enumerating both the known contexts, and have a defensive final  `assert(false);`.\r\nSimilarly for other places where the context is accessed).",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T14:42:41Z",
      "diff_hunk" : "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137201661",
      "id" : 1137201661,
      "line" : 1320,
      "node_id" : "PRRC_kwDOABII585DyFH9",
      "original_commit_id" : "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "original_line" : 1194,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 407,
      "pull_request_review_id" : 1341664972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T14:42:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137224005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I could have a `IsTapscript(ctx)` helper that does that next to the `MiniscriptContext` enum. It could then be used in all those places to not have to duplicate the verbose `switch () ... assert(false)`.",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T14:55:02Z",
      "diff_hunk" : "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137224005",
      "id" : 1137224005,
      "in_reply_to_id" : 1137201661,
      "line" : 1320,
      "node_id" : "PRRC_kwDOABII585DyKlF",
      "original_commit_id" : "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "original_line" : 1194,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 407,
      "pull_request_review_id" : 1341692112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T14:55:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137247463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463"
         }
      },
      "author_association" : "NONE",
      "body" : "Why not this?\r\n```C++\r\n        if (ctx.MsContext() == MiniscriptContext::P2WSH) {\r\n            return GetStackSize() <= MAX_STANDARD_P2WSH_STACK_ITEMS;\r\n        }\r\n```\r\nOtherwise, it seems to add the other condition for the `P2WSH` context as well.",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T15:08:07Z",
      "diff_hunk" : "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137247463",
      "id" : 1137247463,
      "line" : 1334,
      "node_id" : "PRRC_kwDOABII585DyQTn",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 1334,
      "original_position" : 426,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 426,
      "pull_request_review_id" : 1341720788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T15:08:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137259200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200"
         }
      },
      "author_association" : "NONE",
      "body" : "Typo: \"contexts\"",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T15:14:54Z",
      "diff_hunk" : "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137259200",
      "id" : 1137259200,
      "line" : 540,
      "node_id" : "PRRC_kwDOABII585DyTLA",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 540,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : 14,
      "pull_request_review_id" : 1341735215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T15:14:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137280634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: missing a newline",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T15:20:51Z",
      "diff_hunk" : "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137280634",
      "id" : 1137280634,
      "line" : 1151,
      "node_id" : "PRRC_kwDOABII585DyYZ6",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 1151,
      "original_position" : 480,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : 480,
      "pull_request_review_id" : 1341762826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T15:20:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137296790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790"
         }
      },
      "author_association" : "NONE",
      "body" : "I suppose it never happens, but worth checking that `a.value >= b`?\r\nEspecially since it could be used with unsigned types.",
      "commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "created_at" : "2023-03-15T15:25:05Z",
      "diff_hunk" : "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137296790",
      "id" : 1137296790,
      "line" : 321,
      "node_id" : "PRRC_kwDOABII585DycWW",
      "original_commit_id" : "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "original_line" : 321,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 48,
      "pull_request_review_id" : 1341784989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T15:25:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6681844?v=4",
         "events_url" : "https://api.github.com/users/bigspider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bigspider/followers",
         "following_url" : "https://api.github.com/users/bigspider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bigspider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bigspider",
         "id" : 6681844,
         "login" : "bigspider",
         "node_id" : "MDQ6VXNlcjY2ODE4NDQ=",
         "organizations_url" : "https://api.github.com/users/bigspider/orgs",
         "received_events_url" : "https://api.github.com/users/bigspider/received_events",
         "repos_url" : "https://api.github.com/users/bigspider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bigspider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bigspider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bigspider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138537375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it didn't matter since the computation is trivial and the bounds more loose for Tapscript anyways. But your suggestion is clearer indeed, taken, thanks.",
      "commit_id" : "b4e747e267a8b7e910de4d0a40e41708a6fca4f1",
      "created_at" : "2023-03-16T11:57:43Z",
      "diff_hunk" : "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138537375",
      "id" : 1138537375,
      "in_reply_to_id" : 1137247463,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D3LOf",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 1334,
      "original_position" : 426,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : null,
      "pull_request_review_id" : 1343600247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T11:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138538592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Meh. Done.",
      "commit_id" : "b4e747e267a8b7e910de4d0a40e41708a6fca4f1",
      "created_at" : "2023-03-16T11:58:49Z",
      "diff_hunk" : "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138538592",
      "id" : 1138538592,
      "in_reply_to_id" : 1137259200,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D3Lhg",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 540,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1343601973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T11:58:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138541531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm i thought i was following the style used elsewhere, but i must have dreamed it. Done.",
      "commit_id" : "b4e747e267a8b7e910de4d0a40e41708a6fca4f1",
      "created_at" : "2023-03-16T12:01:05Z",
      "diff_hunk" : "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138541531",
      "id" : 1138541531,
      "in_reply_to_id" : 1137280634,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D3MPb",
      "original_commit_id" : "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "original_line" : 1151,
      "original_position" : 480,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : null,
      "pull_request_review_id" : 1343605518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T12:01:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138548620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm that's a good point re unsigned type, but it needs to be able to return negative values. So i guess it's up to the caller to make sure they don't call this with `b > a` if `a` is unsigned, as with regular substractions?",
      "commit_id" : "b4e747e267a8b7e910de4d0a40e41708a6fca4f1",
      "created_at" : "2023-03-16T12:06:40Z",
      "diff_hunk" : "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138548620",
      "id" : 1138548620,
      "in_reply_to_id" : 1137296790,
      "line" : 330,
      "node_id" : "PRRC_kwDOABII585D3N-M",
      "original_commit_id" : "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "original_line" : 330,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 57,
      "pull_request_review_id" : 1343614719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T12:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138892649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Alright, finally applied the change to the many occurrences in each commit. It should also be more readable now.",
      "commit_id" : "b4e747e267a8b7e910de4d0a40e41708a6fca4f1",
      "created_at" : "2023-03-16T15:33:33Z",
      "diff_hunk" : "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138892649",
      "id" : 1138892649,
      "in_reply_to_id" : 1137201661,
      "line" : 1342,
      "node_id" : "PRRC_kwDOABII585D4h9p",
      "original_commit_id" : "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "original_line" : 1342,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 438,
      "pull_request_review_id" : 1344105798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-16T15:33:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In the last push i've:\r\n- Added a commit to avoid a stack overflow during the destruction of a too large `Node`, due to recursive calls in `shared_ptr`'s destructor. (The reason the CI was failing under MSVC.)\r\n- Lowered the maximum size of a TapMiniscript to make sure a spending witness would never hit the maximum standard transaction size limit. (It's still pretty high.)\r\n- Addressed all comments from @bigspider.\r\n\r\nThis PR is now ready for another round of review.",
      "created_at" : "2023-03-16T17:04:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1472365761",
      "id" : 1472365761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585XwoTB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472365761/reactions"
      },
      "updated_at" : "2023-03-16T17:04:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472365761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed to try to wake the CI up. Looks like it worked!",
      "created_at" : "2023-03-17T10:31:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473626748",
      "id" : 1473626748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585X1cJ8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473626748/reactions"
      },
      "updated_at" : "2023-03-17T10:31:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473626748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Very cool. I also noticed [bitcoin.sipa.be/miniscript](https://bitcoin.sipa.be/miniscript/) has been updated.\r\n\r\nHas there been any thought into how MuSig2 (and threshold friends) would fit into this in the future? I guess that's only a problem for the compiler, since for the purpose of script it doesn't matter if e.g. public key C is an aggregate of A + B. But it does change the meaning of something like `tr(C,multi_a(2,A,B))` (i.e. regular tapscript multisig fallback if MuSig2 coordination fails - maybe not a good example, since this already works).",
      "created_at" : "2023-03-17T12:40:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473771519",
      "id" : 1473771519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585X1_f_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473771519/reactions"
      },
      "updated_at" : "2023-03-17T12:45:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473771519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Has there been any thought into how MuSig2 (and threshold friends) would fit into this in the future?\r\n\r\nDiscussed in sipa's [gist](https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#musig-descriptors). Can comment on that gist @Sjors \r\n",
      "created_at" : "2023-03-17T12:45:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473777054",
      "id" : 1473777054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585X2A2e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473777054/reactions"
      },
      "updated_at" : "2023-03-17T12:45:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473777054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-03-27T15:30:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142",
      "id" : 1485343142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585YiImm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485343142/reactions"
      },
      "updated_at" : "2023-03-27T15:30:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485343142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-04-05T14:18:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1497570962",
      "id" : 1497570962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
      "node_id" : "IC_kwDOABII585ZQx6S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497570962/reactions"
      },
      "updated_at" : "2023-04-05T14:18:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497570962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160599451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        KeyParser parser(/*out =*/&out, /*in=*/nullptr, /*ctx=*/miniscript::MiniscriptContext::P2WSH);\r\n```",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:04:12Z",
      "diff_hunk" : "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160599451",
      "id" : 1160599451,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FLVeb",
      "original_commit_id" : "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "original_line" : 1527,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160600034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        KeyParser parser(/*out=*/nullptr, /*in=*/&provider, /*ctx=*/miniscript::MiniscriptContext::P2WSH);",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:05:19Z",
      "diff_hunk" : "@@ -1670,7 +1692,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     }\n \n     if (ctx == ParseScriptContext::P2WSH) {\n-        KeyParser parser(nullptr, &provider);\n+        KeyParser parser(/* out = */nullptr, /* in = */&provider, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160600034",
      "id" : 1160600034,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FLVni",
      "original_commit_id" : "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "original_line" : 1695,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "iirc, `assert` crashes the node. wouldn't it be better to use the `Assume` macro?",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:17:46Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606636",
      "id" : 1160606636,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII585FLXOs",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 21,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 11,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "same comment as above re: `assert`",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:17:59Z",
      "diff_hunk" : "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606743",
      "id" : 1160606743,
      "line" : 656,
      "node_id" : "PRRC_kwDOABII585FLXQX",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 611,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 167,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "same comment as above re: `assert`",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:18:15Z",
      "diff_hunk" : "@@ -704,6 +708,7 @@ struct Node {\n                     if (node.subs[2]->fragment == Fragment::JUST_0) return std::move(ret) + \"and_n(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \")\";\n                     return std::move(ret) + \"andor(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \",\" + std::move(subs[2]) + \")\";\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606878",
      "id" : 1160606878,
      "line" : 764,
      "node_id" : "PRRC_kwDOABII585FLXSe",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 711,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 189,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160608237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "probably out of scope for this PR, but it would be nice to have the parser tell you why it wasn't able to parse the script, rather than just return empty",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:20:52Z",
      "diff_hunk" : "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160608237",
      "id" : 1160608237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FLXnt",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 1542,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : null,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160609483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "not a big deal, but I think it's more correct to say \"CHECKMULTISIG is disabled in Tapscript\" in the commit message",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:23:16Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160609483",
      "id" : 1160609483,
      "line" : 12,
      "node_id" : "PRRC_kwDOABII585FLX7L",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 12,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 2,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160611768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/false)) return {};\r\n```",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:27:31Z",
      "diff_hunk" : "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160611768",
      "id" : 1160611768,
      "line" : 1802,
      "node_id" : "PRRC_kwDOABII585FLYe4",
      "original_commit_id" : "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "original_line" : 1620,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 776,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160612094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/true)) return {};\r\n```",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:28:16Z",
      "diff_hunk" : "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};\n+            } else if (Const(\"multi_a(\", in)) {\n+                if (!parse_multi_exp(in, /* is_multi_a = */true)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160612094",
      "id" : 1160612094,
      "line" : 1804,
      "node_id" : "PRRC_kwDOABII585FLYj-",
      "original_commit_id" : "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "original_line" : 1622,
      "original_position" : 174,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 778,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160615879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"warning: suggest parentheses around arithmetic in operand of â|â [-Wparentheses]\"\r\n\r\n```suggestion\r\n                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | ((sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff));",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:36:06Z",
      "diff_hunk" : "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160615879",
      "id" : 1160615879,
      "line" : 997,
      "node_id" : "PRRC_kwDOABII585FLZfH",
      "original_commit_id" : "efdd1543597aff49c56a1abaa75b574be3b330db",
      "original_line" : 984,
      "original_position" : 212,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 373,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160622303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"warning: âvoid* __builtin_memcpy(void*, const void*, long unsigned int)â writing 33 bytes into a region of size 32 overflows the destination [-Wstringop-overflow=]\"\r\n\r\ngetting this warning but it doesn't make sense to me why, because it should be calling the right function based on `ctx`? there is a definition for `FromPKBytes` in `src/script/descriptor.cpp` and another one in `src/script/sign.cpp` and the warning is coming from the `src/sign.cpp` one. ",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-07T10:49:18Z",
      "diff_hunk" : "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160622303",
      "id" : 1160622303,
      "line" : 2101,
      "node_id" : "PRRC_kwDOABII585FLbDf",
      "original_commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "original_line" : 2101,
      "original_position" : 932,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 932,
      "pull_request_review_id" : 1376054310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-07T10:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1174534364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there a reason why the only two options are P2WSH and P2TR? Should there be a case statement for P2SH (`sh`) too?",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-23T08:21:55Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1174534364",
      "id" : 1174534364,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585GAfjc",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 18,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 8,
      "pull_request_review_id" : 1396864124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-23T08:21:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1180610019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note to self: i should relax the ops and script size limits below under Tapscript context.",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-04-28T16:32:58Z",
      "diff_hunk" : "@@ -811,11 +856,15 @@ NodeRef GenNode(F ConsumeNode, Type root_type, bool strict_valid = false) {\n             // Fragment/children have not been decided yet. Decide them.\n             auto node_info = ConsumeNode(type_needed);\n             if (!node_info) return {};\n+            if ((!miniscript::IsTapscript(SCRIPT_CTX) && node_info->fragment == Fragment::MULTI_A)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1180610019",
      "id" : 1180610019,
      "line" : 859,
      "node_id" : "PRRC_kwDOABII585GXq3j",
      "original_commit_id" : "02a5fa633f9f44b378f7c015275eacd54939e980",
      "original_line" : 859,
      "original_position" : 223,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : 288,
      "pull_request_review_id" : 1406271728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-28T16:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183400073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Because the current codebase only support P2WSH, there is no support for legacy P2SH.",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T08:42:48Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183400073",
      "id" : 1183400073,
      "in_reply_to_id" : 1174534364,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585GiUCJ",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 18,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 8,
      "pull_request_review_id" : 1410428611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T08:42:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183405185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What's the rationale for changing this? Do whitespaces prevent the analysis? Happy to do this (and the other similar comments) but i'd rather not go through the hassle of applying it on every single of the 21 commits and solve the rebase conflicts if it's just a style nit. Let me know!",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T08:48:06Z",
      "diff_hunk" : "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183405185",
      "id" : 1183405185,
      "in_reply_to_id" : 1160599451,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585GiVSB",
      "original_commit_id" : "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "original_line" : 1527,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1410436660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T08:48:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183410413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This specific case is the very common match-all-variants-and-assert pattern so i think it's good like that. It's also documented this way in our style guidelines: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures.",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T08:53:03Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183410413",
      "id" : 1183410413,
      "in_reply_to_id" : 1160606636,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII585GiWjt",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 21,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 11,
      "pull_request_review_id" : 1410444252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T08:53:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183419232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For this and the other assertions of the context: if we get in such an inconsistent state as having a `multi_a` in a `wsh()` descriptor or a `multi` in a `tr()` descriptor, it's probably better to crash than to return inconsistent (and potentially harmful, like an unspendable address) data to the user. Though it could raise an exception instead of crashing the node. I'll see if i can use `CHECK_NONFATAL` instead.\r\n\r\nEDIT: used `CHECK_NONFATAL` instead here and for `MULTI_A` too.",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T09:00:48Z",
      "diff_hunk" : "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183419232",
      "id" : 1183419232,
      "in_reply_to_id" : 1160606743,
      "line" : 656,
      "node_id" : "PRRC_kwDOABII585GiYtg",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 611,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 167,
      "pull_request_review_id" : 1410457197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T09:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183444783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes generally it would be nice to have better error reporting for descriptors. And i think there are lower hanging fruits when it comes to unclear descriptor errors that confuse users, for instance https://bitcoin.stackexchange.com/q/118022/101498.\r\n\r\nBut yeah definitely not going to bring that into this PR. :)",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T09:24:05Z",
      "diff_hunk" : "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183444783",
      "id" : 1183444783,
      "in_reply_to_id" : 1160608237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Gie8v",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 1542,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : null,
      "pull_request_review_id" : 1410501997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T09:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183446113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T09:25:25Z",
      "diff_hunk" : "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183446113",
      "id" : 1183446113,
      "in_reply_to_id" : 1160609483,
      "line" : 12,
      "node_id" : "PRRC_kwDOABII585GifRh",
      "original_commit_id" : "1360b541ae509f2df5ec319be63b083860bed603",
      "original_line" : 12,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 2,
      "pull_request_review_id" : 1410504054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T09:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183487461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, good suggestion that i add those for clarity because your suggestion is incorrect: `add_diff` should always be added. The current (and intended) semantic is:\r\n```diff\r\ndiff --git a/src/script/miniscript.h b/src/script/miniscript.h\r\nindex 011c7ac6d6..35797153da 100644\r\n--- a/src/script/miniscript.h\r\n+++ b/src/script/miniscript.h\r\n@@ -1002,7 +1002,7 @@ private:\r\n                         // this one?\r\n                         next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\r\n                         // Same for size of the stack after satisfying k of the past i fragments.\r\n-                        next_sats_diff.push_back((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat) + add_diff);\r\n+                        next_sats_diff.push_back(((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat)) + add_diff);\r\n                         // Update the maximum stack size for satisfying k subs with the largest of the maximum cost of\r\n                         // satisfying k-1 subs (implying we satisfy this one), the cost of dissatisfying this sub\r\n                         // after the satisfaction of j subs beforehand, and the cost of satisfying this sub after the\r\n```\r\n\r\nDid you get this warning with GCC?",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T10:05:50Z",
      "diff_hunk" : "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183487461",
      "id" : 1183487461,
      "in_reply_to_id" : 1160615879,
      "line" : 997,
      "node_id" : "PRRC_kwDOABII585GipXl",
      "original_commit_id" : "efdd1543597aff49c56a1abaa75b574be3b330db",
      "original_line" : 984,
      "original_position" : 212,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 373,
      "pull_request_review_id" : 1410572054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T10:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183502224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm trying to reproduce the warning. What version of which compiler do you use? And what flags have you enabled?",
      "commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "created_at" : "2023-05-03T10:21:47Z",
      "diff_hunk" : "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183502224",
      "id" : 1183502224,
      "in_reply_to_id" : 1160622303,
      "line" : 2101,
      "node_id" : "PRRC_kwDOABII585Gis-Q",
      "original_commit_id" : "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "original_line" : 2101,
      "original_position" : 932,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 932,
      "pull_request_review_id" : 1410595992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T10:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   }
]
