[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Would the pruned peer immediately drop the block, or keep it around for some time - if so, how? Can we just append it to the blocks on disk and have it fall out after pruning LIFO style?",
      "created_at" : "2018-03-09T14:25:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-371826163",
      "id" : 371826163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-03-09T14:25:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371826163",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
         "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
         "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
         "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
         "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/esotericnonsense",
         "id" : 7999704,
         "login" : "esotericnonsense",
         "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
         "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
         "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/esotericnonsense"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Curious what the use case is for this. Makes sense, but I can't think of why a pruned node would actually want this.\r\n\r\nThat being said... I am uncomfortably excited by the idea of removing an index based on `CDiskBlockPos`. I have enough experience with logical/physical indexing schemes in my pre-Bitcoin life to feel strongly about this. Besides the pruning use case you just gave, using physical offsets now is trading a very small efficiency gain for a lot of pain in the future if we want to change the data format.\r\n\r\nNormally the way this is implemented in a real database is via a \"secondary index\", which is not supported by LevelDB natively. If you imagine we stored blocks in MySQL or Postgres, you might have an auto-increment \"block id\" that maps to the full block hash, and then the txindex would map to block ids instead of the full hash. This is similar to your idea of using block height. Dealing with actual block heights sounds kind of confusing because you'd either need to deal with reorgs, or have confusing code that ignores reorgs (the node is missing data afterall) that would make things more convoluted.\r\n\r\nSince this is a brainstorming issue, something else that's been on my mind is whether it's possible to support more exotic index types (e.g. address indexes) in a sane way with the existing LevelDB code. In general, having more flexible indexing code would be a big benefit. There's a lot of duplication in the existing index logic we have that could be cleaned up and made more efficient.",
      "created_at" : "2018-03-11T08:48:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-372099280",
      "id" : 372099280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-03-11T08:48:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372099280",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> [...] but I can't think of why a pruned node would actually want this.\r\n\r\nUse case: a secure and decentralised way to access and decompose a transaction by it's ID on low resource hardware. Usually, if you want a decentralised self-validated txindex, you need 100GB+ of free spaces.\r\n",
      "created_at" : "2018-03-11T12:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-372110491",
      "id" : 372110491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-03-11T12:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372110491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If I understand correctly, this would be very inefficient without additional extensions to the P2P protocol, since if you wanted to actually fetch the transaction data for a tx that's not in a locally stored block you would have to download the full block. I can see how it would be useful though if you were in a kind of semi-trusted setup (e.g. querying a full node that you can access over a local network).",
      "created_at" : "2018-03-13T05:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-372555239",
      "id" : 372555239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-03-13T05:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372555239",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If one has verified the chain on a pruned peer, fetching an already verified historical block (that has been pruned) seems secure to me.\r\nSeems ideal for merchants or other small businesses.\r\nIt allows one to securely fetch a transaction by it's ID with a overhead of ~1MB.\r\n\r\nAssume you have a node-in-a-box with limited disk space but you still want the ability to fetch all transaction by it's ID instead of using a block explorer.\r\n\r\nIdeally fetching arbitrary transactions would be avoided with use of the wallet as relevant-transaction cache... but still: users want the ability to fetch by TX ID and it seems to be worth to allow this on pruned peers since it's unrealistic to only have this possibility in the long run for non pruned peers.\r\n\r\nIt may also discourage the use of centralized validation (blockexplorers), or at least it gives low resource systems an alternative option.",
      "created_at" : "2018-03-13T06:06:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-372556896",
      "id" : 372556896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-03-13T06:06:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372556896",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I think this is uninteresting.\n\ntxindex should be a debugging feature, not something to rely on for production purposes. Having wallets that watch for things you're interested in is a far more scalable approach than indexing.\n\nAs for the use case of being able to quickly check if recent blocks had something relevant to you (faster than scanning through all blocks again), BIP158 is a more scalable alternative.",
      "created_at" : "2018-04-19T12:13:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-382711458",
      "id" : 382711458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-04-19T12:13:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382711458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Creating a tx-index outside of Bitcoin-Core via ZMQ/RPC/REST is relatively inefficient.\r\n\r\nAFAIK, Bitcoin Cores txindex is widely used in production and I'm not aware of stability problems.\r\n\r\nI agree that selective indexing (wallets) are far more efficient and BIP158 looks very promising, though, there are reasonable use-cases for a transaction-id index.\r\n\r\nIf we continue to support a txindex, I don't see a reason to exclude pruned peers.",
      "created_at" : "2018-04-19T12:35:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-382717207",
      "id" : 382717207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-04-19T12:35:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382717207",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Creating a tx-index outside of Bitcoin-Core via ZMQ/RPC/REST is relatively inefficient.\n\nThen use P2P.\n\n> AFAIK, Bitcoin Cores txindex is widely used in production and I'm not aware of stability problems.\n\nYes, for lack of a better alternative (ease of watching in the wallet? external indexing daemon?)\n",
      "created_at" : "2018-04-19T12:38:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-382718270",
      "id" : 382718270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-04-19T12:38:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382718270",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> allow this on pruned peers since it's unrealistic to only have this possibility in the long run for non pruned peers.\r\n\r\nThis makes sense to me, (try) to give the same feature set to pruned peers.",
      "created_at" : "2018-04-19T14:39:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-382761782",
      "id" : 382761782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-04-19T14:39:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382761782",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Use case: a secure and decentralised way to access and decompose a transaction by it's ID on low resource hardware. Usually, if you want a decentralised self-validated txindex, you need 100GB+ of free spaces.\r\n\r\nI think this use-case is significantly more simply implemented with gettxoutproof/verifytxoutproof/decoderawtransaction. If you've already discovered from somewhere that you want a transaction, that somewhere can just as easily provide a txoutproof, and verifytxoutproof will already (AFAIR) tell you if the proof corresponds to a transaction on your (fully-validated) chain.",
      "created_at" : "2018-04-27T23:37:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-385119360",
      "id" : 385119360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "updated_at" : "2018-04-27T23:37:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385119360",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't know if that's really more simple, but it's certainly an option people should consider. There is additional complexity in applications that have to request, store and provide these txoutproofs. It's a bit easier if applications relying on a pruned node only talk to applications relying on archival nodes.\r\n\r\nHauling txoutproofs around, just in case you're talking to a pruned node, does require bandwidth and storage. I don't know if that outweighs the extra bandwidth needed for fetching an entire block when you just need one transaction.\r\n\r\n",
      "created_at" : "2018-09-08T13:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-419643722",
      "id" : 419643722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxOTY0MzcyMg==",
      "updated_at" : "2018-09-08T13:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419643722",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I don't really understand why txindex is disabled in pruned mode.\r\n\r\nAs for for example I just want to check if the payment was received on bunch of the addresses that I generated.  So I have to parse N recent blocks for the specific addresses. I am using right now *getrawtransaction*, but it is extremely slow.\r\nhttps://codereview.stackexchange.com/questions/227202/bash-bitcoin-blockchain-explorer\r\n\r\nIt is unclear what should I do to speed things up - to parse the raw data of the blockchain manually?",
      "created_at" : "2019-09-03T02:39:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-527281964",
      "id" : 527281964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzI4MTk2NA==",
      "updated_at" : "2019-09-03T02:40:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527281964",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/45923995?v=4",
         "events_url" : "https://api.github.com/users/reardenlife/events{/privacy}",
         "followers_url" : "https://api.github.com/users/reardenlife/followers",
         "following_url" : "https://api.github.com/users/reardenlife/following{/other_user}",
         "gists_url" : "https://api.github.com/users/reardenlife/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/reardenlife",
         "id" : 45923995,
         "login" : "reardenlife",
         "node_id" : "MDQ6VXNlcjQ1OTIzOTk1",
         "organizations_url" : "https://api.github.com/users/reardenlife/orgs",
         "received_events_url" : "https://api.github.com/users/reardenlife/received_events",
         "repos_url" : "https://api.github.com/users/reardenlife/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/reardenlife/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/reardenlife/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/reardenlife"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@reardenlife what about `getblock $blockid 2`, this give you all transactions in one request.",
      "created_at" : "2019-09-03T11:27:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-527418478",
      "id" : 527418478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzQxODQ3OA==",
      "updated_at" : "2019-09-03T11:27:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527418478",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@NicolasDorier great! I was able to make bash blockchain explorer with it. https://bitcointalk.org/index.php?topic=5181207.msg52352018#msg52352018",
      "created_at" : "2019-09-04T01:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-527704317",
      "id" : 527704317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzcwNDMxNw==",
      "updated_at" : "2019-09-04T01:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527704317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/45923995?v=4",
         "events_url" : "https://api.github.com/users/reardenlife/events{/privacy}",
         "followers_url" : "https://api.github.com/users/reardenlife/followers",
         "following_url" : "https://api.github.com/users/reardenlife/following{/other_user}",
         "gists_url" : "https://api.github.com/users/reardenlife/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/reardenlife",
         "id" : 45923995,
         "login" : "reardenlife",
         "node_id" : "MDQ6VXNlcjQ1OTIzOTk1",
         "organizations_url" : "https://api.github.com/users/reardenlife/orgs",
         "received_events_url" : "https://api.github.com/users/reardenlife/received_events",
         "repos_url" : "https://api.github.com/users/reardenlife/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/reardenlife/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/reardenlife/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/reardenlife"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The feature request didn't seem to attract much attention in the past. Also, the issue seems not important enough right now to keep it sitting around idle in the list of open issues.\r\n\r\nClosing due to lack of interest. Pull requests with improvements are always welcome.",
      "created_at" : "2020-05-09T12:28:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/12651#issuecomment-626168599",
      "id" : 626168599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12651",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjE2ODU5OQ==",
      "updated_at" : "2020-05-09T12:28:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626168599",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
