{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Add compile time checking for all run time locking assertions.\r\n\r\nThe intention is that literally all `EXCLUSIVE_LOCKS_REQUIRED`/`LOCKS_EXCLUDED`:s added in this PR should follow either directly or indirectly from `AssertLockHeld(â¦)`/`AssertLockNotHeld(â¦)`:s already existing in the repo.\r\n\r\nConsider the case where function `A(â¦)` contains `AssertLockHeld(cs_foo)` (without\r\nfirst locking `cs_foo` in `A`), and that `B(â¦)` calls `A(â¦)` (without first locking `cs_main`):\r\n* It _directly_ follows that: `A(â¦)` should have an `EXCLUSIVE_LOCKS_REQUIRED(cs_foo)` annotation.\r\n* It _indirectly_ follows that: `B(â¦)` should have an `EXCLUSIVE_LOCKS_REQUIRED(cs_foo)` annotation.",
   "closed_at" : "2018-05-02T18:23:13Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 21,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12665/comments",
   "created_at" : "2018-03-10T17:17:32Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12665/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/12665",
   "id" : 304087126,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "id" : 135961,
         "name" : "Refactoring",
         "node_id" : "MDU6TGFiZWwxMzU5NjE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12665/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTc0MTc5NzAz",
   "number" : 12665,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/12665.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12665",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/12665.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12665"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Add compile time checking for run time locking assertions",
   "updated_at" : "2018-05-02T18:23:13Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12665",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
