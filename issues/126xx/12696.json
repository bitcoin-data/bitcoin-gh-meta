{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "It was recently pointed out to me that calling `fsync()` or `fdatasync()` on a new file is not sufficient to ensure it's persisted to disk, as the existence of the file itself is stored in the directory inode. This means that ensuring that a new file is actually committed also requires an `fsync()` on the parent directory. There are lots of discussions about this topic online, e.g. [here](https://www.quora.com/When-should-you-fsync-the-containing-directory-in-addition-to-the-file-itself). This only applies to new files, calling `fsync()` on an old file is always fine.\r\n\r\nIn theory this means that the block index can race block persistence, as a poorly timed power outage could cause us to commit data to the block index that gets lost in the filesystem. The change here ensures that we call `fsync()` on the blocks directory after committing new block files. I checked the LevelDB source code and they already do this when updating their writeahead log. In theory this could happen at the same time as a chain split and that could cause you to come back online and then miss the block you had committed to the index, which would put you permanently out of sync between the two. This seems pretty far fetched, but we should handle this case correctly anyway.\r\n\r\nI'm using a new autoconf macro as well, `AC_CHECK_FUNCS()`. It checks that a function is available and then defines a `HAVE_*` macro if it is, analogous to `AC_CHECK_HEADERS`. Right now `autoscan` complains a lot about the fact that we're not using this, so I figured I might as well start now while I was in this part of the code.\r\n\r\nApparently Windows doesn't have an similar method of syncing filesystem metadata---I'm not an expert on that though.\r\n\r\nAlso not strictly related to this change, but I have been working on a lot of platform-specific PRs recently and want to refactor `util.h` and `util.cpp` so the platform-specific bits are isolated from the generic util stuff. I intend to create an issue later today to describe how I think that should be done so I can get feedback before starting that work.",
   "closed_at" : "2018-07-25T15:01:10Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12696/comments",
   "created_at" : "2018-03-15T14:21:24Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12696/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/12696",
   "id" : 305572477,
   "labels" : [
      {
         "color" : "000000",
         "default" : false,
         "id" : 219890555,
         "name" : "Block storage",
         "node_id" : "MDU6TGFiZWwyMTk4OTA1NTU=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage"
      },
      {
         "color" : "f7c6c7",
         "default" : false,
         "id" : 323697996,
         "name" : "Data corruption",
         "node_id" : "MDU6TGFiZWwzMjM2OTc5OTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "id" : 955867938,
         "name" : "Needs rebase",
         "node_id" : "MDU6TGFiZWw5NTU4Njc5Mzg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12696/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTc1MjY1NTU2",
   "number" : 12696,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/12696.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12696",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/12696.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12696"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Fix possible data race when committing block files",
   "updated_at" : "2018-07-25T15:01:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12696",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
      "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/eklitzke/followers",
      "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/eklitzke",
      "id" : 2734,
      "login" : "eklitzke",
      "node_id" : "MDQ6VXNlcjI3MzQ=",
      "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
      "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
      "repos_url" : "https://api.github.com/users/eklitzke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/eklitzke"
   }
}
