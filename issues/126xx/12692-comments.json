[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nVery nice!",
      "created_at" : "2018-03-15T10:06:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373323988",
      "id" : 373323988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T10:06:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373323988",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The code actually looks good with `-fsanitize=undefined` and `-fsanitize=thread`, the test suite passes cleanly and my `bitcoind` seems fine with those options.\r\n\r\nThings are horribly broken if you try to use `-fsanitize=address`. If anyone wants to play with that option I recommend you use `--disable-asm`, otherwise you get segfaults in `sha256_sse4::Transform` (which I think is a bug in address sanitizer) and you can't get very far without that.",
      "created_at" : "2018-03-15T13:08:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373369583",
      "id" : 373369583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T13:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373369583",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I don't think we should add configure options for every possible sanitation flag. This might confuse people that are trying to build the software with a flurry of options. It looks like the beginning of trying to wrap all compiler options. Which is unnecessary as they can already be passed through `./configure CXXFLAGS=\"-fsanitize=magnetic-flux\"`.\r\n\r\nWhat about a single `--enable-sanitize=a,b,c` option where a b and c can be multiple such flags?",
      "created_at" : "2018-03-15T13:33:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373376866",
      "id" : 373376866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T13:33:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373376866",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj But the sanitizers are mutually exclusive, right? I.e. you cannot run ASan and TSan at the same time.",
      "created_at" : "2018-03-15T14:06:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373387238",
      "id" : 373387238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T14:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373387238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Some are. Some are not. Different compilers may have different limitations in the future as well.",
      "created_at" : "2018-03-15T14:25:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373393556",
      "id" : 373393556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T14:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373393556",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also, it should be noted that the downside of these flags is not limited to performance overhead: they may also introduce security issues. (This is why it's discouraged to build your entire system with them enabled.)",
      "created_at" : "2018-03-15T14:27:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373394419",
      "id" : 373394419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T14:27:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373394419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr Yes, good point!\r\n\r\nAfter thinking about it a bit more and in light of @luke-jr:s comment I think @laanwj:s suggested `--enable-sanitize=a,b,c` (or even better: `--enable-sanitizer=a,b,c` is the way to go.",
      "created_at" : "2018-03-15T14:31:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373395849",
      "id" : 373395849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T14:36:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373395849",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@eklitzke While we're at it Ã¢ÂÂ what about allowing for MemorySanitizer (MSan: `-fsanitize=memory`) too? ",
      "created_at" : "2018-03-15T14:35:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373397380",
      "id" : 373397380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T14:35:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373397380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> @laanwj But the sanitizers are mutually exclusive, right? I.e. you cannot run ASan and TSan at the same time.\r\n\r\nThat's a subset right? In that case, the option would take only one argument. I was just illustrating how it generalizes to multiple. Mesa has similar option to provide a comma-separated list of drivers to build in, for example.",
      "created_at" : "2018-03-15T15:02:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373407056",
      "id" : 373407056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T15:02:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373407056",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Yes, you're right! I think `--enable-sanitizer=a,b,c` is a good idea.",
      "created_at" : "2018-03-15T15:05:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373408240",
      "id" : 373408240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-15T15:05:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373408240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174907923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174907923"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does AX_CHECK_LINK_FLAG not do what we want here?",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-15T19:40:24Z",
      "diff_hunk" : "@@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174907923",
      "id" : 174907923,
      "original_commit_id" : "78618b8b03db698fa60b28fc87346f64e5d6cd02",
      "original_position" : 37,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 104352258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174907923",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174908426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174908426"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As mentioned in the debugging PR, Please add these to a SANITIZE_CXXFLAGS or DEBUG_CXXFLAGS or so, rather than CXXFLAGS directly.\r\n\r\nAdding to CXXFLAGS means that future tests will be done with sanitizers enabled, which can cause false-negatives.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-15T19:42:21Z",
      "diff_hunk" : "@@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then\n+  BITCOIN_CHECK_COMPILE_FLAG_AND_LINK([-fsanitize=address],\n+                                      [CXXFLAGS=\"$CXXFLAGS -fsanitize=address\"],\n+                                      [AC_MSG_ERROR([-fsanitize=asan broken, check if you have libasan installed])])\n+fi\n+if test \"x$enable_tsan\" = xyes; then\n+  BITCOIN_CHECK_COMPILE_FLAG_AND_LINK([-fsanitize=thread],\n+                                      [CXXFLAGS=\"$CXXFLAGS -fsanitize=thread\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174908426",
      "id" : 174908426,
      "original_commit_id" : "78618b8b03db698fa60b28fc87346f64e5d6cd02",
      "original_position" : 44,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 104352818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174908426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175196365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That adds the flags to LDFLAGS, so no.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-16T19:43:54Z",
      "diff_hunk" : "@@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196365",
      "id" : 175196365,
      "in_reply_to_id" : 174907923,
      "original_commit_id" : "78618b8b03db698fa60b28fc87346f64e5d6cd02",
      "original_position" : 37,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 104695902,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175196365",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175196374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "will fix",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-16T19:43:59Z",
      "diff_hunk" : "@@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then\n+  BITCOIN_CHECK_COMPILE_FLAG_AND_LINK([-fsanitize=address],\n+                                      [CXXFLAGS=\"$CXXFLAGS -fsanitize=address\"],\n+                                      [AC_MSG_ERROR([-fsanitize=asan broken, check if you have libasan installed])])\n+fi\n+if test \"x$enable_tsan\" = xyes; then\n+  BITCOIN_CHECK_COMPILE_FLAG_AND_LINK([-fsanitize=thread],\n+                                      [CXXFLAGS=\"$CXXFLAGS -fsanitize=thread\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196374",
      "id" : 175196374,
      "in_reply_to_id" : 174908426,
      "original_commit_id" : "78618b8b03db698fa60b28fc87346f64e5d6cd02",
      "original_position" : 44,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 104695920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175196374",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "These are good suggestions, I will redo things and put another version of this change.",
      "created_at" : "2018-03-16T19:44:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373824772",
      "id" : 373824772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-16T19:44:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373824772",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175203308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually I think there's a trick to combine these (and remove the m4 file I added).",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-16T20:15:57Z",
      "diff_hunk" : "@@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308",
      "id" : 175203308,
      "in_reply_to_id" : 174907923,
      "original_commit_id" : "78618b8b03db698fa60b28fc87346f64e5d6cd02",
      "original_position" : 37,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 104704453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175203308",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "On Mar 16, 2018 4:16 PM, \"Evan Klitzke\" <notifications@github.com> wrote:\n\n*@eklitzke* commented on this pull request.\n------------------------------\n\nIn configure.ac\n<https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308>:\n\n> @@ -247,6 +268,27 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n\n+# Checking for -fsanitize flags works differently from other compiler flags.\n+# That's because with GCC there's an implicit linking dependency on libasan,\n+# libtsan, etc. when using the related -fsanitize flags. Clang works\n+# differently: it statically links these dependencies. Therefore we can't use\n+# AC_CHECK_LIB to test this, we need to compile and link.\n+if test \"x$enable_asan\" = xyes; then\n\nActually I think there's a trick to combine these (and remove the m4 file I\nadded).\n\nÃ¢ÂÂ\nYou are receiving this because you were assigned.\n\nReply to this email directly, view it on GitHub\n<https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AAZdE82U3dp9IDhfkYnRDPPJRz6B_6hXks5tfB2FgaJpZM4Srfdg>\n.\n\nThe variable used shouldn't matter, the contents just end up on the cmdline.\n",
      "created_at" : "2018-03-16T20:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373836386",
      "id" : 373836386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-16T20:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373836386",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated to add a single sanitizer flag. Should be portable to all POSIX systems including traditional /bin/sh.\r\n\r\nI tried a lot of things with the existing AX_* macros and could not get this to work right without the new m4 file I added. For instance, I tried using AX_LINK_IFELSE after AX_CHECK_COMPILE_FLAG, but that uses CXXFLAGS not the new flags I added, and it has no option to take additional compile flags.\r\n\r\nThat said, there are other options if we don't want the new m4 file:\r\n * Could do a hack where we save old CXXFLAGS, update global CXXFLAGS and use AX_LINK_IFELSE, then set SANITIZER_CXXFLAGS to CXXFLAGS and restore the old CXXFLAGS variable\r\n * In #12695 I have a commit that adds better reliable detection for clang. If we want to use that we could just change the configure.ac logic to use AX_CHECK_COMPILE_FLAG and then if we are not Clang also do an AC_CHECK_LIB check.\r\n\r\nLet's see how #12695 pans out though before continuing with this.",
      "created_at" : "2018-03-16T20:43:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373839543",
      "id" : 373839543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-16T20:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373839543",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175925154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175925154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure what distinction you're trying to make here. As far as I can tell, clang/gcc handle this the same way. Of course, how distros configure and distribute them is a different story.\r\n\r\nThe following works fine for me with a gcc with busted libtsan:\r\n```bash\r\nAX_CHECK_LINK_FLAG([[-fsanitize=undefined]],[[SANITIZER_CXXFLAGS=\"${SANITIZER_CXXFLAGS} -fsanitize=undefined\"; SANITIZER_LDFLAGS=\"${SANITIZER_LDFLAGS} -fsanitize=undefined\"]],\r\n[AC_MSG_ERROR([compiler does not support -fsanitize=undefined])], [[$CXXFLAG_WERROR]])\r\n\r\nAX_CHECK_LINK_FLAG([[-fsanitize=thread]],[[SANITIZER_CXXFLAGS=\"${SANITIZER_CXXFLAGS} -fsanitize=thread\"; SANITIZER_LDFLAGS=\"${SANITIZER_LDFLAGS} -fsanitize=thread\"]],\r\n[AC_MSG_ERROR([compiler does not support -fsanitize=thread])], [[$CXXFLAG_WERROR]])\r\n```\r\nThe second check (correctly) fails due to a linking error with libtsan:\r\n> configure:18545: checking whether the linker accepts -fsanitize=undefined\r\nconfigure:18564: g++ -m64 -std=c++11 -o conftest -pipe -O2  -I/home/cory/dev/bitcoin2/depends/x86_64-pc-linux-gnu/share/../include/  -L/home/cory/dev/bitcoin2/depends/x86_64-pc-linux-gnu/share/../lib  -Werror -fsanitize=undefined conftest.cpp  >&5\r\nconfigure:18564: $? = 0\r\nconfigure:18574: result: yes\r\nconfigure:18583: checking whether the linker accepts -fsanitize=thread\r\nconfigure:18602: g++ -m64 -std=c++11 -o conftest -pipe -O2  -I/home/cory/dev/bitcoin2/depends/x86_64-pc-linux-gnu/share/../include/  -L/home/cory/dev/bitcoin2/depends/x86_64-pc-linux-gnu/share/../lib  -Werror -fsanitize=thread conftest.cpp  >&5\r\n/tmp/ramfs/tmp/ccFEArS2.o: In function `_GLOBAL__sub_I_00099_0_main':\r\nconftest.cpp:(.text.startup+0x11): undefined reference to `__tsan_init'\r\ncollect2: error: ld returned 1 exit status\r\n\r\nI don't understand why you find AX_CHECK_LINK_FLAG insufficient, as it simply does a combined compile/link through the compiler, it doesn't invoke the linker directly.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-20T21:15:57Z",
      "diff_hunk" : "@@ -247,6 +253,26 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+#\n+# With GCC there's an implicit linking dependency on libasan, libtsan, etc. when\n+# using the related -fsanitize flags, and those libraries are not included with\n+# GCC on most Linux distros. The -fsanitize compiler options cause\n+# GCC to invoke the linker with the required library for that flag (e.g. libasan\n+# for -fsanitize=address). This means that AX_CHECK_COMPILE_FLAG does not work\n+# properly with GCC, as the AX_CHECK_COMPILE_FLAG check here would pass if GCC\n+# supports the flag, but in fact linking would fail.\n+#\n+# Clang works differently: it bundles these libraries, and statically links them\n+# when using -fsanitize. For this reason, using AC_CHECK_LIB is not a good idea,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175925154",
      "id" : 175925154,
      "original_commit_id" : "e9adc6594d022fefb52cc162850feed60d14ba38",
      "original_position" : 28,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105539509,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175925154",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175968638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175968638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll try retesting this.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-21T01:28:28Z",
      "diff_hunk" : "@@ -247,6 +253,26 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+# Checking for -fsanitize flags works differently from other compiler flags.\n+#\n+# With GCC there's an implicit linking dependency on libasan, libtsan, etc. when\n+# using the related -fsanitize flags, and those libraries are not included with\n+# GCC on most Linux distros. The -fsanitize compiler options cause\n+# GCC to invoke the linker with the required library for that flag (e.g. libasan\n+# for -fsanitize=address). This means that AX_CHECK_COMPILE_FLAG does not work\n+# properly with GCC, as the AX_CHECK_COMPILE_FLAG check here would pass if GCC\n+# supports the flag, but in fact linking would fail.\n+#\n+# Clang works differently: it bundles these libraries, and statically links them\n+# when using -fsanitize. For this reason, using AC_CHECK_LIB is not a good idea,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175968638",
      "id" : 175968638,
      "in_reply_to_id" : 175925154,
      "original_commit_id" : "e9adc6594d022fefb52cc162850feed60d14ba38",
      "original_position" : 28,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 105589345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175968638",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You're right, I removed the m4 file I added and made this much simpler. The error messages are also much better now.\r\n\r\nChanges:\r\n * Since the compiler will accept sanitizer options separated by a comma, I removed the for loop and tr nonsense\r\n * First check using AX_CHECK_COMPILE_FLAGS, this ensures that the compiler accepts the flags and the combination is compatible\r\n * Next check using AX_CHECK_LINK_FLAGS, if the previous check passed but this fails then the user is missing libraries.\r\n\r\nHere are some cases I tested. Note that this enables me to provide better error messages.\r\n\r\nMisspelled option `undfeined`:\r\n```\r\nchecking whether C++ compiler accepts -fsanitize=undfeined... no\r\nconfigure: error: compiler did not accept requested flags\r\n```\r\n\r\nOptions `address,thread` that are mutually incompatible:\r\n```\r\nchecking whether C++ compiler accepts -fsanitize=address,thread... no\r\nconfigure: error: compiler did not accept requested flags\r\n```\r\n\r\nOptions `address,undefined` that are compatible, but when I did not have libubsan installed:\r\n```\r\nchecking whether C++ compiler accepts -fsanitize=address,undefined... yes\r\nchecking whether the linker accepts -fsanitize=address,undefined... no\r\nconfigure: error: linker did not accept requested flags, you are missing required libraries\r\n```\r\n\r\nAnd for completeness, when everything is installed and valid:\r\n```\r\nchecking whether C++ compiler accepts -fsanitize=address,undefined... yes\r\nchecking whether the linker accepts -fsanitize=address,undefined... yes\r\n```\r\n\r\nI was able to run the build all the way through including linking with the existing change to src/Makefile.am that just adds the flags to AM_CXXFLAGS, no need to update AM_LDFLAGS.",
      "created_at" : "2018-03-21T02:20:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-374817142",
      "id" : 374817142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-21T02:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374817142",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Docs added (including the note about `--disable-asm`) and re-squashed.",
      "created_at" : "2018-03-22T17:25:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-375389940",
      "id" : 375389940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-22T17:25:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375389940",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176513584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176513584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mind changing this to AC_ARG_WITH? In autoconf-speak, --enable-foo is intended to be binary (which is why it enables --disable-foo too), and --with-bar is intended to take options.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-22T17:48:43Z",
      "diff_hunk" : "@@ -219,6 +219,12 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Enable different -fsanitize options\n+AC_ARG_ENABLE([sanitizer],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176513584",
      "id" : 176513584,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 5,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 106231423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176513584",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176516277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176516277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you add these to a SANITIZER_LDFLAGS as well, and add it to AM_LDFLAGS? I'm nervous that automake/libtool may not always add (all) CXXFLAGS to the link-line. In fact, they really shouldn't be doing that anyway.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-22T17:55:59Z",
      "diff_hunk" : "@@ -247,6 +253,23 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+if test x$enable_sanitizer != x; then\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$enable_sanitizer]],,[AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with these flags. This\n+  # is a separate check so we can give a better error message when the flags are\n+  # supported but libraries are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$enable_sanitizer]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$enable_sanitizer]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176516277",
      "id" : 176516277,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 30,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 106234511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176516277",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176530262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176530262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not notate the incompatible functions with a function attribute (```no_sanitize(\"address\")```) instead? Of course we'd need to do an autoconf check for that first.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-22T18:37:25Z",
      "diff_hunk" : "@@ -204,6 +204,57 @@ make cov\n # A coverage report will now be accessible at `./test_bitcoin.coverage/index.html`.\n ```\n \n+**Sanitizers**\n+\n+Bitcoin can be compiled with various \"sanitizers\" enabled, which add\n+instrumentation for issues regarding things like memory safety, thread race\n+conditions, or undefined behavior. This is controlled with the\n+`--enable-sanitizer` configure flag, which should be a comma separated list of\n+sanitizers to enable. The sanitizer list should correspond to supported\n+`-fsanitize=` options in your compiler. These sanitizers have runtime overhead,\n+so they are most useful when testing changes or producing debugging builds.\n+\n+Some examples:\n+\n+```bash\n+# Enable both the address sanitizer and the undefined behavior sanitizer\n+./configure --enable-sanitizer=address,undefined\n+\n+# Enable the thread sanitizer\n+./configure --enable-sanitizer=thread\n+```\n+\n+If you are compiling with GCC you will typically need to install corresponding\n+\"san\" libraries to actually compile with these flags, e.g. libasan for the\n+address sanitizer, libtsan for the thread sanitizer, and libubsan for the\n+undefined sanitizer. If you are missing required libraries, the configure script\n+will fail with a linker error when testing the sanitizer flags.\n+\n+The test suite should pass cleanly with the `thread` and `undefined` sanitizers,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176530262",
      "id" : 176530262,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 30,
      "path" : "doc/developer-notes.md",
      "position" : 30,
      "pull_request_review_id" : 106250805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176530262",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We could, but there seem to be a lot of them so I don't have a full list of what needs to be disabled yet.",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-27T01:02:42Z",
      "diff_hunk" : "@@ -204,6 +204,57 @@ make cov\n # A coverage report will now be accessible at `./test_bitcoin.coverage/index.html`.\n ```\n \n+**Sanitizers**\n+\n+Bitcoin can be compiled with various \"sanitizers\" enabled, which add\n+instrumentation for issues regarding things like memory safety, thread race\n+conditions, or undefined behavior. This is controlled with the\n+`--enable-sanitizer` configure flag, which should be a comma separated list of\n+sanitizers to enable. The sanitizer list should correspond to supported\n+`-fsanitize=` options in your compiler. These sanitizers have runtime overhead,\n+so they are most useful when testing changes or producing debugging builds.\n+\n+Some examples:\n+\n+```bash\n+# Enable both the address sanitizer and the undefined behavior sanitizer\n+./configure --enable-sanitizer=address,undefined\n+\n+# Enable the thread sanitizer\n+./configure --enable-sanitizer=thread\n+```\n+\n+If you are compiling with GCC you will typically need to install corresponding\n+\"san\" libraries to actually compile with these flags, e.g. libasan for the\n+address sanitizer, libtsan for the thread sanitizer, and libubsan for the\n+undefined sanitizer. If you are missing required libraries, the configure script\n+will fail with a linker error when testing the sanitizer flags.\n+\n+The test suite should pass cleanly with the `thread` and `undefined` sanitizers,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279250",
      "id" : 177279250,
      "in_reply_to_id" : 176530262,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 30,
      "path" : "doc/developer-notes.md",
      "position" : 30,
      "pull_request_review_id" : 107122736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279250",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279274"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-27T01:02:47Z",
      "diff_hunk" : "@@ -247,6 +253,23 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+if test x$enable_sanitizer != x; then\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$enable_sanitizer]],,[AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with these flags. This\n+  # is a separate check so we can give a better error message when the flags are\n+  # supported but libraries are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$enable_sanitizer]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$enable_sanitizer]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279274",
      "id" : 177279274,
      "in_reply_to_id" : 176516277,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 30,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 107122750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279274",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "0fa70073379caa6b94333a0c5a3f10df258a1237",
      "created_at" : "2018-03-27T01:02:56Z",
      "diff_hunk" : "@@ -219,6 +219,12 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Enable different -fsanitize options\n+AC_ARG_ENABLE([sanitizer],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279353",
      "id" : 177279353,
      "in_reply_to_id" : 176513584,
      "original_commit_id" : "e6b7d555176a8846bd5b49aeb5b5535f2661bfa6",
      "original_position" : 5,
      "path" : "configure.ac",
      "position" : null,
      "pull_request_review_id" : 107122780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12692",
      "updated_at" : "2018-03-27T01:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177279353",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated to use the --with form and re-squashed.",
      "created_at" : "2018-03-27T01:04:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-376361439",
      "id" : 376361439,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-27T01:04:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376361439",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 6feb46c",
      "created_at" : "2018-03-29T20:57:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-377370089",
      "id" : 377370089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12692",
      "updated_at" : "2018-03-29T20:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377370089",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
