[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173638599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173638599"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Keeping in line with #12553, preferring wait_until when possible, this whole function could just be cleaned up as\r\n```\r\ndef sync_blocks(rpc_connections, *, wait=1, timeout=60):\r\n    wait_until(lambda: len(set([x.getbestblockhash() for x in rpc_connections])) is 1, timeout=timeout, wait=wait)\r\n```\r\nAlthough a `wait` argument (or maybe `sleep` is a better name) needs to be added to `wait_until`, specifying the sleep period between checks. ",
      "commit_id" : "faed9d59a9fffa01debc41121deccfdeb28f35cb",
      "created_at" : "2018-03-10T23:44:23Z",
      "diff_hunk" : "@@ -361,54 +361,31 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n     one node already synced to the latest, stable tip, otherwise there's a\n     chance it might return before all nodes are stably synced.\n     \"\"\"\n-    # Use getblockcount() instead of waitforblockheight() to determine the\n-    # initial max height because the two RPCs look at different internal global\n-    # variables (chainActive vs latestBlock) and the former gets updated\n-    # earlier.\n-    maxheight = max(x.getblockcount() for x in rpc_connections)\n     start_time = cur_time = time.time()\n     while cur_time <= start_time + timeout:\n-        tips = [r.waitforblockheight(maxheight, int(wait * 1000)) for r in rpc_connections]\n-        if all(t[\"height\"] == maxheight for t in tips):\n-            if all(t[\"hash\"] == tips[0][\"hash\"] for t in tips):\n-                return\n-            raise AssertionError(\"Block sync failed, mismatched block hashes:{}\".format(\n-                                 \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-        cur_time = time.time()\n-    raise AssertionError(\"Block sync to height {} timed out:{}\".format(\n-                         maxheight, \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-\n-def sync_chain(rpc_connections, *, wait=1, timeout=60):\n-    \"\"\"\n-    Wait until everybody has the same best block\n-    \"\"\"\n-    while timeout > 0:\n         best_hash = [x.getbestblockhash() for x in rpc_connections]\n         if best_hash == [best_hash[0]] * len(best_hash):\n             return\n         time.sleep(wait)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173638599",
      "id" : 173638599,
      "original_commit_id" : "fa91820244ba60e6a96c40dd939fe9f7016f930e",
      "original_position" : 29,
      "path" : "test/functional/test_framework/util.py",
      "position" : null,
      "pull_request_review_id" : 102866532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643",
      "updated_at" : "2018-03-11T20:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173638599",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173638705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173638705"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Similar to the above comment, this can just be cleaned up to use `wait_util` like\r\n```\r\ndef sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\r\n    \"\"\"\r\n    Wait until everybody has the same transactions in their memory\r\n    pools\r\n    \"\"\"\r\n    def equal_mempool():\r\n        mempool_sets = [set(r.getrawmempool()) for r in rpc_connections]\r\n        return mempool_sets.count(mempool_sets[0]) == len(mempool_sets)\r\n\r\n    wait_until(equal_mempool, timeout=timeout, wait=wait)\r\n    if flush_scheduler:\r\n        for r in rpc_connections:\r\n            r.syncwithvalidationinterfacequeue()\r\n```\r\n\r\nI tested both changes in [this commit](https://github.com/conscott/bitcoin/commit/3001cf4d93d10831a1e891ea2b80caf74bc84816) and everything seems to pass, however let me know if you thinks its better suited for a follow up PR. ",
      "commit_id" : "faed9d59a9fffa01debc41121deccfdeb28f35cb",
      "created_at" : "2018-03-10T23:49:57Z",
      "diff_hunk" : "@@ -361,54 +361,31 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n     one node already synced to the latest, stable tip, otherwise there's a\n     chance it might return before all nodes are stably synced.\n     \"\"\"\n-    # Use getblockcount() instead of waitforblockheight() to determine the\n-    # initial max height because the two RPCs look at different internal global\n-    # variables (chainActive vs latestBlock) and the former gets updated\n-    # earlier.\n-    maxheight = max(x.getblockcount() for x in rpc_connections)\n     start_time = cur_time = time.time()\n     while cur_time <= start_time + timeout:\n-        tips = [r.waitforblockheight(maxheight, int(wait * 1000)) for r in rpc_connections]\n-        if all(t[\"height\"] == maxheight for t in tips):\n-            if all(t[\"hash\"] == tips[0][\"hash\"] for t in tips):\n-                return\n-            raise AssertionError(\"Block sync failed, mismatched block hashes:{}\".format(\n-                                 \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-        cur_time = time.time()\n-    raise AssertionError(\"Block sync to height {} timed out:{}\".format(\n-                         maxheight, \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-\n-def sync_chain(rpc_connections, *, wait=1, timeout=60):\n-    \"\"\"\n-    Wait until everybody has the same best block\n-    \"\"\"\n-    while timeout > 0:\n         best_hash = [x.getbestblockhash() for x in rpc_connections]\n         if best_hash == [best_hash[0]] * len(best_hash):\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Chain sync failed: Best block hashes don't match\")\n+        cur_time = time.time()\n+    raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n-    while timeout > 0:\n-        pool = set(rpc_connections[0].getrawmempool())\n-        num_match = 1\n-        for i in range(1, len(rpc_connections)):\n-            if set(rpc_connections[i].getrawmempool()) == pool:\n-                num_match = num_match + 1\n-        if num_match == len(rpc_connections):\n+    start_time = cur_time = time.time()\n+    while cur_time <= start_time + timeout:\n+        pool = [set(r.getrawmempool()) for r in rpc_connections]\n+        if pool == [pool[0]] * len(pool):\n             if flush_scheduler:\n                 for r in rpc_connections:\n                     r.syncwithvalidationinterfacequeue()\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Mempool sync failed\")\n+        cur_time = time.time()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173638705",
      "id" : 173638705,
      "original_commit_id" : "fa91820244ba60e6a96c40dd939fe9f7016f930e",
      "original_position" : 58,
      "path" : "test/functional/test_framework/util.py",
      "position" : 59,
      "pull_request_review_id" : 102866617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643",
      "updated_at" : "2018-03-11T20:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173638705",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173667481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173667481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems that this would make it harder to print the mempools in case of an error, which seems useful to me.\r\n\r\nThough, I switched to your code suggesting `count`.",
      "commit_id" : "faed9d59a9fffa01debc41121deccfdeb28f35cb",
      "created_at" : "2018-03-11T20:05:01Z",
      "diff_hunk" : "@@ -361,54 +361,31 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n     one node already synced to the latest, stable tip, otherwise there's a\n     chance it might return before all nodes are stably synced.\n     \"\"\"\n-    # Use getblockcount() instead of waitforblockheight() to determine the\n-    # initial max height because the two RPCs look at different internal global\n-    # variables (chainActive vs latestBlock) and the former gets updated\n-    # earlier.\n-    maxheight = max(x.getblockcount() for x in rpc_connections)\n     start_time = cur_time = time.time()\n     while cur_time <= start_time + timeout:\n-        tips = [r.waitforblockheight(maxheight, int(wait * 1000)) for r in rpc_connections]\n-        if all(t[\"height\"] == maxheight for t in tips):\n-            if all(t[\"hash\"] == tips[0][\"hash\"] for t in tips):\n-                return\n-            raise AssertionError(\"Block sync failed, mismatched block hashes:{}\".format(\n-                                 \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-        cur_time = time.time()\n-    raise AssertionError(\"Block sync to height {} timed out:{}\".format(\n-                         maxheight, \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-\n-def sync_chain(rpc_connections, *, wait=1, timeout=60):\n-    \"\"\"\n-    Wait until everybody has the same best block\n-    \"\"\"\n-    while timeout > 0:\n         best_hash = [x.getbestblockhash() for x in rpc_connections]\n         if best_hash == [best_hash[0]] * len(best_hash):\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Chain sync failed: Best block hashes don't match\")\n+        cur_time = time.time()\n+    raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n-    while timeout > 0:\n-        pool = set(rpc_connections[0].getrawmempool())\n-        num_match = 1\n-        for i in range(1, len(rpc_connections)):\n-            if set(rpc_connections[i].getrawmempool()) == pool:\n-                num_match = num_match + 1\n-        if num_match == len(rpc_connections):\n+    start_time = cur_time = time.time()\n+    while cur_time <= start_time + timeout:\n+        pool = [set(r.getrawmempool()) for r in rpc_connections]\n+        if pool == [pool[0]] * len(pool):\n             if flush_scheduler:\n                 for r in rpc_connections:\n                     r.syncwithvalidationinterfacequeue()\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Mempool sync failed\")\n+        cur_time = time.time()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173667481",
      "id" : 173667481,
      "in_reply_to_id" : 173638705,
      "original_commit_id" : "fa91820244ba60e6a96c40dd939fe9f7016f930e",
      "original_position" : 58,
      "path" : "test/functional/test_framework/util.py",
      "position" : 59,
      "pull_request_review_id" : 102894281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643",
      "updated_at" : "2018-03-11T20:05:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173667481",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173709552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173709552"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense",
      "commit_id" : "faed9d59a9fffa01debc41121deccfdeb28f35cb",
      "created_at" : "2018-03-12T07:31:14Z",
      "diff_hunk" : "@@ -361,54 +361,31 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n     one node already synced to the latest, stable tip, otherwise there's a\n     chance it might return before all nodes are stably synced.\n     \"\"\"\n-    # Use getblockcount() instead of waitforblockheight() to determine the\n-    # initial max height because the two RPCs look at different internal global\n-    # variables (chainActive vs latestBlock) and the former gets updated\n-    # earlier.\n-    maxheight = max(x.getblockcount() for x in rpc_connections)\n     start_time = cur_time = time.time()\n     while cur_time <= start_time + timeout:\n-        tips = [r.waitforblockheight(maxheight, int(wait * 1000)) for r in rpc_connections]\n-        if all(t[\"height\"] == maxheight for t in tips):\n-            if all(t[\"hash\"] == tips[0][\"hash\"] for t in tips):\n-                return\n-            raise AssertionError(\"Block sync failed, mismatched block hashes:{}\".format(\n-                                 \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-        cur_time = time.time()\n-    raise AssertionError(\"Block sync to height {} timed out:{}\".format(\n-                         maxheight, \"\".join(\"\\n  {!r}\".format(tip) for tip in tips)))\n-\n-def sync_chain(rpc_connections, *, wait=1, timeout=60):\n-    \"\"\"\n-    Wait until everybody has the same best block\n-    \"\"\"\n-    while timeout > 0:\n         best_hash = [x.getbestblockhash() for x in rpc_connections]\n         if best_hash == [best_hash[0]] * len(best_hash):\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Chain sync failed: Best block hashes don't match\")\n+        cur_time = time.time()\n+    raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools\n     \"\"\"\n-    while timeout > 0:\n-        pool = set(rpc_connections[0].getrawmempool())\n-        num_match = 1\n-        for i in range(1, len(rpc_connections)):\n-            if set(rpc_connections[i].getrawmempool()) == pool:\n-                num_match = num_match + 1\n-        if num_match == len(rpc_connections):\n+    start_time = cur_time = time.time()\n+    while cur_time <= start_time + timeout:\n+        pool = [set(r.getrawmempool()) for r in rpc_connections]\n+        if pool == [pool[0]] * len(pool):\n             if flush_scheduler:\n                 for r in rpc_connections:\n                     r.syncwithvalidationinterfacequeue()\n             return\n         time.sleep(wait)\n-        timeout -= wait\n-    raise AssertionError(\"Mempool sync failed\")\n+        cur_time = time.time()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12643#discussion_r173709552",
      "id" : 173709552,
      "in_reply_to_id" : 173638705,
      "original_commit_id" : "fa91820244ba60e6a96c40dd939fe9f7016f930e",
      "original_position" : 58,
      "path" : "test/functional/test_framework/util.py",
      "position" : 59,
      "pull_request_review_id" : 102941200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12643",
      "updated_at" : "2018-03-12T07:31:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173709552",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK faed9d59a9fffa01debc41121deccfdeb28f35cb",
      "created_at" : "2018-03-12T07:32:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12643#issuecomment-372216310",
      "id" : 372216310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12643",
      "updated_at" : "2018-03-12T07:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372216310",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   }
]
