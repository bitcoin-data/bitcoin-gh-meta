[
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20138 (net: Assume that SetCommonVersion is called at most once per peer by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-13T14:11:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#issuecomment-707766231",
      "id" : 707766231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20122",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzc2NjIzMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707766231/reactions"
      },
      "updated_at" : "2020-10-19T07:26:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707766231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505119093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505119093"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Introducing the non-null attribute for the `pindex` argument might be a useful addition here?\r\n\r\nI tried converting this to `CBlockIndex& index` and it has some flow-on effects (to `CChain::Next`, `CChain::FindFork`, and others) that look like they might be worth investigating and cleaning up.",
      "commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "created_at" : "2020-10-15T01:57:54Z",
      "diff_hunk" : "@@ -400,7 +401,7 @@ class CChain {\n \n     /** Efficiently check whether a block is present in this chain. */\n     bool Contains(const CBlockIndex *pindex) const {\n-        return (*this)[pindex->nHeight] == pindex;\n+        return (*this)[Assert(pindex)->nHeight] == pindex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505119093",
      "id" : 505119093,
      "line" : 404,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExOTA5Mw==",
      "original_commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "original_line" : 404,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 13,
      "pull_request_review_id" : 508884806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505119093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-10-15T02:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505119093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505120472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505120472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might be clearer to have:\r\n\r\n```diff\r\n             if (!fRevertToInv && !vHeaders.empty()) {\r\n+                assert(pBestIndex != nullptr); // was assigned to non-null pindex in order for vHeaders to be populated\r\n                 if (vHeaders.size() == 1 && state.fPreferHeaderAndIDs) {\r\n```\r\n\r\ninstead? (prior related PR #13548)",
      "commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "created_at" : "2020-10-15T02:03:12Z",
      "diff_hunk" : "@@ -4273,7 +4273,7 @@ bool PeerManager::SendMessages(CNode* pto)\n                     bool fGotBlockFromCache = false;\n                     {\n                         LOCK(cs_most_recent_block);\n-                        if (most_recent_block_hash == pBestIndex->GetBlockHash()) {\n+                        if (most_recent_block_hash == Assert(pBestIndex)->GetBlockHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505120472",
      "id" : 505120472,
      "line" : 4276,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyMDQ3Mg==",
      "original_commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "original_line" : 4276,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 508884806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505120472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-10-15T02:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505120472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505125790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505125790"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this assertion is effectively testing if `::ChainActive().Tip() == nullptr` as the other ways of setting `pindex` all seem to be `pindex = pindex->pprev` after testing `pindex->pprev`. Might be better to put the `Assert` there?\r\n\r\nThere are other places where we assume `ChainActive().Tip()` is non-null (ie, we immediately dereference it), but at a quick glance I couldn't assure myself that was actually always true. Might be better to actually make it always true (and add a non-null attribute on the response?).",
      "commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "created_at" : "2020-10-15T02:23:49Z",
      "diff_hunk" : "@@ -4321,7 +4321,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", ::ChainActive().Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n \n     // store block count as we move pindex at check level >= 4\n-    int block_count = ::ChainActive().Height() - pindex->nHeight;\n+    int block_count = ::ChainActive().Height() - Assert(pindex)->nHeight;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#discussion_r505125790",
      "id" : 505125790,
      "line" : 4324,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyNTc5MA==",
      "original_commit_id" : "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "original_line" : 4324,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 508884806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20122",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505125790/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-10-15T02:47:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505125790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns I'm leaving this one as up for grabs now that the first commit is included in #20138 :)\r\n\r\n> They look like they're making errors go away more than making it clear why the code is safe.\r\n\r\nThey won't make any error go away, but they guarantee we get an assertion failure in case of an error (instead of UB) :)",
      "created_at" : "2020-10-19T20:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#issuecomment-712432109",
      "id" : 712432109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20122",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjQzMjEwOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712432109/reactions"
      },
      "updated_at" : "2020-10-19T20:47:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712432109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Sorry, I meant \"making complaints from automated tools go away, without fixing any underlying bugs or making it easier for people to see why the code is safe\" :) I think adding asserts should be making it clearer for people to see why the code is safe as well as automated tools. (If you are getting this from an automated tool, are there reports from it around? I remember there were previously somewhere)",
      "created_at" : "2020-10-21T01:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#issuecomment-713230943",
      "id" : 713230943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20122",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzIzMDk0Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713230943/reactions"
      },
      "updated_at" : "2020-10-21T01:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713230943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think adding asserts should be making it clearer for people to see why the code is safe as well as automated tools.\r\n\r\nI agree about that statement :)\r\n\r\nIn _addition_ to that use I _also_ think assertions can be useful to get deterministic termination in case where we otherwise would get a null pointer dereference (if our assumption of non-null turns out to be false).\r\n\r\nWhy is that desired?\r\n\r\nOne might think that a null pointer dereference is guaranteed to lead to immediate termination. Unfortunately that is not the case: deterministic termination is the best outcome. Another possible outcome is what in the literature is called \"optimization-unsafety\" which can be problematic from a security perspective.\r\n\r\nThere is a neat paper covering optimization-safe code called [\"Towards Optimization-Safe Systems: Analyzing the Impact of Undefined Behavior\"](https://srg.doc.ic.ac.uk/440h/papers/stack.pdf) which I recommend for context.\r\n\r\nPersonally I think adding assertions can be handy as a cheap way to avoid some instances of potentially \"optimization-unsafe code\". That is my personal opinion: I know others might not agree and that is fine of course :)\r\n\r\n> (If you are getting this from an automated tool, are there reports from it around? I remember there were previously somewhere)\r\n\r\nIIRC Coverity and [Clang's Cross Translation Unit (CTU)](https://github.com/bitcoin/bitcoin/issues/17454) static analysis flag these cases. I think most static analysers doing pointer analysis would flag at least some of these since it is non-trivial for them to infer non-`nullptr` in these cases AFAICT. I wouldn't be surprised if PVS Studio and cppcheck flags these too as an example.\r\n\r\nI don't have any reports readily available, but feel free to check the instructions in #18920 for instructions on how to get Bitcoin Core reports from Clang Static Analysis, clang-tidy and cppcheck. It only takes a couple of minutes of setup :)\r\n\r\nHope that helps! :)",
      "created_at" : "2020-10-21T08:53:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20122#issuecomment-713417072",
      "id" : 713417072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20122",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzQxNzA3Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713417072/reactions"
      },
      "updated_at" : "2020-10-21T12:52:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713417072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
