[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-10-20T14:07:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-712879256",
      "id" : 712879256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjg3OTI1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T14:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712879256",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21160 (net/net processing: Move tx inventory into net_processing by jnewbery)\n* #20196 (net: fix GetListenPort() to derive the proper port by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-20T14:35:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-712899496",
      "id" : 712899496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjg5OTQ5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T15:59:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712899496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-10-20T15:00:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-712916354",
      "id" : 712916354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjkxNjM1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T15:00:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712916354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-10-20T16:51:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-712999337",
      "id" : 712999337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjk5OTMzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T16:51:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712999337",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added `CNode::m_inbound_onion` unit test coverage in #20210.",
      "created_at" : "2020-10-21T10:15:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-713464786",
      "id" : 713464786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzQ2NDc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-23T02:48:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713464786",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sounds good, although you might want to add a couple slots for actual localhost peers. :)",
      "created_at" : "2020-10-21T20:43:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-713865992",
      "id" : 713865992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzg2NTk5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-21T20:43:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713865992",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Sounds good, although you might want to add a couple slots for actual localhost peers. :)\r\n\r\nAnyone with an old manually-configured hidden service not using the new bind style will have their inbound Tor connections not classified as such, so this may be degradation for them if there is no explicit affordance for localhost peers.",
      "created_at" : "2020-11-05T02:03:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-722078028",
      "id" : 722078028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMjA3ODAyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-05T02:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722078028",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you for the feedback @gmaxwell and @sipa, will update soon.",
      "created_at" : "2020-11-05T07:58:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-722209703",
      "id" : 722209703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMjIwOTcwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-05T07:58:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722209703",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-05T14:09:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-722401457",
      "id" : 722401457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMjQwMTQ1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-05T14:09:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722401457",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that we have unit testing of the eviction logic in `master` (see merged PR #20477): what about adding a small test for this change? :)",
      "created_at" : "2020-12-23T14:09:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-750316382",
      "id" : 750316382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDMxNjM4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-23T14:09:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750316382",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, and updated to fall back to localhost if no onion peers are removed. Depending on feedback, this could go further and count onion peers removed to activate localhost if too few onion peers are removed.\r\n\r\n> Now that we have unit testing of the eviction logic in `master` (see merged PR #20477): what about adding a small test for this change? :)\r\n\r\n@practicalswift I agree and spent time yesterday writing tests after extracting some of the untested parts of `SelectNodeToEvict()` to a separate function for deterministic testability of the current code. Edit: done.\r\n",
      "created_at" : "2020-12-23T14:41:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-750329753",
      "id" : 750329753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MDMyOTc1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T13:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750329753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and updated after merge of #19972 that created a silent merge conflict.",
      "created_at" : "2020-12-25T23:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-751300798",
      "id" : 751300798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTMwMDc5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-25T23:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751300798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550767783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550767783"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "there is a nice syntax for this:\r\n\r\n```cpp\r\n{.id = 123, .nTimeConnected = 567, ...}\r\n```\r\n\r\nbut last time I tried some old version of GCC did not support it. Maybe some day...",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-01T13:16:31Z",
      "diff_hunk" : "@@ -21,17 +21,18 @@ FUZZ_TARGET(node_eviction)\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n     while (fuzzed_data_provider.ConsumeBool()) {\n         eviction_candidates.push_back({\n-            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n+            /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550767783",
      "id" : 550767783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2Nzc4Mw==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 24,
      "original_position" : 16,
      "original_start_line" : 24,
      "path" : "src/test/fuzz/node_eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 560586885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550767783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550768441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550768441"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The commit message reads \"p2p: add m_inbound_onion to AttemptToEvictConnection()\". Shouldn't that be `s/AttemptToEvictConnection()/NodeEvictionCandidate/`?",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-01T13:25:44Z",
      "diff_hunk" : "@@ -1247,6 +1247,7 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n+    bool m_is_onion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550768441",
      "id" : 550768441,
      "line" : 1285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2ODQ0MQ==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 1285,
      "original_position" : 4,
      "original_start_line" : 1249,
      "path" : "src/net.h",
      "position" : 12,
      "pull_request_review_id" : 560586885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : 1284,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550768441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550769530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550769530"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    // configured hidden services not using -bind=addr:port=onion will not be detected as inbound onion connections.\r\n```",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-01T13:39:46Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());\n+\n+    // If no onion peers were removed, extend the same protection to localhost peers, as manually\n+    // configured hidden services not using -bind will not be detected as inbound onion connections.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550769530",
      "id" : 550769530,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2OTUzMA==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 944,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 560586885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550769530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550774610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550774610"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What about extending `EraseLastKElements()` with one more argument \"predicate\" and remove elements only if it returns `true` on them (with a default that assumes `true` for any element)?\r\n\r\nThen this code would look like:\r\n\r\n```cpp\r\nEraseLastKElements(\r\n    vEvictionCandidates,\r\n    CompareOnionTimeConnected,\r\n    local_erase_size,\r\n    [](NodeEvictionCandidate const &n) { return n.m_is_onion; });\r\n```\r\n\r\nmaybe out of the scope of this PR.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-01T14:41:41Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550774610",
      "id" : 550774610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NDYxMA==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 941,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 560586885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550774610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550775652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550775652"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to note - this assumes that if there are recognizable onion connections (via `-bind=addr:port=onion`) then there are **not** non-recognizable ones (statically/manually configured tor daemon pointing to our standard p2p port, e.g. 8333).\r\n\r\nThis assumption may not be true as there could be a node that is configured both via `-bind=addr:port=onion` (connections coming to 8334 are recognized as onion) and also a static tor config redirecting to 8333.\r\n\r\nI think the code is ok as it is because the above would be rare and maybe not worth the code complexity to tweak the eviction policy for it.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-01T14:54:19Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());\n+\n+    // If no onion peers were removed, extend the same protection to localhost peers, as manually\n+    // configured hidden services not using -bind will not be detected as inbound onion connections.\n+    if (initial_size == vEvictionCandidates.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r550775652",
      "id" : 550775652,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NTY1Mg==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 945,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 560586885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550775652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r557297105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557297105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Designated initializers are only standardized in c++20: https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-14T10:34:54Z",
      "diff_hunk" : "@@ -21,17 +21,18 @@ FUZZ_TARGET(node_eviction)\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n     while (fuzzed_data_provider.ConsumeBool()) {\n         eviction_candidates.push_back({\n-            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n+            /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r557297105",
      "id" : 557297105,
      "in_reply_to_id" : 550767783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzI5NzEwNQ==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 24,
      "original_position" : 16,
      "original_start_line" : 24,
      "path" : "src/test/fuzz/node_eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 568106998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557297105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r558102071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558102071"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Something like this may work (untested, feel free to ignore):\r\n\r\n<details>\r\n<summary>[patch] EraseLastKElements() with predicate</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex ddf33c38a..64900b8b5 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -41,12 +41,13 @@\r\n // with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\r\n static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\r\n #endif\r\n \r\n #include <algorithm>\r\n #include <cstdint>\r\n+#include <functional> /* std::function */\r\n #include <unordered_map>\r\n \r\n #include <math.h>\r\n \r\n /** Maximum number of block-relay-only anchor connections */\r\n static constexpr size_t MAX_BLOCK_RELAY_ONLY_ANCHORS = 2;\r\n@@ -893,38 +894,46 @@ static bool CompareNodeBlockRelayOnlyTime(const NodeEvictionCandidate &a, const\r\n     if (a.fRelayTxes != b.fRelayTxes) return a.fRelayTxes;\r\n     if (a.nLastBlockTime != b.nLastBlockTime) return a.nLastBlockTime < b.nLastBlockTime;\r\n     if (a.fRelevantServices != b.fRelevantServices) return b.fRelevantServices;\r\n     return a.nTimeConnected > b.nTimeConnected;\r\n }\r\n \r\n-//! Sort an array by the specified comparator, then erase the last K elements.\r\n-template<typename T, typename Comparator>\r\n-static void EraseLastKElements(std::vector<T> &elements, Comparator comparator, size_t k)\r\n+//! Sort an array by the specified comparator, then erase each one of the last K elements if\r\n+//! `pred(element)` returns true.\r\n+template <typename T, typename Comparator>\r\n+static void EraseLastKElements(\r\n+    std::vector<T>& elements,\r\n+    Comparator comparator,\r\n+    size_t k,\r\n+    std::function<bool(const T&)> pred = [](const T&) { return true; })\r\n {\r\n     std::sort(elements.begin(), elements.end(), comparator);\r\n     size_t eraseSize = std::min(k, elements.size());\r\n-    elements.erase(elements.end() - eraseSize, elements.end());\r\n+    elements.erase(std::remove_if(elements.end() - eraseSize, elements.end(), pred),\r\n+                   elements.end());\r\n }\r\n \r\n [[nodiscard]] Optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\r\n {\r\n     // Protect connections with certain characteristics\r\n \r\n+    std::function<bool(const NodeEvictionCandidate&)> pred;\r\n+\r\n     // Deterministically select 4 peers to protect by netgroup.\r\n     // An attacker cannot predict which netgroups will be protected\r\n     EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\r\n     // Protect the 8 nodes with the lowest minimum ping time.\r\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\r\n     EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\r\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\r\n     // An attacker cannot manipulate this metric without performing useful work.\r\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\r\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\r\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\r\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\r\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\r\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\r\n+    pred = [](const NodeEvictionCandidate& n) { return !n.fRelayTxes && n.fRelevantServices; };\r\n+    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, erase_size, pred);\r\n \r\n     // Protect 4 nodes that most recently sent us novel blocks.\r\n     // An attacker cannot manipulate this metric without performing useful work.\r\n     EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\r\n \r\n     // Protect the half of the remaining nodes which have been connected the longest.\r\n@@ -933,22 +942,22 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\r\n     // they're not longest-uptime overall. This helps protect tor peers, which\r\n     // tend to be otherwise disadvantaged under our eviction criteria.\r\n     const size_t initial_size = vEvictionCandidates.size();\r\n     size_t total_protect_size = initial_size / 2;\r\n \r\n     // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\r\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\r\n     const size_t local_erase_size = total_protect_size / 2;\r\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());\r\n+    pred = [](const NodeEvictionCandidate& n) { return n.m_is_onion; };\r\n+    EraseLastKElements(vEvictionCandidates, CompareOnionTimeConnected, local_erase_size, pred);\r\n \r\n     // If no onion peers were removed, extend the same protection to localhost peers, as manually\r\n     // configured hidden services not using -bind will not be detected as inbound onion connections.\r\n     if (initial_size == vEvictionCandidates.size()) {\r\n         // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\r\n-        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\r\n-        vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\r\n+        pred = [](const NodeEvictionCandidate& n) { return n.m_is_local; };\r\n+        EraseLastKElements(vEvictionCandidates, CompareLocalHostTimeConnected, local_erase_size, pred);\r\n     }\r\n \r\n     // Calculate how many we removed, and update our total number of peers that\r\n     // we want to protect based on uptime accordingly.\r\n     total_protect_size -= initial_size - vEvictionCandidates.size();\r\n     EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, total_protect_size);\r\n@@ -956,14 +965,15 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\r\n     if (vEvictionCandidates.empty()) return nullopt;\r\n \r\n     // If any remaining peers are preferred for eviction consider only them.\r\n     // This happens after the other preferences since if a peer is really the best by other criteria (esp relaying blocks)\r\n     //  then we probably don't want to evict it no matter what.\r\n     if (std::any_of(vEvictionCandidates.begin(),vEvictionCandidates.end(),[](NodeEvictionCandidate const &n){return n.prefer_evict;})) {\r\n-        vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.begin(),vEvictionCandidates.end(),\r\n-                                  [](NodeEvictionCandidate const &n){return !n.prefer_evict;}),vEvictionCandidates.end());\r\n+        pred = [](const NodeEvictionCandidate& n) { return !n.prefer_evict; };\r\n+        EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected,\r\n+                           vEvictionCandidates.size(), pred);\r\n     }\r\n \r\n     // Identify the network group with the most connections and youngest member.\r\n     // (vEvictionCandidates is already sorted by reverse connect time)\r\n     uint64_t naMostConnections;\r\n     unsigned int nMostConnections = 0;\r\n```\r\n</details>\r\n",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-15T09:16:03Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r558102071",
      "id" : 558102071,
      "in_reply_to_id" : 550774610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEwMjA3MQ==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 941,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 569084962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558102071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r558126886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558126886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! I started with the quick patch below on January 2, will compare with your ideas above.\r\n\r\n<details><summary>patch</summary><p>\r\n\r\n```diff\r\n-//! Sort an array by the specified comparator, then erase the last K elements.\r\n+//! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\r\n template<typename T, typename Comparator>\r\n-static void EraseLastKElements(std::vector<T> &elements, Comparator comparator, size_t k)\r\n+static void EraseLastKElements(std::vector<T> &elements, Comparator comparator, size_t k, std::function<bool(const NodeEvictionCandidate&)> predicate = [](NodeEvictionCandidate const &n) { return true ;})\r\n {\r\n     std::sort(elements.begin(), elements.end(), comparator);\r\n-    size_t eraseSize = std::min(k, elements.size());\r\n-    elements.erase(elements.end() - eraseSize, elements.end());\r\n+    size_t erase_size = std::min(k, elements.size());\r\n+    elements.erase(std::remove_if(elements.end() - erase_size, elements.end(), predicate), elements.end());\r\n }\r\n \r\n [[nodiscard]] Optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\r\n@@ -934,16 +934,15 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\r\n     size_t total_protect_size = initial_size / 2;\r\n \r\n     // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\r\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\r\n     const size_t local_erase_size = total_protect_size / 2;\r\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());\r\n+    EraseLastKElements(vEvictionCandidates, CompareOnionTimeConnected, local_erase_size, [](NodeEvictionCandidate const &n) { return n.m_is_onion; });\r\n+;\r\n \r\n     // If no onion peers were removed, extend the same protection to localhost peers, as manually\r\n-    // configured hidden services not using -bind will not be detected as inbound onion connections.\r\n+    // configured hidden services not using -bind=addr:port=onion will not be detected as inbound onion connections.\r\n     if (initial_size == vEvictionCandidates.size()) {\r\n         // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\r\n-        std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\r\n-        vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\r\n+        EraseLastKElements(vEvictionCandidates, CompareLocalHostTimeConnected, local_erase_size, [](NodeEvictionCandidate const &n) { return n.m_is_local; });\r\n     }\r\n```\r\n</p></details>\r\n",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-15T09:33:15Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r558126886",
      "id" : 558126886,
      "in_reply_to_id" : 550774610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEyNjg4Ng==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 941,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 569097939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558126886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565270556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565270556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Already used here?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/11d3b5833671db3b884171086489e853738e7ddd/src/test/fuzz/util.h#L272-L273",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-27T12:31:19Z",
      "diff_hunk" : "@@ -21,17 +21,18 @@ FUZZ_TARGET(node_eviction)\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n     while (fuzzed_data_provider.ConsumeBool()) {\n         eviction_candidates.push_back({\n-            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n+            /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565270556",
      "id" : 565270556,
      "in_reply_to_id" : 550767783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTI3MDU1Ng==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 24,
      "original_position" : 16,
      "original_start_line" : 24,
      "path" : "src/test/fuzz/node_eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 577285983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565270556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565280022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565280022"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting. Are the fuzzers compiled with --std=c++2a?",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-27T12:47:19Z",
      "diff_hunk" : "@@ -21,17 +21,18 @@ FUZZ_TARGET(node_eviction)\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n     while (fuzzed_data_provider.ConsumeBool()) {\n         eviction_candidates.push_back({\n-            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n+            /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565280022",
      "id" : 565280022,
      "in_reply_to_id" : 550767783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTI4MDAyMg==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 24,
      "original_position" : 16,
      "original_start_line" : 24,
      "path" : "src/test/fuzz/node_eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 577298543,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565280022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565290955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565290955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No. My guess is that fuzz tests are not compiled with the old compiler that chokes on this syntax and that most compilers support it even in `-std=c++17` mode.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-01-27T13:04:41Z",
      "diff_hunk" : "@@ -21,17 +21,18 @@ FUZZ_TARGET(node_eviction)\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n     while (fuzzed_data_provider.ConsumeBool()) {\n         eviction_candidates.push_back({\n-            fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeIntegral<int64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeIntegral<uint64_t>(),\n-            fuzzed_data_provider.ConsumeBool(),\n-            fuzzed_data_provider.ConsumeBool(),\n+            /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n+            /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r565290955",
      "id" : 565290955,
      "in_reply_to_id" : 550767783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTI5MDk1NQ==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 24,
      "original_position" : 16,
      "original_start_line" : 24,
      "path" : "src/test/fuzz/node_eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 577312586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565290955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574617967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574617967"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, I think the salient change in that commit is adding `m_inbound_onion` to `AttemptToEvictConnection` but happy to append \"and add m_is_onion to NodeEvictionCandidate\" to the commit message body.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-11T15:57:48Z",
      "diff_hunk" : "@@ -1247,6 +1247,7 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n+    bool m_is_onion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574617967",
      "id" : 574617967,
      "in_reply_to_id" : 550768441,
      "line" : 1285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDYxNzk2Nw==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 1285,
      "original_position" : 4,
      "original_start_line" : 1249,
      "path" : "src/net.h",
      "position" : 12,
      "pull_request_review_id" : 588713753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : 1284,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574617967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574629036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574629036"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-11T16:11:29Z",
      "diff_hunk" : "@@ -1247,6 +1247,7 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n+    bool m_is_onion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574629036",
      "id" : 574629036,
      "in_reply_to_id" : 550768441,
      "line" : 1285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDYyOTAzNg==",
      "original_commit_id" : "0d167683b670cb2220052a7719c8ab32ce479bbd",
      "original_line" : 1285,
      "original_position" : 4,
      "original_start_line" : 1249,
      "path" : "src/net.h",
      "position" : 12,
      "pull_request_review_id" : 588729072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : 1284,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574629036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574631112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574631112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, replaced `-bind` with `-bind=<addr>[:<port>]=onion` like the -bind help.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-11T16:14:11Z",
      "diff_hunk" : "@@ -923,16 +929,25 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n \n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n+    // Reserve half of these protected spots for onion and localhost peers, even if\n     // they're not longest-uptime overall. This helps protect tor peers, which\n     // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n+    const size_t initial_size = vEvictionCandidates.size();\n     size_t total_protect_size = initial_size / 2;\n \n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n+    // Pick out up to 1/4 peers that are connected via our tor onion service, sorted by longest uptime.\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareOnionTimeConnected);\n+    const size_t local_erase_size = total_protect_size / 2;\n+    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_onion; }), vEvictionCandidates.end());\n+\n+    // If no onion peers were removed, extend the same protection to localhost peers, as manually\n+    // configured hidden services not using -bind will not be detected as inbound onion connections.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r574631112",
      "id" : 574631112,
      "in_reply_to_id" : 550769530,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDYzMTExMg==",
      "original_commit_id" : "c16ed372bdc71795fbebc5dbf519a1d748a136dc",
      "original_line" : 944,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 588731923,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574631112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Sounds good, although you might want to add a couple slots for actual localhost peers. :)\r\n\r\nI interpreted this comment from @gmaxwell as suggesting that we should protect some actual localhost peers, even if we are also protecting some onion peers -- looks like this patch right now would only try to protect some localhost peers if there are no onion peers that we're protecting.  Any reason not to protect some of each?  I think that having more categories/metrics that we use to distinguish inbounds will make it harder for an adversary to take over all our inbound slots.",
      "created_at" : "2021-02-17T20:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-780849307",
      "id" : 780849307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDg0OTMwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T20:59:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780849307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you @vasild  and @sdaftuar. Updated to potentially protect up to 1/4 onion peers, independently of the existing 1/4 localhost protection, for an unchanged 1/2 of the remaining peers overall. The latest push also adds test coverage for the longest uptime, localhost, and onion peer eviction protection logic.\r\n",
      "created_at" : "2021-02-22T00:44:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-782968703",
      "id" : 782968703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4Mjk2ODcwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-04T15:17:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782968703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Improved the last test commit, adding combined onion + localhost tests.",
      "created_at" : "2021-02-22T14:38:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-783420479",
      "id" : 783420479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MzQyMDQ3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-22T14:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783420479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582806300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582806300"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This loop is `O(num_peers * (num_protected + num_unprotected))`. It can easily be reduced to `O(num_peers)` by replacing the `std::vector` arguments with `std::unordered_set` (which can tell if an element is present in `O(1)` time). This will also simplify the lookups:\r\n\r\n```diff\r\n-if (std::find(protected_peer_ids.begin(), protected_peer_ids.end(), candidate.id) != protected_peer_ids.end()) {\r\n+if (protected_peer_ids.count(candidate.id) > 0) {\r\n```",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-25T12:49:46Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);\n+\n+    size_t unprotected_as_expected{0};\n+    for (const NodeEvictionCandidate& candidate : candidates) {\n+        if (std::find(protected_peer_ids.begin(), protected_peer_ids.end(), candidate.id) != protected_peer_ids.end()) {\n+            // this peer should have been removed from the eviction candidates\n+            BOOST_TEST_MESSAGE(strprintf(\"candidate id: %d\", candidate.id));\n+            return false;\n+        }\n+        if (std::find(unprotected_peer_ids.begin(), unprotected_peer_ids.end(), candidate.id) != unprotected_peer_ids.end()) {\n+            // this peer remains in the eviction candidates, as expected\n+            ++unprotected_as_expected;\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582806300",
      "id" : 582806300,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjgwNjMwMA==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : 66,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 598527516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582806300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582813828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582813828"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: here and below, `expr ? true : false` is equivalent to `expr`\r\n\r\n```suggestion\r\n            c.m_is_onion = (c.id == 3 || c.id == 8 || c.id == 9);\r\n```",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-25T13:01:55Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);\n+\n+    size_t unprotected_as_expected{0};\n+    for (const NodeEvictionCandidate& candidate : candidates) {\n+        if (std::find(protected_peer_ids.begin(), protected_peer_ids.end(), candidate.id) != protected_peer_ids.end()) {\n+            // this peer should have been removed from the eviction candidates\n+            BOOST_TEST_MESSAGE(strprintf(\"candidate id: %d\", candidate.id));\n+            return false;\n+        }\n+        if (std::find(unprotected_peer_ids.begin(), unprotected_peer_ids.end(), candidate.id) != unprotected_peer_ids.end()) {\n+            // this peer remains in the eviction candidates, as expected\n+            ++unprotected_as_expected;\n+        }\n+    }\n+    return unprotected_as_expected == unprotected_peer_ids.size();\n+}\n+\n+BOOST_AUTO_TEST_CASE(peer_protection_test)\n+{\n+    FastRandomContext random_context{true};\n+    int num_peers{12};\n+\n+    // Expect half of the peers with greatest uptime (the lowest nTimeConnected)\n+    // to be protected from eviction.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_onion = c.m_is_local = false;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5},\n+        /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11},\n+        random_context));\n+\n+    // Verify in the opposite direction.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [num_peers](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = num_peers - c.id;\n+            c.m_is_onion = c.m_is_local = false;\n+        },\n+        /* protected_peer_ids */ {6, 7, 8, 9, 10, 11},\n+        /* unprotected_peer_ids */ {0, 1, 2, 3, 4, 5},\n+        random_context));\n+\n+    // Test protection of onion and localhost peers...\n+\n+    // Expect 1/4 onion peers to be protected from eviction,\n+    // independently of other characteristics.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.m_is_onion = (c.id == 3 || c.id == 8 || c.id == 9) ? true : false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582813828",
      "id" : 582813828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjgxMzgyOA==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 112,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 598527516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582813828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582820494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582820494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`ProtectEvictionCandidates()` will always remove `size() / 2` elements (no matter whether the size is odd or even), so the new size will always be `old_size - old_size / 2`.\r\n\r\n```suggestion\r\n    const size_t expected{candidates.size() - candidates.size() / 2}; // expect half the candidates will be protected\r\n    ProtectEvictionCandidates(candidates);\r\n    const size_t actual{candidates.size()};\r\n    BOOST_CHECK_EQUAL(actual, expected);\r\n```",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-25T13:12:35Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582820494",
      "id" : 582820494,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjgyMDQ5NA==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : 60,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 598527516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582820494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582832154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582832154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note to other reviewers and maybe worth adding a comment: the sorting function is irrelevant here because we process the entire array (last `size()` elements).",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-25T13:29:30Z",
      "diff_hunk" : "@@ -889,39 +924,24 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n+    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, erase_size,\n+                       [](const NodeEvictionCandidate& n) { return !n.fRelayTxes && n.fRelevantServices; });\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n \n-    // Protect the half of the remaining nodes which have been connected the longest.\n-    // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n-    // they're not longest-uptime overall. This helps protect tor peers, which\n-    // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n-    size_t total_protect_size = initial_size / 2;\n-\n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n-    // Calculate how many we removed, and update our total number of peers that\n-    // we want to protect based on uptime accordingly.\n-    total_protect_size -= initial_size - vEvictionCandidates.size();\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, total_protect_size);\n+    ProtectEvictionCandidates(vEvictionCandidates);\n \n     if (vEvictionCandidates.empty()) return nullopt;\n \n     // If any remaining peers are preferred for eviction consider only them.\n     // This happens after the other preferences since if a peer is really the best by other criteria (esp relaying blocks)\n     //  then we probably don't want to evict it no matter what.\n-    if (std::any_of(vEvictionCandidates.begin(),vEvictionCandidates.end(),[](NodeEvictionCandidate const &n){return n.prefer_evict;})) {\n-        vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.begin(),vEvictionCandidates.end(),\n-                                  [](NodeEvictionCandidate const &n){return !n.prefer_evict;}),vEvictionCandidates.end());\n+    if (std::any_of(vEvictionCandidates.begin(), vEvictionCandidates.end(), [](const NodeEvictionCandidate& n) { return n.prefer_evict; })) {\n+        EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, vEvictionCandidates.size(),\n+                           [](const NodeEvictionCandidate& n) { return !n.prefer_evict; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r582832154",
      "id" : 582832154,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjgzMjE1NA==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 944,
      "original_position" : 103,
      "original_start_line" : 943,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 598527516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582832154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's better indeed. Done.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-28T16:06:22Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319129",
      "id" : 584319129,
      "in_reply_to_id" : 582820494,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMxOTEyOQ==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : 60,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 600274858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea. Decided for now to not touch this line instead. ",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-28T16:06:29Z",
      "diff_hunk" : "@@ -889,39 +924,24 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n+    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, erase_size,\n+                       [](const NodeEvictionCandidate& n) { return !n.fRelayTxes && n.fRelevantServices; });\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n \n-    // Protect the half of the remaining nodes which have been connected the longest.\n-    // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    // Reserve half of these protected spots for localhost peers, even if\n-    // they're not longest-uptime overall. This helps protect tor peers, which\n-    // tend to be otherwise disadvantaged under our eviction criteria.\n-    size_t initial_size = vEvictionCandidates.size();\n-    size_t total_protect_size = initial_size / 2;\n-\n-    // Pick out up to 1/4 peers that are localhost, sorted by longest uptime.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareLocalHostTimeConnected);\n-    size_t local_erase_size = total_protect_size / 2;\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - local_erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return n.m_is_local; }), vEvictionCandidates.end());\n-    // Calculate how many we removed, and update our total number of peers that\n-    // we want to protect based on uptime accordingly.\n-    total_protect_size -= initial_size - vEvictionCandidates.size();\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, total_protect_size);\n+    ProtectEvictionCandidates(vEvictionCandidates);\n \n     if (vEvictionCandidates.empty()) return nullopt;\n \n     // If any remaining peers are preferred for eviction consider only them.\n     // This happens after the other preferences since if a peer is really the best by other criteria (esp relaying blocks)\n     //  then we probably don't want to evict it no matter what.\n-    if (std::any_of(vEvictionCandidates.begin(),vEvictionCandidates.end(),[](NodeEvictionCandidate const &n){return n.prefer_evict;})) {\n-        vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.begin(),vEvictionCandidates.end(),\n-                                  [](NodeEvictionCandidate const &n){return !n.prefer_evict;}),vEvictionCandidates.end());\n+    if (std::any_of(vEvictionCandidates.begin(), vEvictionCandidates.end(), [](const NodeEvictionCandidate& n) { return n.prefer_evict; })) {\n+        EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, vEvictionCandidates.size(),\n+                           [](const NodeEvictionCandidate& n) { return !n.prefer_evict; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319142",
      "id" : 584319142,
      "in_reply_to_id" : 582832154,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMxOTE0Mg==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 944,
      "original_position" : 103,
      "original_start_line" : 943,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 600274869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, thank you.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-28T16:06:40Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);\n+\n+    size_t unprotected_as_expected{0};\n+    for (const NodeEvictionCandidate& candidate : candidates) {\n+        if (std::find(protected_peer_ids.begin(), protected_peer_ids.end(), candidate.id) != protected_peer_ids.end()) {\n+            // this peer should have been removed from the eviction candidates\n+            BOOST_TEST_MESSAGE(strprintf(\"candidate id: %d\", candidate.id));\n+            return false;\n+        }\n+        if (std::find(unprotected_peer_ids.begin(), unprotected_peer_ids.end(), candidate.id) != unprotected_peer_ids.end()) {\n+            // this peer remains in the eviction candidates, as expected\n+            ++unprotected_as_expected;\n+        }\n+    }\n+    return unprotected_as_expected == unprotected_peer_ids.size();\n+}\n+\n+BOOST_AUTO_TEST_CASE(peer_protection_test)\n+{\n+    FastRandomContext random_context{true};\n+    int num_peers{12};\n+\n+    // Expect half of the peers with greatest uptime (the lowest nTimeConnected)\n+    // to be protected from eviction.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = c.id;\n+            c.m_is_onion = c.m_is_local = false;\n+        },\n+        /* protected_peer_ids */ {0, 1, 2, 3, 4, 5},\n+        /* unprotected_peer_ids */ {6, 7, 8, 9, 10, 11},\n+        random_context));\n+\n+    // Verify in the opposite direction.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [num_peers](NodeEvictionCandidate& c) {\n+            c.nTimeConnected = num_peers - c.id;\n+            c.m_is_onion = c.m_is_local = false;\n+        },\n+        /* protected_peer_ids */ {6, 7, 8, 9, 10, 11},\n+        /* unprotected_peer_ids */ {0, 1, 2, 3, 4, 5},\n+        random_context));\n+\n+    // Test protection of onion and localhost peers...\n+\n+    // Expect 1/4 onion peers to be protected from eviction,\n+    // independently of other characteristics.\n+    BOOST_CHECK(IsProtected(\n+        num_peers, [](NodeEvictionCandidate& c) {\n+            c.m_is_onion = (c.id == 3 || c.id == 8 || c.id == 9) ? true : false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319159",
      "id" : 584319159,
      "in_reply_to_id" : 582813828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMxOTE1OQ==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 112,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 600274890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice, thank you! And no need for the `> 0`. Done for both `IsProtected` and `IsEvicted`.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-02-28T16:06:49Z",
      "diff_hunk" : "@@ -0,0 +1,304 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net.h>\n+#include <optional.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\n+\n+namespace {\n+constexpr int NODE_EVICTION_TEST_ROUNDS{10};\n+constexpr int NODE_EVICTION_TEST_UP_TO_N_NODES{200};\n+} // namespace\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < n_candidates; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_is_onion */ random_context.randbool(),\n+        });\n+    }\n+    return candidates;\n+}\n+\n+// Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\n+// apply protection logic, and then return true if all of `protected_peer_ids`\n+// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\n+// from the eviction candidates.\n+bool IsProtected(int num_peers,\n+                 std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\n+                 const std::vector<NodeId>& protected_peer_ids,\n+                 const std::vector<NodeId>& unprotected_peer_ids,\n+                 FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    Shuffle(candidates.begin(), candidates.end(), random_context);\n+\n+    const size_t expected{candidates.size() / 2}; // expect half the candidates will be protected\n+    ProtectEvictionCandidates(candidates);\n+    const size_t actual{candidates.size()};\n+    BOOST_CHECK(actual == expected || actual == expected + 1);\n+\n+    size_t unprotected_as_expected{0};\n+    for (const NodeEvictionCandidate& candidate : candidates) {\n+        if (std::find(protected_peer_ids.begin(), protected_peer_ids.end(), candidate.id) != protected_peer_ids.end()) {\n+            // this peer should have been removed from the eviction candidates\n+            BOOST_TEST_MESSAGE(strprintf(\"candidate id: %d\", candidate.id));\n+            return false;\n+        }\n+        if (std::find(unprotected_peer_ids.begin(), unprotected_peer_ids.end(), candidate.id) != unprotected_peer_ids.end()) {\n+            // this peer remains in the eviction candidates, as expected\n+            ++unprotected_as_expected;\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r584319181",
      "id" : 584319181,
      "in_reply_to_id" : 582806300,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMxOTE4MQ==",
      "original_commit_id" : "f1c02b3ef9fa4bbd82144eebbeaf8c9c9df238c5",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : 66,
      "path" : "src/test/net_peer_eviction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 600274903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584319181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you @vasild for your excellent review! I've taken your inline code feedback.\r\n\r\nWRT the question of \"how many to protect and how to do it,\" I think it may be best to continue picking out the onion peers and the localhost peers separately in order to strive for more peer diversity. The idea is that if we do somehow have both onion and localhost peers, it seems worthwhile to ensure we protect some of each, even if one has worse latency than the other.\r\n\r\nThus, at the cost of a wee bit more complexity, I've updated this to follow @gmaxwell's suggestion more closely.\r\n\r\nThis branch now protects up to 1/4 onion peers (connected via our tor control service), if any, sorted by longest uptime. If any (or all) onion slots remain after that operation, they are then allocated to protect localhost peers, or a minimum of 2 localhost peers in the case that no onion slots remain and 2 or more onion peers were protected, sorted as before by longest uptime.\r\n",
      "created_at" : "2021-02-28T16:45:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-787481422",
      "id" : 787481422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzQ4MTQyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T13:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787481422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Improved the unit tests.",
      "created_at" : "2021-02-28T18:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-787493363",
      "id" : 787493363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzQ5MzM2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T18:02:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787493363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased. @naumenkogs, @ariard, @jnewbery, @dongcarl, as reviewers of #19670 you might be interested in this. @practicalswift, this updates your unit tests and adds missing ones as you had requested. @wtogami, this might address the issues you discussed with me recently. ",
      "created_at" : "2021-03-04T16:01:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-790725280",
      "id" : 790725280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MDcyNTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-04T16:01:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790725280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r587607033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587607033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe called it `m_is_onion_service` to dissociate from the manually configured hidden services you mentioned above?",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-04T16:14:29Z",
      "diff_hunk" : "@@ -1287,8 +1288,11 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n+    bool m_is_onion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r587607033",
      "id" : 587607033,
      "line" : 1285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzYwNzAzMw==",
      "original_commit_id" : "ea9f19ee66ff66e1f5c384c19def994ec3037e13",
      "original_line" : 1285,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 12,
      "pull_request_review_id" : 604282355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587607033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/issues/11537 is related to this PR.",
      "created_at" : "2021-03-09T16:39:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-794137318",
      "id" : 794137318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NDEzNzMxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T16:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794137318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard, I2P peers are not localhost ones. They can easily be distinguished because their address's `CNetAddr::IsI2P()` is true. The complication with Tor is because incoming tor connections come from an IP address (not from a Tor address), usually `127.0.0.1`.\r\n\r\nI am not sure what you mean by \"automated-connections-but-manually-configured\" or \"protect localhost peers from manual connections\".",
      "created_at" : "2021-03-09T17:36:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-794210552",
      "id" : 794210552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NDIxMDU1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-09T17:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794210552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-17T12:45:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-801052691",
      "id" : 801052691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMTA1MjY5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-17T12:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801052691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased due to conflicts from the merge of #21415 --  ` git range-diff a9d1b40 ea9f19e c18fd59` ",
      "created_at" : "2021-03-17T14:24:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-801123141",
      "id" : 801123141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMTEyMzE0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-17T14:24:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801123141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r596070991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596070991"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @ariard. The latter ones would be `m_is_local`. I think I prefer to go with `m_is_onion` for `CNode::m_inbound_onion` and following the naming style of `m_is_local`.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-17T14:29:11Z",
      "diff_hunk" : "@@ -1287,8 +1288,11 @@ struct NodeEvictionCandidate\n     uint64_t nKeyedNetGroup;\n     bool prefer_evict;\n     bool m_is_local;\n+    bool m_is_onion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r596070991",
      "id" : 596070991,
      "in_reply_to_id" : 587607033,
      "line" : 1285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjA3MDk5MQ==",
      "original_commit_id" : "ea9f19ee66ff66e1f5c384c19def994ec3037e13",
      "original_line" : 1285,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 12,
      "pull_request_review_id" : 614376281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596070991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597365954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597365954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit \"Extract ProtectEvictionCandidates() from SelectNodeToEvict()\"\r\n\r\nCan you add a comment explaining exactly which protection rules are implemented by this function, or give it a bit more specific name?\r\n\r\nIt seems it's just a subset of those currently in SelectNodeToEvict. If new eviction protections are added, how to decide if they should go into this function or into SelectNodeToEvict?",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-19T02:29:15Z",
      "diff_hunk" : "@@ -879,6 +879,26 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n+void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCandidates)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597365954",
      "id" : 597365954,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzM2NTk1NA==",
      "original_commit_id" : "fd3cbfda2bd6d27d54aae18a657e3f15bd95748d",
      "original_line" : 882,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 616015821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597365954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597925590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597925590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea. Done, renamed the function to `ProtectEvictionCandidatesByRatio()` (open to suggestions) and added Doxygen documentation.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-19T19:26:34Z",
      "diff_hunk" : "@@ -879,6 +879,26 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n+void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCandidates)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597925590",
      "id" : 597925590,
      "in_reply_to_id" : 597365954,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzkyNTU5MA==",
      "original_commit_id" : "fd3cbfda2bd6d27d54aae18a657e3f15bd95748d",
      "original_line" : 882,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 616729988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:27:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597925590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added documentation and renamed a function per https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597365954.\r\n\r\n<details><summary><code>git diff c18fd59 0cca08a</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex be93426377..66d81b115f 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -887,7 +887,7 @@ static void EraseLastKElements(\r\n     elements.erase(std::remove_if(elements.end() - eraseSize, elements.end(), predicate), elements.end());\r\n }\r\n \r\n-void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCandidates)\r\n+void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvictionCandidates)\r\n {\r\n     // Protect the half of the remaining nodes which have been connected the longest.\r\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\r\n@@ -945,7 +945,9 @@ void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCand\r\n     // An attacker cannot manipulate this metric without performing useful work.\r\n     EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\r\n \r\n-    ProtectEvictionCandidates(vEvictionCandidates);\r\n+    // Protect some of the remaining eviction candidates by ratios of desirable\r\n+    // or disadvantaged characteristics.\r\n+    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\r\n \r\n     if (vEvictionCandidates.empty()) return std::nullopt;\r\n \r\ndiff --git a/src/net.h b/src/net.h\r\nindex 449e0c54b7..eb7fa079ab 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -1285,8 +1285,36 @@ struct NodeEvictionCandidate\r\n     bool m_is_onion;\r\n };\r\n \r\n-void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCandidates);\r\n-\r\n+/**\r\n+ * Select an inbound peer to evict after filtering out (protecting) peers having\r\n+ * distinct, difficult-to-forge characteristics. The protection logic picks out\r\n+ * fixed numbers of desirable peers per various criteria, followed by (mostly)\r\n+ * ratios of desirable or disadvantaged peers. If any eviction candidates\r\n+ * remain, the selection logic chooses a peer to evict.\r\n+ */\r\n [[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates);\r\n \r\n+/** Protect desirable or disadvantaged inbound peers from eviction by ratio.\r\n+ *\r\n+ * This function protects half of the peers which have been connected the\r\n+ * longest, to replicate the non-eviction implicit behavior and preclude attacks\r\n+ * that start later.\r\n+ *\r\n+ * Half of these protected spots (1/4 of the total) are reserved for onion peers\r\n+ * connected via our tor control service, if any, sorted by longest uptime, even\r\n+ * if they're not longest uptime overall. Any remaining slots of the 1/4 are\r\n+ * then allocated to protect localhost peers, if any (or up to 2 localhost peers\r\n+ * if no slots remain and 2 or more onion peers were protected), sorted by\r\n+ * longest uptime, as manually configured hidden services not using\r\n+ * `-bind=addr[:port]=onion` will not be detected as inbound onion connections.\r\n+ *\r\n+ * This helps protect onion peers, which tend to be otherwise disadvantaged\r\n+ * under our eviction criteria for their higher min ping times relative to IPv4\r\n+ * and IPv6 peers, and favorise the diversity of peer connections.\r\n+ *\r\n+ * This function was extracted from SelectNodeToEvict() to be able to test the\r\n+ * ratio-based protection logic deterministically.\r\n+ */\r\n+void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& vEvictionCandidates);\r\n+\r\n #endif // BITCOIN_NET_H\r\ndiff --git a/src/test/net_peer_eviction_tests.cpp b/src/test/net_peer_eviction_tests.cpp\r\nindex 7b88a3e9b6..31d391bf7d 100644\r\n--- a/src/test/net_peer_eviction_tests.cpp\r\n+++ b/src/test/net_peer_eviction_tests.cpp\r\n@@ -43,9 +43,9 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_c\r\n }\r\n \r\n // Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\r\n-// apply protection logic, and then return true if all of `protected_peer_ids`\r\n-// and none of `unprotected_peer_ids` are protected from eviction, i.e. removed\r\n-// from the eviction candidates.\r\n+// call ProtectEvictionCandidatesByRatio() to apply protection logic, and then\r\n+// return true if all of `protected_peer_ids` and none of `unprotected_peer_ids`\r\n+// are protected from eviction, i.e. removed from the eviction candidates.\r\n bool IsProtected(int num_peers,\r\n                  std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\r\n                  const std::unordered_set<NodeId>& protected_peer_ids,\r\n@@ -60,7 +60,7 @@ bool IsProtected(int num_peers,\r\n \r\n     const size_t size{candidates.size()};\r\n     const size_t expected{size - size / 2}; // Expect half the candidates will be protected.\r\n-    ProtectEvictionCandidates(candidates);\r\n+    ProtectEvictionCandidatesByRatio(candidates);\r\n     BOOST_CHECK_EQUAL(candidates.size(), expected);\r\n ```\r\n</p></details>\r\n",
      "created_at" : "2021-03-19T19:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-803064327",
      "id" : 803064327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzA2NDMyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T19:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803064327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597929140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597929140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also updated the commit names/descriptions.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-19T19:33:13Z",
      "diff_hunk" : "@@ -879,6 +879,26 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     elements.erase(elements.end() - eraseSize, elements.end());\n }\n \n+void ProtectEvictionCandidates(std::vector<NodeEvictionCandidate>& vEvictionCandidates)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r597929140",
      "id" : 597929140,
      "in_reply_to_id" : 597365954,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzkyOTE0MA==",
      "original_commit_id" : "fd3cbfda2bd6d27d54aae18a657e3f15bd95748d",
      "original_line" : 882,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 616734349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-19T19:33:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597929140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting PR. Concept ACK. Compiled successfully on Ubuntu. Tests passed.",
      "created_at" : "2021-03-27T20:46:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-808800184",
      "id" : 808800184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwODgwMDE4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-27T20:46:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808800184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 0cca08a8ee33b4e05ff586ae4fd914f5ea860cea\r\nI did not do anything in terms of manual testing, but it looks like the change is well-covered by tests.",
      "created_at" : "2021-03-30T14:20:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-810300323",
      "id" : 810300323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMDMwMDMyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T14:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810300323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r604233445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604233445"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since `EraseLastKElements` determines the minimum again, this line seems unnecessary (could just pass `size_t(8)`).",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-30T16:03:53Z",
      "diff_hunk" : "@@ -893,30 +937,17 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r604233445",
      "id" : 604233445,
      "line" : 940,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDIzMzQ0NQ==",
      "original_commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "original_line" : 940,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 76,
      "pull_request_review_id" : 624445128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-30T16:10:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604233445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for having a look! Here we have an initial improvement and unit testing in place, and in the next step in #21261 we'll re-evaluate the algorithm and ratios between onion, localhost and I2P peers (considering that other privacy networks may be added soon as well). Please do weigh in there with the ratios you would suggest.",
      "created_at" : "2021-03-30T16:33:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-810406955",
      "id" : 810406955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMDQwNjk1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-30T16:33:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810406955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r604336054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604336054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good eye! Will update in #21261.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-03-30T18:27:25Z",
      "diff_hunk" : "@@ -893,30 +937,17 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r604336054",
      "id" : 604336054,
      "in_reply_to_id" : 604233445,
      "line" : 940,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDMzNjA1NA==",
      "original_commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "original_line" : 940,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 76,
      "pull_request_review_id" : 624578706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-01T18:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/604336054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r616746732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616746732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks again @mzumsande. Addressed in #21261.",
      "commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "created_at" : "2021-04-20T14:37:17Z",
      "diff_hunk" : "@@ -893,30 +937,17 @@ static void EraseLastKElements(std::vector<T> &elements, Comparator comparator,\n     // An attacker cannot manipulate this metric without performing useful work.\n     EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockRelayOnlyTime);\n-    size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());\n-    vEvictionCandidates.erase(std::remove_if(vEvictionCandidates.end() - erase_size, vEvictionCandidates.end(), [](NodeEvictionCandidate const &n) { return !n.fRelayTxes && n.fRelevantServices; }), vEvictionCandidates.end());\n+    const size_t erase_size = std::min(size_t(8), vEvictionCandidates.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#discussion_r616746732",
      "id" : 616746732,
      "in_reply_to_id" : 604233445,
      "line" : 940,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjc0NjczMg==",
      "original_commit_id" : "0cca08a8ee33b4e05ff586ae4fd914f5ea860cea",
      "original_line" : 940,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 76,
      "pull_request_review_id" : 640036120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20197",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T14:37:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616746732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@mzumsande I've updated the inbound eviction protection proposal in #21261 to be generalizable to multiple networks (with I2P and CJDNS on the way) and fully ratio-based, which should address your feedback. Will be bringing it out of draft shortly.   ",
      "created_at" : "2021-04-20T14:40:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20197#issuecomment-823330247",
      "id" : 823330247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20197",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzMzMDI0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T14:40:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823330247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
