[
   {
      "author_association" : "MEMBER",
      "body" : ">These are (AFAICT) either a.) peer triggerable or b.) uninteresting from a user perspective :)\r\n\r\nWhich are (a)? Most seem (b) to me, and I'm not even sure they're that \"uninteresting\" (although the content could be improved to be user-friendly).\r\n\r\nBecause I don't see how they are (a), I'm not sure there is any security gain.",
      "created_at" : "2020-10-19T07:38:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20174#issuecomment-711770853",
      "id" : 711770853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20174",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMTc3MDg1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-19T07:38:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711770853",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\nOh, to be clear: I meant \"peer triggerable\" as the union of a.) \"peer triggerable in low volume\" (spammy but generally not a problem from a security perspective), b.) \"peer triggerable in high volume\" (may be used for disk fill attacks).\r\n\r\nNote that the first case \"peer triggerable in low volume\" includes logging of events that is the result of \"remote peer (mis)behaviour\".\r\n\r\nGenerally I subscribe to this logging philosophy described by MarcoFalke in #19995: _\"I'd prefer if unconditional logs were only used for the init/shutdown sequence and local system errors, such as data corruption. Anything else the average user probably doesn't care about, and if they did, they could enable the corresponding debug category and provide enough disk space for the debug log file.\"_, and ideally in combination with some kind of general mitigation like the one I suggested in #19995 (\"Mitigate disk filling attacks by temporarily rate limiting LogPrintf(â¦)\").\r\n\r\n> Which are (a)? Most seem (b) to me, and I'm not even sure they're that \"uninteresting\" (although the content could be improved to be user-friendly).\r\n\r\nI think these are spammy/uninteresting:\r\n\r\n```\r\nsrc/flatfile.cpp:   LogPrintf(\"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\r\nsrc/validation.cpp: LogPrintf(\"Leaving block file %i: %s\\n\", nLastBlockFile, vinfoBlockFile[nLastBlockFile].ToString());\r\n```\r\n\r\nI think these are peer triggerable in the sense that they are the result of [\"remote peer (mis)behaviour\"](https://github.com/bitcoin/bitcoin/pull/19832#issuecomment-683849565) (and hopefully only in low volume):\r\n\r\n```\r\nsrc/net.cpp:        LogPrintf(\"socket send error %s\\n\", NetworkErrorString(nErr));\r\nsrc/net.cpp:        LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\r\nsrc/net.cpp:        LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\r\nsrc/net.cpp:        LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * count_microseconds(GetTime<std::chrono::microseconds>() - pnode->m_ping_start.load()));\r\n```\r\n\r\nIf someone comes up with a way in which these could be made peer triggerable in _high volume_ then that should be discussed with `security@` of course :)\r\n\r\n(And if we had a mitigation in place we wouldn't have to worry much about disk fill attacks at all :))",
      "created_at" : "2020-10-19T09:20:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20174#issuecomment-711899280",
      "id" : 711899280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20174",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMTg5OTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-19T09:35:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711899280",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not sure if others agree, but I'd be interested in a category for higher-level, less frequent p2p logging--e.g. peer misbehavior, eviction, timeout, connection/disconnection, some of which is unconditionally logged--that is separate from the lower-level, high-frequency net message logging (inv, getdata, etc.)",
      "created_at" : "2020-10-19T10:58:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20174#issuecomment-712050149",
      "id" : 712050149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20174",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjA1MDE0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-19T10:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712050149",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Seems off-topic to this discussion, but I agree that splitting off tx-relay into a `NET_TX_RELAY` (sub) category could make sense.",
      "created_at" : "2020-10-19T11:15:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20174#issuecomment-712077866",
      "id" : 712077866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20174",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjA3Nzg2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-19T11:15:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712077866",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\n> > These are (AFAICT) either a.) peer triggerable or b.) uninteresting from a user perspective :)\r\n> \r\n> Which are (a)? Most seem (b) to me, and I'm not even sure they're that \"uninteresting\" (although the content could be improved to be user-friendly).\r\n\r\nThe problem with say the \"ping timeout\" unconditional log message is that it can be trivially triggered by anyone (including _incoming_ connections):\r\n\r\n```\r\n$ src/bitcoind -regtest &\r\nâ¦\r\n2020-11-01T04:00:00Z init message: Done loading\r\nâ¦\r\n# Trigger unconditional log message \"ping timeout: 1200s\"\r\n$ xxd -p -r <<< \"fabfb5da76657273696f6e000000000056000000b268b319801101000100000000000000d1f99e5f00000000010000000000000000000000000000000000ffff000000000000010000000000000000000000000000000000ffff0000000000004804b6a278c1a74e00ffffffff01fabfb5da76657261636b000000000000000000005df6e0e2\" | \\\r\n    nc 127.0.0.1 18444 > /dev/null &\r\n# Wait...\r\nâ¦\r\n2020-11-01T04:20:00Z ping timeout: 1200.020729s\r\n```\r\n\r\nThe above can be parallelized by an attacker to give the target a slow but steady stream of \"ping timeout\" messages to confuse the target operator. (To be clear: I don't think the \"ping timeout\" case can be used for any disk fill attack thanks to the 1200 s delay, but peer triggerable log spamming is annoying even if our disks are not filled.)\r\n\r\nI think cheaply peer triggerable log messages that are printed also for incoming connections should either be moved to a separate log category (say `BCLog::NET`), or at least only be printed for outgoing connections only to make it harder for an attacker to use them for nefarious purposes.\r\n\r\nWould you object to that? If so, what would the main objection be? :)",
      "created_at" : "2020-11-01T19:19:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/20174#issuecomment-720137879",
      "id" : 720137879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20174",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMDEzNzg3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-01T19:19:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720137879",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
