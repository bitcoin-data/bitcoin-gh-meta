[
   {
      "author_association" : "MEMBER",
      "body" : "I'm still trying to verify that the bug being fixed relating to test-before-evict is in fact a bug (and I'm not just misunderstanding the logic); but if my understanding is correct I think we should fix all these issues in the next release.",
      "created_at" : "2020-10-19T18:40:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-712367742",
      "id" : 712367742,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjM2Nzc0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-19T18:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712367742",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20233 (addrman: Make consistency checks a runtime option by jnewbery)\n* #20228 (addrman: Make addrman a top-level component by jnewbery)\n* #20158 (tree-wide: De-globalize ChainstateManager by dongcarl)\n* #19843 (Refactoring and minor improvement for self-advertisements by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-19T19:21:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-712389721",
      "id" : 712389721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjM4OTcyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-28T02:30:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712389721",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nThe former issues are worth addressing.\r\nSeems like the latter bug is real, even though the chance of hitting it is rather low.",
      "created_at" : "2020-10-20T06:31:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-712626312",
      "id" : 712626312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjYyNjMxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T06:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712626312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was able to verify the test-before-evict bug by modifying the tried table to be very small, making collisions with existing peers likely.  The patch here appears to fix it as well.",
      "created_at" : "2020-10-25T15:20:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-716164872",
      "id" : 716164872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjE2NDg3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T15:20:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716164872",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511795306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511795306"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This further splits the logic about whether to call `Connected()` for a node. Now there are three three places that you need to look:\r\n\r\n- Is the peer an outbound (https://github.com/bitcoin/bitcoin/blob/dafde15cc04fbeb5851fa98fec34dd9f2a7e8420/src/net_processing.cpp#L2475-L2478)\r\n- Does the peer have any misbehavior points (https://github.com/bitcoin/bitcoin/blob/dafde15cc04fbeb5851fa98fec34dd9f2a7e8420/src/net_processing.cpp#L849-L851)\r\n- Is the peer a block only connection (here)\r\n\r\nI'd rather place this new logic in one of the existing places and eventually consolidate them, rather than add another place for people to look.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T08:44:13Z",
      "diff_hunk" : "@@ -2571,7 +2587,8 @@ void CConnman::DeleteNode(CNode* pnode)\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n     m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if (fUpdateConnectionTime) {\n+    if (fUpdateConnectionTime && !pnode->IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511795306",
      "id" : 511795306,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5NTMwNg==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2590,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511795306",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511799043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511799043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there any reason to net send a `getaddr` message to block relay only peers? See the comment above \"If we're starting up for the first time, our addrman may be pretty empty...\". Since #17428, the first peers we connect to on startup will be anchor connections, which are block relay only peers. I can't see any downside to asking them for addrs.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T08:50:45Z",
      "diff_hunk" : "@@ -2421,9 +2415,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511799043",
      "id" : 511799043,
      "line" : 2428,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5OTA0Mw==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2428,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511799043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511800034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511800034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make this a doxygen format comment (starting with `/**`, so that doxygen docs can be generated from it: https://doxygen.bitcoincore.org/)",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T08:52:27Z",
      "diff_hunk" : "@@ -445,6 +445,10 @@ class CConnman\n     CNode* FindNode(const std::string& addrName);\n     CNode* FindNode(const CService& addr);\n \n+    // Determine whether we're already connected to a given peer, in order to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511800034",
      "id" : 511800034,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgwMDAzNA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 448,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511800034",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511842475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511842475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This logic is already very convoluted, and I think this change makes it even more difficult to follow. The mainline case (connecting to a new outbound beer), currently calls `SelectedTriedCollision()`, then sets `test_before_evict` to false, and then throws away the return value from `SelectedTriedCollision()` in the `if (!test_before_evict)` block below.\r\n\r\nThe logic for feeler connections and non-feeler connections has diverged to the point where it'd make this code a lot easier to follow if it were refactored to a GetFeelerConnectionAddress() and GetOutboundConnectionAddress() function. For now, I think the following is easier to read:\r\n\r\n```\r\n            if (fFeeler) {\r\n                // First, try to get a tried table collision address. This returns\r\n                // an empty (invalid) address if there are no collisions to try.\r\n                addr = addrman.SelectTriedCollision();\r\n\r\n                if (!addr.IsValid()) {\r\n                    // No tried table collisions. Select a new table address\r\n                    // for our feeler.\r\n                    addr = addrman.Select(true);\r\n                } else if (AlreadyConnectedToPeer(addr)) {\r\n                    // If test-before-evict logic would have us connect to a\r\n                    // peer that we're already connected to, just mark that\r\n                    // address as Good(). We won't be able to initiate the\r\n                    // connection anyway, so this avoids inadvertently evicting\r\n                    // a currently-connected peer.\r\n                    addrman.Good(addr);\r\n                    addr = addrman.Select(true);\r\n                }\r\n            } else {\r\n                // Not a feeler\r\n                addr = addrman.Select();\r\n            }\r\n```\r\n\r\n",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:02:25Z",
      "diff_hunk" : "@@ -1967,7 +1972,18 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddrInfo addr = addrman.SelectTriedCollision();\n \n             // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n+            bool test_before_evict = fFeeler && addr.IsValid();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511842475",
      "id" : 511842475,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0MjQ3NQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 1975,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511842475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511842695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511842695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to call this CConnman forwarding function. Just call `addrman.Good()` directly.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:02:49Z",
      "diff_hunk" : "@@ -1967,7 +1972,18 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddrInfo addr = addrman.SelectTriedCollision();\n \n             // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n+            bool test_before_evict = fFeeler && addr.IsValid();\n+\n+            // If test-before-evict logic would have us connect to a peer that\n+            // we're already connected to, just mark that address as Good(). We\n+            // won't be able to initiate the connection anyway, so this avoids\n+            // inadvertently evicting a currently-connected peer.\n+            if (test_before_evict && AlreadyConnectedToPeer(addr)) {\n+                MarkAddressGood(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511842695",
      "id" : 511842695,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0MjY5NQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 1982,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511842695",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511843620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511843620"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove the word 'also'. Comments have a habit of migrating around in the codebase, and joining words like also lose their meaning if additional code/comments are added around the existing comments.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:04:27Z",
      "diff_hunk" : "@@ -2421,9 +2415,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+        }\n \n-            // Moves address from New to Tried table in Addrman, resolves\n-            // tried-table collisions, etc.\n+        if (!pfrom.IsInboundConn()) {\n+            // For non-inbound connections, we also update the addrman to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511843620",
      "id" : 511843620,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0MzYyMA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2421,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511843620",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511845721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511845721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that this is inefficient (lock cs_vNodes, iterate through nodes, unlock, lock, iterate, unlock), but that was a problem with the existing code. It could be made more efficient by converting this to a `ForEachNode()` call with a lambda returning if the address matches the `CNetAddr` or string.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:07:51Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511845721",
      "id" : 511845721,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0NTcyMQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511845721",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511846688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511846688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `AlreadyConnectedToAddress()` would be a more accurate name.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:09:31Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511846688",
      "id" : 511846688,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0NjY4OA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 351,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511846688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511847746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511847746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It might be worth adding a comment about why we search both for the `CNetAddr` _and_ the ip/port string. It was added here: https://github.com/bitcoin/bitcoin/commit/9bab521df895c149579b9e64931405c56b008afb#diff-00021eed586a482abdb09d6cdada1d90115abe988a91421851960e26658bed02R1416 in the PR to add support for SOCKS5.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T10:11:15Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511847746",
      "id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0Nzc0Ng==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 516562733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511847746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511933800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511933800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well if you have anchor connections to connect to, you likely have a useful `peers.dat` as well (you must have been running before), so I don't think that reasoning applies.\r\n\r\nIf we process an `addr` message from a peer by adding entries to addrman, we then will leak that information in at least two ways I can think of -- feeler connections will be attempted to addresses we learn that are in the new table, and we sample from our addrman to respond to other peers who send us `getaddr` messages.  I don't know if there might be additional sources of information leak about what is in our addrman besides those, but those both seem like ways an attacker could at least probabilistically test whether two nodes on the network might be connected.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T12:49:12Z",
      "diff_hunk" : "@@ -2421,9 +2415,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511933800",
      "id" : 511933800,
      "in_reply_to_id" : 511799043,
      "line" : 2428,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzMzgwMA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2428,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 516741591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511933800",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511934522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511934522"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed, but I didn't want to rewrite this.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T12:50:21Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511934522",
      "id" : 511934522,
      "in_reply_to_id" : 511845721,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzNDUyMg==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 516742480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511934522",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511935957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511935957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed that this is confusing.  Originally I was contemplating have code in `net.cpp` that wouldn't call `CAddrMan::Attempt()` on block-relay-only peers, and so having this logic also be in `net.cpp` made more sense to me; but now I think it's fine to move into `net_processing`/`FinalizeNode()`.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T12:52:49Z",
      "diff_hunk" : "@@ -2571,7 +2587,8 @@ void CConnman::DeleteNode(CNode* pnode)\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n     m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if (fUpdateConnectionTime) {\n+    if (fUpdateConnectionTime && !pnode->IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511935957",
      "id" : 511935957,
      "in_reply_to_id" : 511795306,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzNTk1Nw==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2590,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516744353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511935957",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511998003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511998003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I see that we ignore all `addr` messages from block-relay-only peers anyway, in the addr message processing (https://github.com/bitcoin/bitcoin/blob/d67883d01e507dd22d1281f4a4860e79d6a46a47/src/net_processing.cpp#L2549), so this seems fine.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T14:23:01Z",
      "diff_hunk" : "@@ -2421,9 +2415,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511998003",
      "id" : 511998003,
      "in_reply_to_id" : 511799043,
      "line" : 2428,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5ODAwMw==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2428,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 516827655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511998003",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512004982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512004982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd suggest going further and removing `fCurrentlyConnected`, and then changing `FinalizeNode()` to check whether the peer is:\r\n- `fSuccessfullyConnected`\r\n- not inbound and not block relay only\r\n- has 0 misbehavior score\r\nand then directly call `CAddrMan.Connected()` directly, so that all the logic around calling `Connected()` is in one place.\r\n\r\nIf you agree, perhaps you could take a look at 1755f08b4dba34b483a401c6098d5df549219ce7 in PR #20228, which does some of that. For this PR, just putting the block relay only check inside `FinalizeNode()` at least doesn't make the situation any worse.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T14:31:39Z",
      "diff_hunk" : "@@ -2571,7 +2587,8 @@ void CConnman::DeleteNode(CNode* pnode)\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n     m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if (fUpdateConnectionTime) {\n+    if (fUpdateConnectionTime && !pnode->IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512004982",
      "id" : 512004982,
      "in_reply_to_id" : 511795306,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwNDk4Mg==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2590,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516837035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512004982",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512106253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512106253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be cleaner to pass in a `const CNode&` and get the id and block relay only state from the CNode.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:42:38Z",
      "diff_hunk" : "@@ -829,7 +829,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n }\n \n-void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void PeerManager::FinalizeNode(NodeId nodeid, const bool is_block_relay_only_peer, bool& fUpdateConnectionTime) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512106253",
      "id" : 512106253,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwNjI1Mw==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 840,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 516970642,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512106253",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512106972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512106972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is now in FinalizeNode, not net.cpp :)",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:43:46Z",
      "diff_hunk" : "@@ -2421,9 +2416,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+        }\n \n-            // Moves address from New to Tried table in Addrman, resolves\n-            // tried-table collisions, etc.\n+        if (!pfrom.IsInboundConn()) {\n+            // For non-inbound connections, we update the addrman to record\n+            // connection success so that addrman will have an up-to-date\n+            // notion of which peers are online and available.\n+            //\n+            // While we strive to not leak information about block-relay-only\n+            // connections via the addrman, not moving an address to the tried\n+            // table is also potentially detrimental because new-table entries\n+            // are subject to eviction in the event of addrman collisions.  We\n+            // mitigate the information-leak by never calling\n+            // CAddrMan::Connected() on block-relay-only peers; see net.cpp",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512106972",
      "id" : 512106972,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwNjk3Mg==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 2441,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 516970642,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512106972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512116986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512116986"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:53:33Z",
      "diff_hunk" : "@@ -445,6 +445,10 @@ class CConnman\n     CNode* FindNode(const std::string& addrName);\n     CNode* FindNode(const CService& addr);\n \n+    // Determine whether we're already connected to a given peer, in order to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512116986",
      "id" : 512116986,
      "in_reply_to_id" : 511800034,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNjk4Ng==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 448,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 516983409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512116986",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I just did the simple thing of moving this to `FinalizeNode()`.  Because there's no good way to get a `CNode` from a `NodeId` while it's in the process of being deleted (as far as I can tell!), I had to change the interface to accommodate this move.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:54:49Z",
      "diff_hunk" : "@@ -2571,7 +2587,8 @@ void CConnman::DeleteNode(CNode* pnode)\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n     m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if (fUpdateConnectionTime) {\n+    if (fUpdateConnectionTime && !pnode->IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118406",
      "id" : 512118406,
      "in_reply_to_id" : 511795306,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExODQwNg==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2590,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516984643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118406",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118798"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm indifferent, so taking your patch.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:55:12Z",
      "diff_hunk" : "@@ -1967,7 +1972,18 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddrInfo addr = addrman.SelectTriedCollision();\n \n             // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n+            bool test_before_evict = fFeeler && addr.IsValid();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118798",
      "id" : 512118798,
      "in_reply_to_id" : 511842475,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExODc5OA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 1975,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516985051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118798",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I took this change as part of your patch for rewriting the loop.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:55:22Z",
      "diff_hunk" : "@@ -1967,7 +1972,18 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddrInfo addr = addrman.SelectTriedCollision();\n \n             // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n+            bool test_before_evict = fFeeler && addr.IsValid();\n+\n+            // If test-before-evict logic would have us connect to a peer that\n+            // we're already connected to, just mark that address as Good(). We\n+            // won't be able to initiate the connection anyway, so this avoids\n+            // inadvertently evicting a currently-connected peer.\n+            if (test_before_evict && AlreadyConnectedToPeer(addr)) {\n+                MarkAddressGood(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512118929",
      "id" : 512118929,
      "in_reply_to_id" : 511842695,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExODkyOQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 1982,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516985213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512118929",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:55:29Z",
      "diff_hunk" : "@@ -2421,9 +2415,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+        }\n \n-            // Moves address from New to Tried table in Addrman, resolves\n-            // tried-table collisions, etc.\n+        if (!pfrom.IsInboundConn()) {\n+            // For non-inbound connections, we also update the addrman to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119008",
      "id" : 512119008,
      "in_reply_to_id" : 511843620,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExOTAwOA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2421,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 516985318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119008",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed, done.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:55:37Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119091",
      "id" : 512119091,
      "in_reply_to_id" : 511846688,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExOTA5MQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 351,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 516985428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119091",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Care to suggest a comment?  I'm not sure my understanding of when we might be looking up by `CNetAddr` versus string is precise enough to say the right thing here.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T16:55:43Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512119159",
      "id" : 512119159,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExOTE1OQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 516985519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512119159",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512130998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512130998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was hoping you might have a better understanding of this than me :grin: . My understanding of how hostnames/proxies work in Bitcoin Core is certainly too hazy to suggest any wording here.\r\n\r\nI'm going to mark this as resolved. It'd be good to document why we're doing this, but this PR isn't changing the behavior, so it's certainly not a blocker.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T17:12:59Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512130998",
      "id" : 512130998,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzMDk5OA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 517001419,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512130998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512131320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512131320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's reasonable. It's not a change in behaviour. Marking resolved.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T17:13:31Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512131320",
      "id" : 512131320,
      "in_reply_to_id" : 511845721,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzMTMyMA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 517001871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512131320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512133129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512133129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`DeleteNode()` is holding a reference to the `CNode`, so you should just be able to pass a const reference to that CNode down to `FinalizeNode()`. That'd be more symmetrical with the other `NetEventsInterface` interface functions (you could also pass a pointer like the other functions, but they should all be const references really)",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T17:16:02Z",
      "diff_hunk" : "@@ -2571,7 +2587,8 @@ void CConnman::DeleteNode(CNode* pnode)\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n     m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if (fUpdateConnectionTime) {\n+    if (fUpdateConnectionTime && !pnode->IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512133129",
      "id" : 512133129,
      "in_reply_to_id" : 511795306,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzMzEyOQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 2590,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 517004097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512133129",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> An alternative approach could be to just periodically refresh the info.nLastSuccess for all active connections. If I'm understanding the addrman code correctly, as long as we're refreshing that value every 4 hours, we'll never evict that peer.\r\n\r\n> Adding a StillGood() (with a better name) method to CAddrMan which simply updates nLastSuccess and calling it either globally or per-peer every three hours would avoid adding more logic to the already-too-complicated ThreadOpenConnections()\r\n\r\nI think the best thing would be if addrman just detected the collision with an existing peer immediately, and avoided the whole tried-collision logic itself.  If we had a good way to do that (by changing the interface between addrman and connman) then I think that could make sense. \r\n\r\nShort of addrman being smart enough to avoid this problem, having `net.cpp` detect this condition and fix it directly seems next simplest to me; relying on `Good()` or a `StillGood()` being called at the right times to avoid this problem as a consequence of how and when those variables get updated just seems unnecessarily complex...?  The next time someone wonders if it's possible for an existing peer to be evicted from the tried table, I think it'll be much easier to reason about my proposed change than the alternative you're suggesting.",
      "created_at" : "2020-10-26T18:05:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-716728387",
      "id" : 716728387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjcyODM4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T18:05:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716728387",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512179647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512179647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T18:28:31Z",
      "diff_hunk" : "@@ -829,7 +829,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n }\n \n-void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void PeerManager::FinalizeNode(NodeId nodeid, const bool is_block_relay_only_peer, bool& fUpdateConnectionTime) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512179647",
      "id" : 512179647,
      "in_reply_to_id" : 512106253,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3OTY0Nw==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 840,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 517063951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512179647",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512179793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512179793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, thanks for catching that. Fixed.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T18:28:44Z",
      "diff_hunk" : "@@ -2421,9 +2416,22 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+        }\n \n-            // Moves address from New to Tried table in Addrman, resolves\n-            // tried-table collisions, etc.\n+        if (!pfrom.IsInboundConn()) {\n+            // For non-inbound connections, we update the addrman to record\n+            // connection success so that addrman will have an up-to-date\n+            // notion of which peers are online and available.\n+            //\n+            // While we strive to not leak information about block-relay-only\n+            // connections via the addrman, not moving an address to the tried\n+            // table is also potentially detrimental because new-table entries\n+            // are subject to eviction in the event of addrman collisions.  We\n+            // mitigate the information-leak by never calling\n+            // CAddrMan::Connected() on block-relay-only peers; see net.cpp",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512179793",
      "id" : 512179793,
      "in_reply_to_id" : 512106972,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3OTc5Mw==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 2441,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 517064130,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512179793",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512192998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512192998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry I wasn't clear here, but you can also drop the `NodeId` argument from the function signature, and then call `GetId()` from within `FinalizeNode()`. Passing both CNode& and NodeId is somewhat redundant.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T18:50:11Z",
      "diff_hunk" : "@@ -829,7 +829,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n }\n \n-void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void PeerManager::FinalizeNode(NodeId nodeid, const bool is_block_relay_only_peer, bool& fUpdateConnectionTime) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512192998",
      "id" : 512192998,
      "in_reply_to_id" : 512106253,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE5Mjk5OA==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 840,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 517080202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512192998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> relying on Good() or a StillGood() being called at the right times to avoid this problem as a consequence of how and when those variables get updated just seems unnecessarily complex...? The next time someone wonders if it's possible for an existing peer to be evicted from the tried table, I think it'll be much easier to reason about my proposed change than the alternative you're suggesting.\r\n\r\nI disagree, but perhaps it's just a matter of taste. To me, making addrman always aware of existing connections and keeping `nLastSuccess` fresh by periodic notifications from net_processing or net seems much cleaner than only finding out at the point that we attempt to reconnect.",
      "created_at" : "2020-10-26T18:57:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-716756846",
      "id" : 716756846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjc1Njg0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T18:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716756846",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512230086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512230086"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in 430c8b6c0f9381f039d83066aa2cbd70c1d1414b.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-26T19:56:02Z",
      "diff_hunk" : "@@ -829,7 +829,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n }\n \n-void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void PeerManager::FinalizeNode(NodeId nodeid, const bool is_block_relay_only_peer, bool& fUpdateConnectionTime) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512230086",
      "id" : 512230086,
      "in_reply_to_id" : 512106253,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIzMDA4Ng==",
      "original_commit_id" : "266d22a3d18c89a3b74d81bcdcc9750a9f8a056f",
      "original_line" : 840,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 517127015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512230086",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I disagree, but perhaps it's just a matter of taste. To me, making addrman always aware of existing connections and keeping nLastSuccess fresh by periodic notifications from net_processing or net seems much cleaner than only finding out at the point that we attempt to reconnect.\r\n\r\nWe could add an interface to addrman so that it explicitly keeps track of currently connected peers, by notifying it when we successfully make new connections and again when a peer disconnects, and then use that to prevent tried collisions with current peers from ever making it into the tried-collision list for later resolution.",
      "created_at" : "2020-10-26T20:25:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-716802555",
      "id" : 716802555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjgwMjU1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T20:27:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716802555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We could add an interface to addrman so that it explicitly keeps track of currently connected peers, by notifying it when we successfully make new connections and again when a peer disconnects, and then use that to prevent tried collisions with current peers from ever making it into the tried-collision list for later resolution.\r\n\r\nYes, that seems like another reasonable approach.\r\n\r\nTo be clear, I'm not NACKing the approach in this PR. I wanted to offer an alternative suggestion, but what you're doing here seems fine, and this actually cleans up and clarifies some of the code.\r\n\r\nThanks for being so responsive to review. I plan to do another pass of the latest changes tomorrow.",
      "created_at" : "2020-10-26T22:36:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-716861647",
      "id" : 716861647,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjg2MTY0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T22:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716861647",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512536970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512536970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: if you have to retouch the branch, you could make this const.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-27T09:32:02Z",
      "diff_hunk" : "@@ -837,7 +837,8 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n }\n \n-void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void PeerManager::FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) {\n+    NodeId nodeid = node.GetId();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512536970",
      "id" : 512536970,
      "line" : 841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUzNjk3MA==",
      "original_commit_id" : "430c8b6c0f9381f039d83066aa2cbd70c1d1414b",
      "original_line" : 841,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 6,
      "pull_request_review_id" : 517501586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512536970",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512546431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512546431"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will call `Good()` for any address that we're connected to, including inbound peers. That's different from the current behavior, where we're careful to not call `Good()` for inbounds. The result of that is we'll move addresses of inbound peers to the tried table, even though we've never actually successfully connected out to them.\r\n\r\nDoes this open up a gap where an attacker can get addresses added to your tried table by opening lots of inbound connections to try to trigger this logic?",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-27T09:46:44Z",
      "diff_hunk" : "@@ -1994,11 +1999,30 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            CAddrInfo addr = addrman.SelectTriedCollision();\n+            CAddrInfo addr;\n \n-            // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n-                addr = addrman.Select(fFeeler);\n+            if (fFeeler) {\n+                // First, try to get a tried table collision address. This returns\n+                // an empty (invalid) address if there are no collisions to try.\n+                addr = addrman.SelectTriedCollision();\n+\n+                if (!addr.IsValid()) {\n+                    // No tried table collisions. Select a new table address\n+                    // for our feeler.\n+                    addr = addrman.Select(true);\n+                } else if (AlreadyConnectedToAddress(addr)) {\n+                    // If test-before-evict logic would have us connect to a\n+                    // peer that we're already connected to, just mark that\n+                    // address as Good(). We won't be able to initiate the\n+                    // connection anyway, so this avoids inadvertently evicting\n+                    // a currently-connected peer.\n+                    addrman.Good(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512546431",
      "id" : 512546431,
      "line" : 2019,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU0NjQzMQ==",
      "original_commit_id" : "430c8b6c0f9381f039d83066aa2cbd70c1d1414b",
      "original_line" : 2019,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 37,
      "pull_request_review_id" : 517501586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512546431",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If you squashed the last commit (_Eliminate unnecessary parameter from FinalizeNode()_) with the first commit (_Avoid calling CAddrMan::Connected() on block-relay-only peer addresses_), or even just moved it to be the first commit, you'd avoid having to touch other lines of code (e.g. in denialofservice_tests.cpp) multiple times.",
      "created_at" : "2020-10-27T12:06:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-717198192",
      "id" : 717198192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNzE5ODE5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-27T12:06:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717198192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512658215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512658215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That can only happen if there's a tried-table collision with the address of the inbound peer -- so that inbound peer's address is already in our tried-table anyway...  I don't think calling `Good()` on an address already in our tried-table can be all that detrimental?  I think there are two cases to consider:\r\n- If we were to initiate an outbound connection to the address, it would accept it, and we would therefore mark it `Good()`.  In this case, marking it `Good()` because it's a current peer is correct.\r\n- If we initiated an outbound connection to the address, it would not accept it.  In this case, it's sort of unclear what is going on; we must have been able to connect to it as an outbound in the past in order to get it into the tried table in the first place.  So perhaps the peer isn't accepting inbound connections at this time (or is full), or there's something funny going on with the networking/address that we're trying to use to reach it?  However, keeping it in our tried table doesn't seem detrimental; at most, about 115 addresses in our tried table could be reserved for us by inbound peers who no longer are taking incoming connections but were in the past...  An attacker could just keep listening on those addresses anyway and maintain those tried-table entries (tried-table collisions are rare anyway), so I don't know that we're giving an attacker much more power or reducing the costs of an eclipse attack all that much by failing to detect this case.\r\n\r\nAnother option would be to (a) change our outbound peer logic to allow feeler connections to inbound peers, and (b) change this logic to mark outbound peers' addresses as `Good()` in the event of a tried table collision.  I am not sure if there's some reason that would be a bad idea, but I'm also not sure that it's necessary.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-27T12:40:39Z",
      "diff_hunk" : "@@ -1994,11 +1999,30 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            CAddrInfo addr = addrman.SelectTriedCollision();\n+            CAddrInfo addr;\n \n-            // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n-                addr = addrman.Select(fFeeler);\n+            if (fFeeler) {\n+                // First, try to get a tried table collision address. This returns\n+                // an empty (invalid) address if there are no collisions to try.\n+                addr = addrman.SelectTriedCollision();\n+\n+                if (!addr.IsValid()) {\n+                    // No tried table collisions. Select a new table address\n+                    // for our feeler.\n+                    addr = addrman.Select(true);\n+                } else if (AlreadyConnectedToAddress(addr)) {\n+                    // If test-before-evict logic would have us connect to a\n+                    // peer that we're already connected to, just mark that\n+                    // address as Good(). We won't be able to initiate the\n+                    // connection anyway, so this avoids inadvertently evicting\n+                    // a currently-connected peer.\n+                    addrman.Good(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512658215",
      "id" : 512658215,
      "in_reply_to_id" : 512546431,
      "line" : 2019,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1ODIxNQ==",
      "original_commit_id" : "430c8b6c0f9381f039d83066aa2cbd70c1d1414b",
      "original_line" : 2019,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 37,
      "pull_request_review_id" : 517657423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512658215",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512729365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512729365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah yes, of course you're right. Anything returned from `SelectTriedCollision()` must by definition already be in the tried table.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-27T14:16:30Z",
      "diff_hunk" : "@@ -1994,11 +1999,30 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            CAddrInfo addr = addrman.SelectTriedCollision();\n+            CAddrInfo addr;\n \n-            // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n-                addr = addrman.Select(fFeeler);\n+            if (fFeeler) {\n+                // First, try to get a tried table collision address. This returns\n+                // an empty (invalid) address if there are no collisions to try.\n+                addr = addrman.SelectTriedCollision();\n+\n+                if (!addr.IsValid()) {\n+                    // No tried table collisions. Select a new table address\n+                    // for our feeler.\n+                    addr = addrman.Select(true);\n+                } else if (AlreadyConnectedToAddress(addr)) {\n+                    // If test-before-evict logic would have us connect to a\n+                    // peer that we're already connected to, just mark that\n+                    // address as Good(). We won't be able to initiate the\n+                    // connection anyway, so this avoids inadvertently evicting\n+                    // a currently-connected peer.\n+                    addrman.Good(addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r512729365",
      "id" : 512729365,
      "in_reply_to_id" : 512546431,
      "line" : 2019,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyOTM2NQ==",
      "original_commit_id" : "430c8b6c0f9381f039d83066aa2cbd70c1d1414b",
      "original_line" : 2019,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 37,
      "pull_request_review_id" : 517753282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-27T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512729365",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 430c8b6c0f9381f039d83066aa2cbd70c1d1414b\r\n\r\nI think moving the last commit to the beginning would make this easier for other reviewers. Very happy to reACK if you decide to do that while you just have my ACK.",
      "created_at" : "2020-10-27T15:05:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-717307740",
      "id" : 717307740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNzMwNzc0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-27T15:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717307740",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @jnewbery -- I went ahead and squashed that last commit into the first one, so that the `FinalizeNode` interface changes are all together now.",
      "created_at" : "2020-10-27T15:42:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-717332799",
      "id" : 717332799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNzMzMjc5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-27T15:42:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717332799",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-27T15:58:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-717343706",
      "id" : 717343706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNzM0MzcwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-27T15:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717343706",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r513627928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513627928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commented this here for my own understanding while parsing the changed logic in 16d9bfc4172b4f6ce2.\r\n```diff\r\n-                }\r\n+                } // Otherwise, keep the selected addr if we have a tried\r\n+                  // collision we're not already connected to.\r\n```\r\n",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-28T17:23:11Z",
      "diff_hunk" : "@@ -1994,11 +1999,30 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            CAddrInfo addr = addrman.SelectTriedCollision();\n+            CAddrInfo addr;\n \n-            // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n-                addr = addrman.Select(fFeeler);\n+            if (fFeeler) {\n+                // First, try to get a tried table collision address. This returns\n+                // an empty (invalid) address if there are no collisions to try.\n+                addr = addrman.SelectTriedCollision();\n+\n+                if (!addr.IsValid()) {\n+                    // No tried table collisions. Select a new table address\n+                    // for our feeler.\n+                    addr = addrman.Select(true);\n+                } else if (AlreadyConnectedToAddress(addr)) {\n+                    // If test-before-evict logic would have us connect to a\n+                    // peer that we're already connected to, just mark that\n+                    // address as Good(). We won't be able to initiate the\n+                    // connection anyway, so this avoids inadvertently evicting\n+                    // a currently-connected peer.\n+                    addrman.Good(addr);\n+                    // Select a new table address for our feeler instead.\n+                    addr = addrman.Select(true);\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r513627928",
      "id" : 513627928,
      "line" : 2022,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYyNzkyOA==",
      "original_commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "original_line" : 2022,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 40,
      "pull_request_review_id" : 518911437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-28T17:24:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513627928",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I haven't looked at the code here, but just tried to verify the test-before-evict bug you mention. I believe it is indeed there, and will result in the conncted node being forgotten. Consider the following scenario:\r\n* Addrman has a `tried` entry A and a `new` entry B that would collide with A if moved to the `tried` table. There is a (long term) ongoining outbound connection to A currently.\r\n* An outbound connection to B succeeds (`VERSION` is received) as a non-block-only connection, calling `Good(B)`. Due to the collision, B is not marked `tried`, but instead recorded in the `m_tried_collisions` set.\r\n* `ConnectionType::FEELER` connections during this state have a high chance of returning A from `SelectTriedCollision()` now. However, `OpenNetworkConnection` on those will fail, as an existing connection to A exists. No addrman state changes result from this (neither `nLastSuccess` or `nLastTry` are updated).\r\n* The first time `ResolveCollisions` is called at least 4 hours after the connection to A was opened, and after successfully connecting to B, it will see all connections to A as over `ADDRMAN_REPLACEMENT_HOURS` old. Assuming the last connection to B at this point is also at least 40 minutes ago (which seems likely), B will take A's place in the `tried` table.",
      "created_at" : "2020-10-28T23:15:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-718261810",
      "id" : 718261810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxODI2MTgxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-29T00:09:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718261810",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r513833238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513833238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very happy to see this rewritten. The logic where we always called `SelectTriedCollision` and then throw out the result if `!fFeeler` was very confusing (and inefficient...).",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-29T00:06:09Z",
      "diff_hunk" : "@@ -1999,11 +1999,30 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            CAddrInfo addr = addrman.SelectTriedCollision();\n+            CAddrInfo addr;\n \n-            // SelectTriedCollision returns an invalid address if it is empty.\n-            if (!fFeeler || !addr.IsValid()) {\n-                addr = addrman.Select(fFeeler);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r513833238",
      "id" : 513833238,
      "line" : 2001,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgzMzIzOA==",
      "original_commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "original_line" : 2006,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 21,
      "pull_request_review_id" : 519184547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-29T00:08:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513833238",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "approach ACK - I've read through the code, understand the proposed changes, and think they make sense. \r\n\r\nthe update to `Connected` looks good & I agree that the test-before-evict logic was bugged & this patch fixes it. I also appreciate the refactoring to `ThreadOpenConnections`, I've looked at that code before but wasn't able to fully retain the pieces to understand the big picture, but with this patch its both fixed and makes sense to me now. \r\n\r\nonly thing holding me back from a code review ACK is wanting to better understand the full implications of `Good` to verify that there are no other problems by calling it for block-relay-only connections in both places. I think we are _good_ ð but I'm going to continue digging to fully convince myself.\r\n\r\nalso- the travis failure is bizarre ! https://travis-ci.org/github/bitcoin/bitcoin/jobs/739321630\r\nno error, no logs, nothing. doesn't even look like a timeout! ",
      "created_at" : "2020-10-29T05:05:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#issuecomment-718362016",
      "id" : 718362016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20187",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxODM2MjAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-29T05:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718362016",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514646785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514646785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would mention the reference to anchors you made in PR description. Otherwise, I don't think this change is that much valuable if we had only non-persistent block-relay peers. I don't see how learning a past connection would significantly help an attacker to disrupt them further in the future, `CAddrInfo.nTime` isn't considered by `AddrMan::Select` ?\r\n\r\nNote, maybe we should rename `AddrMan::Connected` to `HasBeenConnected`, current comment \"Mark an entry as _currently_-connected to\" is confusing.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T00:48:45Z",
      "diff_hunk" : "@@ -854,7 +855,8 @@ void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected) {\n+    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {\n+        // Note: we avoid changing visible addrman state for block-relay-only peers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514646785",
      "id" : 514646785,
      "line" : 859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0Njc4NQ==",
      "original_commit_id" : "daf55531260833d597ee599e2d289ea1be0b1d9c",
      "original_line" : 859,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 16,
      "pull_request_review_id" : 520249261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T02:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514646785",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514692064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514692064"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the peer connection is initiated based on hostname (e.g `-seednode`, `-addnode`) we have to resolve first the provided hostname to obtain the addr (in `ConnectNode`).  If we succeed this resolution, we store the hostname (`MaybeSetAddrName`). In case of future connection also from hostname (`OpenNetworkConnection` with `pszDest != null`), for already-open connection check step, search is done on this subset (L2191).\r\n\r\nBased on this observation,  the second lookup with string appears as redundant, as each connected peer must be in findable by `CNetAddr`. \r\n\r\nThat said, I agree it doesn't change behavior.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T01:56:16Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514692064",
      "id" : 514692064,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MjA2NA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 520249261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T02:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514692064",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514721020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514721020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ariard If there is a name proxy, we never resolve ourselves, and instead make a proxy connection to the specified name (by asking the proxy to do the resolving for us). In that case there is no `CNetAddr` known.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T02:27:25Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514721020",
      "id" : 514721020,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDcyMTAyMA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 520337667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T02:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514721020",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514746020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514746020"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa But `CAddress& addr` is a `CNetAddr` and `addr.ToStringIPPort()` generates a string from the `CNetAddr` member variables? As far as I can see there's no way to initialise `CNetAddr::m_addr` to something like `::1` or `0:0:0:0:0:0:0:1` which would be disambiguated by converting to a canonical string?",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T02:53:17Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514746020",
      "id" : 514746020,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc0NjAyMA==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 520344955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T02:53:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514746020",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514747385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514747385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, right. What I said isn't relevant here.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T02:54:41Z",
      "diff_hunk" : "@@ -348,6 +348,11 @@ CNode* CConnman::FindNode(const CService& addr)\n     return nullptr;\n }\n \n+bool CConnman::AlreadyConnectedToPeer(const CAddress& addr)\n+{\n+    return FindNode(static_cast<CNetAddr>(addr)) || FindNode(addr.ToStringIPPort());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r514747385",
      "id" : 514747385,
      "in_reply_to_id" : 511847746,
      "line" : 359,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc0NzM4NQ==",
      "original_commit_id" : "dafde15cc04fbeb5851fa98fec34dd9f2a7e8420",
      "original_line" : 359,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 520345355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T02:54:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514747385",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515137714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515137714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I would mention the reference to anchors you made in PR description. Otherwise, I don't think this change is that much valuable if we had only non-persistent block-relay peers. I don't see how learning a past connection would significantly help an attacker to disrupt them further in the future, CAddrInfo.nTime isn't considered by AddrMan::Select ?\r\n\r\nPerhaps it doesn't, but I think if we left addrman truly unchanged by block-relay-only peers then that would _definitely_ mean that we can't leak topology information via addrman.  I reversed my view on whether we should call `Good()` for these peers after realizing we didn't have machinery in place to prevent addrman eviction and it seemed like that could happen too easily (and actually more easily for long-lived block-relay-only peer connections, because their timestamps could never update), but if we did come up with an auxiliary data structure for remembering block-relay-only peers (perhaps, just by making the anchor connections data structure more robust to temporarily losing connectivity) then I might argue again that we should switch the way we do things in the future to try to make these connections not interact with addrman whatsoever.  You could imagine for instance having a separate, smaller \"block-relay-addrman\" that samples from the main addrman whenever it needs more addresses but otherwise has its own eviction rules and never shares its state through any externally probable interface.\r\n\r\nSo philosophically I still think no interaction should be our default way of thinking, and an exception to that is being proposed in this PR because I don't have a better alternative right now.  But I would hate for someone to later argue that it's somehow safe to make these addrman calls because we don't know of an information leak -- the point is to isolate this part of the p2p protocol so there can't be an information leak, even one we haven't thought of.  (Leaving this call to `Connected()` on these peer addresses in the first place was a big oversight in #15759, in my opinion.)",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T14:27:50Z",
      "diff_hunk" : "@@ -854,7 +855,8 @@ void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected) {\n+    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {\n+        // Note: we avoid changing visible addrman state for block-relay-only peers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515137714",
      "id" : 515137714,
      "in_reply_to_id" : 514646785,
      "line" : 859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNzcxNA==",
      "original_commit_id" : "daf55531260833d597ee599e2d289ea1be0b1d9c",
      "original_line" : 859,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 16,
      "pull_request_review_id" : 520720764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T14:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515137714",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515236277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515236277"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line confused me into thinking that `addrman::Connected()` could also be called for inbound peers on disconnection - which would be not ideal, because then our peer might be leaking the information about our long-term blocks-only connections by updating `nTime` on their side of the connection.\r\n\r\nHowever, if I read the code correctly, `fCurrentlyConnected`, despite its name, actually rather tracks whether it is an sucessfully connected outbound connection, so that this is not an issue (although keeping a flag for that does not seem necessary).",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T16:50:13Z",
      "diff_hunk" : "@@ -854,7 +855,8 @@ void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected) {\n+    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515236277",
      "id" : 515236277,
      "line" : 858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNjI3Nw==",
      "original_commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "original_line" : 858,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 520852711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T17:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515236277",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515276256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515276256"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you're exactly right. See https://github.com/bitcoin/bitcoin/pull/20187#discussion_r511795306.\r\n\r\nIt'd be great to consolidate the `pfrom.IsInboundConn()` check here too. That could easily be done as a follow up, eliminating `fCurrentlyConnected` entirely (and using `fSuccessfullyConnected` to check that the version handshake is complete).",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-10-30T17:47:26Z",
      "diff_hunk" : "@@ -854,7 +855,8 @@ void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected) {\n+    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515276256",
      "id" : 515276256,
      "in_reply_to_id" : 515236277,
      "line" : 858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NjI1Ng==",
      "original_commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "original_line" : 858,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 520902161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-30T17:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515276256",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515567688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515567688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> So philosophically I still think no interaction should be our default way of thinking, and an exception to that is being proposed in this PR because I don't have a better alternative right now. But I would hate for someone to later argue that it's somehow safe to make these addrman calls because we don't know of an information leak\r\n\r\nRight, I concede fixing the information leak in itself is valuable even if it's not currently exploitable by an attacker to interfere with our non-persistent block-relay peer selection. This one might change in the future and turn this leak as a more exploitable, without the timestamp relation being recollected.\r\n\r\nI agree it's a more temporary fix waiting to remove timestamps from addr messages as discussed during last p2p meeting. Going further, even assuming a separate, smaller \"block-relay-addrman\", I'm still concerned about the block-relay peers not participating in addr-relay compared to other peers, this fact which might observable in itself to break the hiddeness property of block-relay peers. E.g I was thinking about an adversary tweaking nServices to create a unique fingerprint and observe the absence of propagation on a presumed block-relay link to victim node. I guess isolating addr-relay on its own would make us all more confident, though it's a more complex, long-term change.",
      "commit_id" : "16d9bfc4172b4f6ce24a3cd1a1cfa3933cd26751",
      "created_at" : "2020-11-01T02:54:33Z",
      "diff_hunk" : "@@ -854,7 +855,8 @@ void PeerManager::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected) {\n+    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {\n+        // Note: we avoid changing visible addrman state for block-relay-only peers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20187#discussion_r515567688",
      "id" : 515567688,
      "in_reply_to_id" : 514646785,
      "line" : 859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU2NzY4OA==",
      "original_commit_id" : "daf55531260833d597ee599e2d289ea1be0b1d9c",
      "original_line" : 859,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 16,
      "pull_request_review_id" : 521188263,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20187",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-01T02:56:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515567688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
