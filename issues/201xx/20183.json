{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "I've been seeing consistent failures from both of these tests on my macOS machine:\r\n```bash\r\nrpc_createmultisig.py --descriptors   | â Failed  | 105 s\r\nwallet_keypool.py --descriptors       | â Failed  | 127 s\r\n\r\nALL                                   | â Failed  | 10130 s (accumulated) \r\n```\r\n\r\n### wallet_keypool.py --descriptors\r\n```bash\r\n92/172 - wallet_keypool.py --descriptors failed, Duration: 127 s\r\n\r\nstdout:\r\n2020-10-19T02:52:36.843000Z TestFramework (INFO): Initializing test directory /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_â¿_ð_20201019_104219/wallet_keypool_91\r\n2020-10-19T02:53:42.984000Z TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 168, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1198, in getresponse\r\n    response.begin()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 297, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 258, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/socket.py\", line 576, in readinto\r\n    return self._sock.recv_into(b)\r\nsocket.timeout: timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/wallet_keypool.py\", line 132, in run_test\r\n    nodes[0].keypoolrefill(100)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 108, in _request\r\n    return self._get_response()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 175, in _get_response\r\n    self.__conn.timeout)})\r\ntest_framework.authproxy.JSONRPCException: 'keypoolrefill' RPC took longer than 30.000000 seconds. Consider using larger timeout for calls that take longer to return. (-344)\r\n2020-10-19T02:53:43.103000Z TestFramework (INFO): Stopping nodes\r\n2020-10-19T02:53:43.136000Z TestFramework.node0 (ERROR): Unable to stop node.\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_node.py\", line 319, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1142, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 975, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\n2020-10-19T02:54:43.167000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n'''\r\n[node 0] Cleaning up leftover process\r\n\r\n\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/wallet_keypool.py\", line 192, in <module>\r\n    KeyPoolTest().main()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 149, in main\r\n    exit_code = self.shutdown()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 273, in shutdown\r\n    self.stop_nodes()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 521, in stop_nodes\r\n    node.wait_until_stopped()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_node.py\", line 362, in wait_until_stopped\r\n    wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/util.py\", line 260, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n''' not true after 60.0 seconds\r\n```\r\n\r\n### rpc_createmultisig.py  --descriptors\r\n```bash\r\n117/172 - rpc_createmultisig.py --descriptors failed, Duration: 105 s\r\n\r\nstdout:\r\n2020-10-19T02:55:06.232000Z TestFramework (INFO): Initializing test directory /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_â¿_ð_20201019_104219/rpc_createmultisig_68\r\n2020-10-19T02:55:21.473000Z TestFramework (INFO): Generating blocks ...\r\n2020-10-19T02:55:51.511000Z TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 168, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1198, in getresponse\r\n    response.begin()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 297, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 258, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/socket.py\", line 576, in readinto\r\n    return self._sock.recv_into(b)\r\nsocket.timeout: timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/rpc_createmultisig.py\", line 48, in run_test\r\n    node0.generate(149)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_node.py\", line 298, in generate\r\n    return self.generatetoaddress(nblocks=nblocks, address=self.get_deterministic_priv_key().address, maxtries=maxtries)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 108, in _request\r\n    return self._get_response()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 175, in _get_response\r\n    self.__conn.timeout)})\r\ntest_framework.authproxy.JSONRPCException: 'generatetoaddress' RPC took longer than 30.000000 seconds. Consider using larger timeout for calls that take longer to return. (-344)\r\n2020-10-19T02:55:51.600000Z TestFramework (INFO): Stopping nodes\r\n2020-10-19T02:55:51.631000Z TestFramework.node0 (ERROR): Unable to stop node.\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_node.py\", line 319, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 1142, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/http/client.py\", line 975, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\n2020-10-19T02:56:51.850000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n'''\r\n\r\n\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/rpc_createmultisig.py\", line 221, in <module>\r\n    RpcCreateMultiSigTest().main()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 149, in main\r\n    exit_code = self.shutdown()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 273, in shutdown\r\n    self.stop_nodes()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_framework.py\", line 521, in stop_nodes\r\n    node.wait_until_stopped()\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/test_node.py\", line 362, in wait_until_stopped\r\n    wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\r\n  File \"/Users/michael/github/bitcoin-merge-tree/test/functional/test_framework/util.py\", line 260, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n    def is_node_stopped(self):\r\n        \"\"\"Checks whether the node has stopped.\r\n\r\n        Returns True if the node has stopped. False otherwise.\r\n        This method is responsible for freeing resources (self.process).\"\"\"\r\n        if not self.running:\r\n            return True\r\n        return_code = self.process.poll()\r\n        if return_code is None:\r\n            return False\r\n\r\n        # process has stopped. Assert that it didn't return an error code.\r\n        assert return_code == 0, self._node_msg(\r\n            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\r\n        self.running = False\r\n        self.process = None\r\n        self.rpc_connected = False\r\n        self.rpc = None\r\n        self.log.debug(\"Node stopped\")\r\n        return True\r\n''' not true after 60.0 seconds\r\n```",
   "closed_at" : "2022-01-21T02:25:36Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 5,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183/comments",
   "created_at" : "2020-10-19T03:05:47Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/20183",
   "id" : 724221748,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      },
      {
         "color" : "660000",
         "default" : false,
         "description" : "",
         "id" : 234879,
         "name" : "macOS",
         "node_id" : "MDU6TGFiZWwyMzQ4Nzk=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/macOS"
      },
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "006688",
         "default" : false,
         "description" : null,
         "id" : 477890092,
         "name" : "Questions and Help",
         "node_id" : "MDU6TGFiZWw0Nzc4OTAwOTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU3MjQyMjE3NDg=",
   "number" : 20183,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183/timeline",
   "title" : "createmultisig --descriptors & wallet_keypool --descriptors tests failing",
   "updated_at" : "2022-01-21T02:25:36Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20183",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
