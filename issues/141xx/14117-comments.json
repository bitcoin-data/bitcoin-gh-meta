[
   {
      "author_association" : "MEMBER",
      "body" : "IÃ¢ÂÂm curious to know why these donÃ¢ÂÂt get picked up during review, instead of always Ã¢ÂÂjust afterÃ¢ÂÂ a PR has been merged? If there is a too being used, can it be run on the PRs?",
      "created_at" : "2018-08-31T07:02:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417572093",
      "id" : 417572093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzU3MjA5Mw==",
      "updated_at" : "2018-08-31T07:02:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417572093",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake I do quite a lot of checking using various automated jobs, this includes: custom linting, running static analysers on the code base, running tests under dynamic analysers, spell checking of documentation, compiling under various compilers with a wide range of warning flags enabled, etc, etc. These jobs currently run only against `master` due to resource limitations.\r\n\r\nIdeally these checks would run in Travis (assuming the false positive rate is near zero and the runtime is low): that would make sure these issues don't reach `master`, solve the resource limitations and keep the entire process automated. Could it be better? :-)\r\n\r\nIn order to catch a larger proportion of these issues pre-merge please help reaching that goal by taking a few minutes to review some of these open PRs of mine:\r\n* To allow for automated thread safety checking (`-Wthread-safety-analysis`) under Travis: please help by reviewing #11634, #11652, #13115, #13123, #13128, #14108 and the tracking issue #13129\r\n* To allow for automated detection of accidentally ignored return values (`[[nodiscard]]`) under Travis: please help by reviewing #13864 and #13815\r\n* To allow for automated integer overflow/wraparound checking (`-fsanitize=integer`) under Travis: please help by reviewing #11535 and #11551\r\n* To allow for automated spell checking (`codespell`) under Travis: please help by reviewing #13954\r\n* To allow for automated checking of Doxygen comments (`-Wdocumentation`) under Travis: please help by reviewing #13914\r\n* To allow for automated detection of general issues Ã¢ÂÂ please help increase signal to noise by fixing/avoiding compiler warnings or static analyzer warnings (by fixing the cause of the warning at hand or by simply guiding the static analyzers better): please help by reviewing #14117 (this PR), #14094, #14088, #13969, #13909, #13897, #13548, #13766, #13546, #13392, #13382 and #13249.\r\n* To improve the linting/fuzzing/testing infrastructure in general: please help by reviewing #14092, #14010 and #14115\r\n\r\nThanks for helping out!\r\n\r\nThe C++ Core Guidelines sum up my view on the benefits of mechanical checking over human reviewing for this subclass of issues:\r\n\r\n> Enforcement might be done by code review, by static analysis, by compiler, or by run-time checks. Wherever possible, we prefer Ã¢ÂÂmechanicalÃ¢ÂÂ checking (humans are slow, inaccurate, and bore easily) and static checking.",
      "created_at" : "2018-08-31T08:50:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417598189",
      "id" : 417598189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzU5ODE4OQ==",
      "updated_at" : "2018-08-31T09:05:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417598189",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> IÃ¢ÂÂm curious to know why these donÃ¢ÂÂt get picked up during  review, instead of always Ã¢ÂÂjust afterÃ¢ÂÂ a PR has been merged? If there is  a too being used, can it be run on the PRs?\r\n\r\nIMO, it would make more sense to do a periodical PR that cleans up these things, grouped together, instead of \"just after\" a PR.\r\n\r\nThere's really no hurry to get rid of an unused local variable, no need to immediately open a PR.\r\n\r\nWe've discussed this before.\r\n",
      "created_at" : "2018-08-31T11:27:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417636016",
      "id" : 417636016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzYzNjAxNg==",
      "updated_at" : "2018-08-31T11:27:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417636016",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree with @laanwj. If there was a way to make travis yell at you when there is a \"unused local variable\" or $some_other_non_critical_but_should_be_cleaned_up_before_the_next_major_release_style_issue, then fix them immediately on master if they slip in for whatever reason.\r\n\r\nOtherwise a monthly pull request with all minor fixes (or one right before branch-off every six months) should be enough. Note that you can always keep a local `master` branch with all you fixes, so that your automated jobs are happy during that time.",
      "created_at" : "2018-08-31T12:12:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417645195",
      "id" : 417645195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzY0NTE5NQ==",
      "updated_at" : "2018-08-31T12:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417645195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utCAK 0e5ac7e.\r\n\r\nAgree with the batch cleanup.\r\n\r\nWe could add a GH label specific to \"request\" @practicalswift analysis so he can filter those?",
      "created_at" : "2018-08-31T23:04:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417810140",
      "id" : 417810140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzgxMDE0MA==",
      "updated_at" : "2018-08-31T23:04:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417810140",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This can be combined into #14094, as both are removing unused variables.",
      "created_at" : "2018-09-02T08:21:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14117#issuecomment-417913371",
      "id" : 417913371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14117",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkxMzM3MQ==",
      "updated_at" : "2018-09-02T08:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417913371",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
