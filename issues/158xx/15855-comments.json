[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (Tidy up ValidationState interface by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-19T17:43:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-484968085",
      "id" : 484968085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDk2ODA4NQ==",
      "updated_at" : "2019-05-13T15:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484968085",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why was this moved?",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-04-21T22:50:03Z",
      "diff_hunk" : "@@ -245,9 +246,11 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n BOOST_FIXTURE_TEST_CASE(coin_mark_dirty_immature_credit, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);\n+    auto locked_chain = chain->lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184092",
      "id" : 277184092,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDA5Mg==",
      "original_commit_id" : "fa90b1a2e1c9d51848c0e1b0a92e14c04a87c746",
      "original_position" : 59,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 228929315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184092",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184156"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This gives the bad impression `cs_main` is necessary.",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-04-21T22:52:34Z",
      "diff_hunk" : "@@ -66,29 +66,41 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n \n     // Test 1: block with both of those transactions should be rejected.\n     block = CreateAndProcessBlock(spends, scriptPubKey);\n-    BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+    {\n+        LOCK(cs_main);\n+        BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+    }\n \n     // Test 2: ... and should be rejected if spend1 is in the memory pool\n     BOOST_CHECK(ToMemPool(spends[0]));\n     block = CreateAndProcessBlock(spends, scriptPubKey);\n-    BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n-    mempool.clear();\n+    {\n+        LOCK(cs_main);\n+        BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+        mempool.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184156",
      "id" : 277184156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDE1Ng==",
      "original_commit_id" : "fa90b1a2e1c9d51848c0e1b0a92e14c04a87c746",
      "original_position" : 44,
      "path" : "src/test/txvalidationcache_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 228929315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184156",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed feedback by @promag ",
      "created_at" : "2019-04-22T13:08:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-485413943",
      "id" : 485413943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTQxMzk0Mw==",
      "updated_at" : "2019-04-22T13:08:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485413943",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-05-07T16:30:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-490153673",
      "id" : 490153673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE1MzY3Mw==",
      "updated_at" : "2019-05-07T16:30:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490153673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK face05a080c081fc426ff34ecb39ac072710034b.",
      "created_at" : "2019-05-13T15:04:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491860599",
      "id" : 491860599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MTg2MDU5OQ==",
      "updated_at" : "2019-05-13T15:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491860599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283437966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283437966"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I might be missing something but shouldn't `LockAnnotation` be used only when we are holding the mutex but the compiler thread analysis doesn't understand it? In this case we aren't holding `cs_main` here, right?\r\n\r\nIf it is used simply to opt-out of thread-safety analysis (when we are not holding the mutex) then `NO_THREAD_SAFETY_ANALYSIS` should be used, no?",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-05-13T16:47:25Z",
      "diff_hunk" : "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283437966",
      "id" : 283437966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQzNzk2Ng==",
      "original_commit_id" : "face05a080c081fc426ff34ecb39ac072710034b",
      "original_position" : 18,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 236795346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283437966",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283439664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283439664"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The tests are single threaded, so taking a lock is equivalent to pretending it is taken.\r\n\r\nNot sure how I can use `NO_THREAD_SAFETY_ANALYSIS` to achieve that.",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-05-13T16:51:48Z",
      "diff_hunk" : "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283439664",
      "id" : 283439664,
      "in_reply_to_id" : 283437966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQzOTY2NA==",
      "original_commit_id" : "face05a080c081fc426ff34ecb39ac072710034b",
      "original_position" : 18,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 236797543,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283439664",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283444423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283444423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I know the tests are single-threaded but I think it might be confusing for newcomers if we use `LockAnnotation` to both a.) guarantee to the compiler that the lock is taken (like in `src/interfaces/chain.cpp`), and b.) to opt-out of thread safety analysis when the lock is not taken (like in this file).\r\n\r\nJust to make it crystal clear to readers what we are doing we could use different names for these two use-cases? (If using `NO_THREAD_SAFETY_ANALYSIS` is not an option.)\r\n\r\nSomething like `struct SCOPED_LOCKABLE DisableThreadSafetyAnalysis` (like `LockAnnotation`) or `#define DISABLE_THREAD_SAFETY_ANALYSIS(cs, code) [&] NO_THREAD_SAFETY_ANALYSIS { code; }()` (like `WITH_LOCK`)?",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-05-13T17:04:04Z",
      "diff_hunk" : "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283444423",
      "id" : 283444423,
      "in_reply_to_id" : 283437966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ0NDQyMw==",
      "original_commit_id" : "face05a080c081fc426ff34ecb39ac072710034b",
      "original_position" : 18,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 236803640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283444423",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283455523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283455523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment instead. Is that fine?",
      "commit_id" : "fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-05-13T17:33:32Z",
      "diff_hunk" : "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283455523",
      "id" : 283455523,
      "in_reply_to_id" : 283437966,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ1NTUyMw==",
      "original_commit_id" : "face05a080c081fc426ff34ecb39ac072710034b",
      "original_position" : 18,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 236817736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
      "updated_at" : "2019-05-13T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283455523",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke The added comment makes it easier to understand for human reviewers. That is good, but I still think we would be better off if we used different annotations for the \"opt-out of analysis\" and \"give the compiler a locking guarantee when it fails to understand our code\" use cases:\r\n\r\nWhen analysing locks using static analysis etc I want to be able to let `LockAnnotation` imply the stronger \"`AssertLockHeld(Ã¢ÂÂ¦)`\" (instead of the weaker `NO_THREAD_SAFETY_ANALYSIS`).\r\n\r\nThis change breaks that implication.\r\n\r\nPerhaps `--enable-debug` builds should do `AssertLockHeld(Ã¢ÂÂ¦)` as part of the `LockAnnotation`ctor  to make sure the `LockAnnotation` guarantees hold up over time? The opt-out variant shouldn't have that (obviously) :-)",
      "created_at" : "2019-05-13T18:30:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491935276",
      "id" : 491935276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MTkzNTI3Ng==",
      "updated_at" : "2019-05-13T18:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491935276",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Perhaps --enable-debug builds should do AssertLockHeld(Ã¢ÂÂ¦) as part of the LockAnnotationctor to make sure the LockAnnotation guarantees hold up over time\r\n\r\nSounds good. I have addressed your concerns, but this suggestion should go into a follow-up pull request?",
      "created_at" : "2019-05-13T18:47:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491940936",
      "id" : 491940936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MTk0MDkzNg==",
      "updated_at" : "2019-05-13T18:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491940936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fa3c6511435149782545ac0d09d4722dc115d709",
      "created_at" : "2019-05-14T05:25:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-492083466",
      "id" : 492083466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MjA4MzQ2Ng==",
      "updated_at" : "2019-05-14T05:25:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492083466",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
