[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276680164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276680164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Accessing `m_last_block_processed` requires the `cs_wallet` lock. I think to make this work you'll need to:\r\n- grab `cs_wallet`\r\n- access `m_last_block_processed`\r\n- release `cs_wallet`\r\n- call the `waitForNotificationsUpToTip` interface method\r\n\r\nAlternatively, we could make `m_last_block_processed` an atomic.\r\n\r\nThoughts, @ryanofsky ?",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-18T14:09:27Z",
      "diff_hunk" : "@@ -1288,24 +1288,11 @@ void CWallet::UpdatedBlockTip()\n \n void CWallet::BlockUntilSyncedToCurrentChain() {\n     AssertLockNotHeld(cs_wallet);\n-\n-    {\n-        // Skip the queue-draining stuff if we know we're caught up with\n-        // chainActive.Tip()...\n-        // We could also take cs_wallet here, and call m_last_block_processed\n-        // protected by cs_wallet instead of cs_main, but as long as we need\n-        // cs_main here anyway, it's easier to just call it cs_main-protected.\n-        auto locked_chain = chain().lock();\n-\n-        if (!m_last_block_processed.IsNull() && locked_chain->isPotentialTip(m_last_block_processed)) {\n-            return;\n-        }\n-    }\n-\n-    // ...otherwise put a callback in the validation interface queue and wait\n+    // Skip the queue-draining stuff if we know we're caught up with\n+    // chainActive.Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    chain().waitForNotifications();\n+    chain().waitForNotificationsUpToTip(m_last_block_processed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276680164",
      "id" : 276680164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjY4MDE2NA==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 228307233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276680164",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15855](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15855.html) ([refactor] interfaces: Add missing LockAnnotation for cs_main by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-18T15:13:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-484550891",
      "id" : 484550891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDU1MDg5MQ==",
      "updated_at" : "2019-05-01T18:41:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484550891",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276717118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276717118"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the \"wait up to\" name I suggested earlier in the todo comment is misleading, because this isn't really deciding what to wait for based on the argument, but deciding whether to wait based on the argument.\r\n\r\nI think a better name might be `waitForNotificationsIfNewBlocks(old_tip)` or `waitForNotificationsIfNewBlocksConnected(old_tip)`",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-18T15:31:13Z",
      "diff_hunk" : "@@ -271,8 +260,10 @@ class Chain\n     //! Register handler for notifications.\n     virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n \n-    //! Wait for pending notifications to be handled.\n-    virtual void waitForNotifications() = 0;\n+    //! Wait for pending notifications to be processed unless block hash points to the current,\n+    //! chain tip, or to a possible descendant of the current chain tip that isn't currently\n+    //! connected.\n+    virtual void waitForNotificationsUpToTip(const uint256& hash) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276717118",
      "id" : 276717118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjcxNzExOA==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 34,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 228355762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276717118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276720731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276720731"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, John's right this needs to synchronize access to m_last_block_processed. Since I don't think there's a straightforward way to make uint256 atomic, maybe a clean way to do this would be to add a new `sync.h` macro:\r\n\r\n```diff\r\n-chain().waitForNotificationsUpToTip(m_last_block_processed);\r\n+chain().waitForNotificationsUpToTip(WITH_LOCK(cs_wallet, return m_last_block_processed));\r\n```\r\n\r\n```c++\r\n//! Run code while locking a mutex.\r\n//!\r\n//! Examples:\r\n//!\r\n//!   WITH_LOCK(cs, shared_val = shared_val + 1);\r\n//!\r\n//!   int val = WITH_LOCK(cs, return shared_val);\r\n//!\r\n#define WITH_LOCK(cs, code) [&]{ LOCK(cs); code; }()\r\n```",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-18T15:39:39Z",
      "diff_hunk" : "@@ -1288,24 +1288,11 @@ void CWallet::UpdatedBlockTip()\n \n void CWallet::BlockUntilSyncedToCurrentChain() {\n     AssertLockNotHeld(cs_wallet);\n-\n-    {\n-        // Skip the queue-draining stuff if we know we're caught up with\n-        // chainActive.Tip()...\n-        // We could also take cs_wallet here, and call m_last_block_processed\n-        // protected by cs_wallet instead of cs_main, but as long as we need\n-        // cs_main here anyway, it's easier to just call it cs_main-protected.\n-        auto locked_chain = chain().lock();\n-\n-        if (!m_last_block_processed.IsNull() && locked_chain->isPotentialTip(m_last_block_processed)) {\n-            return;\n-        }\n-    }\n-\n-    // ...otherwise put a callback in the validation interface queue and wait\n+    // Skip the queue-draining stuff if we know we're caught up with\n+    // chainActive.Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    chain().waitForNotifications();\n+    chain().waitForNotificationsUpToTip(m_last_block_processed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276720731",
      "id" : 276720731,
      "in_reply_to_id" : 276680164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjcyMDczMQ==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 228355762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276720731",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276726392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276726392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like the macro, but I don't like putting the complete expression in the `waitForNotificationsUpToTip()` function call. It's too easy for a casual observer to think that the lock is held for the entire call to `waitForNotificationsUpToTip()` (which of course would cause a deadlock). How about:\r\n\r\n```c++\r\nuint256 last_block_hash = WITH_LOCK(cs_wallet, m_last_block_processed);\r\nchain().waitForNotificationsUpToTip(last_block_hash);\r\n```\r\n\r\nwhich perhaps compiles to the same thing.",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-18T15:53:03Z",
      "diff_hunk" : "@@ -1288,24 +1288,11 @@ void CWallet::UpdatedBlockTip()\n \n void CWallet::BlockUntilSyncedToCurrentChain() {\n     AssertLockNotHeld(cs_wallet);\n-\n-    {\n-        // Skip the queue-draining stuff if we know we're caught up with\n-        // chainActive.Tip()...\n-        // We could also take cs_wallet here, and call m_last_block_processed\n-        // protected by cs_wallet instead of cs_main, but as long as we need\n-        // cs_main here anyway, it's easier to just call it cs_main-protected.\n-        auto locked_chain = chain().lock();\n-\n-        if (!m_last_block_processed.IsNull() && locked_chain->isPotentialTip(m_last_block_processed)) {\n-            return;\n-        }\n-    }\n-\n-    // ...otherwise put a callback in the validation interface queue and wait\n+    // Skip the queue-draining stuff if we know we're caught up with\n+    // chainActive.Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    chain().waitForNotifications();\n+    chain().waitForNotificationsUpToTip(m_last_block_processed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276726392",
      "id" : 276726392,
      "in_reply_to_id" : 276680164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjcyNjM5Mg==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 228367675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276726392",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276973196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276973196"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes agree wasn't clear so I added `Tip` but even followed `waitForNotificationsIfNewBlocksConnected(old_tip)` suggestion, a little bit more verbose but far more insightful",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-19T12:19:18Z",
      "diff_hunk" : "@@ -271,8 +260,10 @@ class Chain\n     //! Register handler for notifications.\n     virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n \n-    //! Wait for pending notifications to be handled.\n-    virtual void waitForNotifications() = 0;\n+    //! Wait for pending notifications to be processed unless block hash points to the current,\n+    //! chain tip, or to a possible descendant of the current chain tip that isn't currently\n+    //! connected.\n+    virtual void waitForNotificationsUpToTip(const uint256& hash) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276973196",
      "id" : 276973196,
      "in_reply_to_id" : 276717118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njk3MzE5Ng==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 34,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 228675302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276973196",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276973649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276973649"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes, wasn't sure of cs_wallet lock covering. Added a WITH_LOCK commit and used to get back m_last_block_processed as showed in example.",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-19T12:21:54Z",
      "diff_hunk" : "@@ -1288,24 +1288,11 @@ void CWallet::UpdatedBlockTip()\n \n void CWallet::BlockUntilSyncedToCurrentChain() {\n     AssertLockNotHeld(cs_wallet);\n-\n-    {\n-        // Skip the queue-draining stuff if we know we're caught up with\n-        // chainActive.Tip()...\n-        // We could also take cs_wallet here, and call m_last_block_processed\n-        // protected by cs_wallet instead of cs_main, but as long as we need\n-        // cs_main here anyway, it's easier to just call it cs_main-protected.\n-        auto locked_chain = chain().lock();\n-\n-        if (!m_last_block_processed.IsNull() && locked_chain->isPotentialTip(m_last_block_processed)) {\n-            return;\n-        }\n-    }\n-\n-    // ...otherwise put a callback in the validation interface queue and wait\n+    // Skip the queue-draining stuff if we know we're caught up with\n+    // chainActive.Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    chain().waitForNotifications();\n+    chain().waitForNotificationsUpToTip(m_last_block_processed);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r276973649",
      "id" : 276973649,
      "in_reply_to_id" : 276680164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njk3MzY0OQ==",
      "original_commit_id" : "1bcf91d49f0a399d505207428ac38f77e9c4e47c",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 228675891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276973649",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r277005300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277005300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: please rename the argument `old_tip` to be consistent with the function declaration.",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-19T14:48:52Z",
      "diff_hunk" : "@@ -358,7 +352,16 @@ class ChainImpl : public Chain\n     {\n         return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n     }\n-    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    void waitForNotificationsIfNewBlocksConnected(const uint256& hash) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r277005300",
      "id" : 277005300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzAwNTMwMA==",
      "original_commit_id" : "a4c51ed8ee2b087c1228402c3d4e665b4f0fcf37",
      "original_position" : 18,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 228716400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277005300",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r277005771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277005771"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: remove trailing comma",
      "commit_id" : "422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-19T14:50:22Z",
      "diff_hunk" : "@@ -271,8 +260,10 @@ class Chain\n     //! Register handler for notifications.\n     virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n \n-    //! Wait for pending notifications to be handled.\n-    virtual void waitForNotifications() = 0;\n+    //! Wait for pending notifications to be processed unless block hash points to the current,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#discussion_r277005771",
      "id" : 277005771,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzAwNTc3MQ==",
      "original_commit_id" : "a4c51ed8ee2b087c1228402c3d4e665b4f0fcf37",
      "original_position" : 31,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 228716400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15842",
      "updated_at" : "2019-04-23T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277005771",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Noted for the github trick, solved the nits on deb5f75",
      "created_at" : "2019-04-20T12:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-485107977",
      "id" : 485107977,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTEwNzk3Nw==",
      "updated_at" : "2019-04-20T12:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485107977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Doesn't build. Please build/test locally before pushing :slightly_smiling_face: ",
      "created_at" : "2019-04-22T15:01:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-485442305",
      "id" : 485442305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTQ0MjMwNQ==",
      "updated_at" : "2019-04-22T15:01:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485442305",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for that, working on dev scripts to avoid this kind of mistake even for nits updates!",
      "created_at" : "2019-04-23T13:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-485793197",
      "id" : 485793197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTc5MzE5Nw==",
      "updated_at" : "2019-04-23T13:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485793197",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 4226779 with GUARDED_BY annotation addition.\r\n\r\n(btw @ryanofsky, I've started to work on removing bits of Chain::Lock interface, notably the GetDepthInMainChain by tracking last_block_processed_height in CWallet, hope to PR soon to get feedback)",
      "created_at" : "2019-04-23T18:13:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-485915777",
      "id" : 485915777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTkxNTc3Nw==",
      "updated_at" : "2019-04-23T18:33:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485915777",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe hold on a bit on this.\r\n\r\nWhile working on removing cs_main locking, it appears to me than, given wallet will be tracking chain height thanks to asynchronous updates and not direct chain state queries, it's needed to ```SyncWithValidationInterfaceQueue``` before each take of cs_wallet lock even if wallet is at the tip, because we may have ```BlockDisconnected``` in the callbacks validation interface queue and so it may cause races between RPC calls (at least spotted one thanks to mempool_resurrect)\r\n\r\nAnd yes doing remove by adding m_last_block_processed_height in both ```CWallet``` and m_block_height in ```CMerkleTx```",
      "created_at" : "2019-04-24T17:35:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-486346045",
      "id" : 486346045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjM0NjA0NQ==",
      "updated_at" : "2019-04-24T17:35:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486346045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think I understand the need to call `SyncWithValidationInterfaceQueue` unconditionally in the other PR, but even if there's no way around it, this PR doesn't prevent that because it's still possible to call `waitForNotificationsIfNewBlocksConnected({})`",
      "created_at" : "2019-04-24T18:19:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-486368470",
      "id" : 486368470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjM2ODQ3MA==",
      "updated_at" : "2019-04-24T18:19:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486368470",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah get your point, I'm going to far in locking removing (at least for now), was trying to not rely at all on Chain locking, even without '''::chainActive.Tip()->GetBlockHash()''' call, but only on callbacks hinting chain state.\r\n",
      "created_at" : "2019-04-24T19:21:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-486390523",
      "id" : 486390523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjM5MDUyMw==",
      "updated_at" : "2019-04-24T19:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486390523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 422677963a7b41e340b911b4cd53d29dd8d63f21",
      "created_at" : "2019-04-29T23:28:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15842#issuecomment-487778425",
      "id" : 487778425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15842",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Nzc3ODQyNQ==",
      "updated_at" : "2019-04-29T23:28:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487778425",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
