[
   {
      "author_association" : "MEMBER",
      "body" : "I don't think we want to do this generically, as it will prevent testing the normal relay logic?",
      "created_at" : "2019-04-23T21:02:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485973426",
      "id" : 485973426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3MzQyNg==",
      "updated_at" : "2019-04-23T21:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485973426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This preserves the normal relay logic except that the delay is always zero (for inbound and outbound peers). Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.",
      "created_at" : "2019-04-23T21:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485974991",
      "id" : 485974991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3NDk5MQ==",
      "updated_at" : "2019-04-23T21:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485974991",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.\r\n\r\nIt's not fundamentally impossible though, is it? I think remember using part of some stuck PR (Luke's?) to test both directions.\r\n\r\nAnyway, could you motivate this change a bit? I see some description in #15858, but it is closed now :)",
      "created_at" : "2019-04-23T21:20:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485979354",
      "id" : 485979354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk3OTM1NA==",
      "updated_at" : "2019-04-23T21:20:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485979354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to make it a regtest command line flag",
      "created_at" : "2019-04-23T21:38:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-485984818",
      "id" : 485984818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTk4NDgxOA==",
      "updated_at" : "2019-04-23T21:38:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485984818",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15759](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15759.html) ([p2p] Add 2 outbound blocks-only connections by sdaftuar)\n* [#14856](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14856.html) (net: remove more CConnman globals (theuni) by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-23T22:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486003228",
      "id" : 486003228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjAwMzIyOA==",
      "updated_at" : "2019-04-23T22:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486003228",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I really don't like special casing the tests like this, the more we do this the more tests become useless just for show things-- and, of course, the special casing code itself can contribute to bugs too.  Wouldn't it be better to run some of these tests in parallel so that their latency is less relevant?",
      "created_at" : "2019-04-24T05:29:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486073658",
      "id" : 486073658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjA3MzY1OA==",
      "updated_at" : "2019-04-24T05:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486073658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell but if there are no tests for delay, what is the point of keeping delay in tests at all? If it breaks, no one will notice it anyway.\r\n\r\nAlso on:\r\n> Testing that there is a difference in the delay between inbound and outbound peers was already impossible, I believe, since we can not create outbound connections.\r\n\r\nHow about starting 3 nodes like this: `node0 -> node1 -> node2` and then generating txs on node1.\r\nOne then can measure how long it took node0 and node2 to receive those transactions (by polling for mempool contents or even by logs). \r\n\r\n",
      "created_at" : "2019-04-24T08:13:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486117696",
      "id" : 486117696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjExNzY5Ng==",
      "updated_at" : "2019-04-24T08:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486117696",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "By the way, @MarcoFalke, if your intent is to only speedup several tests in which p2p is not test subject - you can just whitelist peers in such tests.",
      "created_at" : "2019-04-24T08:20:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486120128",
      "id" : 486120128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjEyMDEyOA==",
      "updated_at" : "2019-04-24T08:20:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486120128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'd rather not whitelist peers in tests. Not only is it tedious to pass in the command line flag, but also it affects DoS scores and some other things, I believe.",
      "created_at" : "2019-04-24T12:03:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486199483",
      "id" : 486199483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjE5OTQ4Mw==",
      "updated_at" : "2019-04-24T12:03:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486199483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK adding this as default in the functional tests.\r\n\r\n> I don't think we want to do this generically, as it will prevent testing the normal relay logic\r\n\r\nI can't think of any cases in the functional tests where we do anything except submit a transaction and wait for it to propagate. Running with `m_tx_relay_force_flush` will achieve exactly the same except that wait will be much shorter.\r\n\r\nNotably, I don't think there are any tests in the functional test suite that explicitly test the poisson distribution for tx relay. Really, that should be tested at the unit test level. We could add a single functional test with `m_tx_relay_force_flush` disabled if we want a higher-level test that simply tests that tx relay is not completely broken.\r\n\r\n> I really don't like special casing the tests like this\r\n\r\nIn general I agree, but the change here is so minor that I think it's ok. I'm much more concerned about other shortcomings in our functional test suite, such as not having peers outbound peers or peers on non-local network addresses.\r\n\r\n> Wouldn't it be better to run some of these tests in parallel\r\n\r\nThat's already the default",
      "created_at" : "2019-04-24T14:00:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486245470",
      "id" : 486245470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI0NTQ3MA==",
      "updated_at" : "2019-04-24T14:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486245470",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My instinct here is that our design goal should be to make the p2p connections in regtest be more like mainnet, and not less.  We already have a problem that in regtest, we don't exercise our networking code enough (as mentioned in #14210 -- an issue I opened after I got the impression that many people were unaware of our code-coverage deficiences with respect to p2p behavior).  So adding more special cases seems like it's going in the wrong direction.\r\n\r\nOn the other hand it would be great for the tests to run faster.  My suggestion would be to adopt an approach more like #15858 was trying to do, where we leave bitcoind unchanged but choose to make certain tests opt-out of testing the p2p behavior.  I think that also makes it easier to reason about what a test is testing, if you can see clearly in the test what parts of the code are being exercised (rather than implicitly relying on some non-standard  behaviors we've opted bitcoind into in the test framework).\r\n\r\nI only briefly looked at #15858 so far but I think it seemed to be going in the right direction.  Having individual tests be modified one-by-one to opt into a faster behavior seems fine to me; reviewers can determine whether the code coverage change is logical or not based on what the test is doing and what the rest of the test suite already covers.  The only caveat I'd add is that I think we should make it more explicit whether a call to `sync_mempools()` is exercising the p2p sync logic or not, to make the tests more readable and understandable.\r\n\r\nAs an aside, I think someone should just add a test that tests poisson delays -- that is currently possible in our test framework (inbounds can be tested via mininode, outbounds can be tested with multiple bitcoind's because there's no difference in our p2p logic between addnode peers and regular outbound peers, I believe).\r\n\r\nSo I'm a weak concept NACK on adding functionality to bitcoind that allows changing the relay delays; I'm a strong concept NACK on defaulting all our functional tests into special-cased behavior (if we were to go with this approach, I think we should only opt-in tests that we choose to exercise non-standard behavior on, rather than take a blanket approach).\r\n\r\nRegarding parallelization, I think the point is that perhaps developers can immediately start saving their own time (and achieve the same benefits of this PR) by just increasing the number of simultaneous jobs they run with?  I often run `test_runner.py` with the defaults myself, and this PR has reminded me that I could cut the time down significantly by adding more parallelization, so I will try to remember that going forward.",
      "created_at" : "2019-04-24T14:39:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486270546",
      "id" : 486270546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI3MDU0Ng==",
      "updated_at" : "2019-04-24T14:39:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486270546",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The response to \"the tests run slow\" shouldn't be \"just run more of them in parallel\". We might have users or developers that would like to run the tests on weak hardware (e.g. dual core cpu or hdd). Those constraints set a limit on how many tests can be run in parallel. Some of the tests might have random sleeps in them, but you can't rely on those because they are -- after all -- *random*.\r\n\r\nIt already takes about an hour to compile from scratch and run all tests on a dual core cpu with hdd. I don't see how compilation could be sped up any time soon (it would probably require getting rid of the boost hpp includes and the serialize.h includes, neither trivially possible). So having the tests run faster with a low risk setting like this seems like a nice way to kick the can down the road.\r\n\r\nBecause the flag can be set on the command line, it shouldn't hinder anyone from increasing the test coverage of our tx relay code.\r\n\r\nI do see the argument that regtest should be as close to mainnet as possible, but there is also a reason to have some regtest values differ  from mainnet, when they *aid* testing.",
      "created_at" : "2019-04-24T15:35:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486294253",
      "id" : 486294253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjI5NDI1Mw==",
      "updated_at" : "2019-04-24T15:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486294253",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ":slightly_frowning_face: I much prefer this approach to #15858 and don't see why adding 30 lines of gnarly topo-sort code in the test framework is in any way preferable to adding the one-line change:\r\n\r\n```c++\r\n            bool fSendTrickle = pto->fWhitelisted;\r\n            bool fSendTrickle = connman->m_tx_relay_force_flush || pto->fWhitelisted;\r\n```\r\n\r\nin `SendMessages()`. If the concern is whether the faster sync behaviour should be default of not, then it's equally possible to make either change default to on or off.\r\n\r\nThe only change in this PR is one of _timing_. The other PR completely changes how transactions are relayed between nodes on the test network, so in fact this PR is results in _less_ difference in behaviour from a 'real' network. I can easily come up with scenarios where a regression in tx relay would be caught with this change, but hidden by the change in #15858 which basically removes p2p tx relay between nodes under test.\r\n\r\nSo my preference would be to use this PR, but default to off to satisfy the concerns of @sipa @gmaxwell and @sdaftuar. It can be explicitly enabled in the tests that @MarcoFalke picked out in 15881.",
      "created_at" : "2019-04-24T15:53:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486302258",
      "id" : 486302258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjMwMjI1OA==",
      "updated_at" : "2019-04-28T15:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486302258",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The response to \"the tests run slow\" shouldn't be \"just run more of them in parallel\"\r\n\r\nWhy not?  At least to the extent that slowness is due to sleeps in the protocol design then running them in parallel is a perfectly reasonable response to it.\r\n\r\n> but if there are no tests for delay, what is the point of keeping delay in tests at all? If it breaks, no one will notice it anyway.\r\n\r\nBecause they are part of the system.  The tests (for the most part) are system tests.   Even if there is not a specific test for the delay behaviour in most possible ways that it could break, if it broke, it would break the test.  Consider, if a rare crasher bug, say a divide by zero, were introduced in PoissonNextSend then currently the tests could eventually catch it even though there is no direct test-- but if that code was never run it could never be caught by the tests.\r\n\r\nAlso, having additional conditional behaviour in the codebase complicates the code -- opportunities for confusion, time wasted fixing bugs (or testing code) which is specific to the test environment. What happens when some bool sign sense gets flipped and the delay skipping gets turned on in mainnet? Or when there is a race in getdata handling that doesn't work without delays?  Additional conditional test only code also frustrates efforts to improve the code by hitting high multiple-condition-decision branch coverage (because of dead production code in tests, and dead test code in coverage).  \r\n\r\nThree times faster is no joke.  But the further we make the tested system less like the actual system the less useful the tests become. We could make them infinity faster by removing them completely...\r\n\r\n@jnewbery 's one line version is a lot more attractive. And while I wouldn't seen any problem if some particularly tx-relay-serailization-delay sensitive tests used it, we really shouldn't be doing the bulk of our system testing that way simply because its different from production. We should be trying to minimize the difference to production...   What we could do is identify tests where the p2p behaviour is irrelevant to the test itself and the source of a large delay and bypass it for just those tests. However, we should take care that doing so doesn't leave some part of the production system unused in the tests (e.g. we shouldn't do this to all tests that relay transactions...).\r\n\r\nI feel like maybe we've lost the distinction between system and unit testing, and we're asking tests which are structurally system tests to work and perform like unit tests. In general I'm not the biggest fan of unit testing and prefer to achieve as much tests via system tests as possible, but when performance considerations are causing us to test increasingly more modified versions of the system it might make sense to split things up and stop trying to use the whole system when what we're trying to do is a unit test.",
      "created_at" : "2019-04-24T18:08:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486364075",
      "id" : 486364075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjM2NDA3NQ==",
      "updated_at" : "2019-04-24T18:13:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486364075",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks that the main concern is that this PR introduces a new case condition and if we misapply it, some part of the code (concretely `PoissonNextSend`) might not be executed when it's expected to be called or another way around.\r\n\r\nWhat if we instead of enabling/disabling the delay, we pass a parameter to the function (actually `PoissonNextSend` already accepts `average_interval_seconds` but seems it's better to introduce another one). Then we are sure that this code is executed, every operand is taken into account, we write unit test for values we use in testnet/mainnet, and we can set the desired parameter for regtest that will cancel out the delay.",
      "created_at" : "2019-04-25T08:55:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486579970",
      "id" : 486579970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjU3OTk3MA==",
      "updated_at" : "2019-04-25T08:55:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486579970",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/296795?v=4",
         "events_url" : "https://api.github.com/users/kostyantyn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kostyantyn/followers",
         "following_url" : "https://api.github.com/users/kostyantyn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kostyantyn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kostyantyn",
         "id" : 296795,
         "login" : "kostyantyn",
         "node_id" : "MDQ6VXNlcjI5Njc5NQ==",
         "organizations_url" : "https://api.github.com/users/kostyantyn/orgs",
         "received_events_url" : "https://api.github.com/users/kostyantyn/received_events",
         "repos_url" : "https://api.github.com/users/kostyantyn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kostyantyn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kostyantyn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kostyantyn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kostyantyn yes I think if this kind of approach is to be taken at all, it should be parameterized and shortened by default.",
      "created_at" : "2019-04-25T19:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486806354",
      "id" : 486806354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjgwNjM1NA==",
      "updated_at" : "2019-04-25T19:26:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486806354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kostyantyn  The \"unit test\" aspect is only part of it.  In complex systems many interesting bugs emerge out of interactions of multiple parts. If all the tests significantly change the delays then conditions that are only reachable in the presence of delays won't get hit. Testing both with and without delays is probably better, but if only one is done it should be kept closer to actual use.",
      "created_at" : "2019-04-26T00:07:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-486880258",
      "id" : 486880258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njg4MDI1OA==",
      "updated_at" : "2019-04-26T00:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486880258",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I tend to agree with @gmaxwell, @sdaftuar, @sipa.\r\nOptimizing tests for performance by reducing test-authenticity seems suboptimal to me.\r\n\r\n> We might have users or developers that would like to run the tests on weak hardware (e.g. dual core cpu or hdd). Those constraints set a limit on how many tests can be run in parallel.\r\n\r\nIMO the last important property a test should have is beeing fast (not saying its completely irrelevant).",
      "created_at" : "2019-04-29T07:16:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-487473653",
      "id" : 487473653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzQ3MzY1Mw==",
      "updated_at" : "2019-04-29T07:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487473653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Devs are less likely to run the tests (or a specific test) if it takes too long to run. We might as well remove slow tests if only one or two devs run them on high-end hardware. Long tests are excluded on travis and I doubt that a bunch of developers on different architectures pass in `--extended`.\r\n\r\nMoreover, our unit or functional tests are horribly unsuitable to find actual issues with the p2p code in a scenario such as mainnet. The transaction workload is trivial and highly synthetic, not at all comparable to mainet.\r\n\r\nI do see the argument of dead code paths when there is no delay by default, so I'll rework this pull to default to the mainnet setting unless a test opts in to the 0-delay. Testing both settings a bit might actually lead to more test coverage, as race conditions might be easier to trigger with a 0-delay.",
      "created_at" : "2019-04-30T19:49:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-488090695",
      "id" : 488090695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODA5MDY5NQ==",
      "updated_at" : "2019-04-30T19:49:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488090695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Devs are less likely to run the tests (or a specific test) if it takes too long to run. \r\n\r\nTotally agree with this. I doubt *anyone* runs the dbcache test for example.\r\n\r\nWhen rebasing a PR with many commits, I would like to run the entire test suite over every commit to make sure that no intermediate commits break anything. Having very long running tests precludes this.\r\n\r\n> our unit or functional tests are horribly unsuitable to find actual issues with the p2p code in a scenario such as mainnet. The transaction workload is trivial and highly synthetic, not at all comparable to mainet.\r\n\r\nAgain, very much agree with this. My view is that the functional tests test functionality. If we want to catch p2p issues we should build a stress test and a soak test environment, and also run a bunch of nodes on mainnet with heavy diags/logging/analytics/etc.",
      "created_at" : "2019-04-30T20:11:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-488097563",
      "id" : 488097563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODA5NzU2Mw==",
      "updated_at" : "2019-04-30T20:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488097563",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Devs are less likely to run the tests (or a specific test)  if it takes too long to run. We might as well remove slow tests if only  one or two devs run them on high-end hardware. Long tests are excluded  on travis and I doubt that a bunch of developers on different  architectures pass in --extended.\r\n\r\nIMO fast tests are very good. It encourages running the tests more often, makes Travis faster, and usually indicates the tests don't spend a lot of time on waiting and polling loops, or doing unnecessary stuff that doesn't increase test coverage and causes potential random errors (and ever higher parallelism increases this latter risk by affecting delays randomly).\r\n\r\nSo in this case: yes, normal transaction propagation should be tested, but also, this is only necessary in part of the tests that deal with testing the P2P network. In the rest it's allowable to make some shortcuts, like disabling or speeding up randomized behavior.\r\n\r\nWhat I don't like (in this particular approach) is that bitcoind accumulates more test-specific behavior and functions, which make it harder to maintain and which (as @gmaxwell says) blurs the line between unit and functional tests, so I personally prefer #15858's appraoch. That's not a hard NACK on this though. I was just missing the context when seeing that PR closed.\r\n",
      "created_at" : "2019-05-01T07:02:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-488223238",
      "id" : 488223238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODIyMzIzOA==",
      "updated_at" : "2019-05-01T07:09:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488223238",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  I personally prefer #15858's appraoch\r\n\r\nThat other approach is going to bypass p2p tx relay completely. So is guaranteed to decrease test coverage.\r\n\r\nThis pull request is a one-line patch to net_processing (off by default) so that both scenarios are tested. This is increasing test coverage, as I explained above.",
      "created_at" : "2019-05-01T17:38:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15881#issuecomment-488353713",
      "id" : 488353713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15881",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODM1MzcxMw==",
      "updated_at" : "2019-05-01T17:38:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488353713",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
