[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260079"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could use `MakeUnique<const uint256>(SerializeHash(*this, SER_GETHASH, 0));` here",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-04-17T22:21:53Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260079",
      "id" : 182260079,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 12,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 113022730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-04T21:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260079",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260771"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe you could remove some of the boilerplate and repetition here using member initialization in the header:\r\n\r\n```\r\nconst std::unique_ptr<const uint256> m_witness_hash = ComputeWitnessHash();\r\n```\r\n\r\nIt would be nice to do this for the other members, too.",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-04-17T22:25:39Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash{}, m_witness_hash{nullptr} {}\n+CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}\n+CTransaction::CTransaction(CMutableTransaction&& tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182260771",
      "id" : 182260771,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 21,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 113022730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-04T21:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182260771",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182326060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182326060"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder what would be the execution order in this case? `ComputeWitnessHash` calls `SerializeHash(*this, ...)` so other members must be initialized before.",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-04-18T07:01:24Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash{}, m_witness_hash{nullptr} {}\n+CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}\n+CTransaction::CTransaction(CMutableTransaction&& tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182326060",
      "id" : 182326060,
      "in_reply_to_id" : 182260771,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 21,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 113096810,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-04T21:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182326060",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182326418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182326418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could this expression be in `ComputeWitnessHash`?",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-04-18T07:03:17Z",
      "diff_hunk" : "@@ -311,12 +313,8 @@ class CTransaction\n         return vin.empty() && vout.empty();\n     }\n \n-    const uint256& GetHash() const {\n-        return hash;\n-    }\n-\n-    // Compute a hash that includes both transaction and witness data\n-    uint256 GetWitnessHash() const;\n+    const uint256& GetHash() const { return hash; }\n+    const uint256& GetWitnessHash() const { return m_witness_hash ? *m_witness_hash : hash; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r182326418",
      "id" : 182326418,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 22,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 113097213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-04T21:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182326418",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2018-04-18T13:03:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-382378760",
      "id" : 382378760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-04-18T13:03:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382378760",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa raised design concerns with caching data like this in CTransaction previously (see #9700)",
      "created_at" : "2018-04-19T12:45:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-382720372",
      "id" : 382720372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-04-19T12:45:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382720372",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Honestly I think we need to revive #9700. Now that SegWit has some use, giving up on the huge performance gains of that (and this) for (IMO) minor design concerns is an absurd tradeoff.",
      "created_at" : "2018-04-20T16:01:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-383142776",
      "id" : 383142776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-04-20T16:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383142776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Then at the very least introduce alternate versions of CTransaction/CBlock that don't precompute anything, for use in reindexing and rescanning and serving blocks from disk. Otherwise you'll waste your time computing wtxids/sighashes in those cases, where they're never used.",
      "created_at" : "2018-04-20T16:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-383145046",
      "id" : 383145046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-04-20T16:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383145046",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed, though we may want to look into something wholesale smarter for rescan, its already impossibly slow even when considering the amount of I/O required.",
      "created_at" : "2018-04-20T16:11:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-383145929",
      "id" : 383145929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-04-20T16:11:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383145929",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Split into two commits for easier review",
      "created_at" : "2018-05-04T21:57:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-386745532",
      "id" : 386745532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-04T21:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386745532",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK fac1223a568fa1ad6dd602350598eed278d115e8. We should probably take this as-is IMO and then we can clean things up when we look at fully splitting out hashes in #13098.",
      "created_at" : "2018-05-10T18:24:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388141402",
      "id" : 388141402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-10T18:24:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388141402",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/13011/commits/fac1223a568fa1ad6dd602350598eed278d115e8\r\n\r\nNumbers would be nice, but the code looks good.",
      "created_at" : "2018-05-10T20:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388170656",
      "id" : 388170656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-10T20:10:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388170656",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Was a discussion about this in IRC meeting yesterday: https://botbot.me/freenode/bitcoin-core-dev/msg/99929243/\r\n\r\nBeginning of discussion before it goes on to talk about related PRs like #13098\r\n\r\n> [19:10:54] \\<MarcoFalke> Background: The witness hash is used for all loose transactions, so caching it would speed up validation (e.g. ATMP and compact block relay). Also, the witness hash is equal to the \"normal hash\" for transactions without a witness, so there is overhead for rescan/reindex is currently minimal (since there are not many transactions with witness). The gains of caching the witness hash dwarf any overhead during rescan/reindex, imo. And of course, we \r\n> [19:10:55] \\<MarcoFalke> can just rework rescan in a future pr.\r\n> [19:11:32] \\<MarcoFalke> The code changes are trivial, so at least that shouldn't be an issue\r\n> [19:12:03] \\<jamesob> would be nice if that paragraph was in the PR description\r\n> [19:12:23] \\<sipa> Downside is that it makes the transactions larger, and hardcodes some validation sprcific logic into the transaction data structure (which for example also affects serving blocks from disks etc)\r\n> [19:12:46] \\<BlueMatt> upside is we rectify a significant performance regression\r\n> [19:12:48] \\<sipa> So my view is that we should separate the transactions-for-validation tyoe and simple mutable transactions\r\n> [19:13:01] \\<BlueMatt> and obviously all pre-segwit-activation blocks will not be served any slower\r\n> [19:13:03] \\<MarcoFalke> sipa: I think those can easily be fixed in future prs (I have one open for the \r\nblocks serving from disks, and wumpus as well)\r\n> [19:13:19] \\<sipa> MarcoFalke: i'm aware, not objecting to amything\r\n> [19:13:21] \\<BlueMatt> personally, I find it really unacceptable that we have this huge performance regression and arent taking it as something to be fixed asap\r\n> [19:13:33] \\<MarcoFalke> sipa: I know, just posting for reference\r\n> [19:13:34] \\<sipa> just pointing out that we don't want to do this work everywhere\r\n> [19:13:48] \\<sipa> so concept ack, if we commit to separating those types\r\n> [19:14:01] \\<wumpus> agree with sipa\r\n> [19:14:05] \\<BlueMatt> yes, imo we should merge the per as-is now, and then when we look towards MarcoFalke's next pr splitting out the types (which is gonna be a lot more work) we will probably pull out both hashes then anyway\r\n> [19:14:16] \\<sipa> there are other reasons for separating those types as well, btw\r\n> [19:14:22] * BlueMatt would kinda recommending backporting the pr as-is, though\r\n\r\nContinues https://botbot.me/freenode/bitcoin-core-dev/msg/99929408/",
      "created_at" : "2018-05-11T14:04:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388373544",
      "id" : 388373544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-11T14:04:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388373544",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This speeds up:\r\n* compactblocks (v2)\r\n* ATMP\r\n* validation and miner (via `BlockWitnessMerkleRoot`)\r\n* sigcache (see also unrelated #13204)\r\n* rpc and rest (nice, but irrelevant)\r\n\r\nThis presumably slows down rescan, which uses a `CTransaction` and its `GetHash`, but never uses the `GetWitnessHash`. The slow down is proportional to the number of witness transactions in the rescan window. I.e. early in the chain there should be no measurable slow down. Later in the chain, there should be a slow down, but acceptable given the speedups in the modules mentioned above.",
      "created_at" : "2018-05-11T14:28:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388380145",
      "id" : 388380145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-11T14:57:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388380145",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note: You can run benchmarks such as:\r\n\r\n```\r\n./src/bench/bench_bitcoin --filter=MempoolEviction  # ATMP (unchecked) with 100% segwit transactions\r\n./src/bench/bench_bitcoin --filter=DeserializeBlockTest  # Used by rescan, so this should be slower, but none of the txs have witness, so there is no difference in runtime",
      "created_at" : "2018-05-11T14:56:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388388722",
      "id" : 388388722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-11T14:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388388722",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If performance is a concern in contexts where the precomputed value isn't needed, couldn't this just lazily compute and cache the witness hash? There'd probably have to be some concurrency handling, I suppose.",
      "created_at" : "2018-05-13T02:42:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388596940",
      "id" : 388596940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-13T02:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388596940",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "avoid \"some concurrency handling\" was the reason for making these fields const in the first place.\r\n\r\nThe alternative is either indirections (through atomic pointers) or mutexes all over the place.\r\n\r\nThe solution to not computing it in places where it isn't needed is not using a type that caches these values.",
      "created_at" : "2018-05-13T02:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388597043",
      "id" : 388597043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-13T02:47:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388597043",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fac1223.",
      "created_at" : "2018-05-13T07:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-388606259",
      "id" : 388606259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-13T07:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388606259",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK fac1223",
      "created_at" : "2018-05-17T18:40:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-389967563",
      "id" : 389967563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-17T18:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389967563",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r189087616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189087616"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I wonder what would be the execution order in this case? ComputeWitnessHash calls SerializeHash(*this, ...) so other members must be initialized before.\r\n\r\nExecution order always the matches order members are declared in the class, not the order initializations are written in the constructor (compilers will warn if the orders differ), so this wouldn't change behavior. You can see https://isocpp.org/wiki/faq/ctors#ctor-initializer-order for discussion about this.\r\n ",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-05-17T20:17:47Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash{}, m_witness_hash{nullptr} {}\n+CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}\n+CTransaction::CTransaction(CMutableTransaction&& tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r189087616",
      "id" : 189087616,
      "in_reply_to_id" : 182260771,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 21,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 121199837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-17T20:18:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189087616",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r189091225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189091225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We couldn't do the same for the `hash` member, I guess, so will leave this as is for now.",
      "commit_id" : "fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-05-17T20:30:13Z",
      "diff_hunk" : "@@ -67,18 +67,18 @@ uint256 CTransaction::ComputeHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-uint256 CTransaction::GetWitnessHash() const\n+std::unique_ptr<const uint256> CTransaction::ComputeWitnessHash() const\n {\n     if (!HasWitness()) {\n-        return GetHash();\n+        return nullptr;\n     }\n-    return SerializeHash(*this, SER_GETHASH, 0);\n+    return std::unique_ptr<const uint256>{new uint256{SerializeHash(*this, SER_GETHASH, 0)}};\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash{}, m_witness_hash{nullptr} {}\n+CTransaction::CTransaction(const CMutableTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}\n+CTransaction::CTransaction(CMutableTransaction&& tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash{ComputeHash()}, m_witness_hash{ComputeWitnessHash()} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#discussion_r189091225",
      "id" : 189091225,
      "in_reply_to_id" : 182260771,
      "original_commit_id" : "fae63d51ab252579adbaceb6aaba935bae75de88",
      "original_position" : 21,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 121204105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13011",
      "updated_at" : "2018-05-17T20:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189091225",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fac1223a568fa1ad6dd602350598eed278d115e8",
      "created_at" : "2018-05-17T20:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-390005021",
      "id" : 390005021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-17T20:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390005021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "utACK [fac1223](https://github.com/bitcoin/bitcoin/commit/fac1223a568fa1ad6dd602350598eed278d115e8)",
      "created_at" : "2018-05-21T18:47:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-390746432",
      "id" : 390746432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-21T18:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390746432",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6363142?v=4",
         "events_url" : "https://api.github.com/users/danielsam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danielsam/followers",
         "following_url" : "https://api.github.com/users/danielsam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danielsam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danielsam",
         "id" : 6363142,
         "login" : "danielsam",
         "organizations_url" : "https://api.github.com/users/danielsam/orgs",
         "received_events_url" : "https://api.github.com/users/danielsam/received_events",
         "repos_url" : "https://api.github.com/users/danielsam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danielsam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danielsam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danielsam"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fac1223a568fa1ad6dd602350598eed278d115e",
      "created_at" : "2018-05-23T17:26:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13011#issuecomment-391431614",
      "id" : 391431614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13011",
      "updated_at" : "2018-05-23T17:26:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391431614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
