{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "#13023 highlights a concurrency issue in ABC that I think is worth more explanation and discussion, particularly as there are two bugs that should be fixed, and at least one of them is now causing occasional test failures in `rpc_deprecated.py` on travis.\r\n\r\n1) A known issue in ABC is that if we try to connect a block and discover that is invalid, then we can release cs_main while chainActive.Tip() has less work than our prior tip.  However, in such a situation, another thread can be invoking CheckBlockIndex() just as cs_main is released (eg on regtest -- CheckBlockIndex isn't run by default on mainnet), and see an assertion fail because the current tip is not in setBlockIndexCandidates (it would have been previously pruned because we know about a valid more-work tip).\r\n\r\nA band-aid fix would be to add the current tip to setBlockIndexCandidates after disconnecting a block, but that would just be masking the bigger issue, which is that we should fix ABC/ABCStep to not release cs_main while we're at a lower-work tip.\r\n\r\n2) The second bug is the one @skeees found in #13023, which I tried to more fully explain in https://github.com/bitcoin/bitcoin/pull/13023#issuecomment-384693081.  For posterity:\r\n\r\n> If ActivateBestChain is invoked simultaneously in separate threads, then we can end up at a lower-work tip, and remain stuck until the next block comes in.\r\n>\r\n> * Suppose in thread 1, we have just been delivered a block that causes us to try to activate two blocks in ABC. We connect 1 of them in ABCStep, and then release cs_main before connecting the second.\r\n> * In thread 2, suppose we have been delivered a 3rd block (say via rpc) that builds on the first two. It invokes ABC and gets to run after the first block has been connected in thread 1. It connects one block, releases cs_main, and then connects one more, and finishes.\r\n> * When thread 1 gets to run again, the most work chain has advanced, but (before this PR) we don't refresh pindexMostWork (except when we find an invalid block). Consequently we would invoke ABCStep with a less work tip than our current tip(!). This would cause us to disconnect our tip and return.\r\n> Some travis failures have been observed due to this bug, as seen for instance here: https://travis-ci.org/bitcoin/bitcoin/jobs/370848272. The test that sometimes fails, rpc_deprecated.py, generates blocks on two nodes roughly simultaneously, so one of the nodes is generating blocks in an rpc thread while also processing blocks on the network thread, which I believe is enough to trigger this bug.\r\n\r\nI think both bugs should be fixed, though the second one is more severe (as it could result in an unlucky miner losing a block) even in the absence of any kind of attack or misbehavior.",
   "closed_at" : "2018-05-18T18:23:46Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
      "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sdaftuar/followers",
      "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sdaftuar",
      "id" : 7463573,
      "login" : "sdaftuar",
      "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
      "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
      "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
      "repos_url" : "https://api.github.com/users/sdaftuar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sdaftuar"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13092/comments",
   "created_at" : "2018-04-26T15:59:17Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13092/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/13092",
   "id" : 318095375,
   "labels" : [
      {
         "color" : "6060aa",
         "default" : false,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13092/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUzMTgwOTUzNzU=",
   "number" : 13092,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "ActivateBestChain concurrency issues",
   "updated_at" : "2018-05-18T18:23:46Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13092",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
      "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sdaftuar/followers",
      "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sdaftuar",
      "id" : 7463573,
      "login" : "sdaftuar",
      "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
      "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
      "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
      "repos_url" : "https://api.github.com/users/sdaftuar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sdaftuar"
   }
}
