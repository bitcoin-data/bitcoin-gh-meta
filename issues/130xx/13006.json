{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This idea came up in conversation last night and two people told me it was terrible, so I was curious to try a wider audience. Idea would be to have an `assert_debug_log(node, regex)` function in python. \r\n\r\nExample use:\r\n\r\n```python\r\nself.nodes[0].p2p.send_txs([tx_orphan_invalid])\r\nwith assert_debug_log(self.nodes[0], \"invalid orphan tx %s\" % txid(tx_orphan_invalid)):\r\n   self.nodes[0].p2p.send_txs([tx_orphan_parent])\r\n```\r\n\r\nPossible implementation:\r\n\r\n```python\r\n@contextmanager\r\ndef assert_debug_log(node, pattern, **other_options):\r\n    prev_size = node.rpc.flush_debug_log()\r\n    try:\r\n       yield\r\n    finally:\r\n       new_size = node.rpc.flush_debug_log()\r\n       with open(node.datadir_path(\"debug.log\")) as log:\r\n           log.seek(prev_size)\r\n           if not re.match(pattern, log.read(new_size - prev_size)):\r\n               raise AssertionError\r\n```\r\n\r\nAdvantages:\r\n\r\n- Log asserts could make existing tests simpler, more robust, and more readable because they would allow tests to check conditions they care about directly instead of reverse engineering node behaviour with counters and flags and inferences from p2p messages and disconnects.\r\n- Log asserts could improve test coverage. Lots of PRs are currently created that fix bugs and change behavior and have 0 accompanying tests because they would be difficult to write in the c++ test framework, and unreliable in the python framework.\r\n\r\nDisadvantages:\r\n\r\n- Log asserts could be overused to check conditions that would be better to interrogate more directly.\r\n- Log asserts could be overused to check behaviours that shouldn't be checked at all because they are implementation specific.\r\n- Log asserts could be overused to check trivial things not worth checking given the relative expense (performance, code verbosity, cost of maintaining fragile string comparisons).\r\n- Log asserts could encourage writing integration tests when unit tests would be more appropriate.\r\n- Log asserts could encourage writing white box tests when black box tests would be more appropriate.\r\n- Log asserts could encourage using the python test framework instead of the c++ framework.\r\n\r\nConclusion:\r\n\r\nI think `assert_debug_log` could simplify existing tests, fill a gap in the testing framework, and help move closer to a world where PRs that change internal bitcoin behaviour more typically come with tests. I think `assert_debug_log` could be overused, but in practice this could be avoided with code review and documentation. More abstract concerns like white box vs black box, unit vs functional, and python vs c++ testing tend to come off a bit superstitious and cargo-culty to me so I'm not the best person to respond to them, but I wouldn't discourage other discussion in such terms.",
   "closed_at" : "2018-08-24T18:09:40Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006/comments",
   "created_at" : "2018-04-17T11:32:27Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/13006",
   "id" : 315019222,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "c2e0c6",
         "default" : true,
         "id" : 349312277,
         "name" : "good first issue",
         "node_id" : "MDU6TGFiZWwzNDkzMTIyNzc=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/good%20first%20issue"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUzMTUwMTkyMjI=",
   "number" : 13006,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "RFC: assert_debug_log",
   "updated_at" : "2018-08-24T18:09:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13006",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
      "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ryanofsky/followers",
      "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ryanofsky",
      "id" : 7133040,
      "login" : "ryanofsky",
      "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
      "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
      "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
      "repos_url" : "https://api.github.com/users/ryanofsky/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ryanofsky"
   }
}
