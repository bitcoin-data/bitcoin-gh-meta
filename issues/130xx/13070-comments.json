[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky care to review?",
      "created_at" : "2018-04-25T00:02:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13070#issuecomment-384117566",
      "id" : 384117566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13070",
      "updated_at" : "2018-04-25T00:02:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384117566",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ryanofsky care to review?\r\n\r\nChange seems harmless but I don't understand why it makes sense. Is it part of a larger set of changes that I can look at or part of a larger design that you can describe somewhere?\r\n\r\nThe map doesn't seem to make sense for unloading because wallet interfaces are created on the fly and you can't identify them by pointer. Maybe the map is supposed to be keyed by wallet name? The list of handlers doesn't seem to make sense because there is only one handler. I also think it would probably be better and less duplicative if splashscreen were not managing any interface pointers at all, but just creating a slot which wallets  in `m_wallet_models` could send signals to.",
      "created_at" : "2018-04-25T01:02:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13070#issuecomment-384127000",
      "id" : 384127000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13070",
      "updated_at" : "2018-04-25T01:02:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384127000",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @ryanofsky for the feedback.\r\n\r\n> I also think it would probably be better and less duplicative if splashscreen were not managing any interface pointers at all\r\n\r\nThe `subscribeToCoreSignals`/`unsubscribeFromCoreSignals` is used in several places. I can remove it from splash screen but let's discuss it a different PR or IRL.\r\n\r\n> you can't identify them by pointer\r\n\r\n> The list of handlers doesn't seem to make sense because there is only one handler\r\n\r\nConsider the following example:\r\n```cpp\r\n\r\nvoid SplashScreen::ConnectWallet(std::unique_ptr<interfaces::Wallet> wallet)\r\n{\r\n    auto i = m_connected_wallets.emplace(std::move(wallet), std::list<std::unique_ptr<interfaces::Handler>>()).first;\r\n    i->second.emplace_back(wallet->handleShowProgress(boost::bind(ShowProgress, this, _1, _2, false)));\r\n    i->second.emplace_back(wallet->handleAboutToRemove([this, i]() {\r\n        for (auto& handler : i->second) {\r\n            handler->disconnect();\r\n        }\r\n        m_connected_wallets.erase(i);\r\n    }));\r\n}\r\n```\r\nWhich uses the iterator `i` in the callback. With this example does it make more sense?\r\n\r\nNote that map iterators aren't invalidated after insertions or erasures, so this is safe.\r\n\r\n> Maybe the map is supposed to be keyed by wallet name?\r\n\r\nMaybe, I don't know if that's acceptable.",
      "created_at" : "2018-04-25T21:17:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13070#issuecomment-384437111",
      "id" : 384437111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13070",
      "updated_at" : "2018-04-25T21:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384437111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> With this example does it make more sense?\r\n\r\nNo, because there is no map lookup. It would seem more appropriate to use `list<<pair<>>` instead of `map<>` if there are no lookups comparing map keys. But it is hard to evaluate this when there is no description of the overall design motivating this change and no justification for why a splash screen wallet data structure should exist at all.\r\n\r\nI don't think I can productively review these small factoring PRs without some kind of description of the larger picture they fit into. If it is not possible to describe smaller refactoring changes coherently, I'd prefer to just look at a larger PR or branch which implements real functionality, so I can understand how the changes fit together.",
      "created_at" : "2018-04-25T21:46:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13070#issuecomment-384444620",
      "id" : 384444620,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13070",
      "updated_at" : "2018-04-25T21:46:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384444620",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky thanks for the insights.\r\n\r\n> I'd prefer to just look at a larger PR\r\n\r\nplease see #13111.",
      "created_at" : "2018-04-28T21:51:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13070#issuecomment-385207935",
      "id" : 385207935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13070",
      "updated_at" : "2018-04-28T21:51:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385207935",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
