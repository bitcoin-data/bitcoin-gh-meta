{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "The wallet command line arguments are a mixture of start-up actions, wallet creation options, updatable wallet parameters and wallet module modes. This is a proposal on how to rationalize the different types of arguments.\r\n\r\n## Current wallet arguments\r\n\r\n- `-addresstype` (What type of addresses to use)\r\n- `-changetype` (What type of change to use)\r\n- `-disablewallet` (Do not load the wallet and disable wallet RPC calls)\r\n- `-discardfee=<amt>` (The fee rate that indicates your tolerance for discarding change by adding it to the fee)\r\n- `-fallbackfee=<amt>` (A fee rate that will be used when fee estimation has insufficient data)\r\n- `-keypool=<n>` (Key pool size)\r\n- `-mintxfee=<amt>` (Fees smaller than this are considered zero fee for transaction creation)\r\n- `-paytxfee=<amt>` (Fee to add to transactions you send)\r\n- `-rescan` (Rescan the block chain for missing wallet transactions on startup));\r\n- `-salvagewallet` (Attempt to recover private keys from a corrupt wallet on startup));\r\n- `-spendzeroconfchange` (Spend unconfirmed change when sending transactions)\r\n- `-txconfirmtarget=<n>` (If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks)\r\n- `-upgradewallet` (Upgrade wallet to latest format on startup));\r\n- `-wallet=<path>` (Specify wallet database path. Can be specified multiple times to load multiple wallets.)\r\n- `-walletbroadcast` (Make the wallet broadcast transactions))\r\n- `-walletdir=<dir>` (Specify directory to hold wallets)\r\n- `-walletnotify=<cmd>` (Execute command when a wallet transaction changes)\r\n- `-walletrbf` (Send transactions with full-RBF opt-in enabled)\r\n- `-zapwallettxes=<mode>` (Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup)\r\n- `-dblogsize=<n>` (DEBUG) (Flush wallet database activity from memory to disk log every <n> megabytes)\r\n- `-flushwallet` (DEBUG) (Run a thread to flush wallet periodically)\r\n- `-privdb` (DEBUG) (Sets the DB_PRIVATE flag in the wallet db environment)\r\n- `-walletrejectlongchains` (DEBUG) (Wallet will not create transactions that violate mempool chain limits)\r\n\r\nThese can be categorised as follows:\r\n\r\n### Wallet module options\r\nThese act on the wallet software module, not on individual wallets:\r\n- disablewallet\r\n- rescan\r\n- wallet (included here because it tells the wallet module which individual wallets to load)\r\n- walletdir\r\n- walletnotify\r\n- dblogsize (DEBUG)\r\n- flushwallet (DEBUG)\r\n- privdb (DEBUG)\r\n- walletrejectlongchains (DEBUG)\r\n\r\n### Wallet creation options\r\nCurrently none, but these options have been proposed in PRs:\r\n- externalhd (#9728)\r\n- disableprivatekeys (#9662)\r\n\r\nPrior to V0.16:\r\n- usehd (whether to make this an HD wallet)\r\n\r\n### Wallet startup actions\r\nThese act on an individual wallet at node startup (cannot currently be used in multiwallet mode)\r\n- salvagewallet\r\n- upgradewallet\r\n- zapwallettxes\r\n\r\n### Wallet config options\r\nThese are all currently treated as global wallet module options, but logically should be per-wallet config:\r\n- addresstype\r\n- changetype\r\n- keypool\r\n- discardfee (Changed to per-wallet config in #12909)\r\n- fallbackfee (Changed to per-wallet config in #12909)\r\n- mintxfee (Changed to per-wallet config in #12909)\r\n- paytxfee (Changed to per-wallet config in #12909)\r\n- spendzeroconfchange\r\n- txconfirmtarget\r\n- walletrbf\r\n\r\nThis is treated as per-wallet config, but there is currently no way to specify different config for different wallets at startup:\r\n- walletbroadcast\r\n\r\n## Proposed plan\r\n\r\n1. **Wallet startup actions** should be removed as command line args and added to an external wallet tool (#8745). We shouldn't need to spin up a full node to carry out these actions.\r\n2. **Wallet creation options** should not be added as command line args. These should be added as arguments to a new `createwallet` RPC (and as options in a new 'Create Wallet' dialog in qt).\r\n3. **Wallet config options** should be moved to be class members in CWallet, saved to/loaded from BDB wallet.dat, and updated via a `walletsettings` RPC and 'Wallet Settings` dialog in qt. Once that's in place, these should be removed as command line args.\r\n4. **Wallet module options** should remain as command line args.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 11,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13044/comments",
   "created_at" : "2018-04-20T17:03:33Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13044/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/13044",
   "id" : 316343651,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "08a781",
         "default" : false,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13044/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUzMTYzNDM2NTE=",
   "number" : 13044,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "[RFC] Long term plan for wallet command-line args",
   "updated_at" : "2019-02-16T08:45:21Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13044",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
      "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jnewbery/followers",
      "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jnewbery",
      "id" : 1063656,
      "login" : "jnewbery",
      "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
      "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
      "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
      "repos_url" : "https://api.github.com/users/jnewbery/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jnewbery"
   }
}
