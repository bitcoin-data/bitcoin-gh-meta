[
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Do you think the `LOCALE_DEPENDENT_FUNCTIONS` list is correct? :-)",
      "created_at" : "2018-04-22T09:36:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383368192",
      "id" : 383368192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-22T09:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383368192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK. I think this is a good idea.\r\n\r\n> @laanwj Do you think the LOCALE_DEPENDENT_FUNCTIONS list is correct? :-)\r\n\r\nIt's a good start.\r\nPlease add `strftime` too, that's the one that caused recent discussion in #12973.",
      "created_at" : "2018-04-23T13:55:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383583971",
      "id" : 383583971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T13:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383583971",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj `strftime` and `strptime` added. Please re-review :-)",
      "created_at" : "2018-04-23T14:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383586827",
      "id" : 383586827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T14:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383586827",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r183408506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183408506"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a shocking number of known violations.\r\nI didn't know e.g. `strtol` is also locale dependent, otherwise I wouldn't have used it in torcontrol for example.\r\n",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-04-23T14:10:17Z",
      "diff_hunk" : "@@ -0,0 +1,31 @@\n+#!/bin/bash\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    isalnum isalpha isblank iscntrl isdigit isgraph islower isprint ispunct\n+    isspace isupper iswalnum iswalpha iswblank iswcntrl iswctype iswdigit\n+    iswgraph iswlower iswprint iswpunct iswspace iswupper iswxdigit isxdigit\n+    stoi stol stoll strcoll strftime strptime strtod strtol strtoll tolower\n+    toupper towlower towupper\n+)\n+REGEXP_IGNORE_EXTERNAL=\"src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=\"^(src/base58.cpp:.*isspace|src/qt/rpcconsole.cpp:.*isdigit|src/rest.cpp:.*strtol|src/torcontrol.cpp:.*strtol|src/uint256.cpp:.*isspace|src/uint256.cpp:.*tolower|src/util.cpp:.*tolower|src/utilmoneystr.cpp:.*isdigit|src/utilmoneystr.cpp:.*isspace|src/utilstrencodings.cpp:.*isspace|src/utilstrencodings.cpp:.*strtoll|src/utilstrencodings.cpp:.*strtol)\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r183408506",
      "id" : 183408506,
      "original_commit_id" : "4ba8cc19a79608902cff242012c3ebc225832081",
      "original_position" : 11,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : null,
      "pull_request_review_id" : 114400011,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-22T05:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183408506",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r183409038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183409038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it possible to split this list over multiple lines, so that it's possible to remove an exception by removing a line?",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-04-23T14:11:47Z",
      "diff_hunk" : "@@ -0,0 +1,31 @@\n+#!/bin/bash\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    isalnum isalpha isblank iscntrl isdigit isgraph islower isprint ispunct\n+    isspace isupper iswalnum iswalpha iswblank iswcntrl iswctype iswdigit\n+    iswgraph iswlower iswprint iswpunct iswspace iswupper iswxdigit isxdigit\n+    stoi stol stoll strcoll strftime strptime strtod strtol strtoll tolower\n+    toupper towlower towupper\n+)\n+REGEXP_IGNORE_EXTERNAL=\"src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=\"^(src/base58.cpp:.*isspace|src/qt/rpcconsole.cpp:.*isdigit|src/rest.cpp:.*strtol|src/torcontrol.cpp:.*strtol|src/uint256.cpp:.*isspace|src/uint256.cpp:.*tolower|src/util.cpp:.*tolower|src/utilmoneystr.cpp:.*isdigit|src/utilmoneystr.cpp:.*isspace|src/utilstrencodings.cpp:.*isspace|src/utilstrencodings.cpp:.*strtoll|src/utilstrencodings.cpp:.*strtol)\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r183409038",
      "id" : 183409038,
      "in_reply_to_id" : 183408506,
      "original_commit_id" : "4ba8cc19a79608902cff242012c3ebc225832081",
      "original_position" : 11,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : null,
      "pull_request_review_id" : 114400679,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-22T05:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183409038",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Updated version with the known violations list split over multiple lines. Please re-review :-)",
      "created_at" : "2018-04-23T15:06:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383608887",
      "id" : 383608887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T15:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383608887",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Candidates for inclusion in the list of locale dependent functions:\r\n\r\n```\r\n$ nm /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.23.so | grep -E '_l$' | \\\r\n      cut -f3 -d' ' | grep -E '^[a-z]' | sort | sed 's/_l$//g'\r\nisalnum\r\nisalpha\r\nisblank\r\niscntrl\r\nisdigit\r\nisgraph\r\nislower\r\nisprint\r\nispunct\r\nisspace\r\nisupper\r\niswalnum\r\niswalpha\r\niswblank\r\niswcntrl\r\niswctype\r\niswdigit\r\niswgraph\r\niswlower\r\niswprint\r\niswpunct\r\niswspace\r\niswupper\r\niswxdigit\r\nisxdigit\r\nnl_langinfo\r\nstrcasecmp\r\nstrcoll\r\nstrerror\r\nstrfmon\r\nstrftime\r\nstrncasecmp\r\nstrptime\r\nstrtod\r\nstrtof\r\nstrtold\r\nstrtol\r\nstrtoll\r\nstrtoul\r\nstrtoull\r\nstrxfrm\r\ntolower\r\ntoupper\r\ntowctrans\r\ntowlower\r\ntowupper\r\nwcscasecmp\r\nwcscoll\r\nwcsftime\r\nwcsncasecmp\r\nwcstod\r\nwcstof\r\nwcstold\r\nwcstol\r\nwcstoll\r\nwcstoul\r\nwcstoull\r\nwcsxfrm\r\nwctrans\r\nwctype\r\n```",
      "created_at" : "2018-04-23T15:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383615107",
      "id" : 383615107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T15:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383615107",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The use of `strtoul(...)` and `strtoull(...)` might be problematic too?",
      "created_at" : "2018-04-23T15:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383617773",
      "id" : 383617773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T15:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383617773",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated: Added more functions to `LOCALE_DEPENDENT_FUNCTIONS`. Added two known violations for `strtoul(...)` and `strtoull(...)` in `utilstrencodings.cpp`.\r\n\r\nPlease re-review :-)",
      "created_at" : "2018-04-23T15:40:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383621123",
      "id" : 383621123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-23T15:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383621123",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 29b73b509f1aa537a835f9e75878622c3a18335f",
      "created_at" : "2018-04-24T06:13:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383815493",
      "id" : 383815493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-24T06:13:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383815493",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theuni @sipa Your language expertise is needed :-)\r\n\r\nIf you have time to review this PR Ã¢ÂÂ does  `LOCALE_DEPENDENT_FUNCTIONS` look reasonable? :-)",
      "created_at" : "2018-04-24T09:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383866374",
      "id" : 383866374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-24T16:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383866374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated:\r\n* Added more functions to `LOCALE_DEPENDENT_FUNCTIONS`.\r\n* Added known `atoi(Ã¢ÂÂ¦)` violations for `bitcoin-tx.cpp`, `init.cpp`, `qt/rpcconsole.cpp`, `torcontrol.cpp`, `util.cpp`, `utilstrencodings.cpp` and `utilstrencodings.h`.\r\n* Added known `*printf(Ã¢ÂÂ¦)` violations for `dbwrapper.cpp`, `test/dbwrapper_tests.cpp` and `util.cpp`.\r\n* Now invoking `git grep` only once in order to minimize run-time.\r\n\r\nPlease re-review :-)",
      "created_at" : "2018-04-24T12:26:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-383911534",
      "id" : 383911534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-24T16:24:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383911534",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I think `printf` and `fprintf(stderr, ...` are fine. They are only used to print error messages, it's not important if they are formatted slightly different according to the locale.\r\n(not so much for `sprintf` `vsnprintf` etc which should be replaced with use of tinyformat, these end up in strings and might end up on the RPC interface or in files meant to be portable)",
      "created_at" : "2018-04-25T12:16:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384265664",
      "id" : 384265664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-25T12:16:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384265664",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj You saw that `fprintf(stderr, Ã¢ÂÂ¦` is explicitly filtered out via `grep -vE 'fprintf\\(.*(stdout|stderr)'` in the script? :-)\r\n\r\nShould I keep `fprintf` (with the exclusion above) and remove `printf`? Makes sense?",
      "created_at" : "2018-04-25T12:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384267525",
      "id" : 384267525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-25T12:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384267525",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> @laanwj You saw that fprintf(stderr, Ã¢ÂÂ¦ is explicitly filtered out via grep -vE 'fprintf\\(.*(stdout|stderr)' in the script? :-)\r\n\r\nOh that's good! No, hadn't noticed that yet.\r\n\r\n> Should I keep fprintf (with the exclusion above) and remove printf? Makes sense?\r\n\r\nYes I think so!",
      "created_at" : "2018-04-25T12:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384275959",
      "id" : 384275959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-25T12:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384275959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Updated version with `printf` removed! Please re-review :-)",
      "created_at" : "2018-04-25T13:01:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384278135",
      "id" : 384278135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-25T13:01:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384278135",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Thinking of it, it would make sense to add this list to the developer notes as well (next to the mention of the locale risks) , so it doesn't come out of the blue.",
      "created_at" : "2018-04-26T10:57:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384598316",
      "id" : 384598316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-26T10:57:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384598316",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Good point! Added a reference to the script and included the list in the developer notes. Looks good? :-)",
      "created_at" : "2018-04-26T19:16:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-384759121",
      "id" : 384759121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-04-26T19:16:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384759121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated: Added some locale dependent Boost functions and the corresponding `KNOWN_VIOLATIONS` entries.\r\n\r\nAdded known violations:\r\n* `is_digit` is used in `src/core_read.cpp`\r\n* `to_lower` is used in `src/netbase.cpp`\r\n* `to_upper` is used in `src/rpc/server.cpp`\r\n* `trim` is used in `src/core_read.cpp`\r\n* `trim` is used in `src/httprpc.cpp`\r\n* `trim_right` is used in `src/bitcoin-tx.cpp`\r\n\r\nAdded Boost functions:\r\n\r\n```\r\nfold_case\r\nis_digit\r\nis_space\r\nnormalize\r\nto_lower\r\nto_title\r\nto_upper\r\ntrim\r\ntrim_left\r\ntrim_right\r\n```\r\n\r\n@laanwj, is this PR getting ready for merge? :-)  When it is merged my plan is to start replacing calls to locale dependent functions with their non-locale dependent counterparts.",
      "created_at" : "2018-05-22T05:56:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-390871794",
      "id" : 390871794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-05-22T05:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390871794",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Empact Would you mind reviewing this PR? :-)",
      "created_at" : "2018-05-24T11:59:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-391688316",
      "id" : 391688316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "updated_at" : "2018-05-24T11:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391688316",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190763887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190763887"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be helpful to add an explanatory comment as to why each of these are disabled. E.g. I don't see a printf call outside of crypto/secp256k1/tinyformat.h so it's not clear to me why this is disabled.",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-05-25T00:16:39Z",
      "diff_hunk" : "@@ -0,0 +1,229 @@\n+#!/bin/bash\n+\n+KNOWN_VIOLATIONS=(\n+    \"src/base58.cpp:.*isspace\"\n+    \"src/bitcoin-tx.cpp.*stoul\"\n+    \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/bitcoin-tx.cpp:.*atoi\"\n+    \"src/core_read.cpp.*is_digit\"\n+    \"src/dbwrapper.cpp.*stoul\"\n+    \"src/dbwrapper.cpp:.*vsnprintf\"\n+    \"src/httprpc.cpp.*trim\"\n+    \"src/init.cpp:.*atoi\"\n+    \"src/netbase.cpp.*to_lower\"\n+    \"src/qt/rpcconsole.cpp:.*atoi\"\n+    \"src/qt/rpcconsole.cpp:.*isdigit\"\n+    \"src/rest.cpp:.*strtol\"\n+    \"src/rpc/server.cpp.*to_upper\"\n+    \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/getarg_tests.cpp.*split\"\n+    \"src/torcontrol.cpp:.*atoi\"\n+    \"src/torcontrol.cpp:.*strtol\"\n+    \"src/uint256.cpp:.*isspace\"\n+    \"src/uint256.cpp:.*tolower\"\n+    \"src/util.cpp:.*atoi\"\n+    \"src/util.cpp:.*fprintf\"\n+    \"src/util.cpp:.*tolower\"\n+    \"src/utilmoneystr.cpp:.*isdigit\"\n+    \"src/utilmoneystr.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*atoi\"\n+    \"src/utilstrencodings.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*strtol\"\n+    \"src/utilstrencodings.cpp:.*strtoll\"\n+    \"src/utilstrencodings.cpp:.*strtoul\"\n+    \"src/utilstrencodings.cpp:.*strtoull\"\n+    \"src/utilstrencodings.h:.*atoi\"\n+)\n+\n+REGEXP_IGNORE_EXTERNAL_DEPENDENCIES=\"^src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    alphasort    # LC_COLLATE (via strcoll)\n+    asctime      # LC_TIME (directly)\n+    asprintf     # (via vasprintf)\n+    atof         # LC_NUMERIC (via strtod)\n+    atoi         # LC_NUMERIC (via strtol)\n+    atol         # LC_NUMERIC (via strtol)\n+    atoll        # (via strtoll)\n+    atoq\n+    btowc        # LC_CTYPE (directly)\n+    ctime        # (via asctime or localtime)\n+    dprintf      # (via vdprintf)\n+    fgetwc\n+    fgetws\n+    fold_case    # boost::locale::fold_case\n+    fprintf      # (via vfprintf)\n+    fputwc\n+    fputws\n+    fscanf       # (via __vfscanf)\n+    fwprintf     # (via __vfwprintf)\n+    getdate      # via __getdate_r => isspace // __localtime_r\n+    getwc\n+    getwchar\n+    is_digit     # boost::algorithm::is_digit\n+    is_space     # boost::algorithm::is_space\n+    isalnum      # LC_CTYPE\n+    isalpha      # LC_CTYPE\n+    isblank      # LC_CTYPE\n+    iscntrl      # LC_CTYPE\n+    isctype      # LC_CTYPE\n+    isdigit      # LC_CTYPE\n+    isgraph      # LC_CTYPE\n+    islower      # LC_CTYPE\n+    isprint      # LC_CTYPE\n+    ispunct      # LC_CTYPE\n+    isspace      # LC_CTYPE\n+    isupper      # LC_CTYPE\n+    iswalnum     # LC_CTYPE\n+    iswalpha     # LC_CTYPE\n+    iswblank     # LC_CTYPE\n+    iswcntrl     # LC_CTYPE\n+    iswctype     # LC_CTYPE\n+    iswdigit     # LC_CTYPE\n+    iswgraph     # LC_CTYPE\n+    iswlower     # LC_CTYPE\n+    iswprint     # LC_CTYPE\n+    iswpunct     # LC_CTYPE\n+    iswspace     # LC_CTYPE\n+    iswupper     # LC_CTYPE\n+    iswxdigit    # LC_CTYPE\n+    isxdigit     # LC_CTYPE\n+    localeconv   # LC_NUMERIC + LC_MONETARY\n+    mblen        # LC_CTYPE\n+    mbrlen\n+    mbrtowc\n+    mbsinit\n+    mbsnrtowcs\n+    mbsrtowcs\n+    mbstowcs     # LC_CTYPE\n+    mbtowc       # LC_CTYPE\n+    mktime\n+    normalize    # boost::locale::normalize\n+#   printf       # LC_NUMERIC",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190763887",
      "id" : 190763887,
      "original_commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "original_position" : 102,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : 102,
      "pull_request_review_id" : 123212851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-25T00:16:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190763887",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190767263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190767263"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it possible to simplify this by processing them at once? I'm skeptical grouping by function will be helpful.",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-05-25T00:47:48Z",
      "diff_hunk" : "@@ -0,0 +1,229 @@\n+#!/bin/bash\n+\n+KNOWN_VIOLATIONS=(\n+    \"src/base58.cpp:.*isspace\"\n+    \"src/bitcoin-tx.cpp.*stoul\"\n+    \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/bitcoin-tx.cpp:.*atoi\"\n+    \"src/core_read.cpp.*is_digit\"\n+    \"src/dbwrapper.cpp.*stoul\"\n+    \"src/dbwrapper.cpp:.*vsnprintf\"\n+    \"src/httprpc.cpp.*trim\"\n+    \"src/init.cpp:.*atoi\"\n+    \"src/netbase.cpp.*to_lower\"\n+    \"src/qt/rpcconsole.cpp:.*atoi\"\n+    \"src/qt/rpcconsole.cpp:.*isdigit\"\n+    \"src/rest.cpp:.*strtol\"\n+    \"src/rpc/server.cpp.*to_upper\"\n+    \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/getarg_tests.cpp.*split\"\n+    \"src/torcontrol.cpp:.*atoi\"\n+    \"src/torcontrol.cpp:.*strtol\"\n+    \"src/uint256.cpp:.*isspace\"\n+    \"src/uint256.cpp:.*tolower\"\n+    \"src/util.cpp:.*atoi\"\n+    \"src/util.cpp:.*fprintf\"\n+    \"src/util.cpp:.*tolower\"\n+    \"src/utilmoneystr.cpp:.*isdigit\"\n+    \"src/utilmoneystr.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*atoi\"\n+    \"src/utilstrencodings.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*strtol\"\n+    \"src/utilstrencodings.cpp:.*strtoll\"\n+    \"src/utilstrencodings.cpp:.*strtoul\"\n+    \"src/utilstrencodings.cpp:.*strtoull\"\n+    \"src/utilstrencodings.h:.*atoi\"\n+)\n+\n+REGEXP_IGNORE_EXTERNAL_DEPENDENCIES=\"^src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    alphasort    # LC_COLLATE (via strcoll)\n+    asctime      # LC_TIME (directly)\n+    asprintf     # (via vasprintf)\n+    atof         # LC_NUMERIC (via strtod)\n+    atoi         # LC_NUMERIC (via strtol)\n+    atol         # LC_NUMERIC (via strtol)\n+    atoll        # (via strtoll)\n+    atoq\n+    btowc        # LC_CTYPE (directly)\n+    ctime        # (via asctime or localtime)\n+    dprintf      # (via vdprintf)\n+    fgetwc\n+    fgetws\n+    fold_case    # boost::locale::fold_case\n+    fprintf      # (via vfprintf)\n+    fputwc\n+    fputws\n+    fscanf       # (via __vfscanf)\n+    fwprintf     # (via __vfwprintf)\n+    getdate      # via __getdate_r => isspace // __localtime_r\n+    getwc\n+    getwchar\n+    is_digit     # boost::algorithm::is_digit\n+    is_space     # boost::algorithm::is_space\n+    isalnum      # LC_CTYPE\n+    isalpha      # LC_CTYPE\n+    isblank      # LC_CTYPE\n+    iscntrl      # LC_CTYPE\n+    isctype      # LC_CTYPE\n+    isdigit      # LC_CTYPE\n+    isgraph      # LC_CTYPE\n+    islower      # LC_CTYPE\n+    isprint      # LC_CTYPE\n+    ispunct      # LC_CTYPE\n+    isspace      # LC_CTYPE\n+    isupper      # LC_CTYPE\n+    iswalnum     # LC_CTYPE\n+    iswalpha     # LC_CTYPE\n+    iswblank     # LC_CTYPE\n+    iswcntrl     # LC_CTYPE\n+    iswctype     # LC_CTYPE\n+    iswdigit     # LC_CTYPE\n+    iswgraph     # LC_CTYPE\n+    iswlower     # LC_CTYPE\n+    iswprint     # LC_CTYPE\n+    iswpunct     # LC_CTYPE\n+    iswspace     # LC_CTYPE\n+    iswupper     # LC_CTYPE\n+    iswxdigit    # LC_CTYPE\n+    isxdigit     # LC_CTYPE\n+    localeconv   # LC_NUMERIC + LC_MONETARY\n+    mblen        # LC_CTYPE\n+    mbrlen\n+    mbrtowc\n+    mbsinit\n+    mbsnrtowcs\n+    mbsrtowcs\n+    mbstowcs     # LC_CTYPE\n+    mbtowc       # LC_CTYPE\n+    mktime\n+    normalize    # boost::locale::normalize\n+#   printf       # LC_NUMERIC\n+    putwc\n+    putwchar\n+    scanf        # LC_NUMERIC\n+    setlocale\n+    snprintf\n+    sprintf\n+    sscanf\n+    stod\n+    stof\n+    stoi\n+    stol\n+    stold\n+    stoll\n+    stoul\n+    stoull\n+    strcasecmp\n+    strcasestr\n+    strcoll      # LC_COLLATE\n+#   strerror\n+    strfmon\n+    strftime     # LC_TIME\n+    strncasecmp\n+    strptime\n+    strtod       # LC_NUMERIC\n+    strtof\n+    strtoimax\n+    strtol       # LC_NUMERIC\n+    strtold\n+    strtoll\n+    strtoq\n+    strtoul      # LC_NUMERIC\n+    strtoull\n+    strtoumax\n+    strtouq\n+    strxfrm      # LC_COLLATE\n+    swprintf\n+    to_lower     # boost::locale::to_lower\n+    to_title     # boost::locale::to_title\n+    to_upper     # boost::locale::to_upper\n+    tolower      # LC_CTYPE\n+    toupper      # LC_CTYPE\n+    towctrans\n+    towlower     # LC_CTYPE\n+    towupper     # LC_CTYPE\n+    trim         # boost::algorithm::trim\n+    trim_left    # boost::algorithm::trim_left\n+    trim_right   # boost::algorithm::trim_right\n+    ungetwc\n+    vasprintf\n+    vdprintf\n+    versionsort\n+    vfprintf\n+    vfscanf\n+    vfwprintf\n+    vprintf\n+    vscanf\n+    vsnprintf\n+    vsprintf\n+    vsscanf\n+    vswprintf\n+    vwprintf\n+    wcrtomb\n+    wcscasecmp\n+    wcscoll      # LC_COLLATE\n+    wcsftime     # LC_TIME\n+    wcsncasecmp\n+    wcsnrtombs\n+    wcsrtombs\n+    wcstod       # LC_NUMERIC\n+    wcstof\n+    wcstoimax\n+    wcstol       # LC_NUMERIC\n+    wcstold\n+    wcstoll\n+    wcstombs     # LC_CTYPE\n+    wcstoul      # LC_NUMERIC\n+    wcstoull\n+    wcstoumax\n+    wcswidth\n+    wcsxfrm      # LC_COLLATE\n+    wctob\n+    wctomb       # LC_CTYPE\n+    wctrans\n+    wctype\n+    wcwidth\n+    wprintf\n+)\n+\n+function join_array {\n+    local IFS=\"$1\"\n+    shift\n+    echo \"$*\"\n+}\n+\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=$(join_array \"|\" \"${KNOWN_VIOLATIONS[@]}\")\n+\n+# Invoke \"git grep\" only once in order to minimize run-time\n+REGEXP_LOCALE_DEPENDENT_FUNCTIONS=$(join_array \"|\" \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\")\n+GIT_GREP_OUTPUT=$(git grep -E \"[^a-zA-Z0-9_\\`'\\\"<>](${REGEXP_LOCALE_DEPENDENT_FUNCTIONS}(|_r|_s))[^a-zA-Z0-9_\\`'\\\"<>]\" -- \"*.cpp\" \"*.h\")\n+\n+EXIT_CODE=0\n+for LOCALE_DEPENDENT_FUNCTION in \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\"; do\n+    MATCHES=$(grep -E \"[^a-zA-Z0-9_\\`'\\\"<>]${LOCALE_DEPENDENT_FUNCTION}(|_r|_s)[^a-zA-Z0-9_\\`'\\\"<>]\" <<< \"${GIT_GREP_OUTPUT}\" | \\\n+        grep -vE \"\\.(c|cpp|h):\\s*(//|\\*|/\\*|\\\").*${LOCALE_DEPENDENT_FUNCTION}\" | \\\n+        grep -vE 'fprintf\\(.*(stdout|stderr)')\n+    if [[ ${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${REGEXP_IGNORE_KNOWN_VIOLATIONS} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_KNOWN_VIOLATIONS}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${MATCHES} != \"\" ]]; then\n+        echo \"The locale dependent function ${LOCALE_DEPENDENT_FUNCTION}(...) appears to be used:\"\n+        echo \"${MATCHES}\"\n+        echo\n+        EXIT_CODE=1\n+    fi\n+done",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190767263",
      "id" : 190767263,
      "original_commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "original_position" : 220,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : 220,
      "pull_request_review_id" : 123216762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-25T00:49:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190767263",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190797266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190797266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@Empact For performance or usability reasons?\r\n\r\nIf you mean for performance reasons, then please note that the costly operation `git grep` is run only once.\r\n\r\nFrom a usability perspective I think it makes sense to group the output per function Ã¢ÂÂ try running the script with an empty `KNOWN_VIOLATIONS` and you'll see what I mean :-)   But I'm open to alternative outputs, so please provide a diff and I'll check out your suggestion :-)",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-05-25T05:58:47Z",
      "diff_hunk" : "@@ -0,0 +1,229 @@\n+#!/bin/bash\n+\n+KNOWN_VIOLATIONS=(\n+    \"src/base58.cpp:.*isspace\"\n+    \"src/bitcoin-tx.cpp.*stoul\"\n+    \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/bitcoin-tx.cpp:.*atoi\"\n+    \"src/core_read.cpp.*is_digit\"\n+    \"src/dbwrapper.cpp.*stoul\"\n+    \"src/dbwrapper.cpp:.*vsnprintf\"\n+    \"src/httprpc.cpp.*trim\"\n+    \"src/init.cpp:.*atoi\"\n+    \"src/netbase.cpp.*to_lower\"\n+    \"src/qt/rpcconsole.cpp:.*atoi\"\n+    \"src/qt/rpcconsole.cpp:.*isdigit\"\n+    \"src/rest.cpp:.*strtol\"\n+    \"src/rpc/server.cpp.*to_upper\"\n+    \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/getarg_tests.cpp.*split\"\n+    \"src/torcontrol.cpp:.*atoi\"\n+    \"src/torcontrol.cpp:.*strtol\"\n+    \"src/uint256.cpp:.*isspace\"\n+    \"src/uint256.cpp:.*tolower\"\n+    \"src/util.cpp:.*atoi\"\n+    \"src/util.cpp:.*fprintf\"\n+    \"src/util.cpp:.*tolower\"\n+    \"src/utilmoneystr.cpp:.*isdigit\"\n+    \"src/utilmoneystr.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*atoi\"\n+    \"src/utilstrencodings.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*strtol\"\n+    \"src/utilstrencodings.cpp:.*strtoll\"\n+    \"src/utilstrencodings.cpp:.*strtoul\"\n+    \"src/utilstrencodings.cpp:.*strtoull\"\n+    \"src/utilstrencodings.h:.*atoi\"\n+)\n+\n+REGEXP_IGNORE_EXTERNAL_DEPENDENCIES=\"^src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    alphasort    # LC_COLLATE (via strcoll)\n+    asctime      # LC_TIME (directly)\n+    asprintf     # (via vasprintf)\n+    atof         # LC_NUMERIC (via strtod)\n+    atoi         # LC_NUMERIC (via strtol)\n+    atol         # LC_NUMERIC (via strtol)\n+    atoll        # (via strtoll)\n+    atoq\n+    btowc        # LC_CTYPE (directly)\n+    ctime        # (via asctime or localtime)\n+    dprintf      # (via vdprintf)\n+    fgetwc\n+    fgetws\n+    fold_case    # boost::locale::fold_case\n+    fprintf      # (via vfprintf)\n+    fputwc\n+    fputws\n+    fscanf       # (via __vfscanf)\n+    fwprintf     # (via __vfwprintf)\n+    getdate      # via __getdate_r => isspace // __localtime_r\n+    getwc\n+    getwchar\n+    is_digit     # boost::algorithm::is_digit\n+    is_space     # boost::algorithm::is_space\n+    isalnum      # LC_CTYPE\n+    isalpha      # LC_CTYPE\n+    isblank      # LC_CTYPE\n+    iscntrl      # LC_CTYPE\n+    isctype      # LC_CTYPE\n+    isdigit      # LC_CTYPE\n+    isgraph      # LC_CTYPE\n+    islower      # LC_CTYPE\n+    isprint      # LC_CTYPE\n+    ispunct      # LC_CTYPE\n+    isspace      # LC_CTYPE\n+    isupper      # LC_CTYPE\n+    iswalnum     # LC_CTYPE\n+    iswalpha     # LC_CTYPE\n+    iswblank     # LC_CTYPE\n+    iswcntrl     # LC_CTYPE\n+    iswctype     # LC_CTYPE\n+    iswdigit     # LC_CTYPE\n+    iswgraph     # LC_CTYPE\n+    iswlower     # LC_CTYPE\n+    iswprint     # LC_CTYPE\n+    iswpunct     # LC_CTYPE\n+    iswspace     # LC_CTYPE\n+    iswupper     # LC_CTYPE\n+    iswxdigit    # LC_CTYPE\n+    isxdigit     # LC_CTYPE\n+    localeconv   # LC_NUMERIC + LC_MONETARY\n+    mblen        # LC_CTYPE\n+    mbrlen\n+    mbrtowc\n+    mbsinit\n+    mbsnrtowcs\n+    mbsrtowcs\n+    mbstowcs     # LC_CTYPE\n+    mbtowc       # LC_CTYPE\n+    mktime\n+    normalize    # boost::locale::normalize\n+#   printf       # LC_NUMERIC\n+    putwc\n+    putwchar\n+    scanf        # LC_NUMERIC\n+    setlocale\n+    snprintf\n+    sprintf\n+    sscanf\n+    stod\n+    stof\n+    stoi\n+    stol\n+    stold\n+    stoll\n+    stoul\n+    stoull\n+    strcasecmp\n+    strcasestr\n+    strcoll      # LC_COLLATE\n+#   strerror\n+    strfmon\n+    strftime     # LC_TIME\n+    strncasecmp\n+    strptime\n+    strtod       # LC_NUMERIC\n+    strtof\n+    strtoimax\n+    strtol       # LC_NUMERIC\n+    strtold\n+    strtoll\n+    strtoq\n+    strtoul      # LC_NUMERIC\n+    strtoull\n+    strtoumax\n+    strtouq\n+    strxfrm      # LC_COLLATE\n+    swprintf\n+    to_lower     # boost::locale::to_lower\n+    to_title     # boost::locale::to_title\n+    to_upper     # boost::locale::to_upper\n+    tolower      # LC_CTYPE\n+    toupper      # LC_CTYPE\n+    towctrans\n+    towlower     # LC_CTYPE\n+    towupper     # LC_CTYPE\n+    trim         # boost::algorithm::trim\n+    trim_left    # boost::algorithm::trim_left\n+    trim_right   # boost::algorithm::trim_right\n+    ungetwc\n+    vasprintf\n+    vdprintf\n+    versionsort\n+    vfprintf\n+    vfscanf\n+    vfwprintf\n+    vprintf\n+    vscanf\n+    vsnprintf\n+    vsprintf\n+    vsscanf\n+    vswprintf\n+    vwprintf\n+    wcrtomb\n+    wcscasecmp\n+    wcscoll      # LC_COLLATE\n+    wcsftime     # LC_TIME\n+    wcsncasecmp\n+    wcsnrtombs\n+    wcsrtombs\n+    wcstod       # LC_NUMERIC\n+    wcstof\n+    wcstoimax\n+    wcstol       # LC_NUMERIC\n+    wcstold\n+    wcstoll\n+    wcstombs     # LC_CTYPE\n+    wcstoul      # LC_NUMERIC\n+    wcstoull\n+    wcstoumax\n+    wcswidth\n+    wcsxfrm      # LC_COLLATE\n+    wctob\n+    wctomb       # LC_CTYPE\n+    wctrans\n+    wctype\n+    wcwidth\n+    wprintf\n+)\n+\n+function join_array {\n+    local IFS=\"$1\"\n+    shift\n+    echo \"$*\"\n+}\n+\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=$(join_array \"|\" \"${KNOWN_VIOLATIONS[@]}\")\n+\n+# Invoke \"git grep\" only once in order to minimize run-time\n+REGEXP_LOCALE_DEPENDENT_FUNCTIONS=$(join_array \"|\" \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\")\n+GIT_GREP_OUTPUT=$(git grep -E \"[^a-zA-Z0-9_\\`'\\\"<>](${REGEXP_LOCALE_DEPENDENT_FUNCTIONS}(|_r|_s))[^a-zA-Z0-9_\\`'\\\"<>]\" -- \"*.cpp\" \"*.h\")\n+\n+EXIT_CODE=0\n+for LOCALE_DEPENDENT_FUNCTION in \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\"; do\n+    MATCHES=$(grep -E \"[^a-zA-Z0-9_\\`'\\\"<>]${LOCALE_DEPENDENT_FUNCTION}(|_r|_s)[^a-zA-Z0-9_\\`'\\\"<>]\" <<< \"${GIT_GREP_OUTPUT}\" | \\\n+        grep -vE \"\\.(c|cpp|h):\\s*(//|\\*|/\\*|\\\").*${LOCALE_DEPENDENT_FUNCTION}\" | \\\n+        grep -vE 'fprintf\\(.*(stdout|stderr)')\n+    if [[ ${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${REGEXP_IGNORE_KNOWN_VIOLATIONS} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_KNOWN_VIOLATIONS}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${MATCHES} != \"\" ]]; then\n+        echo \"The locale dependent function ${LOCALE_DEPENDENT_FUNCTION}(...) appears to be used:\"\n+        echo \"${MATCHES}\"\n+        echo\n+        EXIT_CODE=1\n+    fi\n+done",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190797266",
      "id" : 190797266,
      "in_reply_to_id" : 190767263,
      "original_commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "original_position" : 220,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : 220,
      "pull_request_review_id" : 123251464,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-25T06:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190797266",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190833725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190833725"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Speaking from a maintainability perspective - seems in the general case KNOWN_VIOLATIONS will be populated so the list will be relatively short and only introduced by they who open the PR, in which case the grouping isn't very beneficial IMO. If not much usability benefit is gained, then if the code can be simplified by removing it I think it's worthwhile to do so.",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-05-25T09:05:26Z",
      "diff_hunk" : "@@ -0,0 +1,229 @@\n+#!/bin/bash\n+\n+KNOWN_VIOLATIONS=(\n+    \"src/base58.cpp:.*isspace\"\n+    \"src/bitcoin-tx.cpp.*stoul\"\n+    \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/bitcoin-tx.cpp:.*atoi\"\n+    \"src/core_read.cpp.*is_digit\"\n+    \"src/dbwrapper.cpp.*stoul\"\n+    \"src/dbwrapper.cpp:.*vsnprintf\"\n+    \"src/httprpc.cpp.*trim\"\n+    \"src/init.cpp:.*atoi\"\n+    \"src/netbase.cpp.*to_lower\"\n+    \"src/qt/rpcconsole.cpp:.*atoi\"\n+    \"src/qt/rpcconsole.cpp:.*isdigit\"\n+    \"src/rest.cpp:.*strtol\"\n+    \"src/rpc/server.cpp.*to_upper\"\n+    \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/getarg_tests.cpp.*split\"\n+    \"src/torcontrol.cpp:.*atoi\"\n+    \"src/torcontrol.cpp:.*strtol\"\n+    \"src/uint256.cpp:.*isspace\"\n+    \"src/uint256.cpp:.*tolower\"\n+    \"src/util.cpp:.*atoi\"\n+    \"src/util.cpp:.*fprintf\"\n+    \"src/util.cpp:.*tolower\"\n+    \"src/utilmoneystr.cpp:.*isdigit\"\n+    \"src/utilmoneystr.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*atoi\"\n+    \"src/utilstrencodings.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*strtol\"\n+    \"src/utilstrencodings.cpp:.*strtoll\"\n+    \"src/utilstrencodings.cpp:.*strtoul\"\n+    \"src/utilstrencodings.cpp:.*strtoull\"\n+    \"src/utilstrencodings.h:.*atoi\"\n+)\n+\n+REGEXP_IGNORE_EXTERNAL_DEPENDENCIES=\"^src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    alphasort    # LC_COLLATE (via strcoll)\n+    asctime      # LC_TIME (directly)\n+    asprintf     # (via vasprintf)\n+    atof         # LC_NUMERIC (via strtod)\n+    atoi         # LC_NUMERIC (via strtol)\n+    atol         # LC_NUMERIC (via strtol)\n+    atoll        # (via strtoll)\n+    atoq\n+    btowc        # LC_CTYPE (directly)\n+    ctime        # (via asctime or localtime)\n+    dprintf      # (via vdprintf)\n+    fgetwc\n+    fgetws\n+    fold_case    # boost::locale::fold_case\n+    fprintf      # (via vfprintf)\n+    fputwc\n+    fputws\n+    fscanf       # (via __vfscanf)\n+    fwprintf     # (via __vfwprintf)\n+    getdate      # via __getdate_r => isspace // __localtime_r\n+    getwc\n+    getwchar\n+    is_digit     # boost::algorithm::is_digit\n+    is_space     # boost::algorithm::is_space\n+    isalnum      # LC_CTYPE\n+    isalpha      # LC_CTYPE\n+    isblank      # LC_CTYPE\n+    iscntrl      # LC_CTYPE\n+    isctype      # LC_CTYPE\n+    isdigit      # LC_CTYPE\n+    isgraph      # LC_CTYPE\n+    islower      # LC_CTYPE\n+    isprint      # LC_CTYPE\n+    ispunct      # LC_CTYPE\n+    isspace      # LC_CTYPE\n+    isupper      # LC_CTYPE\n+    iswalnum     # LC_CTYPE\n+    iswalpha     # LC_CTYPE\n+    iswblank     # LC_CTYPE\n+    iswcntrl     # LC_CTYPE\n+    iswctype     # LC_CTYPE\n+    iswdigit     # LC_CTYPE\n+    iswgraph     # LC_CTYPE\n+    iswlower     # LC_CTYPE\n+    iswprint     # LC_CTYPE\n+    iswpunct     # LC_CTYPE\n+    iswspace     # LC_CTYPE\n+    iswupper     # LC_CTYPE\n+    iswxdigit    # LC_CTYPE\n+    isxdigit     # LC_CTYPE\n+    localeconv   # LC_NUMERIC + LC_MONETARY\n+    mblen        # LC_CTYPE\n+    mbrlen\n+    mbrtowc\n+    mbsinit\n+    mbsnrtowcs\n+    mbsrtowcs\n+    mbstowcs     # LC_CTYPE\n+    mbtowc       # LC_CTYPE\n+    mktime\n+    normalize    # boost::locale::normalize\n+#   printf       # LC_NUMERIC\n+    putwc\n+    putwchar\n+    scanf        # LC_NUMERIC\n+    setlocale\n+    snprintf\n+    sprintf\n+    sscanf\n+    stod\n+    stof\n+    stoi\n+    stol\n+    stold\n+    stoll\n+    stoul\n+    stoull\n+    strcasecmp\n+    strcasestr\n+    strcoll      # LC_COLLATE\n+#   strerror\n+    strfmon\n+    strftime     # LC_TIME\n+    strncasecmp\n+    strptime\n+    strtod       # LC_NUMERIC\n+    strtof\n+    strtoimax\n+    strtol       # LC_NUMERIC\n+    strtold\n+    strtoll\n+    strtoq\n+    strtoul      # LC_NUMERIC\n+    strtoull\n+    strtoumax\n+    strtouq\n+    strxfrm      # LC_COLLATE\n+    swprintf\n+    to_lower     # boost::locale::to_lower\n+    to_title     # boost::locale::to_title\n+    to_upper     # boost::locale::to_upper\n+    tolower      # LC_CTYPE\n+    toupper      # LC_CTYPE\n+    towctrans\n+    towlower     # LC_CTYPE\n+    towupper     # LC_CTYPE\n+    trim         # boost::algorithm::trim\n+    trim_left    # boost::algorithm::trim_left\n+    trim_right   # boost::algorithm::trim_right\n+    ungetwc\n+    vasprintf\n+    vdprintf\n+    versionsort\n+    vfprintf\n+    vfscanf\n+    vfwprintf\n+    vprintf\n+    vscanf\n+    vsnprintf\n+    vsprintf\n+    vsscanf\n+    vswprintf\n+    vwprintf\n+    wcrtomb\n+    wcscasecmp\n+    wcscoll      # LC_COLLATE\n+    wcsftime     # LC_TIME\n+    wcsncasecmp\n+    wcsnrtombs\n+    wcsrtombs\n+    wcstod       # LC_NUMERIC\n+    wcstof\n+    wcstoimax\n+    wcstol       # LC_NUMERIC\n+    wcstold\n+    wcstoll\n+    wcstombs     # LC_CTYPE\n+    wcstoul      # LC_NUMERIC\n+    wcstoull\n+    wcstoumax\n+    wcswidth\n+    wcsxfrm      # LC_COLLATE\n+    wctob\n+    wctomb       # LC_CTYPE\n+    wctrans\n+    wctype\n+    wcwidth\n+    wprintf\n+)\n+\n+function join_array {\n+    local IFS=\"$1\"\n+    shift\n+    echo \"$*\"\n+}\n+\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=$(join_array \"|\" \"${KNOWN_VIOLATIONS[@]}\")\n+\n+# Invoke \"git grep\" only once in order to minimize run-time\n+REGEXP_LOCALE_DEPENDENT_FUNCTIONS=$(join_array \"|\" \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\")\n+GIT_GREP_OUTPUT=$(git grep -E \"[^a-zA-Z0-9_\\`'\\\"<>](${REGEXP_LOCALE_DEPENDENT_FUNCTIONS}(|_r|_s))[^a-zA-Z0-9_\\`'\\\"<>]\" -- \"*.cpp\" \"*.h\")\n+\n+EXIT_CODE=0\n+for LOCALE_DEPENDENT_FUNCTION in \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\"; do\n+    MATCHES=$(grep -E \"[^a-zA-Z0-9_\\`'\\\"<>]${LOCALE_DEPENDENT_FUNCTION}(|_r|_s)[^a-zA-Z0-9_\\`'\\\"<>]\" <<< \"${GIT_GREP_OUTPUT}\" | \\\n+        grep -vE \"\\.(c|cpp|h):\\s*(//|\\*|/\\*|\\\").*${LOCALE_DEPENDENT_FUNCTION}\" | \\\n+        grep -vE 'fprintf\\(.*(stdout|stderr)')\n+    if [[ ${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${REGEXP_IGNORE_KNOWN_VIOLATIONS} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_KNOWN_VIOLATIONS}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${MATCHES} != \"\" ]]; then\n+        echo \"The locale dependent function ${LOCALE_DEPENDENT_FUNCTION}(...) appears to be used:\"\n+        echo \"${MATCHES}\"\n+        echo\n+        EXIT_CODE=1\n+    fi\n+done",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190833725",
      "id" : 190833725,
      "in_reply_to_id" : 190767263,
      "original_commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "original_position" : 220,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : 220,
      "pull_request_review_id" : 123295309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-25T09:06:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190833725",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190966350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190966350"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@Empact Do you have any specific output formatting in mind? Please give an example on how it would look :-)",
      "commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-05-25T17:50:23Z",
      "diff_hunk" : "@@ -0,0 +1,229 @@\n+#!/bin/bash\n+\n+KNOWN_VIOLATIONS=(\n+    \"src/base58.cpp:.*isspace\"\n+    \"src/bitcoin-tx.cpp.*stoul\"\n+    \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/bitcoin-tx.cpp:.*atoi\"\n+    \"src/core_read.cpp.*is_digit\"\n+    \"src/dbwrapper.cpp.*stoul\"\n+    \"src/dbwrapper.cpp:.*vsnprintf\"\n+    \"src/httprpc.cpp.*trim\"\n+    \"src/init.cpp:.*atoi\"\n+    \"src/netbase.cpp.*to_lower\"\n+    \"src/qt/rpcconsole.cpp:.*atoi\"\n+    \"src/qt/rpcconsole.cpp:.*isdigit\"\n+    \"src/rest.cpp:.*strtol\"\n+    \"src/rpc/server.cpp.*to_upper\"\n+    \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/getarg_tests.cpp.*split\"\n+    \"src/torcontrol.cpp:.*atoi\"\n+    \"src/torcontrol.cpp:.*strtol\"\n+    \"src/uint256.cpp:.*isspace\"\n+    \"src/uint256.cpp:.*tolower\"\n+    \"src/util.cpp:.*atoi\"\n+    \"src/util.cpp:.*fprintf\"\n+    \"src/util.cpp:.*tolower\"\n+    \"src/utilmoneystr.cpp:.*isdigit\"\n+    \"src/utilmoneystr.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*atoi\"\n+    \"src/utilstrencodings.cpp:.*isspace\"\n+    \"src/utilstrencodings.cpp:.*strtol\"\n+    \"src/utilstrencodings.cpp:.*strtoll\"\n+    \"src/utilstrencodings.cpp:.*strtoul\"\n+    \"src/utilstrencodings.cpp:.*strtoull\"\n+    \"src/utilstrencodings.h:.*atoi\"\n+)\n+\n+REGEXP_IGNORE_EXTERNAL_DEPENDENCIES=\"^src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n+\n+LOCALE_DEPENDENT_FUNCTIONS=(\n+    alphasort    # LC_COLLATE (via strcoll)\n+    asctime      # LC_TIME (directly)\n+    asprintf     # (via vasprintf)\n+    atof         # LC_NUMERIC (via strtod)\n+    atoi         # LC_NUMERIC (via strtol)\n+    atol         # LC_NUMERIC (via strtol)\n+    atoll        # (via strtoll)\n+    atoq\n+    btowc        # LC_CTYPE (directly)\n+    ctime        # (via asctime or localtime)\n+    dprintf      # (via vdprintf)\n+    fgetwc\n+    fgetws\n+    fold_case    # boost::locale::fold_case\n+    fprintf      # (via vfprintf)\n+    fputwc\n+    fputws\n+    fscanf       # (via __vfscanf)\n+    fwprintf     # (via __vfwprintf)\n+    getdate      # via __getdate_r => isspace // __localtime_r\n+    getwc\n+    getwchar\n+    is_digit     # boost::algorithm::is_digit\n+    is_space     # boost::algorithm::is_space\n+    isalnum      # LC_CTYPE\n+    isalpha      # LC_CTYPE\n+    isblank      # LC_CTYPE\n+    iscntrl      # LC_CTYPE\n+    isctype      # LC_CTYPE\n+    isdigit      # LC_CTYPE\n+    isgraph      # LC_CTYPE\n+    islower      # LC_CTYPE\n+    isprint      # LC_CTYPE\n+    ispunct      # LC_CTYPE\n+    isspace      # LC_CTYPE\n+    isupper      # LC_CTYPE\n+    iswalnum     # LC_CTYPE\n+    iswalpha     # LC_CTYPE\n+    iswblank     # LC_CTYPE\n+    iswcntrl     # LC_CTYPE\n+    iswctype     # LC_CTYPE\n+    iswdigit     # LC_CTYPE\n+    iswgraph     # LC_CTYPE\n+    iswlower     # LC_CTYPE\n+    iswprint     # LC_CTYPE\n+    iswpunct     # LC_CTYPE\n+    iswspace     # LC_CTYPE\n+    iswupper     # LC_CTYPE\n+    iswxdigit    # LC_CTYPE\n+    isxdigit     # LC_CTYPE\n+    localeconv   # LC_NUMERIC + LC_MONETARY\n+    mblen        # LC_CTYPE\n+    mbrlen\n+    mbrtowc\n+    mbsinit\n+    mbsnrtowcs\n+    mbsrtowcs\n+    mbstowcs     # LC_CTYPE\n+    mbtowc       # LC_CTYPE\n+    mktime\n+    normalize    # boost::locale::normalize\n+#   printf       # LC_NUMERIC\n+    putwc\n+    putwchar\n+    scanf        # LC_NUMERIC\n+    setlocale\n+    snprintf\n+    sprintf\n+    sscanf\n+    stod\n+    stof\n+    stoi\n+    stol\n+    stold\n+    stoll\n+    stoul\n+    stoull\n+    strcasecmp\n+    strcasestr\n+    strcoll      # LC_COLLATE\n+#   strerror\n+    strfmon\n+    strftime     # LC_TIME\n+    strncasecmp\n+    strptime\n+    strtod       # LC_NUMERIC\n+    strtof\n+    strtoimax\n+    strtol       # LC_NUMERIC\n+    strtold\n+    strtoll\n+    strtoq\n+    strtoul      # LC_NUMERIC\n+    strtoull\n+    strtoumax\n+    strtouq\n+    strxfrm      # LC_COLLATE\n+    swprintf\n+    to_lower     # boost::locale::to_lower\n+    to_title     # boost::locale::to_title\n+    to_upper     # boost::locale::to_upper\n+    tolower      # LC_CTYPE\n+    toupper      # LC_CTYPE\n+    towctrans\n+    towlower     # LC_CTYPE\n+    towupper     # LC_CTYPE\n+    trim         # boost::algorithm::trim\n+    trim_left    # boost::algorithm::trim_left\n+    trim_right   # boost::algorithm::trim_right\n+    ungetwc\n+    vasprintf\n+    vdprintf\n+    versionsort\n+    vfprintf\n+    vfscanf\n+    vfwprintf\n+    vprintf\n+    vscanf\n+    vsnprintf\n+    vsprintf\n+    vsscanf\n+    vswprintf\n+    vwprintf\n+    wcrtomb\n+    wcscasecmp\n+    wcscoll      # LC_COLLATE\n+    wcsftime     # LC_TIME\n+    wcsncasecmp\n+    wcsnrtombs\n+    wcsrtombs\n+    wcstod       # LC_NUMERIC\n+    wcstof\n+    wcstoimax\n+    wcstol       # LC_NUMERIC\n+    wcstold\n+    wcstoll\n+    wcstombs     # LC_CTYPE\n+    wcstoul      # LC_NUMERIC\n+    wcstoull\n+    wcstoumax\n+    wcswidth\n+    wcsxfrm      # LC_COLLATE\n+    wctob\n+    wctomb       # LC_CTYPE\n+    wctrans\n+    wctype\n+    wcwidth\n+    wprintf\n+)\n+\n+function join_array {\n+    local IFS=\"$1\"\n+    shift\n+    echo \"$*\"\n+}\n+\n+REGEXP_IGNORE_KNOWN_VIOLATIONS=$(join_array \"|\" \"${KNOWN_VIOLATIONS[@]}\")\n+\n+# Invoke \"git grep\" only once in order to minimize run-time\n+REGEXP_LOCALE_DEPENDENT_FUNCTIONS=$(join_array \"|\" \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\")\n+GIT_GREP_OUTPUT=$(git grep -E \"[^a-zA-Z0-9_\\`'\\\"<>](${REGEXP_LOCALE_DEPENDENT_FUNCTIONS}(|_r|_s))[^a-zA-Z0-9_\\`'\\\"<>]\" -- \"*.cpp\" \"*.h\")\n+\n+EXIT_CODE=0\n+for LOCALE_DEPENDENT_FUNCTION in \"${LOCALE_DEPENDENT_FUNCTIONS[@]}\"; do\n+    MATCHES=$(grep -E \"[^a-zA-Z0-9_\\`'\\\"<>]${LOCALE_DEPENDENT_FUNCTION}(|_r|_s)[^a-zA-Z0-9_\\`'\\\"<>]\" <<< \"${GIT_GREP_OUTPUT}\" | \\\n+        grep -vE \"\\.(c|cpp|h):\\s*(//|\\*|/\\*|\\\").*${LOCALE_DEPENDENT_FUNCTION}\" | \\\n+        grep -vE 'fprintf\\(.*(stdout|stderr)')\n+    if [[ ${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_EXTERNAL_DEPENDENCIES}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${REGEXP_IGNORE_KNOWN_VIOLATIONS} != \"\" ]]; then\n+        MATCHES=$(grep -vE \"${REGEXP_IGNORE_KNOWN_VIOLATIONS}\" <<< \"${MATCHES}\")\n+    fi\n+    if [[ ${MATCHES} != \"\" ]]; then\n+        echo \"The locale dependent function ${LOCALE_DEPENDENT_FUNCTION}(...) appears to be used:\"\n+        echo \"${MATCHES}\"\n+        echo\n+        EXIT_CODE=1\n+    fi\n+done",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#discussion_r190966350",
      "id" : 190966350,
      "in_reply_to_id" : 190767263,
      "original_commit_id" : "f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "original_position" : 220,
      "path" : "contrib/devtools/lint-locale-dependence.sh",
      "position" : 220,
      "pull_request_review_id" : 123460615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13041",
      "updated_at" : "2018-05-25T17:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190966350",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK f947ef02f9c8eee5957bb02e12cee4edd636c9fa",
      "created_at" : "2018-06-05T18:14:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-394808844",
      "id" : 394808844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDgwODg0NA==",
      "updated_at" : "2018-06-05T18:14:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394808844",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "On Jun 5, 2018 11:15 AM, \"Wladimir J. van der Laan\" <\nnotifications@github.com> wrote:\n\nutACK f947ef0\n<https://github.com/bitcoin/bitcoin/commit/f947ef02f9c8eee5957bb02e12cee4edd636c9fa>\n\nÃ¢ÂÂ\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-394808844>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AAfpiNwEhc18PlReCb8tP5iuXoUiYLn6ks5t5sqtgaJpZM4TdXns>\n.\n",
      "created_at" : "2018-06-05T18:33:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-394814816",
      "id" : 394814816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDgxNDgxNg==",
      "updated_at" : "2018-06-05T18:33:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394814816",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/518536?v=4",
         "events_url" : "https://api.github.com/users/cnavigato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cnavigato/followers",
         "following_url" : "https://api.github.com/users/cnavigato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cnavigato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cnavigato",
         "id" : 518536,
         "login" : "cnavigato",
         "node_id" : "MDQ6VXNlcjUxODUzNg==",
         "organizations_url" : "https://api.github.com/users/cnavigato/orgs",
         "received_events_url" : "https://api.github.com/users/cnavigato/received_events",
         "repos_url" : "https://api.github.com/users/cnavigato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cnavigato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cnavigato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cnavigato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Need to move `contrib/devtools/lint-locale-dependence.sh` to `test/lint/lint-locale-dependence.sh`\r\n",
      "created_at" : "2018-06-05T18:35:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-394815518",
      "id" : 394815518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDgxNTUxOA==",
      "updated_at" : "2018-06-05T18:39:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394815518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ken2812221 Thanks! Moved!\r\n\r\n@laanwj @cnavigato Please re-review :-)\r\n",
      "created_at" : "2018-06-06T06:10:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13041#issuecomment-394951566",
      "id" : 394951566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13041",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDk1MTU2Ng==",
      "updated_at" : "2018-06-06T06:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394951566",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
