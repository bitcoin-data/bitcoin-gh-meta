[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Note to reviewers, I would prefer to have base PR's reviewed and merged first, but feel free to stay around and comment.\r\n\r\n2nd commit is mostly moved code (67420d3).",
      "created_at" : "2018-04-20T01:54:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-382940552",
      "id" : 382940552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-20T01:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382940552",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182929363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182929363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "BTW, I'm planning to move the iteration to `WalletManager` and make `MaybeCompactWalletDB(WalletDatabase& dbh)`. This way `WalletManager` dependency is removed here.\r\n\r\n@jnewbery it would also move `scheduler.scheduleEvery(MaybeCompactWalletDB, 500);` to `WalletManager`.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-20T01:58:51Z",
      "diff_hunk" : "@@ -756,7 +757,7 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    for (CWallet* pwallet : GetWallets()) {\n+    for (CWallet* pwallet : g_wallet_manager.GetWallets()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182929363",
      "id" : 182929363,
      "original_commit_id" : "67420d3191ee5908e71c3e3a3b57a89b12a2f402",
      "original_position" : 13,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 13,
      "pull_request_review_id" : 113830104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182929363",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182973897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182973897"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It would be better to use spaces.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-20T08:03:16Z",
      "diff_hunk" : "@@ -258,6 +259,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n+\twallet/walletmanager.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182973897",
      "id" : 182973897,
      "original_commit_id" : "ac21dd23430c140321e6c2a4883b5882ab241b82",
      "original_position" : 12,
      "path" : "src/Makefile.am",
      "position" : null,
      "pull_request_review_id" : 113882660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182973897",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182981844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182981844"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, ty.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-20T08:37:10Z",
      "diff_hunk" : "@@ -258,6 +259,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n+\twallet/walletmanager.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182981844",
      "id" : 182981844,
      "in_reply_to_id" : 182973897,
      "original_commit_id" : "ac21dd23430c140321e6c2a4883b5882ab241b82",
      "original_position" : 12,
      "path" : "src/Makefile.am",
      "position" : null,
      "pull_request_review_id" : 113892223,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182981844",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> which will be useful for [...] src/interface/walletmanager.h for UI and process separation (@ryanofsky sgty?);\r\n\r\nIt does not seem correct to me to claim shallow organizational changes like this PR, #12587, or #13017 will help with process separation or with loading and unloading wallets after startup. I don't think these changes will hurt anything either (except maybe giving me a few interesting merge conflicts to resolve in 0b39b173e32e1a6e54abbd8d583cd0321a8b26c2 from #10973). But at best they seem like flailing around with code organization and running in place.\r\n\r\nPersonally, I would prefer to just manage wallets with standard c++ data structures and synchronization primitives instead of having a management interface. But if you'd prefer to have a management interface, I don't see a reason why you'd want it to use pimpl, or a reason why you would want to expose and duplicate it in [`src/interfaces/`](https://github.com/bitcoin/bitcoin/tree/master/src/interfaces) outside the wallet, instead of just adding a simple `handleUnloadWallet` callback for the GUI to complement the existing [`handleLoadWallet`](https://github.com/bitcoin/bitcoin/blob/8b262eb2d80bfa27ae8501078ce47bc1407e9c55/src/interfaces/node.h#L214-L216) and [`getWallets`](https://github.com/bitcoin/bitcoin/blob/8b262eb2d80bfa27ae8501078ce47bc1407e9c55/src/interfaces/node.h#L191-L192).\r\n\r\nAll of these are just surface disagreements about code organization, though, that really don't have any effect on features. If I could encourage you to work on an actual feature, I think it would be either writing code to implement wallet unloading, or writing a design doc or sequence diagram showing what data structures in the GUI and wallet need to be updated in what order for wallet unloading to work safely and responsively. ",
      "created_at" : "2018-04-20T10:48:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383059451",
      "id" : 383059451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-20T11:33:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383059451",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky thanks for the feedback.\r\n\r\n> I don't see a reason why you'd want it to use pimpl\r\n\r\nNo reason at all, removed.\r\n\r\n> Personally, I would prefer to just manage wallets with standard c++ data structures and synchronization primitives instead of having a management interface\r\n\r\nIn the case of dynamic wallet load/unload that would lead to code duplication right? - UI and RPC layers want to load/unload wallets.\r\n\r\n> But if you'd prefer to have a management interface\r\n\r\nIt's not a matter of my preference. It just makes sense to have such entity like `CAddrMan`, `CConnman` and `BanMan`. Also, see PR description for other things that can be handled by `WalletManager`.\r\n\r\n> All of these are just surface disagreements about code organization, though, that really don't have any effect on features.\r\n\r\n> It does not seem correct to me to claim shallow organizational changes like this PR, #12587, or #13017 will help with process separation or with loading and unloading wallets after startup\r\n\r\nI disagree if these changes make it easy to actually implement and review those features. Historically big PR's lack  reviews, have lots of discussions and later are usually split in multiple PR's.\r\n\r\n>  If I could encourage you to work on an actual feature, I think it would be either writing code to implement wallet unloading\r\n\r\nI am, please read PR description and #11402 rationale.",
      "created_at" : "2018-04-20T12:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383080469",
      "id" : 383080469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-20T12:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383080469",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> why you would want to expose and duplicate it in src/interfaces/ outside the wallet, instead of just adding a simple handleUnloadWallet callback for the GUI to complement the existing handleLoadWallet and getWallets.\r\n\r\n@ryanofsky I don't, I was asking for your feedback. So you also suggest to add `interfaces::Node::loadWallet` and `interfaces::Node::unloadWallet` and or alike?",
      "created_at" : "2018-04-20T12:38:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383082536",
      "id" : 383082536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-20T12:38:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383082536",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So you also suggest to add interfaces::Node::loadWallet and interfaces::Node::unloadWallet and or alike?\r\n\r\n`loadWallet` might make sense in short term. Longer term with #10102, though I think it would be replaced by a `makeWallet` method in [`interfaces::Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) to allow the GUI to create wallets without going through the node at all.\r\n\r\n`unloadWallet` should probably be avoided in favor of having more flexible shutdown methods on the `Wallet` interface itself and cleanup in the destructor.\r\n\r\nMore broadly, I think there will probably be multiple PRs updating the GUI to support wallet loading and unloading. The first PR might follow up #10740 and use existing `handleLoadWallet` callback to get newly loaded wallets to show up in the GUI. Independently there could be a PR that adds a `handleUnloadWallet` method and removes unloaded wallets in the GUI. And there could be one or two PRs adding GUI controls for loading and unloading wallets adding a new `loadWallet` method. And a cleanup PR could drop `getWallets` after dynamic loading works.\r\n\r\nBut the implementation of all these features will primarily consist of updates to gui and wallet code. Changes to `interfaces/` code should only be one or two line diffs, and basically be an afterthought.\r\n\r\n>> Personally, I would prefer to just manage wallets with standard c++ data structures and synchronization primitives instead of having a management interface\r\n\r\n> In the case of dynamic wallet load/unload that would lead to code duplication right? - UI and RPC layers want to load/unload wallets.\r\n\r\nNo, but this is a bikeshed debate, so please implement what you like! My preference would be to use `std::vector<std::unique_ptr<interfaces::Wallet>>` in the gui code and `std::map<std::string, std::weak_ptr<CWallet>>` in rpc and wallet code, along with plain mutexes and condition variables. But if you and others prefer more layered abstractions in the style of `WalletManager`, more power to you!\r\n\r\n> > But if you'd prefer to have a management interface\r\n\r\n> It's not a matter of my preference. It just makes sense to have such entity like CAddrMan, CConnman and BanMan.\r\n\r\nDisagree, but this is the same bikeshed debate, so again you should feel free to proceed in whatever way makes sense to you. In my opinion, it makes sense to have classes like `AddrMan` and `ConnMan` that manage more complex state, but it doesn't necessarily make sense to have a class that just manages a list of pointers.\r\n\r\n> Also, see PR description for other things that can be handled by WalletManager.\r\n\r\nYeah, I didn't mention it, but this seemed pretty weird to me. This suggests having a bunch of methods that pertain to _individual_ wallets as part of a class that's supposed to be about managing a _list_ of wallets. Again, this is another bikeshed debate: you might prefer a code organization with more nested layers, and I might prefer an code organization with fewer layers, but I don't think the difference is very important, and I do think you should implement what you like.\r\n\r\n> I disagree if these changes make it easy to actually implement and review those features. Historically big PR's lack reviews, have lots of discussions and later are usually split in multiple PR's.\r\n\r\nIt's doesn't seem true to me that introducing WalletManager helps implement process separation or wallet unloading. You should feel free to add it anyway, but I think if you sat down and drew a sequence diagram of how wallet and gui state needs to be updated when an unload request comes in, the data structures and notification mechanisms that should be used, and tradeoffs in layering would become more clear, and you could start implementing features more simply without unnecessarily shuffling a bunch of code around first.",
      "created_at" : "2018-04-20T15:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383124508",
      "id" : 383124508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-20T15:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383124508",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183110224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183110224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "if a wallet is canonically identified by its name - you should probably prevent adding a wallet with the same name in AddWallet - it looks like you're doing find comparison by address there?",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-20T16:53:17Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <wallet/walletmanager.h>\n+\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+\n+\n+WalletManager g_wallet_manager;\n+\n+bool WalletManager::AddWallet(CWallet* wallet)\n+{\n+    LOCK(m_cs);\n+    assert(wallet);\n+    std::vector<CWallet*>::const_iterator i = std::find(m_wallets.begin(), m_wallets.end(), wallet);\n+    if (i != m_wallets.end()) return false;\n+    m_wallets.push_back(wallet);\n+    return true;\n+}\n+\n+bool WalletManager::RemoveWallet(CWallet* wallet)\n+{\n+    LOCK(m_cs);\n+    assert(wallet);\n+    std::vector<CWallet*>::iterator i = std::find(m_wallets.begin(), m_wallets.end(), wallet);\n+    if (i == m_wallets.end()) return false;\n+    m_wallets.erase(i);\n+    return true;\n+}\n+\n+bool WalletManager::HasWallets() const\n+{\n+    LOCK(m_cs);\n+    return !m_wallets.empty();\n+}\n+\n+std::vector<CWallet*> WalletManager::GetWallets() const\n+{\n+    LOCK(m_cs);\n+    return m_wallets;\n+}\n+\n+CWallet* WalletManager::GetWallet(const std::string& name) const\n+{\n+    LOCK(m_cs);\n+    for (CWallet* wallet : m_wallets) {\n+        if (wallet->GetName() == name) return wallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183110224",
      "id" : 183110224,
      "original_commit_id" : "8dd937087cccc3d5b9a3bdf43137d6d1a080ed3f",
      "original_position" : 50,
      "path" : "src/wallet/walletmanager.cpp",
      "position" : 50,
      "pull_request_review_id" : 114051609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183110224",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183250661"
         }
      },
      "author_association" : "NONE",
      "body" : "Doesn't seem like a good idea to be needlessly copying by value, const reference should be used. However in this case I  can see you are taking a copy in the scope of the critical section, however this doesnt make it thread safe, as the wallets them selves can still be deleted, I would recommend moving them to be refcounted.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-22T20:44:53Z",
      "diff_hunk" : "@@ -46,14 +47,13 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n         std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        for (CWalletRef pwallet : ::vpwallets) {\n-            if (pwallet->GetName() == requestedWallet) {\n-                return pwallet;\n-            }\n-        }\n-        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        CWallet* pwallet = g_wallet_manager.GetWallet(requestedWallet);\n+        if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        return pwallet;\n     }\n-    return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n+\n+    std::vector<CWallet*> wallets = g_wallet_manager.GetWallets();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250661",
      "id" : 183250661,
      "original_commit_id" : "8dd937087cccc3d5b9a3bdf43137d6d1a080ed3f",
      "original_position" : 24,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 114214376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183250661",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/510240?v=4",
         "events_url" : "https://api.github.com/users/TheSamHughes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheSamHughes/followers",
         "following_url" : "https://api.github.com/users/TheSamHughes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheSamHughes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheSamHughes",
         "id" : 510240,
         "login" : "TheSamHughes",
         "organizations_url" : "https://api.github.com/users/TheSamHughes/orgs",
         "received_events_url" : "https://api.github.com/users/TheSamHughes/received_events",
         "repos_url" : "https://api.github.com/users/TheSamHughes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheSamHughes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheSamHughes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheSamHughes"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183250907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would recommend moving them to be refcounted\r\n\r\nThat's the plan (for instance, ~~#11402~~ #13063). Currently wallets aren't deleted so this is safe for now.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-22T20:51:25Z",
      "diff_hunk" : "@@ -46,14 +47,13 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n         std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        for (CWalletRef pwallet : ::vpwallets) {\n-            if (pwallet->GetName() == requestedWallet) {\n-                return pwallet;\n-            }\n-        }\n-        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        CWallet* pwallet = g_wallet_manager.GetWallet(requestedWallet);\n+        if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+        return pwallet;\n     }\n-    return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n+\n+    std::vector<CWallet*> wallets = g_wallet_manager.GetWallets();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250907",
      "id" : 183250907,
      "in_reply_to_id" : 183250661,
      "original_commit_id" : "8dd937087cccc3d5b9a3bdf43137d6d1a080ed3f",
      "original_position" : 24,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 114214552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T16:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183250907",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "needs rebase",
      "created_at" : "2018-04-24T15:59:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383986464",
      "id" : 383986464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-24T15:59:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383986464",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.",
      "created_at" : "2018-04-24T16:30:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383996640",
      "id" : 383996640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-24T16:30:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383996640",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems reasonable. Is the plan for `WalletManager` to eventually subsume `WalletInit`?\r\n\r\nTested ACK d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-24T17:45:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-384020392",
      "id" : 384020392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-24T17:45:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384020392",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183828946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183828946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently those kinds of checks are in `WalletInit::Verify()`. Among other things, I would like to move that to `WalletManager` since those checks will be needed after for dynamic wallet loading (and so doesn't make sense to be in `WalletInit`.",
      "commit_id" : "d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",
      "created_at" : "2018-04-24T18:06:37Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <wallet/walletmanager.h>\n+\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+\n+\n+WalletManager g_wallet_manager;\n+\n+bool WalletManager::AddWallet(CWallet* wallet)\n+{\n+    LOCK(m_cs);\n+    assert(wallet);\n+    std::vector<CWallet*>::const_iterator i = std::find(m_wallets.begin(), m_wallets.end(), wallet);\n+    if (i != m_wallets.end()) return false;\n+    m_wallets.push_back(wallet);\n+    return true;\n+}\n+\n+bool WalletManager::RemoveWallet(CWallet* wallet)\n+{\n+    LOCK(m_cs);\n+    assert(wallet);\n+    std::vector<CWallet*>::iterator i = std::find(m_wallets.begin(), m_wallets.end(), wallet);\n+    if (i == m_wallets.end()) return false;\n+    m_wallets.erase(i);\n+    return true;\n+}\n+\n+bool WalletManager::HasWallets() const\n+{\n+    LOCK(m_cs);\n+    return !m_wallets.empty();\n+}\n+\n+std::vector<CWallet*> WalletManager::GetWallets() const\n+{\n+    LOCK(m_cs);\n+    return m_wallets;\n+}\n+\n+CWallet* WalletManager::GetWallet(const std::string& name) const\n+{\n+    LOCK(m_cs);\n+    for (CWallet* wallet : m_wallets) {\n+        if (wallet->GetName() == name) return wallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183828946",
      "id" : 183828946,
      "in_reply_to_id" : 183110224,
      "original_commit_id" : "8dd937087cccc3d5b9a3bdf43137d6d1a080ed3f",
      "original_position" : 50,
      "path" : "src/wallet/walletmanager.cpp",
      "position" : 50,
      "pull_request_review_id" : 114902488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
      "updated_at" : "2018-04-24T18:06:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/183828946",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery thanks for the review.\r\n\r\n> Is the plan for WalletManager to eventually subsume WalletInit?\r\n\r\nIMO some code in `WalletInit` could be moved to `WalletManager`, especially the one that can be used by dynamic wallet load/unloading. `WalletInit` would call those new methods.\r\n\r\nSome other code of `CWallet` could be moved here too. I'll follow up.",
      "created_at" : "2018-04-24T18:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-384029379",
      "id" : 384029379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-24T18:13:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384029379",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased due #12830 which added a new test file.",
      "created_at" : "2018-04-29T00:47:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-385216247",
      "id" : 385216247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "updated_at" : "2018-04-29T00:47:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385216247",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",
      "created_at" : "2018-09-21T17:12:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-423608915",
      "id" : 423608915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMzYwODkxNQ==",
      "updated_at" : "2018-09-21T17:12:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423608915",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
