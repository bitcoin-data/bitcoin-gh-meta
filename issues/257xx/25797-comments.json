[
   {
      "author_association" : "MEMBER",
      "body" : "concept ack",
      "created_at" : "2022-08-08T06:51:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1207736528",
      "id" : 1207736528,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585H_JjQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207736528/reactions"
      },
      "updated_at" : "2022-08-08T06:51:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207736528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 485bd54f26c061ff3aa21587f8d8fd6ca86b5980 -> 1d09ef577b2b5e6d13b83f5241bad037a0a8f7b8 ([pr25797.01](https://github.com/hebasto/bitcoin/commits/pr25797.01) -> [pr25797.02](https://github.com/hebasto/bitcoin/commits/pr25797.02)):\r\n\r\n- fixed Berkeley DB detection on OpenBSD.\r\n- improved all `cmake/modules/Find<Package>.cmake` modules.\r\n\r\n@theStack \r\n> I retested on OpenBSD 7.1 with the instructions from the PR description and unfortunately still have a BDB issue\r\n\r\nThank you for sorrow testing. The issue should be fixed now.",
      "created_at" : "2022-08-08T22:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1208700569",
      "id" : 1208700569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IC06Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208700569/reactions"
      },
      "updated_at" : "2022-08-08T22:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208700569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 1d09ef577b2b5e6d13b83f5241bad037a0a8f7b8 -> 66c4ce440021004149779bb74207ce0c8bc93b2f ([pr25797.02](https://github.com/hebasto/bitcoin/commits/pr25797.02) -> [pr25797.03](https://github.com/hebasto/bitcoin/commits/pr25797.03)):\r\n\r\n- the `leveldbutil` target removed from \"all targets\" being built by default; thanks to @theStack for [pointing](https://github.com/bitcoin/bitcoin/pull/25797#pullrequestreview-1066634807) it out\r\n\r\n@theStack \r\n>  I'm assuming that unit-test build support with CMake is still under construction?\r\n\r\nIt is, but not as a part of this PR. My intention is to keep the latter more or less digestible for reviewers.",
      "created_at" : "2022-08-09T14:22:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1209449253",
      "id" : 1209449253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IFrsl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209449253/reactions"
      },
      "updated_at" : "2022-08-09T14:22:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209449253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK. Our autotools build system is a mess, but this doesn't appear to significantly improve it. I don't think the benefits are worth the costs.\r\n\r\n(I realise this PR doesn't remove autotools, but AIUI that's the eventual intention.)\r\n\r\n>an opportunity to drop the build_msvc subdirectory from the repo altogether\r\n\r\nI don't see why CMake changes the situation around build_msvc. We could drop it today and tell Windows builders to use autotools just as well.\r\n\r\n>Also there is a non-technical/social benefit. Over time, the Autotools community shrinks, but CMake community grows. New contributors, who join this project in the future, will readily support a CMake-based system rather an Autotools-based one.\r\n\r\nDo you have evidence of this? Autotools is fairly standard, and mostly just standard sh and make stuff (and m4, but that's admittedly more of a downside). CMake breaks from the norm, and requires a domain-specific language.",
      "created_at" : "2022-08-10T01:26:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210049309",
      "id" : 1210049309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IH-Md",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210049309/reactions"
      },
      "updated_at" : "2022-08-10T01:26:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210049309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 66c4ce440021004149779bb74207ce0c8bc93b2f -> e098ba80b6ec0debc62c32c65b72a518b126ed54 ([pr25797.03](https://github.com/hebasto/bitcoin/commits/pr25797.03) -> [pr25797.04](https://github.com/hebasto/bitcoin/commits/pr25797.04)):\r\n\r\n- in-subtree [bugfix](https://github.com/bitcoin-core/crc32c-subtree/pull/5) been replaced with out-subtree workaround\r\n- fixed white spaces\r\n\r\nAll changes above made the linter CI task happy now :tiger2: ",
      "created_at" : "2022-08-10T07:45:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210290174",
      "id" : 1210290174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585II4_-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210290174/reactions"
      },
      "updated_at" : "2022-08-10T07:45:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210290174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > an opportunity to drop the build_msvc subdirectory from the repo altogether\r\n> \r\n> I don't see why CMake changes the situation around build_msvc. We could drop it today and tell Windows builders to use autotools just as well.\r\n\r\nYou are talking about \"to build on Windows\". But the idea is \"to build with MSVC\". Being a cross-platform tool, CMake is able to [create](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html) input files for a wide range of build systems, including Unix Makefiles and Visual Studio project files.\r\n\r\n@sipsorcery What do you think about this stuff?",
      "created_at" : "2022-08-10T08:03:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210309203",
      "id" : 1210309203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585II9pT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210309203/reactions"
      },
      "updated_at" : "2022-08-10T09:05:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210309203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Also there is a non-technical/social benefit. Over time, the Autotools community shrinks, but CMake community grows. New contributors, who join this project in the future, will readily support a CMake-based system rather an Autotools-based one.\r\n> \r\n> Do you have evidence of this?\r\n\r\nI do. There are open-source projects which have [dropped](https://lists.freedesktop.org/archives/wayland-devel/2019-October/040962.html) Autotools, and there are no ones which do the opposite. Also we could ask people who graduated CS recently whether their curriculums encompassed Autotools and/or CMake (not an evidence, rather a hint).\r\n\r\n> Autotools is fairly standard, and mostly just standard sh and make stuff (and m4, but that's admittedly more of a downside). \r\n\r\nMoving \"Autotools --> CMake\" is very similar to \"shell --> Python\" which we have [done](https://github.com/bitcoin/bitcoin/issues/24783) recently.\r\n\r\n> CMake breaks from the norm\r\n\r\nWhich \"the norm\"?\r\n\r\n> and requires a domain-specific language.\r\n\r\nUsing a domain-specific language which serves its purpose much better than a general macro language is a benefit for reviewing and maintaining.",
      "created_at" : "2022-08-10T08:42:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210353660",
      "id" : 1210353660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IJIf8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210353660/reactions"
      },
      "updated_at" : "2022-08-10T09:07:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210353660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You are talking about \"to build on Windows\". But the idea is \"to build with MSVC\". Being a cross-platform tool, CMake is able to [create](https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html) input files for a wide range of build systems, including Unix Makefiles and Visual Studio project files.\r\n> \r\n> @sipsorcery What do you think about this stuff?\r\n\r\nThe Visual Studio project files produced by CMake aren't as clean as the hand rolled ones but in my experience they still build well (note the vcpkg dependecies generally use cmake).\r\n\r\nIMHO it's worth having less clean VS project files if the eventual goal is to have a single build system.\r\n\r\nConcept ACK.",
      "created_at" : "2022-08-10T09:01:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210376728",
      "id" : 1210376728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IJOIY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210376728/reactions"
      },
      "updated_at" : "2022-08-10T09:01:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210376728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/197660?v=4",
         "events_url" : "https://api.github.com/users/sipsorcery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipsorcery/followers",
         "following_url" : "https://api.github.com/users/sipsorcery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipsorcery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipsorcery",
         "id" : 197660,
         "login" : "sipsorcery",
         "node_id" : "MDQ6VXNlcjE5NzY2MA==",
         "organizations_url" : "https://api.github.com/users/sipsorcery/orgs",
         "received_events_url" : "https://api.github.com/users/sipsorcery/received_events",
         "repos_url" : "https://api.github.com/users/sipsorcery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipsorcery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipsorcery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr \r\n> Concept NACK. Our autotools build system is a mess, but this doesn't appear to significantly improve it. I don't think the benefits are worth the costs.\r\n\r\nAnd this mess is going to get bigger:\r\n- we are about introducing the [4th](https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113964111) hack to the Libtool\r\n- more [hacks](https://github.com/bitcoin/bitcoin/pull/24798#discussion_r854001982) are required to bring Qt 6 support\r\n\r\nAs you are a developer who is involved into the GUI development, could you share your vision of Qt 6 integration without migration to CMake?",
      "created_at" : "2022-08-10T09:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210415595",
      "id" : 1210415595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IJXnr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210415595/reactions"
      },
      "updated_at" : "2022-08-10T09:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210415595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@dongcarl @fanquake @ryanofsky @theuni \r\n\r\nYour conceptual assessments of this PR will be much appreciated. ",
      "created_at" : "2022-08-10T13:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210706815",
      "id" : 1210706815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IKet_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210706815/reactions"
      },
      "updated_at" : "2022-08-10T13:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210706815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Also we could ask people who graduated CS recently whether their curriculums encompassed Autotools and/or CMake (not an evidence, rather a hint).\r\n\r\nWe handmade our Makefiles...",
      "created_at" : "2022-08-10T14:52:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210789206",
      "id" : 1210789206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IKy1W",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 1,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210789206/reactions"
      },
      "updated_at" : "2022-08-10T14:52:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210789206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [luke-jr](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210049309), [theuni](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219597093) |\n| Concept ACK | [sipsorcery](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210376728), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218440885), [vasild](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219324421), [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1327741167), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1408772481) |\n| Approach ACK | [adam2k](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1233377911) |\n| Stale ACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219265408) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27573](https://github.com/bitcoin/bitcoin/pull/27573) (ci: Remove CI_EXEC bloat in test/06_script_b.sh by MarcoFalke)\n* [#27571](https://github.com/bitcoin/bitcoin/pull/27571) (ci: Run iwyu on all src files by MarcoFalke)\n* [#27493](https://github.com/bitcoin/bitcoin/pull/27493) ([WIP] build: use LLVM/Clang 14 for Darwin builds by fanquake)\n* [#27353](https://github.com/bitcoin/bitcoin/pull/27353) (refactor (tidy): Fixes after enable-debug configure by TheCharlatan)\n* [#27099](https://github.com/bitcoin/bitcoin/pull/27099) (build: produce a .zip for macOS distribution by fanquake)\n* [#25972](https://github.com/bitcoin/bitcoin/pull/25972) (build: no-longer disable WARN_CXXFLAGS when CXXFLAGS is set by fanquake)\n* [#21778](https://github.com/bitcoin/bitcoin/pull/21778) (build: LLVM 16 & LLD based macOS toolchain by fanquake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-08-10T16:57:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1210993232",
      "id" : 1210993232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ILkpQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210993232/reactions"
      },
      "updated_at" : "2023-05-06T02:56:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210993232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">You are talking about \"to build on Windows\". But the idea is \"to build with MSVC\". Being a cross-platform tool, CMake is able to create input files for a wide range of build systems, including Unix Makefiles and Visual Studio project files.\r\n\r\n[autotools can be used with the MSVC compiler](https://github.com/swig/cccl)\r\n\r\n> There are open-source projects which have dropped Autotools, and there are no ones which do the opposite.\r\n\r\n\"No ones\"? There are lots which adopt autotools. Otherwise it wouldn't even exist...\r\n\r\n>Also we could ask people who graduated CS recently whether their curriculums encompassed Autotools and/or CMake\r\n\r\nPeople to ask would be experienced open source developers, not novices who got scammed by colleges.\r\n\r\n>Which \"the norm\"?\r\n\r\nMost open source software uses autotools.\r\n\r\n> As you are a developer who is involved into the GUI development, could you share your vision of Qt 6 integration without migration to CMake?\r\n\r\nSeems easy enough to just do it the same as Qt 5 already is? pkg-config support was fixed in Qt 6.2.5.\r\n\r\n",
      "created_at" : "2022-08-10T20:26:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1211231175",
      "id" : 1211231175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IMevH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211231175/reactions"
      },
      "updated_at" : "2022-08-10T20:26:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211231175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > There are open-source projects which have dropped Autotools, and there are no ones which do the opposite.\r\n> \r\n> \"No ones\"? There are lots which adopt autotools. Otherwise it wouldn't even exist...\r\n\r\nI mean, there are no projects which _moved_ from non-Autotools to Autotools recent decade.",
      "created_at" : "2022-08-10T20:37:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1211243726",
      "id" : 1211243726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IMhzO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211243726/reactions"
      },
      "updated_at" : "2022-08-10T20:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211243726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> pkg-config support was fixed in Qt 6.2.5.\r\n\r\nNot for [static](https://codereview.qt-project.org/c/qt/qtbase/+/381127) builds:\r\n> Although it has some limitations, with qt_internal_add_qml_module if it specifies non-public deps these won't be listed and with non-Qt requirements, notably in _static_ builds, not being appended to the PkgConfig file.",
      "created_at" : "2022-08-10T20:39:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1211246020",
      "id" : 1211246020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IMiXE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211246020/reactions"
      },
      "updated_at" : "2022-08-10T20:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211246020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Static builds are abnormal and only need to be supported for depends-based builds, where we can trivially patch it.",
      "created_at" : "2022-08-10T21:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1211268464",
      "id" : 1211268464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IMn1w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211268464/reactions"
      },
      "updated_at" : "2022-08-10T21:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211268464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Static builds are abnormal and only need to be supported for depends-based builds...\r\n\r\n\"abnormal\"? We deliver users static builds.\r\n\r\n> we can trivially patch it\r\n\r\nI doubt about \"trivially\". Anyway, your patch for Qt code will be much appreciated.",
      "created_at" : "2022-08-10T21:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1211275465",
      "id" : 1211275465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IMpjJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211275465/reactions"
      },
      "updated_at" : "2022-08-10T21:09:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211275465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> dongcarlvfanquake ryanofsky theuni\r\n> Your conceptual assessments of this PR will be much appreciated.\r\n\r\nI am a Concept ~0/ACK for CMake.\r\n\r\nHowever I think if we are going to break every existing piece of Bitcoin Core related build infrastracture (build scripts, docker files, downstream projects, package managers etc), as well as obselete (external) build guides & documentation, we should be able to enumerate some more benefits to doing so. \r\n\r\n> Here are some benefits of using [CMake](https://cmake.org/) in the Bitcoin Core project:\r\n\r\nLooking at this list, there's nothing interesting here for anyone that doesn't care about the GUI, or Windows `DEBUG` depends builds; and given that this is the group which will more-than-likely be most impacted by this change, i.e compiling bitcoind + utils on Linux, we should be able to better justify a migration. Even starting with some rationale from something like [\"Why CMake?\"](https://cmake.org/cmake/help/book/mastering-cmake/chapter/Why%20CMake.html).\r\n\r\n> The plan is to have it in the repo shortly after branching 24.x off, and make CMake-based build system a drop-in replacement of Autotools-based one during the next 2 or 3 release cycles.\r\n\r\nConcept NACK on any approach that has as maintaining multiple build systems over multiple, or even a single release. That will be a maintainability / developer nightmare. If we are going to switch, we should just switch. CMake in, Autotools out, over a short period, ideally just after a branch off, so there is plenty of time for changes to settle and issues to be fixed before the next release.",
      "created_at" : "2022-08-12T11:51:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1213030359",
      "id" : 1213030359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ITV_X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213030359/reactions"
      },
      "updated_at" : "2022-08-12T11:51:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213030359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looking at this list, there's nothing interesting here for anyone that doesn't care about the GUI...\r\n\r\nThe GUI _is_ a part of the Bitcoin Core project. Not caring about any part of the project won't be helpful for it.",
      "created_at" : "2022-08-12T12:41:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1213070838",
      "id" : 1213070838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ITf32",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213070838/reactions"
      },
      "updated_at" : "2022-08-12T12:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213070838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK e098ba80b6ec0debc62c32c65b72a518b126ed54\r\n\r\nI'm testing on macOS 12.5 M1 MacBook Pro and running into errors.  It's possible this is an issue with my system, but I exhausted any possibilities that I could think of.\r\n\r\nAre there additional setup steps to proceed these steps during your macOS testing?\r\n\r\n```\r\n$ cmake -S . -B build\r\n\r\n-- Found Qt, version 5.15.5\r\n\r\n\r\nConfigure summary\r\n=================\r\nBuild type ......................... RelHardened\r\nPreprocessor defined macros: MAC_OSX;OBJC_OLD_DISPATCH_PROTOTYPES=0\r\nCXX: /opt/homebrew/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\nCompile options:\r\nUtility binaries:\r\n  bitcoin-cli ...................... ON\r\n  bitcoin-tx ....................... ON\r\n  bitcoin-util ..................... ON\r\nWallet functionality ............... yes\r\n  SQLite, descriptor wallets ....... yes\r\n  Berkeley DB, legacy wallets ...... yes\r\n  wallet tool ...................... ON\r\nOptional packages:\r\n  GUI .............................. Qt5\r\n  QR code (GUI) .................... yes\r\n  external signer .................. no\r\n  NAT-PMP .......................... yes\r\n  UPNP ............................. yes\r\n  ZeroMQ ........................... yes\r\n  USDT tracing ..................... no\r\n  experimental syscall sandbox ..... no\r\n\r\n\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/adam2k/Documents/bitcoin/build\r\n adam2k@Adams-MacBook-Pro î° ~/Documents/bitcoin î° î  220807-cmake Â± î°\r\n adam2k@Adams-MacBook-Pro î° ~/Documents/bitcoin î° î  220807-cmake Â± î° cmake --build build\r\nConsolidate compiler generated dependencies of target univalue\r\n[  0%] Building CXX object src/univalue/CMakeFiles/univalue.dir/lib/univalue.cpp.o\r\nerror: option 'cf-protection=return' cannot be specified on this target\r\nerror: option 'cf-protection=branch' cannot be specified on this target\r\n2 errors generated.\r\nmake[2]: *** [src/univalue/CMakeFiles/univalue.dir/lib/univalue.cpp.o] Error 1\r\nmake[1]: *** [src/univalue/CMakeFiles/univalue.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```",
      "created_at" : "2022-08-12T20:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1213486854",
      "id" : 1213486854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IVFcG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213486854/reactions"
      },
      "updated_at" : "2022-08-12T20:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1213486854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/749118?v=4",
         "events_url" : "https://api.github.com/users/adam2k/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adam2k/followers",
         "following_url" : "https://api.github.com/users/adam2k/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adam2k/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adam2k",
         "id" : 749118,
         "login" : "adam2k",
         "node_id" : "MDQ6VXNlcjc0OTExOA==",
         "organizations_url" : "https://api.github.com/users/adam2k/orgs",
         "received_events_url" : "https://api.github.com/users/adam2k/received_events",
         "repos_url" : "https://api.github.com/users/adam2k/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adam2k/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adam2k/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adam2k"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There seems to be [long running resistance](https://github.com/bitcoin/bitcoin/issues/19693) to this in this repo and continued resistance expressed in the comments of this PR.\r\n\r\nDoes libsecp256k1 (potentially, certainly seems [less resistance](https://github.com/bitcoin-core/secp256k1/pull/1113) there currently) adding CMake support have any impact on this discussion? A case of seeing if it gets merged in libsecp256k1, seeing if there are any problems with it, contributors getting comfortable with it etc? Or are they entirely separate discussions? i.e. libsecp256k1 could merge in CMake support, it could work fine but it would have no impact on the discussion here? Also would there be opposition to libsecp256k1 maintaining a different build system to this main Core repo or is that a non-issue?",
      "created_at" : "2022-08-13T09:21:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1214078906",
      "id" : 1214078906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IXV-6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214078906/reactions"
      },
      "updated_at" : "2022-08-13T09:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214078906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've updated the PR description with the following Qt-specific details.\r\n\r\n## What happened before?\r\n\r\n- https://www.qt.io/blog/qt-6-build-system:\r\n> CMake is the build system for Qt 6\r\n\r\n- https://www.qt.io/blog/qt-and-cmake-the-past-the-present-and-the-future:\r\n> We made a big decision to start using CMake to build Qt 6 one and a half years ago.\r\n\r\n- https://doc.qt.io/qt-6/qt6-buildsystem.html:\r\n> The Qt 5 build system was built on top of [qmake](https://doc.qt.io/qt-6.2/qtquick-deployment.html#qmake). In Qt 6, we ported the build system to CMake.\r\n\r\nIt is important to note that CMake has extensive [support](https://cmake.org/cmake/help/latest/manual/cmake-qt.7.html) for Qt, including Qt-specific tools such as MOC, RCC, UIC.\r\n\r\n## Why Qt 6 build system does matter if the Bitcoin Core GUI uses Qt 5?\r\n\r\nFor release builds we use Qt 5.15.5 LTS, the latest Qt 5 version available under a free-software license.\r\n\r\nFor dynamic linking users can use Qt 5.11.3+, which allows them to use packages provided in Debian Buster and Ubuntu Focal.\r\n\r\nOn the other hand, Qt 6 packages are available in the following systems/package managers:\r\n- [Ubuntu Jammy](https://packages.ubuntu.com/jammy/qt6-base-dev)+\r\n- [Debian Bullseye](https://packages.debian.org/bullseye-backports/qt6-base-dev)+\r\n- [Fedora 35](https://packages.fedoraproject.org/pkgs/qt6-qtbase/qt6-qtbase/)+\r\n- [Homebrew](https://formulae.brew.sh/formula/qt)\r\n\r\nAs long as Qt GUI is a part of Bitcoin Core, it is inevitable to embrace Qt 6 support, sooner or later.\r\n\r\n## Can we just adjust our current build system to handle Qt 6?\r\n\r\nThe main problem with integration of Qt 6 into the current build system is lacking of pkg-config `*.pc` files for static builds (please note that a patch from [QTBUG-86080](https://bugreports.qt.io/browse/QTBUG-86080) works for non-static builds only).\r\n\r\nTo handle Qt 6 with our current build system we need to:\r\n- patch Qt, which looks like a non-trivial task, or\r\n- apply some [nasty hacks](https://github.com/bitcoin/bitcoin/pull/24798#discussion_r854001982) to our own build system\r\n- keep in our repo the required `*.pc` files\r\n- check Qt libraries manually\r\n\r\nAll approaches imply maintaining burden for a long time. And last three are pretty ugly :)",
      "created_at" : "2022-08-14T11:23:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1214344789",
      "id" : 1214344789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IYW5V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214344789/reactions"
      },
      "updated_at" : "2022-08-14T11:28:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214344789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated e098ba80b6ec0debc62c32c65b72a518b126ed54 -> 88d797f926cb0d874a30aa732dcc0221f78b007a ([pr25797.04](https://github.com/hebasto/bitcoin/commits/pr25797.04) -> [pr25797.05](https://github.com/hebasto/bitcoin/commits/pr25797.05)):\r\n\r\n- fixed a bug pointed out in https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1213486854\r\n- small improvements regarding advanced variables\r\n\r\n@adam2k \r\n> I'm testing on macOS 12.5 M1 MacBook Pro and running into errors.\r\n\r\nThank you for testing! Should be fixed now :tiger2: ",
      "created_at" : "2022-08-14T16:33:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1214411508",
      "id" : 1214411508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IYnL0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214411508/reactions"
      },
      "updated_at" : "2022-08-14T16:33:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214411508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Updated [e098ba8](https://github.com/bitcoin/bitcoin/commit/e098ba80b6ec0debc62c32c65b72a518b126ed54) -> [88d797f](https://github.com/bitcoin/bitcoin/commit/88d797f926cb0d874a30aa732dcc0221f78b007a) ([pr25797.04](https://github.com/hebasto/bitcoin/commits/pr25797.04) -> [pr25797.05](https://github.com/hebasto/bitcoin/commits/pr25797.05)):\r\n> \r\n> * fixed a bug pointed out in [build: Add CMake-based build systemÂ #25797 (comment)](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1213486854)\r\n> * small improvements regarding advanced variables\r\n> \r\n> @adam2k\r\n> \r\n> > I'm testing on macOS 12.5 M1 MacBook Pro and running into errors.\r\n> \r\n> Thank you for testing! Should be fixed now ð\r\n\r\nConcept ACK 88d797f926cb0d874a30aa732dcc0221f78b007a\r\n\r\nAgain, I'm testing on macOS 12.5 M1 MacBook Pro and the previous errors seem to be resolved.\r\n\r\n```\r\n$ cmake -S . -B build\r\n-- Performing Test HAS_CXX_-pipe_FLAG\r\n-- Performing Test HAS_CXX_-pipe_FLAG - Success\r\n-- Performing Test HAS_CXX_-O2_FLAG\r\n-- Performing Test HAS_CXX_-O2_FLAG - Success\r\n-- Performing Test HAS_CXX_-g_FLAG\r\n-- Performing Test HAS_CXX_-g_FLAG - Success\r\n-- Performing Test HAS_CXX_-Wstack-protector_FLAG\r\n-- Performing Test HAS_CXX_-Wstack-protector_FLAG - Success\r\n-- Performing Test HAS_CXX_-fstack-protector-all_FLAG\r\n-- Performing Test HAS_CXX_-fstack-protector-all_FLAG - Success\r\n-- Performing Test HAS_CXX_-fcf-protection=full_FLAG\r\n-- Performing Test HAS_CXX_-fcf-protection=full_FLAG - Failed\r\n-- Found Qt, version 5.15.5\r\n\r\n\r\nConfigure summary\r\n=================\r\nBuild type ......................... RelHardened\r\nPreprocessor defined macros ........ MAC_OSX;OBJC_OLD_DISPATCH_PROTOTYPES=0\r\nC++ compiler ....................... /opt/homebrew/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\nCompile options ....................\r\nUtility binaries:\r\n  bitcoin-cli ...................... ON\r\n  bitcoin-tx ....................... ON\r\n  bitcoin-util ..................... ON\r\nWallet functionality ............... yes\r\n  SQLite, descriptor wallets ....... yes\r\n  Berkeley DB, legacy wallets ...... yes\r\n  wallet tool ...................... ON\r\nOptional packages:\r\n  GUI .............................. Qt5\r\n  QR code (GUI) .................... yes\r\n  external signer .................. no\r\n  NAT-PMP .......................... yes\r\n  UPNP ............................. yes\r\n  ZeroMQ ........................... yes\r\n  USDT tracing ..................... no\r\n  experimental syscall sandbox ..... no\r\n\r\n\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/adam2k/Documents/bitcoin/build\r\n```\r\n\r\nAlthough, I am running into errors during the second step in the process when I get to the `Linking CXX executable bitcoin-qt`.  I added the `-v` to gather more debug logs.\r\n\r\n```\r\n$ cmake --build build -v\r\n...\r\nConsolidate compiler generated dependencies of target bitcoin-qt\r\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  -f src/qt/CMakeFiles/bitcoin-qt.dir/build.make src/qt/CMakeFiles/bitcoin-qt.dir/build\r\n[ 98%] Linking CXX executable bitcoin-qt\r\ncd /Users/adam2k/Documents/bitcoin/build/src/qt && /opt/homebrew/Cellar/cmake/3.24.0/bin/cmake -E cmake_link_script CMakeFiles/bitcoin-qt.dir/link.txt --verbose=1\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -pipe -O2 -g -Wstack-protector -fstack-protector-all -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -L/opt/homebrew/opt/llvm/lib \"CMakeFiles/bitcoin-qt.dir/bitcoin-qt_autogen/mocs_compilation.cpp.o\" \"CMakeFiles/bitcoin-qt.dir/main.cpp.o\" \"CMakeFiles/bitcoin-qt.dir/__/init/bitcoin-qt.cpp.o\" -o bitcoin-qt -F/opt/homebrew/opt/qt@5/lib  -Wl,-headerpad_max_install_names libbitcoinqt.a ../libbitcoin_node.a ../libbitcoin_common.a ../libbitcoin_consensus.a ../util/libbitcoin_util.a ../crypto/libbitcoin_crypto.a /opt/homebrew/opt/qt@5/lib/QtWidgets.framework/QtWidgets /opt/homebrew/opt/qt@5/lib/QtGui.framework/QtGui ../librpc_client.a /opt/homebrew/Cellar/qrencode/4.1.1/lib/libqrencode.dylib ../wallet/libbitcoin_wallet.a ../libbitcoin_common.a /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/libsqlite3.tbd /opt/homebrew/opt/qt@5/lib/QtNetwork.framework/QtNetwork /opt/homebrew/opt/qt@5/lib/QtCore.framework/QtCore /opt/homebrew/opt/libnatpmp/lib/libnatpmp.dylib /opt/homebrew/lib/libminiupnpc.dylib /opt/homebrew/opt/berkeley-db@4/lib/libdb_cxx-4.8.dylib ../../libminisketch.a /opt/homebrew/Cellar/libevent/2.1.12/lib/libevent_pthreads.dylib ../zmq/libbitcoin_zmq.a ../leveldb/libleveldb.a ../crc32c/libcrc32c.a /opt/homebrew/Cellar/zeromq/4.3.4/lib/libzmq.dylib ../crypto/libbitcoin_crypto.a ../../libsecp256k1.a ../univalue/libunivalue.a -Wl,-headerpad_max_install_names /opt/homebrew/Cellar/libevent/2.1.12/lib/libevent.dylib\r\nUndefined symbols for architecture arm64:\r\n  \"_NSClassFromString\", referenced from:\r\n      MacNotificationHandler::hasUserNotificationCenterSupport() in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_OBJC_CLASS_$_NSApplication\", referenced from:\r\n      objc-class-ref in libbitcoinqt.a(macdockiconhandler.mm.o)\r\n  \"_OBJC_CLASS_$_NSBundle\", referenced from:\r\n      objc-class-ref in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n      __OBJC_$_CATEGORY_NSBundle_$_returnCorrectIdentifier in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_OBJC_CLASS_$_NSProcessInfo\", referenced from:\r\n      objc-class-ref in libbitcoinqt.a(macos_appnap.mm.o)\r\n  \"_OBJC_CLASS_$_NSUserNotification\", referenced from:\r\n      objc-class-ref in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_OBJC_CLASS_$_NSUserNotificationCenter\", referenced from:\r\n      objc-class-ref in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"___CFConstantStringClassReference\", referenced from:\r\n      CFString in libbitcoinqt.a(macos_appnap.mm.o)\r\n      CFString in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n      CFString in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_class_getInstanceMethod\", referenced from:\r\n      MacNotificationHandler::instance() in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_class_replaceMethod\", referenced from:\r\n      setupDockClickHandler() in libbitcoinqt.a(macdockiconhandler.mm.o)\r\n  \"_method_exchangeImplementations\", referenced from:\r\n      MacNotificationHandler::instance() in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_objc_alloc_init\", referenced from:\r\n      MacNotificationHandler::showNotification(QString const&, QString const&) in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_objc_autoreleasePoolPop\", referenced from:\r\n      CAppNapInhibitor::CAppNapImpl::disableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      CAppNapInhibitor::CAppNapImpl::enableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n  \"_objc_autoreleasePoolPush\", referenced from:\r\n      CAppNapInhibitor::CAppNapImpl::disableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      CAppNapInhibitor::CAppNapImpl::enableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n  \"_objc_getClass\", referenced from:\r\n      MacNotificationHandler::instance() in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_objc_msgSend\", referenced from:\r\n      setupDockClickHandler() in libbitcoinqt.a(macdockiconhandler.mm.o)\r\n      ForceActivation() in libbitcoinqt.a(macdockiconhandler.mm.o)\r\n      CAppNapInhibitor::CAppNapImpl::disableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      CAppNapInhibitor::CAppNapImpl::enableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      -[NSBundle(returnCorrectIdentifier) __bundleIdentifier] in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n      MacNotificationHandler::showNotification(QString const&, QString const&) in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_objc_opt_class\", referenced from:\r\n      setupDockClickHandler() in libbitcoinqt.a(macdockiconhandler.mm.o)\r\n  \"_objc_opt_respondsToSelector\", referenced from:\r\n      CAppNapInhibitor::CAppNapImpl::disableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      CAppNapInhibitor::CAppNapImpl::enableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n  \"_objc_release\", referenced from:\r\n      CAppNapInhibitor::CAppNapImpl::enableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n      MacNotificationHandler::showNotification(QString const&, QString const&) in libbitcoinqt.a(macnotificationhandler.mm.o)\r\n  \"_objc_retain\", referenced from:\r\n      CAppNapInhibitor::CAppNapImpl::disableAppNap() in libbitcoinqt.a(macos_appnap.mm.o)\r\n  \"_sel_registerName\", referenced from:\r\n      setupDockClickHandler() in libbitcoinqt.a(macdockiconhandler.mm.o)\r\nld: symbol(s) not found for architecture arm64\r\nclang-14: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [src/qt/bitcoin-qt] Error 1\r\nmake[1]: *** [src/qt/CMakeFiles/bitcoin-qt.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n",
      "created_at" : "2022-08-15T15:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1215224500",
      "id" : 1215224500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Ibtq0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215224500/reactions"
      },
      "updated_at" : "2022-08-15T15:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215224500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/749118?v=4",
         "events_url" : "https://api.github.com/users/adam2k/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adam2k/followers",
         "following_url" : "https://api.github.com/users/adam2k/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adam2k/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adam2k",
         "id" : 749118,
         "login" : "adam2k",
         "node_id" : "MDQ6VXNlcjc0OTExOA==",
         "organizations_url" : "https://api.github.com/users/adam2k/orgs",
         "received_events_url" : "https://api.github.com/users/adam2k/received_events",
         "repos_url" : "https://api.github.com/users/adam2k/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adam2k/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adam2k/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adam2k"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 88d797f926cb0d874a30aa732dcc0221f78b007a -> 6e1dcc2ae5096dde327b71efb6bfa0bf120227e5 ([pr25797.05](https://github.com/hebasto/bitcoin/commits/pr25797.05) -> [pr25797.06](https://github.com/hebasto/bitcoin/commits/pr25797.06)):\r\n\r\n- rebased on top of the #25836\r\n- fixed native building on Windows (MSVC + vcpkg). No longer needed to pre-build Qt :tiger2: \r\n\r\nInstructions for native building on Windows (MSVC + vcpkg) added to the PR description.\r\n\r\ncc @sipsorcery ",
      "created_at" : "2022-08-15T23:32:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1215983238",
      "id" : 1215983238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Iem6G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215983238/reactions"
      },
      "updated_at" : "2022-08-15T23:32:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215983238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto Could you give us an idea of the diff between the new CMake and the old autotools build systems from a user's perspective? Have we achieved feature-parity yet?",
      "created_at" : "2022-08-16T17:29:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1216939762",
      "id" : 1216939762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IiQby",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216939762/reactions"
      },
      "updated_at" : "2022-08-16T17:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216939762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@dongcarl \r\n> Could you give us an idea of the diff between the new CMake and the old autotools build systems from a user's perspective? \r\n\r\n1. The main difference is a directory structure. While the current Autotools-based build system (AT) supports out-of-source builds, most users make in-source builds. The new CMake-based build system (CM) does not support in-source builds. I consider this as a [benefit](https://cmake.org/cmake/help/book/mastering-cmake/chapter/Getting%20Started.html#directory-structure). As a consequence, there is no `make distclean` in CM.\r\n\r\n2. Most of AT configure options are mapped to CM cache variable, for example:\r\n- `--with-daemon` --> `-DBUILD_DAEMON`\r\n- `--enable-zmq` --> `-DWITH_ZMQ`\r\n\r\n3. Some of AT configure options are implemented as custom [build types](https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html?highlight=build%20type#build-configurations) in CM, for example:\r\n- `--enable-hardening` --> `-DCMAKE_BUILD_TYPE=RelHardened`\r\n\r\n4. User provided `CC`, `CXX`, `CFLAGS`, `CXXFLAGS`, `LDFLAGS` are supported by CM perfectly out of the box.\r\n\r\n5. Integration with our depends build subsystem has been implemented already:\r\n- `CONFIG_SITE=$PWD/depends/<HOST>/share/config.site` --> `--toolchain depends/<HOST>/share/toolchain.cmake`\r\n\r\n6. With CM users are able to use the same build system natively on a wider range of platforms, e.g., on Windows with MSVC.\r\n\r\n7. With CM the GUI users get Qt 6 support finally :tiger2:\r\n\r\n> Have we achieved feature-parity yet?\r\n\r\nNot in this PR, to [keep](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1209449253) it in reviewable state. The full feature-parity is achievable with a couple follow ups.",
      "created_at" : "2022-08-17T06:06:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1217500839",
      "id" : 1217500839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IkZan",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217500839/reactions"
      },
      "updated_at" : "2022-08-17T06:06:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217500839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947594259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947594259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We don't currently suppress this in configure, why is it being added here?",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:18:29Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947594259",
      "id" : 947594259,
      "line" : 139,
      "node_id" : "PRRC_kwDOABII5844eyQT",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 139,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 139,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947594259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947594259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947595141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947595141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We don't currently add linker optimisation flags in configure, why are they being added here?",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:19:23Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947595141",
      "id" : 947595141,
      "line" : 141,
      "node_id" : "PRRC_kwDOABII5844eyeF",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 141,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 141,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947595141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947595141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947598982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947598982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this link flag also be used when cross-compiling?",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:23:11Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947598982",
      "id" : 947598982,
      "line" : 162,
      "node_id" : "PRRC_kwDOABII5844ezaG",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 162,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 162,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947598982/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947598982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947606178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947606178"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Cross-compiling for macOS, the \"C++ compiler\" output is `/usr/bin/ccache /usr/bin/env`. Not super helpful.",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:29:05Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947606178",
      "id" : 947606178,
      "line" : 260,
      "node_id" : "PRRC_kwDOABII5844e1Ki",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 260,
      "original_position" : 260,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 260,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947606178/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947606178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947607265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947607265"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Cross-compiling for macOS/Windows, the \"Compile options\" output is something like `$<$<COMPILE_LANGUAGE:C>:-pipe>;$<$<COMPILE_LANGUAGE:C>:-std=c11>;$<$<COMPILE_LANGUAGE:C>:-O2>;$<$<COMPILE_LANGUAGE:CXX>:-pipe>;$<$<COMPILE_LANGUAGE:CXX>:-std=c++17>;$<$<COMPILE_LANGUAGE:CXX>:-O2>`. Which isn't readable.",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:29:55Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+message(\"Compile options .................... ${compile_options}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947607265",
      "id" : 947607265,
      "line" : 262,
      "node_id" : "PRRC_kwDOABII5844e1bh",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 262,
      "original_position" : 262,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 262,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947607265/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947607265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947627848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947627848"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't we check these flags are available, rather than assuming the user has as certain version of binutils?",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:45:11Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947627848",
      "id" : 947627848,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5844e6dI",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 97,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 97,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947627848/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947627848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947628207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947628207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here.",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T08:45:31Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947628207",
      "id" : 947628207,
      "line" : 99,
      "node_id" : "PRRC_kwDOABII5844e6iv",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 99,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 99,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947628207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947628207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947668248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947668248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This test fails when cross-compiling for Windows, and we end up building without `-fstack-protector-all`.\r\n```bash\r\n/usr/lib/gcc/x86_64-w64-mingw32/11.2.1/../../../../x86_64-w64-mingw32/bin/ld: CMakeFiles/cmTC_c6384.dir/objects.a(src.cxx.obj):src.cxx:(.text+0x35): undefined reference to `__stack_chk_fail'\r\n/usr/lib/gcc/x86_64-w64-mingw32/11.2.1/../../../../x86_64-w64-mingw32/bin/ld: CMakeFiles/cmTC_c6384.dir/objects.a(src.cxx.obj):src.cxx:(.rdata$.refptr.__stack_chk_guard[.refptr.__stack_chk_guard]+0x0): undefined reference to `__stack_chk_guard'\r\n```",
      "commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "created_at" : "2022-08-17T09:23:49Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947668248",
      "id" : 947668248,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII5844fEUY",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 87,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 87,
      "pull_request_review_id" : 1075245330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947668248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T09:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947668248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 6e1dcc2ae5096dde327b71efb6bfa0bf120227e5 -> d56e4d193b7266212686dab00f57a3adf3b11db0 ([pr25797.06](https://github.com/hebasto/bitcoin/commits/pr25797.06) -> [pr25797.07](https://github.com/hebasto/bitcoin/commits/pr25797.07)):\r\n\r\n- addressed some of @fanquake's comments\r\n\r\n_(addressing of other comments in progress)_",
      "created_at" : "2022-08-17T13:19:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218000434",
      "id" : 1218000434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ImTYy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218000434/reactions"
      },
      "updated_at" : "2022-08-17T13:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218000434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947921489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947921489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "[Updated](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218000434).",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T13:19:48Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r947921489",
      "id" : 947921489,
      "in_reply_to_id" : 947594259,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5844gCJR",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 139,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1075710910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947921489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T13:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947921489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We shouldn't have to pass any options to suppress, as Cmake shouldn't even be looking for these libs if we've opted out of in depends.\r\n\r\nFixed in the recent [update](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218000434).",
      "created_at" : "2022-08-17T13:22:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218003804",
      "id" : 1218003804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ImUNc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218003804/reactions"
      },
      "updated_at" : "2022-08-17T13:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218003804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">The new CMake-based build system (CM) does not support in-source builds.\r\n\r\nThis is a HUGE regression for development.\r\n\r\n>We shouldn't have to pass any options to suppress, as Cmake shouldn't even be looking for these libs if we've opted out of in depends.\r\n\r\nDon't some depends users want to build using those system libs (while using depends for other stuff)?\r\n\r\nOn another note, I've noticed a lot of build system refactoring/NIH in Core has broken things that worked previously, and had to be fixed later. This indicates build system stuff, especially homegrown, is underreviewed. CMake might help this, or make it worse. If it's going to help, I would expect to see it reflected in a higher than normal amount of code review on this PR.",
      "created_at" : "2022-08-17T14:59:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218128430",
      "id" : 1218128430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Imyou",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218128430/reactions"
      },
      "updated_at" : "2022-08-17T14:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218128430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Don't some depends users want to build using those system libs (while using depends for other stuff)?\n\nOnly if you explicitly opt in. That shouldn't be the default behaviour (would defeat the point of depends), and I hadn't opted in here.",
      "created_at" : "2022-08-17T15:10:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218141678",
      "id" : 1218141678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Im13u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218141678/reactions"
      },
      "updated_at" : "2022-08-17T15:10:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218141678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK-ish, but only with 100% feature parity.\r\n\r\nThis is the kind of work that's easy enough to get 90% of the way there, but the remaining 10% will almost certainly be brutal.\r\n\r\nI'm in agreement about moving to something more maintainable than Autotools in the long-term, but I'm absolutely against merging this for the sake of the stated reasons: Qt6, MSVC, trendiness (note that I've switched to CMake for my own projects, so I certainly have nothing against it). No offense, but honestly I think it's more reasonable to consider dropping those platforms than to cater our entire infrastructure to them. I share many of @luke-jr's concerns as well.\r\n\r\nThat said, I am very open to a feature-complete CMake port of our current build-system for the sake of modernization and future-proofing. But again, that means feature-parity and a focus on the high-priority targets. Sorry, but Qt6 and MSVC just aren't that.\r\n\r\nI'm honestly not sure how to even begin reviewing this without some kind of 1:1 feature completion mapping. Our current build system does a whole lot more than just build binaries and libs.\r\n\r\nFor example, comments like this don't inspire much confidence\r\n\r\n>     I'm assuming that unit-test build support with CMake is still under construction?\r\n> \r\n> It is, but not as a part of this PR. My intention is to keep the latter more or less digestible for reviewers.\r\n\r\nCould you please advise how we can review this without simply testing it on each platform? That approach would likely take years of after-the-fact corner-case fixing. For example, I think it'd be reasonable to set \"autotools/cmake binary output equivalents for all supported platforms, or detailed explanations as to why they differ\" as a pretty obvious requirement for merge. Otherwise we're just kinda hoping for no regressions, no? \r\n\r\nI don't mean to be harsh with the above, I know how much time/effort work like this takes. But I'm afraid this will require some pretty intense planning and arguing to make it to the finish line.\r\n\r\ntl;dr: charts and graphs please :)",
      "created_at" : "2022-08-17T18:38:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218365904",
      "id" : 1218365904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585InsnQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218365904/reactions"
      },
      "updated_at" : "2022-08-17T18:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218365904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948310221"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948310221"
         }
      },
      "author_association" : "NONE",
      "body" : "That output on macOS 12.5 is different for me\r\n\r\n```\r\nC++ compiler ....................... /opt/homebrew/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\n```",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T18:58:15Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948310221",
      "id" : 948310221,
      "in_reply_to_id" : 947606178,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII5844hhDN",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 259,
      "original_position" : 260,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 259,
      "pull_request_review_id" : 1076252179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948310221/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T18:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948310221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/749118?v=4",
         "events_url" : "https://api.github.com/users/adam2k/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adam2k/followers",
         "following_url" : "https://api.github.com/users/adam2k/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adam2k/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adam2k",
         "id" : 749118,
         "login" : "adam2k",
         "node_id" : "MDQ6VXNlcjc0OTExOA==",
         "organizations_url" : "https://api.github.com/users/adam2k/orgs",
         "received_events_url" : "https://api.github.com/users/adam2k/received_events",
         "repos_url" : "https://api.github.com/users/adam2k/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adam2k/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adam2k/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adam2k"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is the kind of work that's easy enough to get 90% of the way there, but the remaining 10% will almost certainly be brutal.\r\n\r\nI'm probably naive, but I wonder what types of things might be difficult to implement with cmake.\r\n\r\nIt would also be helpful if PR description mentioned what features autotools build supports that cmake build doesn't support yet. Just skimming it wasn't clear if this mostly needs more testing on different platforms or if it has some major missing features that need to be implemented still.",
      "created_at" : "2022-08-17T19:13:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218395147",
      "id" : 1218395147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585InzwL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218395147/reactions"
      },
      "updated_at" : "2022-08-17T19:13:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218395147",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky I didn't mean to imply that there's anything that wouldn't be possible with CMake, just that there's a _lot_ to get done other than vanilla builds. A long list of little stuff like profiling output, configurable shared/static builds, deployment targets (dmg/exe installer creation), etc. Many of those things may even be _easier_ with CMake, there's just a lot to account for.\r\n\r\n> It would also be helpful if PR description mentioned what features autotools build supports that cmake build doesn't support yet. Just skimming it wasn't clear if this mostly needs more testing on different platforms or if it has some major missing features that need to be implemented still.\r\n\r\nAgreed, this is my ask as well. It could be that I skimmed too quickly, but I didn't see those kinds of things addressed here yet.",
      "created_at" : "2022-08-17T19:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218403640",
      "id" : 1218403640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585In104",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218403640/reactions"
      },
      "updated_at" : "2022-08-17T19:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218403640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> dongcarl fanquake ryanofsky theuni\r\n> \r\n> Your conceptual assessments of this PR will be much appreciated.\r\n\r\nDefinitely major concept ACK from me. And the implementation seems very clean. I guess I can try getting multiprocess build to work with this since I don't see a flag for it yet.",
      "created_at" : "2022-08-17T19:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218416462",
      "id" : 1218416462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585In49O",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218416462/reactions"
      },
      "updated_at" : "2022-08-17T19:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218416462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948344256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948344256"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@adam2k You are building natively on macOS for macOS, while @fanquake cross builds on Linux for macOS. Right?",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T19:42:27Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948344256",
      "id" : 948344256,
      "in_reply_to_id" : 947606178,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII5844hpXA",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 259,
      "original_position" : 260,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 259,
      "pull_request_review_id" : 1076299556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948344256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T19:42:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948344256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to explain my concept ACK a little bit: I don't think CMake build needs to add much of a maintenance burden and don't think it needs to have parity with the autotools build. I think if we can start using CMake build for binary releases, then developers can switch to using cmake for all the cool new stuff (qt6, jetbrains, android, web IDEs, rust, bitcoin kernel) and autotools build can hang around in maintenance mode for the old boring stuff.\r\n\r\nI don't think having two build systems should could much trouble for normal developers. Only difference is if you add or renaming a file or flag, you have to may have to make an extra edit.\r\n\r\nI also don't think having two build systems should cause much trouble for people working on build features either, as long as we don't insist on parity between two systems and are clear about which build system is used for binary releases.",
      "created_at" : "2022-08-17T20:05:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218440885",
      "id" : 1218440885,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585In-61",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218440885/reactions"
      },
      "updated_at" : "2022-08-17T20:05:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218440885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948376580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948376580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Cross-compiling for macOS, the \"C++ compiler\" output is `/usr/bin/ccache /usr/bin/env`. Not super helpful.\r\n\r\nThis is caused by the #21552 bug. A possible fix has been suggested in #24620.",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T20:19:50Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948376580",
      "id" : 948376580,
      "in_reply_to_id" : 947606178,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII5844hxQE",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 259,
      "original_position" : 260,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 259,
      "pull_request_review_id" : 1076381088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948376580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T20:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948376580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948385280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948385280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why? This link flag is being processed _after_ the `if  test $cross_compiling != \"yes\";` block end in the `configure.ac`.",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T20:29:15Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948385280",
      "id" : 948385280,
      "in_reply_to_id" : 947598982,
      "line" : 161,
      "node_id" : "PRRC_kwDOABII5844hzYA",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 161,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 161,
      "pull_request_review_id" : 1076391230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948385280/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T20:29:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948385280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948392209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948392209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Which means it gets used for both native and cross-compile builds.",
      "commit_id" : "d56e4d193b7266212686dab00f57a3adf3b11db0",
      "created_at" : "2022-08-17T20:36:51Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948392209",
      "id" : 948392209,
      "in_reply_to_id" : 947598982,
      "line" : 161,
      "node_id" : "PRRC_kwDOABII5844h1ER",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 161,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 161,
      "pull_request_review_id" : 1076399365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948392209/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-17T20:36:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948392209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated d56e4d193b7266212686dab00f57a3adf3b11db0 -> 156afca1c03e2688417d1da313a475e58260d4ac ([pr25797.07](https://github.com/hebasto/bitcoin/commits/pr25797.07) -> [pr25797.08](https://github.com/hebasto/bitcoin/commits/pr25797.08)):\r\n\r\n- addressed more of @fanquake's comments, _(addressing of other comments in progress)_\r\n- improved and detailed configure summary",
      "created_at" : "2022-08-18T00:48:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218798376",
      "id" : 1218798376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IpWMo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218798376/reactions"
      },
      "updated_at" : "2022-08-18T00:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218798376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948556733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218798376).",
      "commit_id" : "156afca1c03e2688417d1da313a475e58260d4ac",
      "created_at" : "2022-08-18T00:49:12Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948556733",
      "id" : 948556733,
      "in_reply_to_id" : 947595141,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5844idO9",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 140,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1076567291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556733/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-18T00:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948556928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Should be [fixed](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218798376) now.",
      "commit_id" : "156afca1c03e2688417d1da313a475e58260d4ac",
      "created_at" : "2022-08-18T00:49:47Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")\n+get_directory_property(compile_options COMPILE_OPTIONS)\n+message(\"Compile options .................... ${compile_options}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948556928",
      "id" : 948556928,
      "in_reply_to_id" : 947607265,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5844idSA",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 261,
      "original_position" : 262,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1076567533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556928/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-18T00:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948556928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948557375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948557375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! [Fixed](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1218798376).",
      "commit_id" : "156afca1c03e2688417d1da313a475e58260d4ac",
      "created_at" : "2022-08-18T00:51:02Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r948557375",
      "id" : 948557375,
      "in_reply_to_id" : 947668248,
      "line" : 95,
      "node_id" : "PRRC_kwDOABII5844idY_",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 95,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : 95,
      "pull_request_review_id" : 1076568076,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948557375/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-18T00:51:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948557375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Doing a depends build of 156afca1c03e2688417d1da313a475e58260d4ac, on aarch64 Linux, currently fails with:\r\n```bash\r\nmake -C depends -j9 NO_QT=1 NO_WALLET=1 NO_ZMQ=1 NO_UPNP=1 NO_NATPMP=1 CC=clang CXX=clang++\r\ncmake --toolchain depends/aarch64-unknown-linux-gnu/share/toolchain.cmake -S . -B build\r\nWallet functionality:\r\n  SQLite, descriptor wallets ....... auto\r\n  Berkeley DB, legacy wallets ...... auto\r\n  wallet tool ...................... OFF\r\n...\r\ncmake --build build -j9\r\nConsolidate compiler generated dependencies of target univalue\r\n[  0%] Building CXX object CMakeFiles/minisketch.dir/src/minisketch/src/fields/generic_1byte.cpp.o\r\n[  0%] Building CXX object src/crypto/CMakeFiles/bitcoin_crypto.dir/aes.cpp.o\r\n[  0%] Building CXX object src/crc32c/CMakeFiles/crc32c_arm64.dir/src/crc32c_arm64.cc.o\r\n[  1%] Building CXX object CMakeFiles/minisketch.dir/src/minisketch/src/fields/generic_2bytes.cpp.o\r\n[  1%] Building CXX object CMakeFiles/minisketch.dir/src/minisketch/src/minisketch.cpp.o\r\n[  1%] Building CXX object CMakeFiles/minisketch.dir/src/minisketch/src/fields/generic_3bytes.cpp.o\r\nclang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\n[  3%] Building CXX object src/crc32c/CMakeFiles/crc32c_sse42.dir/src/crc32c_sse42.cc.o\r\n[  3%] Built target univalue\r\n[  3%] Building C object CMakeFiles/secp256k1.dir/src/secp256k1/src/secp256k1.c.o\r\nclang-14clang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\nclang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\n: error: argument unused during compilation: '-fstack-clash-protection' [-Werror,-Wunused-command-line-argument]\r\ngmake[2]: *** [src/crc32c/CMakeFiles/crc32c_arm64.dir/build.make:76: src/crc32c/CMakeFiles/crc32c_arm64.dir/src/crc32c_arm64.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:543: src/crc32c/CMakeFiles/crc32c_arm64.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs....\r\nConsolidate compiler generated dependencies of target bitcoin_util\r\nclang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\n[  3%] Building C object CMakeFiles/secp256k1.dir/src/secp256k1/src/precomputed_ecmult.c.o\r\nclang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\nclang-14: error: argument unused during compilation: '-fstack-clash-protection' [-Werror,-Wunused-command-line-argument]\r\ngmake[2]: *** [src/crc32c/CMakeFiles/crc32c_sse42.dir/build.make:76: src/crc32c/CMakeFiles/crc32c_sse42.dir/src/crc32c_sse42.cc.o] Error 1\r\n```\r\n\r\nCXXFLAG detection marks `-fstack-clash-protection` as usable even though it's unused:\r\n```bash\r\nSource file was:\r\nint main() { return 0; }\r\nPerforming C++ SOURCE FILE Test CXX_SUPPORTS_FSTACK_CLASH_PROTECTION succeeded with the following output:\r\nChange Dir: /home/fedora/bitcoin/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command(s):/usr/bin/gmake -f Makefile cmTC_c2ada/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_c2ada.dir/build.make CMakeFiles/cmTC_c2ada.dir/build\r\ngmake[1]: Entering directory '/home/fedora/bitcoin/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_c2ada.dir/src.cxx.o\r\n/usr/bin/clang++ -DCXX_SUPPORTS_FSTACK_CLASH_PROTECTION  -fstack-clash-protection -std=c++17 -MD -MT CMakeFiles/cmTC_c2ada.dir/src.cxx.o -MF CMakeFiles/cmTC_c2ada.dir/src.cxx.o.d -o CMakeFiles/cmTC_c2ada.dir/src.cxx.o -c /home/fedora/bitcoin/build/CMakeFiles/CMakeTmp/src.cxx\r\nclang-14: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]\r\nLinking CXX static library libcmTC_c2ada.a\r\n/usr/bin/cmake -P CMakeFiles/cmTC_c2ada.dir/cmake_clean_target.cmake\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c2ada.dir/link.txt --verbose=1\r\n/usr/bin/llvm-ar qc libcmTC_c2ada.a CMakeFiles/cmTC_c2ada.dir/src.cxx.o\r\n/usr/bin/llvm-ranlib libcmTC_c2ada.a\r\ngmake[1]: Leaving directory '/home/fedora/bitcoin/build/CMakeFiles/CMakeTmp'\r\n```\r\nAny reason you're not using `-Werror` for flag checks like we do in configure? \r\n\r\nThe build ultimately fails because `-Werror` is enabled for the crc32c build. Looks like we'll need to turn off any flags we don't want enabled by default (like `-Werror`) in the subproject CMake configurations. \r\n\r\nNote that I included the `Wallet functionality` snippet above, because even though I built depends with `NO_WALLET=1`, the configure summary says `auto` for sqlite/bdb, where it should say `no`.",
      "created_at" : "2022-08-18T09:37:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219265408",
      "id" : 1219265408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IrIOA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219265408/reactions"
      },
      "updated_at" : "2022-08-18T09:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219265408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nhttps://blog.jetbrains.com/clion/2020/06/dev-eco-cpp-2020/#project_models has some numbers on build systems' popularity and trends. ",
      "created_at" : "2022-08-18T10:31:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219324421",
      "id" : 1219324421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IrWoF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219324421/reactions"
      },
      "updated_at" : "2022-08-18T10:31:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219324421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 156afca1c03e2688417d1da313a475e58260d4ac -> e016b22e6c365194743f54a7111f44caf6051394 ([pr25797.08](https://github.com/hebasto/bitcoin/commits/pr25797.08) -> [pr25797.09](https://github.com/hebasto/bitcoin/commits/pr25797.09)):\r\n\r\n- added the `TryAppendLinkerFlag` module\r\n- addressed more of @fanquake's comments, _(addressing of other comments in progress)_",
      "created_at" : "2022-08-18T14:29:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219567775",
      "id" : 1219567775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IsSCf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219567775/reactions"
      },
      "updated_at" : "2022-08-18T14:29:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219567775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r949216184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216184"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219567775).",
      "commit_id" : "e016b22e6c365194743f54a7111f44caf6051394",
      "created_at" : "2022-08-18T14:30:49Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r949216184",
      "id" : 949216184,
      "in_reply_to_id" : 947627848,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5844k-O4",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 111,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1077473924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216184/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-18T14:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r949216869"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216869"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219567775).",
      "commit_id" : "e016b22e6c365194743f54a7111f44caf6051394",
      "created_at" : "2022-08-18T14:31:14Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r949216869",
      "id" : 949216869,
      "in_reply_to_id" : 947628207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5844k-Zl",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 113,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1077474682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216869/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-18T14:31:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949216869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Just to explain my concept ACK a little bit: I don't think CMake build needs to add much of a maintenance burden and don't think it needs to have parity with the autotools build. I think if we can start using CMake build for binary releases, then developers can switch to using cmake for all the cool new stuff (qt6, jetbrains, android, web IDEs, rust, bitcoin kernel) and autotools build can hang around in maintenance mode for the old boring stuff.\r\n> \r\n> I don't think having two build systems should could much trouble for normal developers. Only difference is if you add or renaming a file or flag, you have to may have to make an extra edit.\r\n> \r\n> I also don't think having two build systems should cause much trouble for people working on build features either, as long as we don't insist on parity between two systems and are clear about which build system is used for binary releases.\r\n\r\n> \r\n\r\nI beg you not to trivialize this way. The buildsystem has major implications for how work is done, namely large refactoring projects like libkernel. Maintaining two build systems may only make one-off PRs a little tougher, but it's guaranteed to significantly impede more interesting (and important) long-term efforts. Given the burnout and long-term developer attrition we've seen lately, that seems exactly backwards prioritization to me. Sure I'm biased towards the big cleanup projects, but at as I said above I think the project would benefit from dropping features and scope rather than adding/expanding. Sure, IDE integration and new platforms and bells and whistles would be nice, but this has whiffs of [Zawinski's Law](https://en.wikipedia.org/wiki/Jamie_Zawinski#Zawinski's_Law) to me.\r\n\r\nCall me a cranky old git, but as much as I'd like a more modern infrastructure, I'm changing/editing my support to a NACK for CMake until it's clear that the implications are better understood by everyone involved/affected. I don't understand the support/concept ACKs that this is receiving when so much of the concept (or even a roadmap) is still absent.\r\n\r\nAnd all that is without even mentioning the new overhead of adding what's essentially a new language that we have no history of reviewing/supporting in this project. Please consider the growing pains.\r\n\r\nI support @hebasto's work here, but I think this PR was opened too early. Personally, I'd suggest taking a step back and making a plan before throwing it up for a committee-style discussion. I'd be happy to take another look at this if/when there's a thoughtful roadmap/feature matrix attached. Until then I'm honestly not sure what we're discussing here so I'll keep out.",
      "created_at" : "2022-08-18T14:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219597093",
      "id" : 1219597093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IsZMl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219597093/reactions"
      },
      "updated_at" : "2022-08-18T14:55:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219597093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> it's guaranteed to significantly impede more interesting (and important) long-term efforts.\r\n\r\nMy point is that this is only true if you require parity between the two build systems. I think it's fine (and preferable) if libbitcoinkernel and other newer projects target cmake only, and just keep autotools build working in maintenance mode. Of course if any autotools-lovers want to step up and contribute new features to the autotools build they should be free to do that, too.",
      "created_at" : "2022-08-18T15:03:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219604881",
      "id" : 1219604881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IsbGR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219604881/reactions"
      },
      "updated_at" : "2022-08-18T15:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219604881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni, I think you not making a clear enough distinction between maintaining a build system, and adding new features to a build system. I can attest to the difference personally. For everyday development, my interaction with autotools is very pleasant. It is very easy to **maintain** makefiles during normal c++ development as flags are switched or files are added and moved around. By contrast, implementing multiprocess support where I was **adding a new build feature** to autotools was a painful process that was very difficult to get right, and even had subtle bugs that were uncovered years after original code was written (#25214).\r\n\r\nI think we both agree that requiring new features to be implemented in two build systems would be a major setback to development. But your solution to that would be to ban use of a build system that would make development easier. My solution would be to choose one build system to use for binary releases, and drop the requirement that the both systems need to have feature parity for other types of development. For development purposes, it's fine to say that we have two build systems, and you are free to use the one your prefer. Build system X supports features A B and C, system Y supports features A B and D. If there is a build feature which your preferred build system is missing, you are welcome to submit a patch.\r\n\r\nI think new IDEs and new development tools tend to use cmake, and tend not use or even support autotools. I think we will make onboarding of new developers more difficult by feverishly clinging to autotools, and make existing developers less productive and code less safe if we can't benefit from using new tools. I also think adding new build features easier using cmake, but obviously this is subjective, and a reason why I think we shouldn't be demanding feature parity.",
      "created_at" : "2022-08-18T15:36:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219642834",
      "id" : 1219642834,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IskXS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219642834/reactions"
      },
      "updated_at" : "2022-08-18T15:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219642834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky Please re-read my comments and please don't twist my words. Nowhere to I advocate for autotools. I hate it. it's dated and awful. In each comment I've advocated FOR CMake. I use, like, and prefer it.\r\n\r\nI'm just begging that we not hand-wave the very real pain of switching or maintaining two, and figure out a way to do it right. I'm on your side here, really.",
      "created_at" : "2022-08-18T15:56:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219664195",
      "id" : 1219664195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IsplD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219664195/reactions"
      },
      "updated_at" : "2022-08-18T15:56:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219664195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky as for partial/incremental support of CMake, I suppose my hesitation (which I should've made more clear) is that neither a (partial) build-system switch or a long-term feature merge happen overnight, nor in a vacuum. Realistically they'll overlap. It's easy to say \"just use CMake for the new stuff\", but for long-lived projects, that unfortunately will mean supporting both (or one awkwardly) during the dev/work/comment/merge periods.\r\n\r\nFor the CMake buildsystem to become supported for release, I would expect that to take no less than 6months to a year. Maybe I'm over-estimating, but that's exactly what I'm trying to flesh out here. When I alluded to the 90%/10% work above, that's what I was getting at. Getting to the point where the binaries build is one milestone, but getting to the point where we have that process fully integrated and we're ready to ship those deterministic/hardened/etc. binaries with all tests passing and happy downstreams is another. It's doable and we SHOULD do it, but it will take time and process and people-power. And during that time, it will be an extra burden for long-lived projects.",
      "created_at" : "2022-08-18T16:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219691903",
      "id" : 1219691903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IswV_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219691903/reactions"
      },
      "updated_at" : "2022-08-18T16:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219691903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theuni \r\n\r\n> I'd be happy to take another look at this if/when there's a ... feature matrix attached.\r\n\r\nIs the following table a move in the right direction?\r\n\r\n## Autotools -- CMake Feature Parity Table\r\n\r\nAutotool-based build system (AT) features being listed according to the `./configure --help` output. \r\n\r\n| AT feature | CM feature |\r\n|---|---|\r\n| `--enable-c++20` | TBD |\r\n| `--disable-wallet` | `-DENABLE_WALLET` |\r\n| `--enable-usdt` | `-DWITH_USDT` |\r\n| `--enable-upnp-default` | `-DENABLE_UPNP_DEFAULT` |\r\n| `--enable-natpmp-default` | `-DENABLE_NATPMP_DEFAULT` |\r\n| `--disable-tests` | TBD |\r\n| `--disable-gui-tests` | TBD |\r\n| `--disable-bench` | TBD |\r\n| `--enable-extended-functional-tests` | TBD |\r\n| `--enable-fuzz` | TBD |\r\n| `--enable-fuzz-binary` | TBD |\r\n| `--disable-hardening` | `-DCMAKE_BUILD_TYPE=RelHardened` |\r\n| `--enable-reduce-exports` | `-DREDUCE_EXPORTS` |\r\n| `--disable-ccache` | `-DUSE_CCACHE` |\r\n| `--enable-suppress-external-warnings` | TBD |\r\n| `--enable-lcov` | TBD |\r\n| `--enable-lcov-branch-coverage` | TBD |\r\n| `--enable-threadlocal` | TBD |\r\n| `--disable-asm` | TBD |\r\n| `--disable-zmq` | `-DWITH_ZMQ` |\r\n| `--enable-multiprocess` | TBD |\r\n| `--disable-man` | TBD |\r\n| `--enable-debug` | TBD |\r\n| `--enable-gprof` | TBD |\r\n| `--enable-werror` | TBD |\r\n| `--enable-external-signer` | `-DWITH_EXTERNAL_SIGNER` |\r\n| `--enable-lto` | TBD |\r\n| `--enable-util-cli` | `-DBUILD_CLI` |\r\n| `--enable-util-tx` | `-DBUILD_TX` |\r\n| `--enable-util-wallet` | `-DBUILD_WALLET_TOOL` |\r\n| `--enable-util-util` | `-DBUILD_UTIL` |\r\n| `--enable-experimental-util-chainstate` | TBD |\r\n| `--with-seccomp` | `-DWITH_SECCOMP` |\r\n| `--with-sqlite` | `-DWITH_SQLITE` |\r\n| `--without-bdb` | `-DWITH_BDB` |\r\n| `--with-miniupnpc` | `-DWITH_MINIUPNPC` |\r\n| `--with-natpmp` | `-DWITH_NATPMP` |\r\n| `--with-qrencode` | `-DWITH_QRENCODE` |\r\n| `--with-libmultiprocess` | TBD |\r\n| `--with-mpgen` | TBD |\r\n| `--with-sanitizers` | TBD |\r\n| `--with-utils` | individual options |\r\n| `--with-libs` | TBD |\r\n| `--with-experimental-kernel-lib` | TBD |\r\n| `--with-daemon` | `-DBUILD_DAEMON` |\r\n| `--with-gui` | `-DWITH_GUI` |\r\n",
      "created_at" : "2022-08-18T16:29:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219697059",
      "id" : 1219697059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Isxmj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219697059/reactions"
      },
      "updated_at" : "2022-08-18T16:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219697059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto Yes thanks, that's a huge help! One other helpful set of features to add would be convenience targets used by release processes/ci/etc. There are lots, but `make deploy` and `make check` are the two most obvious that come to mind.\r\n\r\nEdit: s/release/deploy/\r\n\r\nEdit2: Also `--enable-shared` and `--enable-static` are biggies for the libs in that they add lots of build complexity.",
      "created_at" : "2022-08-18T16:48:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219713828",
      "id" : 1219713828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Is1sk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219713828/reactions"
      },
      "updated_at" : "2022-08-18T17:06:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219713828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ryanofsky Please re-read my comments and please don't twist my words. Nowhere to I advocate for autotools. I hate it. it's dated and awful. In each comment I've advocated FOR CMake. I use, like, and prefer it.\r\n\r\nSorry, it's a really bad thing to misrepresent someone's position and I was not trying to do that. I wasn't trying to say you personally prefer autotools, just that, as I see it, the bitcoin core project is unproductively stuck clinging to autotools, and costs of adding cmake support should be small as long as we (1) choose one build system to use for official releases (2) allow each build system to have different features for other development and don't insist on parity",
      "created_at" : "2022-08-18T17:38:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219758967",
      "id" : 1219758967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ItAt3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219758967/reactions"
      },
      "updated_at" : "2022-08-18T17:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219758967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Sorry, it's a really bad thing to misrepresent someone's position and I was not trying to do that. I wasn't trying to say you personally prefer autotools, just that, as I see it, the bitcoin core project is unproductively stuck clinging to autotools, and costs of adding cmake support should be small as long as we (1) choose one build system to use for official releases (2) allow each build system to have different features for other development and don't insist on parity\r\n\r\nThanks. And it's understandable that I'm pretty much synonymous with autotools around here, since I did that to us.\r\n\r\nAgree to disagree on 2), as I believe problems with this approach will expose themselves as @hebasto plods on. But I'll try to keep the discussion productive.",
      "created_at" : "2022-08-18T17:53:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219771771",
      "id" : 1219771771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ItD17",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219771771/reactions"
      },
      "updated_at" : "2022-08-18T17:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219771771",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> (2) allow each build system to have different features for other development and don't insist on parity\r\n\r\nMore specifically, I don't think that a flag-day switch-over would be the only way to do this. But maybe I've been misrepresenting your \"some stuff here, some stuff there\" approach as well. So maybe we should drill down some.\r\n\r\nI took your approach to mean something like (using a made-up but maybe realistic example): \"CMake builds the release binaries, but autotools continues to handle the c-i for a while\". I think this would be a bad idea. I jumped to that conclusion because @hebasto mentioned hooking up the unit tests in a follow-up PR. I think that would be a very unwise approach.\r\n\r\nHowever, if (once the feature matrix is more built out) we can agree on a set of essentials (I would say release binaries, c-i, everyday dev features, not sure what else), then something like a feature-freeze for autotools and a promise to move over the remaining less critical features (for ex profiling, coverage, etc) over the course of a release cycle.. I could see that as realistic. So I guess that relies on a few things happening:\r\n- a minimum viable set of features being 100% complete, tested, and working with CMake\r\n- a clear direction of feature movement (away from frozen autotools to CMake)\r\n- a plan/promise to move the remaining features\r\n- a sunset plan for autotools\r\n\r\nAgain, the absence of those things here is what leads me to believe that this work is jumping the gun. But instead of grumping, I should've just laid that out. Turns out it took some fighting for that to materialize for me. Thank you for your patience :)",
      "created_at" : "2022-08-18T18:08:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219786004",
      "id" : 1219786004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ItHUU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219786004/reactions"
      },
      "updated_at" : "2022-08-18T19:04:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219786004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Converted to a draft until achievement of essential features parity.",
      "created_at" : "2022-08-18T20:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219914679",
      "id" : 1219914679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Itmu3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219914679/reactions"
      },
      "updated_at" : "2022-08-18T20:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219914679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated e016b22e6c365194743f54a7111f44caf6051394 -> 99793951bb06819aa626f7813e7d6f0a26ebd205 ([pr25797.09](https://github.com/hebasto/bitcoin/commits/pr25797.09) -> [pr25797.10](https://github.com/hebasto/bitcoin/commits/pr25797.10)):\r\n\r\n- rebased\r\n- addressed issues mentioned by @fanquake in his [comment](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1219265408)\r\n\r\n> Any reason you're not using `-Werror` for flag checks like we do in configure?\r\n\r\nFixed. Actually, it is [that file](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake)'s job, but it needs to be updated with the \"argument unused during compilation\" case.\r\n\r\n> The build ultimately fails because `-Werror` is enabled for the crc32c build. Looks like we'll need to turn off any flags we don't want enabled by default (like `-Werror`) in the subproject CMake configurations.\r\n\r\nAs the `crc32c` project modifies the `CMAKE_CXX_FLAGS` variable directly, it must be fixed within the project (a bad CMake practice case -- global compiler flags instead of binding them to targets).",
      "created_at" : "2022-08-19T12:19:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1220608428",
      "id" : 1220608428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585IwQGs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220608428/reactions"
      },
      "updated_at" : "2022-08-19T12:19:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220608428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : " > As the `crc32c` project modifies the `CMAKE_CXX_FLAGS` variable directly, it must be fixed within the project (a bad CMake practice case -- global compiler flags instead of binding them to targets).\r\n\r\nAny reason not to PR a fix for this upstream?",
      "created_at" : "2022-08-26T15:10:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1228615718",
      "id" : 1228615718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JOzAm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1228615718/reactions"
      },
      "updated_at" : "2022-08-26T15:10:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1228615718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Interesting. Many open-source project have considered [meson](https://mesonbuild.com/) a very lightweight, effective, and well-maintained build system.\r\n\r\nHave you compared or contrasted CMake with Meson?",
      "created_at" : "2022-08-28T22:38:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1229568872",
      "id" : 1229568872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JSbto",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229568872/reactions"
      },
      "updated_at" : "2022-08-28T22:38:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229568872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/691439?v=4",
         "events_url" : "https://api.github.com/users/da2ce7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/da2ce7/followers",
         "following_url" : "https://api.github.com/users/da2ce7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/da2ce7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/da2ce7",
         "id" : 691439,
         "login" : "da2ce7",
         "node_id" : "MDQ6VXNlcjY5MTQzOQ==",
         "organizations_url" : "https://api.github.com/users/da2ce7/orgs",
         "received_events_url" : "https://api.github.com/users/da2ce7/received_events",
         "repos_url" : "https://api.github.com/users/da2ce7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/da2ce7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/da2ce7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/da2ce7"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@da2ce7 \r\n> Have you compared or contrasted CMake with Meson?\r\n\r\nFrom the PR description:\r\n\r\n\r\n\r\n> * https://www.qt.io/blog/qt-6-build-system:\r\n> \r\n> \r\n> > CMake is the build system for Qt 6\r\n\r\n",
      "created_at" : "2022-08-28T22:40:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1229569133",
      "id" : 1229569133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JSbxt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229569133/reactions"
      },
      "updated_at" : "2022-08-28T22:40:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229569133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @da2ce7\r\n> \r\n> > Have you compared or contrasted CMake with Meson?\r\n> \r\n> From the PR description:\r\n> \r\n> > * https://www.qt.io/blog/qt-6-build-system:\r\n> > \r\n> > > CMake is the build system for Qt 6\r\n\r\nI believe the QT module for meson supports Qt 6 also: https://github.com/mesonbuild/meson/blob/master/mesonbuild/modules/qt.py\r\n\r\nIn many ways I think that the ideals of meson align closer than cmake for bitcoin. (light-weight, more auditable, and faster, while still being activity maintained and popular).\r\n",
      "created_at" : "2022-08-28T22:49:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1229570387",
      "id" : 1229570387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JScFT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229570387/reactions"
      },
      "updated_at" : "2022-08-28T22:49:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229570387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/691439?v=4",
         "events_url" : "https://api.github.com/users/da2ce7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/da2ce7/followers",
         "following_url" : "https://api.github.com/users/da2ce7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/da2ce7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/da2ce7",
         "id" : 691439,
         "login" : "da2ce7",
         "node_id" : "MDQ6VXNlcjY5MTQzOQ==",
         "organizations_url" : "https://api.github.com/users/da2ce7/orgs",
         "received_events_url" : "https://api.github.com/users/da2ce7/received_events",
         "repos_url" : "https://api.github.com/users/da2ce7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/da2ce7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/da2ce7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/da2ce7"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "meson is annoying to me as a user (for other software). I have to re-patch it every release.\r\n\r\nBut in any case, other build systems seem off-topic here. Suggest opening a new issue if you really want to push meson.",
      "created_at" : "2022-08-28T23:09:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1229573836",
      "id" : 1229573836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JSc7M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229573836/reactions"
      },
      "updated_at" : "2022-08-28T23:09:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229573836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> meson is annoying to me as a user (for other software). I have to re-patch it every release.\r\n\r\nAside: Why would you need to patch *any* software \"every release\"? If you're maintaining a private rolling patchset on top of Meson, shouldn't this be contributed upstream?",
      "created_at" : "2022-08-28T23:27:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1229579376",
      "id" : 1229579376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JSeRw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229579376/reactions"
      },
      "updated_at" : "2022-08-28T23:27:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229579376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6551424?v=4",
         "events_url" : "https://api.github.com/users/eli-schwartz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eli-schwartz/followers",
         "following_url" : "https://api.github.com/users/eli-schwartz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eli-schwartz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eli-schwartz",
         "id" : 6551424,
         "login" : "eli-schwartz",
         "node_id" : "MDQ6VXNlcjY1NTE0MjQ=",
         "organizations_url" : "https://api.github.com/users/eli-schwartz/orgs",
         "received_events_url" : "https://api.github.com/users/eli-schwartz/received_events",
         "repos_url" : "https://api.github.com/users/eli-schwartz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eli-schwartz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eli-schwartz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eli-schwartz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > As the `crc32c` project modifies the `CMAKE_CXX_FLAGS` variable directly, it must be fixed within the project (a bad CMake practice case -- global compiler flags instead of binding them to targets).\r\n\r\nI was wrong. We _can_ override the `-Werror` option in the `CMAKE_CXX_FLAGS` variable, which is local in the `crc32c` directory scope, with the `-Wno-error` option in the `COMPILE_OPTIONS` property of the `crc32c` directory.\r\n\r\n@theuni \r\n> Any reason not to PR a fix for this upstream?\r\n\r\nA patch doesn't look to be trivial as the `CMAKE_CXX_FLAGS` variable does affect the following `check_cxx_compiler_flag` commands.",
      "created_at" : "2022-08-29T11:40:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1230170736",
      "id" : 1230170736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JUupw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230170736/reactions"
      },
      "updated_at" : "2022-08-29T11:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230170736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 99793951bb06819aa626f7813e7d6f0a26ebd205 -> 943e5ceeaaba706560cfbd23023e7cd8be151d6f ([pr25797.10](https://github.com/hebasto/bitcoin/commits/pr25797.10) -> [pr25797.11](https://github.com/hebasto/bitcoin/commits/pr25797.11)):\r\n\r\n- rebased\r\n- added draft implementation for `test_bitcoin` executable\r\n- a few other improvements",
      "created_at" : "2022-08-29T22:30:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1230939301",
      "id" : 1230939301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JXqSl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230939301/reactions"
      },
      "updated_at" : "2022-08-29T22:30:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230939301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 943e5ceeaaba706560cfbd23023e7cd8be151d6f -> 24dc55b03ce11cc5a51d4973993058bb7b77ae9f ([pr25797.11](https://github.com/hebasto/bitcoin/commits/pr25797.11) -> [pr25797.12](https://github.com/hebasto/bitcoin/commits/pr25797.12)):\r\n\r\n- rebased\r\n- added the `check` target, use as usually -- `make check`\r\n- fixed linter errors\r\n\r\nThe PR description has been updated.",
      "created_at" : "2022-08-30T13:41:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1231687559",
      "id" : 1231687559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Jag-H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231687559/reactions"
      },
      "updated_at" : "2022-08-30T13:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231687559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > > I'm assuming that unit-test build support with CMake is still under construction?\r\n> >   \r\n> > It is, but not as a part of this PR. My intention is to keep the latter more or less digestible for reviewers.\r\n> \r\n> Could you please advise how we can review this without simply testing it on each platform?\r\n\r\n@theStack @theuni \r\n\r\nThe `make check` has been implemented now :tiger2: ",
      "created_at" : "2022-08-30T13:50:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1231697997",
      "id" : 1231697997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JajhN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231697997/reactions"
      },
      "updated_at" : "2022-08-30T13:50:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231697997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 24dc55b03ce11cc5a51d4973993058bb7b77ae9f -> efe98def733c39e18dc2b0032787fe6dda503ab5 ([pr25797.12](https://github.com/hebasto/bitcoin/commits/pr25797.12) -> [pr25797.13](https://github.com/hebasto/bitcoin/commits/pr25797.13)):\r\n\r\n- rebased on top of the recent [changes](https://github.com/bitcoin/bitcoin/pull/25717) in the build system\r\n- fixed linking on macOS",
      "created_at" : "2022-08-30T18:59:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1232046479",
      "id" : 1232046479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Jb4mP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232046479/reactions"
      },
      "updated_at" : "2022-08-30T18:59:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232046479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@adam2k \r\n> Although, I am running into errors during the second step in the process when I get to the `Linking CXX executable bitcoin-qt`.\r\n\r\nThank you for testing! Linking on macOS should be [fixed](https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1232046479) now.",
      "created_at" : "2022-08-30T19:01:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1232049220",
      "id" : 1232049220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Jb5RE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232049220/reactions"
      },
      "updated_at" : "2022-08-30T19:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1232049220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r959749222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959749222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is the only difference in the text of the warning message, if `ALLOW_INCOMPATIBLE_BDB` is defined or not? I would expect the build to fail if bdb 5.3 is found and `ALLOW_INCOMPATIBLE_BDB` is not defined. Also, the warnings look a bit too alarming in the cmake output, especially given that I have specified `-DALLOW_INCOMPATIBLE_BDB=ON`. Consider the below or feel free to ignore:\r\n\r\n```diff\r\n--- i/cmake/optional.cmake\r\n+++ w/cmake/optional.cmake\r\n@@ -69,19 +69,19 @@ if(ENABLE_WALLET)\r\n   if(NOT WITH_BDB STREQUAL \"no\")\r\n     find_package(BerkeleyDB 4.8)\r\n     if(BerkeleyDB_FOUND)\r\n       set(WITH_BDB yes)\r\n       set(USE_BDB ON)\r\n       if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\r\n-        message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\")\r\n+        message(STATUS \"Found Berkeley DB (BDB) other than 4.8.\")\r\n         if(ALLOW_INCOMPATIBLE_BDB)\r\n-          message(WARNING \"BDB (legacy) wallets opened by this build will not be portable!\")\r\n+          message(STATUS \"BDB (legacy) wallets opened by this build will not be portable!\")\r\n         else()\r\n-          message(WARNING \"BDB (legacy) wallets opened by this build would not be portable!\\n\"\r\n+          message(FATAL_ERROR \"BDB (legacy) wallets opened by this build would not be portable!\\n\"\r\n                           \"If this is intended, pass \\\"-DALLOW_INCOMPATIBLE_BDB=ON\\\".\\n\"\r\n-                          \"Passing \\\"-DWITH_BDB=no\\\" will suppress this warning.\\n\")\r\n+                          \"Passing \\\"-DWITH_BDB=no\\\" will suppress this check.\\n\")\r\n         endif()\r\n       endif()\r\n```",
      "commit_id" : "efe98def733c39e18dc2b0032787fe6dda503ab5",
      "created_at" : "2022-08-31T15:46:33Z",
      "diff_hunk" : "@@ -0,0 +1,234 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Optional features and packages.\n+\n+set(USE_CCACHE \"auto\" CACHE STRING \"Use ccache for building ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if ccache is found\")\n+\n+if(ENABLE_WALLET)\n+  set(default_wallet_option \"auto\")\n+else()\n+  set(default_wallet_option \"no\")\n+endif()\n+set(WITH_SQLITE \"${default_wallet_option}\" CACHE\n+  STRING \"Enable SQLite wallet support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libsqlite3 is found\"\n+)\n+set(WITH_BDB \"${default_wallet_option}\" CACHE\n+  STRING \"Enable Berkeley DB (BDB) wallet support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libdb_cxx is found\"\n+)\n+option(ALLOW_INCOMPATIBLE_BDB \"Allow using a Berkeley DB (BDB) version other than 4.8\" OFF)\n+\n+set(WITH_NATPMP \"auto\" CACHE STRING \"Enable NAT-PMP ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libnatpmp is found\")\n+option(ENABLE_NATPMP_DEFAULT \"If NAT-PMP is enabled, turn it on at startup\" OFF)\n+\n+set(WITH_MINIUPNPC \"auto\" CACHE STRING \"Enable UPNP ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libminiupnpc is found\")\n+option(ENABLE_UPNP_DEFAULT \"If UPNP is enabled, turn it on at startup\" OFF)\n+\n+set(WITH_ZMQ \"auto\" CACHE STRING \"Enable ZMQ notifications ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libzmq is found\")\n+\n+set(WITH_USDT \"auto\" CACHE STRING \"Enable tracepoints for Userspace, Statically Defined Tracing ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if sys/sdt.h is found\")\n+\n+set(WITH_QRENCODE \"auto\" CACHE STRING \"Enable QR code support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libqrencode is found\")\n+\n+set(WITH_SECCOMP \"auto\" CACHE STRING \"Enable experimental syscall sandbox feature (-sandbox) ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if seccomp-bpf is found under Linux x86_64\")\n+\n+set(WITH_EXTERNAL_SIGNER \"auto\" CACHE STRING \"Enable external signer support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if Boost.Process is found\")\n+\n+set(OPTION_VALUES auto yes no)\n+foreach(option USE_CCACHE WITH_SQLITE WITH_BDB WITH_NATPMP WITH_MINIUPNPC WITH_ZMQ WITH_USDT WITH_QRENCODE WITH_SECCOMP)\n+  if(NOT ${option} IN_LIST OPTION_VALUES)\n+    message(FATAL_ERROR \"${option} value is \\\"${${option}}\\\", but must be one of \\\"auto\\\", \\\"yes\\\" or \\\"no\\\".\")\n+  endif()\n+endforeach()\n+\n+if(NOT USE_CCACHE STREQUAL \"no\")\n+  find_program(CCACHE ccache)\n+  if(CCACHE)\n+    set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE})\n+    set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE})\n+  elseif(USE_CCACHE STREQUAL \"yes\")\n+    message(FATAL_ERROR \"ccache requested, but not found.\")\n+  endif()\n+endif()\n+\n+if(ENABLE_WALLET)\n+  if(NOT WITH_SQLITE STREQUAL \"no\")\n+    cross_pkg_check_modules(sqlite sqlite3>=3.7.17 IMPORTED_TARGET)\n+    if(sqlite_FOUND)\n+      set(WITH_SQLITE yes)\n+      set(USE_SQLITE ON)\n+    else()\n+      if(WITH_SQLITE STREQUAL \"yes\")\n+        message(FATAL_ERROR \"SQLite requested, but not found.\")\n+      endif()\n+      set(WITH_SQLITE no)\n+    endif()\n+  endif()\n+\n+  if(NOT WITH_BDB STREQUAL \"no\")\n+    find_package(BerkeleyDB 4.8)\n+    if(BerkeleyDB_FOUND)\n+      set(WITH_BDB yes)\n+      set(USE_BDB ON)\n+      if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+        message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\")\n+        if(ALLOW_INCOMPATIBLE_BDB)\n+          message(WARNING \"BDB (legacy) wallets opened by this build will not be portable!\")\n+        else()\n+          message(WARNING \"BDB (legacy) wallets opened by this build would not be portable!\\n\"\n+                          \"If this is intended, pass \\\"-DALLOW_INCOMPATIBLE_BDB=ON\\\".\\n\"\n+                          \"Passing \\\"-DWITH_BDB=no\\\" will suppress this warning.\\n\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r959749222",
      "id" : 959749222,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII5845NJxm",
      "original_commit_id" : "efe98def733c39e18dc2b0032787fe6dda503ab5",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : 76,
      "path" : "cmake/optional.cmake",
      "position" : 81,
      "pull_request_review_id" : 1092118814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959749222/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 76,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-31T15:46:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959749222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r959955551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959955551"
         }
      },
      "author_association" : "NONE",
      "body" : "@hebasto yes, that's right.  I'm building natively on macOS for macOS.",
      "commit_id" : "efe98def733c39e18dc2b0032787fe6dda503ab5",
      "created_at" : "2022-08-31T19:34:49Z",
      "diff_hunk" : "@@ -0,0 +1,284 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# We are able to build on Ubuntu Bionic.\n+# On the other hand, some useful features lack:\n+#  - 3.11: add_library() and add_executable() commands can now be called without any sources\n+#          and will not complain as long as sources are added later via the target_sources()\n+#          command.\n+#  - 3.11: The target_*() commands learned to set the INTERFACE properties on Imported Targets.\n+#  - 3.12: The add_compile_definitions() command was added to set preprocessor definitions\n+#          at directory level. This supersedes add_definitions().\n+#  - 3.12: If the CONFIGURE_DEPENDS flag is specified, CMake will add logic to the main\n+#          build system check target to rerun the flagged GLOB commands at build time.\n+#  - 3.12: Object libraries can be linked to with target_link_libraries().\n+#  - 3.12: A new $<TARGET_NAME_IF_EXISTS:...> generator expression has been added.\n+#  - 3.13: The target_link_options() command was created to specify link options for targets\n+#          and their dependents.\n+#  - 3.13: The target_link_libraries() command may now be called to modify targets created\n+#          outside the current directory.\n+#  - 3.14: The FindSQLite3 module was added to find the SQLite v3.x library.\n+#  - 3.15: A new imported target Boost::headers is now defined (same as Boost::boost).\n+#  - 3.18: The CheckLinkerFlag module has been added to provide a facility to check validity\n+#          of link flags.\n+cmake_minimum_required(VERSION 3.10)\n+\n+project(\"Bitcoin Core\"\n+  VERSION 23.0.0\n+  DESCRIPTION \"Bitcoin client software\"\n+  LANGUAGES CXX C ASM\n+)\n+\n+list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n+\n+set(PACKAGE_NAME ${PROJECT_NAME})\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+set(CLIENT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\n+set(CLIENT_VERSION_MINOR ${PROJECT_VERSION_MINOR})\n+set(CLIENT_VERSION_BUILD ${PROJECT_VERSION_PATCH})\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+set(PACKAGE_URL \"https://bitcoincore.org/\")\n+set(COPYRIGHT_YEAR \"2022\")\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_SUBSTITUTION ${PROJECT_NAME})\n+set(COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\")\n+\n+if(MSVC)\n+  set(CMAKE_CXX_STANDARD 20)\n+else()\n+  set(CMAKE_CXX_STANDARD 17)\n+endif()\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+include(cmake/check_filesystem.cmake)\n+\n+# Configurable options.\n+option(BUILD_DAEMON \"Build bitcoind\" ON)\n+option(BUILD_CLI \"Build bitcoin-cli\" ON)\n+option(BUILD_TX \"Build bitcoin-tx\" ON)\n+option(BUILD_UTIL \"Build bitcoin-util\" ON)\n+option(BUILD_BITCOINCONSENSUS_LIB \"Build bitcoinconsensus shared library\" ON)\n+option(BUILD_BITCOINKERNEL_LIB \"Build experimental bitcoinkernel shared library\" ON)\n+option(ENABLE_WALLET \"Enable wallet\" ON)\n+option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool\" ${ENABLE_WALLET})\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables\" OFF)\n+\n+include(cmake/try_append_cxxflag.cmake)\n+# Define custom \"RelWithAsserts\" build type\n+set(release_cxx_flags \"\")\n+try_append_cxxflag(release_cxx_flags \"-pipe\")\n+try_append_cxxflag(release_cxx_flags \"-O2\")\n+try_append_cxxflag(release_cxx_flags \"-g\")\n+if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)\n+  # All versions of gcc that we commonly use for building are subject to bug\n+  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+  # -fstack-reuse=none for all gcc builds.\n+  try_append_cxxflag(release_cxx_flags \"-fstack-reuse=none\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELWITHASSERTS \"${release_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelWithAsserts\\\" builds.\"\n+  FORCE\n+)\n+# Define custom \"RelHardened\" build type\n+set(hardened_cxx_flags \"\")\n+try_append_cxxflag(hardened_cxx_flags \"-Wstack-protector\")\n+try_append_cxxflag(hardened_cxx_flags \"-fstack-protector-all\")\n+try_append_cxxflag(hardened_cxx_flags \"-fcf-protection=full\")\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  try_append_cxxflag(hardened_cxx_flags \"-fstack-clash-protection\")\n+endif()\n+set(CMAKE_CXX_FLAGS_RELHARDENED \"${release_cxx_flags} ${hardened_cxx_flags}\" CACHE STRING\n+  \"Flags used by the C++ compiler during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  set(hardened_linker_flags \"-Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code\")\n+elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  set(hardened_linker_flags \"-Wl,--enable-reloc-section -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va\")\n+endif()\n+set(CMAKE_EXE_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used for linking binaries during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+set(CMAKE_SHARED_LINKER_FLAGS_RELHARDENED \"${hardened_linker_flags}\" CACHE STRING\n+  \"Flags used by the shared libraries linker during \\\"RelHardened\\\" builds.\"\n+  FORCE\n+)\n+mark_as_advanced(\n+  CMAKE_CXX_FLAGS_RELWITHASSERTS\n+  CMAKE_CXX_FLAGS_RELHARDENED\n+  CMAKE_EXE_LINKER_FLAGS_RELHARDENED\n+  CMAKE_SHARED_LINKER_FLAGS_RELHARDENED\n+)\n+get_property(cached_cmake_build_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n+if(cached_cmake_build_type)\n+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY\n+    STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\" \"RelWithAsserts\" \"RelHardened\"\n+  )\n+endif()\n+set(default_build_type \"RelHardened\")\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"Setting build type to \\\"${default_build_type}\\\" as none was specified\")\n+  set(CMAKE_BUILD_TYPE \"${default_build_type}\" CACHE STRING \"Choose the type of build.\" FORCE)\n+endif()\n+\n+set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n+  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL Clang)\n+    link_libraries(-Wl,--exclude-libs,ALL)\n+  endif()\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL Linux)\n+  if(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)\n+    add_compile_options(-Wno-psabi)\n+  endif()\n+  link_libraries(-Wl,-O2)\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Windows)\n+  add_definitions(-D_MT -DWIN32 -D_WINDOWS -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -DWIN32_LEAN_AND_MEAN)\n+  if(MSVC)\n+    set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)\n+    add_definitions(\n+      /utf-8\n+      /Zc:__cplusplus\n+      /DNOMINMAX\n+      /D_CRT_SECURE_NO_WARNINGS\n+      /D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+      /D_SILENCE_CXX20_U8PATH_DEPRECATION_WARNING\n+    )\n+    add_compile_options(/wd4018 /wd4244 /wd4267 /wd4273 /wd4334 /wd4805 /wd4715 /wd4834)\n+  else()\n+    link_libraries(-Wl,--major-subsystem-version -Wl,6 -Wl,--minor-subsystem-version -Wl,1)\n+  endif()\n+endif()\n+if(CMAKE_SYSTEM_NAME STREQUAL Darwin)\n+  add_definitions(-DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0)\n+  link_libraries(-Wl,-headerpad_max_install_names)\n+endif()\n+\n+if(CMAKE_CROSSCOMPILING)\n+  add_definitions(${CPPFLAGS_FROM_DEPENDS})\n+  foreach(c_flag ${CFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:C>:${c_flag}>)\n+  endforeach()\n+  foreach(cxx_flag ${CXXFLAGS_FROM_DEPENDS})\n+    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:${cxx_flag}>)\n+  endforeach()\n+  link_libraries(${LDFLAGS_FROM_DEPENDS})\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/subtree-minisketch.cmake)\n+include(cmake/subtree-secp256k1.cmake)\n+\n+include(cmake/optional_qt.cmake)\n+include(cmake/optional.cmake)\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR BUILD_TX OR BUILD_BITCOINKERNEL_LIB OR BUILD_WALLET_TOOL OR NOT WITH_GUI STREQUAL no)\n+  # Find Boost headers only.\n+  find_package(Boost 1.64.0 REQUIRED)\n+\n+  set(THREADS_PREFER_PTHREAD_FLAG ON)\n+  find_package(Threads REQUIRED)\n+endif()\n+\n+if(BUILD_DAEMON OR BUILD_CLI OR NOT WITH_GUI STREQUAL no)\n+  include(FindPkgConfig)\n+  pkg_check_modules(libevent REQUIRED libevent>=2.1.8 IMPORTED_TARGET)\n+  if(CMAKE_SYSTEM_NAME STREQUAL Windows AND TARGET PkgConfig::libevent)\n+    target_link_libraries(PkgConfig::libevent INTERFACE iphlpapi ws2_32)\n+  endif()\n+endif()\n+\n+if(NOT CMAKE_SYSTEM_NAME STREQUAL Windows AND (BUILD_DAEMON OR NOT WITH_GUI STREQUAL no))\n+  pkg_check_modules(libevent_pthreads REQUIRED libevent_pthreads>=2.1.8 IMPORTED_TARGET)\n+endif()\n+\n+add_subdirectory(src)\n+\n+set(abs_top_srcdir ${CMAKE_SOURCE_DIR})\n+set(abs_top_builddir ${CMAKE_BINARY_DIR})\n+set(EXEEXT ${CMAKE_EXECUTABLE_SUFFIX})\n+if(NOT ENABLE_WALLET)\n+  set(ENABLE_WALLET_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_SQLITE)\n+  set(USE_SQLITE_TRUE \\#)\n+endif()\n+if(NOT ENABLE_WALLET OR NOT WITH_BDB)\n+  set(USE_BDB_TRUE \\#)\n+endif()\n+if(NOT BUILD_CLI)\n+  set(BUILD_BITCOIN_CLI_TRUE \\#)\n+endif()\n+if(NOT BUILD_UTIL)\n+  set(BUILD_BITCOIN_UTIL_TRUE \\#)\n+endif()\n+if(NOT BUILD_WALLET_TOOL)\n+  set(BUILD_BITCOIN_WALLET_TRUE \\#)\n+endif()\n+if(NOT BUILD_DAEMON)\n+  set(BUILD_BITCOIND_TRUE \\#)\n+endif()\n+if(NOT WITH_ZMQ)\n+  set(ENABLE_ZMQ_TRUE \\#)\n+endif()\n+if(NOT ENABLE_EXTERNAL_SIGNER)\n+  set(ENABLE_EXTERNAL_SIGNER_TRUE \\#)\n+endif()\n+if(NOT USE_SYSCALL_SANDBOX)\n+  set(ENABLE_SYSCALL_SANDBOX_TRUE \\#)\n+endif()\n+if(NOT ENABLE_TRACING)\n+  set(ENABLE_USDT_TRACEPOINTS_TRUE \\#)\n+endif()\n+configure_file(test/config.ini.in test/config.ini @ONLY)\n+execute_process(COMMAND mkdir -p ${CMAKE_BINARY_DIR}/test/functional)\n+execute_process(COMMAND rm -f ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+execute_process(COMMAND ln -s ${CMAKE_SOURCE_DIR}/test/functional/test_runner.py ${CMAKE_BINARY_DIR}/test/functional/test_runner.py)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+if(cached_cmake_build_type)\n+  message(\"Build type ......................... ${CMAKE_BUILD_TYPE}\")\n+else()\n+  message(\"Available configurations ........... ${CMAKE_CONFIGURATION_TYPES}\")\n+endif()\n+if(CMAKE_CROSSCOMPILING)\n+  message(\"Cross compiling for ................ ${CMAKE_SYSTEM_NAME}, ${CMAKE_SYSTEM_PROCESSOR}\")\n+endif()\n+get_directory_property(definitions COMPILE_DEFINITIONS)\n+message(\"Preprocessor defined macros ........ ${definitions}\")\n+message(\"C++ compiler ....................... ${CMAKE_CXX_COMPILER_LAUNCHER} ${CMAKE_CXX_COMPILER}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r959955551",
      "id" : 959955551,
      "in_reply_to_id" : 947606178,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845N8Jf",
      "original_commit_id" : "6e1dcc2ae5096dde327b71efb6bfa0bf120227e5",
      "original_line" : 259,
      "original_position" : 260,
      "original_start_line" : null,
      "path" : "CMakeLists.txt",
      "position" : null,
      "pull_request_review_id" : 1092412534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959955551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-31T19:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959955551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/749118?v=4",
         "events_url" : "https://api.github.com/users/adam2k/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adam2k/followers",
         "following_url" : "https://api.github.com/users/adam2k/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adam2k/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adam2k",
         "id" : 749118,
         "login" : "adam2k",
         "node_id" : "MDQ6VXNlcjc0OTExOA==",
         "organizations_url" : "https://api.github.com/users/adam2k/orgs",
         "received_events_url" : "https://api.github.com/users/adam2k/received_events",
         "repos_url" : "https://api.github.com/users/adam2k/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adam2k/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adam2k/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adam2k"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the fix @hebasto!\r\n\r\nApproach ACK efe98def733c39e18dc2b0032787fe6dda503ab5 \r\n\r\nI don't have as much background as others commenting here, so take my ACK as QA on the build and run process on an M1 Mac.\r\n\r\n```\r\nHardware Overview:\r\n\r\n  Model Name:\tMacBook Pro\r\n  Model Identifier:\tMacBookPro18,3\r\n  Chip:\tApple M1 Pro\r\n  Total Number of Cores:\t8 (6 performance and 2 efficiency)\r\n  Memory:\t32 GB\r\n```\r\n\r\n```\r\n$ make\r\n...\r\n[ 78%] Built target bitcoinqt\r\n[ 78%] Automatic MOC and UIC for target bitcoin-qt\r\n[ 78%] Built target bitcoin-qt_autogen\r\n[ 78%] Building CXX object src/qt/CMakeFiles/bitcoin-qt.dir/bitcoin-qt_autogen/mocs_compilation.cpp.o\r\n[ 78%] Building CXX object src/qt/CMakeFiles/bitcoin-qt.dir/main.cpp.o\r\n[ 78%] Building CXX object src/qt/CMakeFiles/bitcoin-qt.dir/__/init/bitcoin-qt.cpp.o\r\n[ 79%] Linking CXX executable bitcoin-qt\r\n[ 79%] Built target bitcoin-qt\r\n...\r\n[100%] Linking CXX executable test_bitcoin\r\n[100%] Built target test_bitcoin\r\n```\r\n\r\n```\r\n$ make check\r\n...\r\n108/108 Test #105: wallet_tests:../wallet/test/wallet_tests.cpp ................................   Passed   12.83 sec\r\n\r\n100% tests passed, 0 tests failed out of 108\r\n\r\nTotal Test time (real) =  18.36 sec\r\n[100%] Built target check\r\n```",
      "created_at" : "2022-08-31T20:16:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1233377911",
      "id" : 1233377911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Jg9p3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233377911/reactions"
      },
      "updated_at" : "2022-08-31T20:16:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233377911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/749118?v=4",
         "events_url" : "https://api.github.com/users/adam2k/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adam2k/followers",
         "following_url" : "https://api.github.com/users/adam2k/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adam2k/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adam2k",
         "id" : 749118,
         "login" : "adam2k",
         "node_id" : "MDQ6VXNlcjc0OTExOA==",
         "organizations_url" : "https://api.github.com/users/adam2k/orgs",
         "received_events_url" : "https://api.github.com/users/adam2k/received_events",
         "repos_url" : "https://api.github.com/users/adam2k/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adam2k/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adam2k/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adam2k"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r960469012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960469012"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is a rough consensus among build system people here that the new CMake-based system should follow the current Autotools-based one as close as possible.\r\n\r\nThese lines follow https://github.com/bitcoin/bitcoin/blob/fa5c224d444802dabec5841009e029b9754c92f1/build-aux/m4/bitcoin_find_bdb48.m4#L56-L66\r\n\r\nwhich was recently updated in #23168.",
      "commit_id" : "efe98def733c39e18dc2b0032787fe6dda503ab5",
      "created_at" : "2022-09-01T10:12:25Z",
      "diff_hunk" : "@@ -0,0 +1,234 @@\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Optional features and packages.\n+\n+set(USE_CCACHE \"auto\" CACHE STRING \"Use ccache for building ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if ccache is found\")\n+\n+if(ENABLE_WALLET)\n+  set(default_wallet_option \"auto\")\n+else()\n+  set(default_wallet_option \"no\")\n+endif()\n+set(WITH_SQLITE \"${default_wallet_option}\" CACHE\n+  STRING \"Enable SQLite wallet support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libsqlite3 is found\"\n+)\n+set(WITH_BDB \"${default_wallet_option}\" CACHE\n+  STRING \"Enable Berkeley DB (BDB) wallet support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libdb_cxx is found\"\n+)\n+option(ALLOW_INCOMPATIBLE_BDB \"Allow using a Berkeley DB (BDB) version other than 4.8\" OFF)\n+\n+set(WITH_NATPMP \"auto\" CACHE STRING \"Enable NAT-PMP ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libnatpmp is found\")\n+option(ENABLE_NATPMP_DEFAULT \"If NAT-PMP is enabled, turn it on at startup\" OFF)\n+\n+set(WITH_MINIUPNPC \"auto\" CACHE STRING \"Enable UPNP ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libminiupnpc is found\")\n+option(ENABLE_UPNP_DEFAULT \"If UPNP is enabled, turn it on at startup\" OFF)\n+\n+set(WITH_ZMQ \"auto\" CACHE STRING \"Enable ZMQ notifications ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libzmq is found\")\n+\n+set(WITH_USDT \"auto\" CACHE STRING \"Enable tracepoints for Userspace, Statically Defined Tracing ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if sys/sdt.h is found\")\n+\n+set(WITH_QRENCODE \"auto\" CACHE STRING \"Enable QR code support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if libqrencode is found\")\n+\n+set(WITH_SECCOMP \"auto\" CACHE STRING \"Enable experimental syscall sandbox feature (-sandbox) ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if seccomp-bpf is found under Linux x86_64\")\n+\n+set(WITH_EXTERNAL_SIGNER \"auto\" CACHE STRING \"Enable external signer support ([auto], yes, no). \\\"auto\\\" means \\\"yes\\\" if Boost.Process is found\")\n+\n+set(OPTION_VALUES auto yes no)\n+foreach(option USE_CCACHE WITH_SQLITE WITH_BDB WITH_NATPMP WITH_MINIUPNPC WITH_ZMQ WITH_USDT WITH_QRENCODE WITH_SECCOMP)\n+  if(NOT ${option} IN_LIST OPTION_VALUES)\n+    message(FATAL_ERROR \"${option} value is \\\"${${option}}\\\", but must be one of \\\"auto\\\", \\\"yes\\\" or \\\"no\\\".\")\n+  endif()\n+endforeach()\n+\n+if(NOT USE_CCACHE STREQUAL \"no\")\n+  find_program(CCACHE ccache)\n+  if(CCACHE)\n+    set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE})\n+    set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE})\n+  elseif(USE_CCACHE STREQUAL \"yes\")\n+    message(FATAL_ERROR \"ccache requested, but not found.\")\n+  endif()\n+endif()\n+\n+if(ENABLE_WALLET)\n+  if(NOT WITH_SQLITE STREQUAL \"no\")\n+    cross_pkg_check_modules(sqlite sqlite3>=3.7.17 IMPORTED_TARGET)\n+    if(sqlite_FOUND)\n+      set(WITH_SQLITE yes)\n+      set(USE_SQLITE ON)\n+    else()\n+      if(WITH_SQLITE STREQUAL \"yes\")\n+        message(FATAL_ERROR \"SQLite requested, but not found.\")\n+      endif()\n+      set(WITH_SQLITE no)\n+    endif()\n+  endif()\n+\n+  if(NOT WITH_BDB STREQUAL \"no\")\n+    find_package(BerkeleyDB 4.8)\n+    if(BerkeleyDB_FOUND)\n+      set(WITH_BDB yes)\n+      set(USE_BDB ON)\n+      if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+        message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\")\n+        if(ALLOW_INCOMPATIBLE_BDB)\n+          message(WARNING \"BDB (legacy) wallets opened by this build will not be portable!\")\n+        else()\n+          message(WARNING \"BDB (legacy) wallets opened by this build would not be portable!\\n\"\n+                          \"If this is intended, pass \\\"-DALLOW_INCOMPATIBLE_BDB=ON\\\".\\n\"\n+                          \"Passing \\\"-DWITH_BDB=no\\\" will suppress this warning.\\n\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r960469012",
      "id" : 960469012,
      "in_reply_to_id" : 959749222,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII5845P5gU",
      "original_commit_id" : "efe98def733c39e18dc2b0032787fe6dda503ab5",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : 76,
      "path" : "cmake/optional.cmake",
      "position" : 81,
      "pull_request_review_id" : 1093126463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960469012/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 76,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-01T10:12:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960469012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated efe98def733c39e18dc2b0032787fe6dda503ab5 -> 10c404eb22d48cf7472ecde6571e276ecb0b3975 ([pr25797.13](https://github.com/hebasto/bitcoin/commits/pr25797.13) -> [pr25797.14](https://github.com/hebasto/bitcoin/commits/pr25797.14)):\r\n\r\n- added the `WERROR` option\r\n- fixed BDB search on FreeBSD (thanks to @vasild for reporting this issue on IRC and working on a fix)\r\n- other improvements and fixes",
      "created_at" : "2022-09-01T15:36:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1234452098",
      "id" : 1234452098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585JlD6C",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234452098/reactions"
      },
      "updated_at" : "2022-09-01T15:36:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234452098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 10c404eb22d48cf7472ecde6571e276ecb0b3975 -> f4908a81baf9db9d4b1239856901743bb5a7404e ([pr25797.14](https://github.com/hebasto/bitcoin/commits/pr25797.14) -> [pr25797.15](https://github.com/hebasto/bitcoin/commits/pr25797.15)):\r\n\r\n- added the `CXX20` option\r\n- use `-DCMAKE_BUILD_TYPE=Debug` as Autotools's `--enable-debug`\r\n- other improvements and fixes\r\n\r\nThe PR description has been amended with an example of cross-building for Windows with `DEBUG=1` which is broken in Autotools-based build system.",
      "created_at" : "2022-09-20T21:21:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1252926326",
      "id" : 1252926326,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585KriN2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252926326/reactions"
      },
      "updated_at" : "2022-09-20T21:21:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252926326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated f4908a81baf9db9d4b1239856901743bb5a7404e -> e518752dde040626e8833124107210a980c713fb ([pr25797.15](https://github.com/hebasto/bitcoin/commits/pr25797.15) -> [pr25797.16](https://github.com/hebasto/bitcoin/commits/pr25797.16)):\r\n\r\n- added the `BUILD_BENCH` option\r\n- added the `INSTALL_MAN` option",
      "created_at" : "2022-09-24T20:58:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1257064267",
      "id" : 1257064267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585K7UdL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257064267/reactions"
      },
      "updated_at" : "2022-09-24T20:58:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257064267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated e518752dde040626e8833124107210a980c713fb -> c2c5553c2e02e75be0a87e4522329b792cf23a25 ([pr25797.16](https://github.com/hebasto/bitcoin/commits/pr25797.16) -> [pr25797.17](https://github.com/hebasto/bitcoin/commits/pr25797.17)):\r\n\r\n- added the `BUILD_SHARED` option\r\n- added the `BUILD_STATIC` option\r\n- added the `BUILD_UTIL_CHAINSTATE` option\r\n\r\n@theuni @TheCharlatan Your feedback regarding the recent updates will be much appreciated.",
      "created_at" : "2022-09-25T20:55:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1257277965",
      "id" : 1257277965,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585K8IoN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257277965/reactions"
      },
      "updated_at" : "2022-09-25T20:55:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257277965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated c2c5553c2e02e75be0a87e4522329b792cf23a25 -> b08c83db15e5fc2cfe1d075854b6cb481432f1d3 ([pr25797.17](https://github.com/hebasto/bitcoin/commits/pr25797.17) -> [pr25797.18](https://github.com/hebasto/bitcoin/commits/pr25797.18)).\r\n\r\nBuilding of `libbitcoinconsensus` and `libbitcoinkernel` now works for any reasonable configuration, including shared and/or static, native for Linux, macOS, Windows or cross-building.\r\n\r\nAlso an issue, which was similar to #25947, has been fixed.",
      "created_at" : "2022-09-27T15:35:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1259684081",
      "id" : 1259684081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585LFUDx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1259684081/reactions"
      },
      "updated_at" : "2022-09-27T15:46:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1259684081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-10-03T14:46:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1265573011",
      "id" : 1265573011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585LbxyT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265573011/reactions"
      },
      "updated_at" : "2022-10-03T14:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265573011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated b4ffc79603c73a73df0fc734e2825450920de929 -> 43c9e77b6c158874831aba61e2861060137a209e ([pr25797.20](https://github.com/hebasto/bitcoin/commits/pr25797.20) -> [pr25797.21](https://github.com/hebasto/bitcoin/commits/pr25797.21)):\r\n- rebased\r\n- the \"Win64 native [vs2022]\" CI task converted to CMake (cc @sipsorcery)",
      "created_at" : "2022-10-12T08:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1275804322",
      "id" : 1275804322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585MCzqi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1275804322/reactions"
      },
      "updated_at" : "2022-10-12T08:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1275804322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-10-13T11:49:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1277485695",
      "id" : 1277485695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585MJOJ_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277485695/reactions"
      },
      "updated_at" : "2022-10-13T11:49:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277485695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased 43c9e77b6c158874831aba61e2861060137a209e -> 8a1fd1984100911ddfc16175a66ca45cac36de32 ([pr25797.21](https://github.com/hebasto/bitcoin/commits/pr25797.21) -> [pr25797.22](https://github.com/hebasto/bitcoin/commits/pr25797.22)).",
      "created_at" : "2022-10-19T09:04:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1283672653",
      "id" : 1283672653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Mg0pN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1283672653/reactions"
      },
      "updated_at" : "2022-10-19T09:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1283672653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 8a1fd1984100911ddfc16175a66ca45cac36de32 -> 14c3cd04db7168478cbbd0294d3de8c892c67b45 ([pr25797.22](https://github.com/hebasto/bitcoin/commits/pr25797.22) -> [pr25797.23](https://github.com/hebasto/bitcoin/commits/pr25797.23)):\r\n- rebased\r\n- bugfixes\r\n- improvements",
      "created_at" : "2022-10-23T09:51:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1288069680",
      "id" : 1288069680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585MxmIw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1288069680/reactions"
      },
      "updated_at" : "2022-10-23T09:51:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1288069680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated d6c6114845d9199e9e4cf56e5d2a4a5103034c14 -> d4965750cb24a853d19114799babafb72676f8e2 ([pr25797.24](https://github.com/hebasto/bitcoin/commits/pr25797.24) -> [pr25797.25](https://github.com/hebasto/bitcoin/commits/pr25797.25)):\r\n- rebased\r\n- bugfixes\r\n- improvements",
      "created_at" : "2022-10-31T11:45:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1296970395",
      "id" : 1296970395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585NTjKb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1296970395/reactions"
      },
      "updated_at" : "2022-10-31T11:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1296970395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased d4965750cb24a853d19114799babafb72676f8e2 -> fdaea87660acdf5d76182f313a7add5ea0b2fd98 ([pr25797.25](https://github.com/hebasto/bitcoin/commits/pr25797.25) -> [pr25797.26](https://github.com/hebasto/bitcoin/commits/pr25797.26)) on top of the #26373 to make the `test/lint/git-subtree-check.sh` lint script happy.",
      "created_at" : "2022-11-01T08:48:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1298224556",
      "id" : 1298224556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585NYVWs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298224556/reactions"
      },
      "updated_at" : "2022-11-01T08:48:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298224556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated fdaea87660acdf5d76182f313a7add5ea0b2fd98 -> db8632f872b73d42aa1b2c73ecf2647b9f3c4df0 ([pr25797.26](https://github.com/hebasto/bitcoin/commits/pr25797.26) -> [pr25797.27](https://github.com/hebasto/bitcoin/commits/pr25797.27)):\r\n\r\n- rebased\r\n- fixed CMake 3.10 compatibility issues \r\n\r\nGuix builds for all Linux hosts are available now.",
      "created_at" : "2022-11-03T18:09:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1302491770",
      "id" : 1302491770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585NonJ6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302491770/reactions"
      },
      "updated_at" : "2022-11-03T18:09:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302491770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Guix builds on `x86_64`:\r\n```\r\nc58be75a724bd60c56d8a1b0480ff596b29430e4b5b55e901eb787c1809b040d  guix-build-2d258107b571/output/aarch64-linux-gnu/SHA256SUMS.part\r\n4900d846afb99419c7e43940fc0fde830cde42fea23f4dac68dbb3e280d397b3  guix-build-2d258107b571/output/aarch64-linux-gnu/bitcoin-2d258107b571-aarch64-linux-gnu-debug.tar.gz\r\n61c5b5a95e6fbce0bfbc49cdd4cf5b64992fb2307531fe16f313da39d0e780de  guix-build-2d258107b571/output/aarch64-linux-gnu/bitcoin-2d258107b571-aarch64-linux-gnu.tar.gz\r\ne13d1450756b56d094a948c8939f0657f3ee1ac688d3c3914afcbd192a843ec9  guix-build-2d258107b571/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n9b42766eedeef981e40be5d8d568ba02c84b3b238a532f6ce587ea6f129b3e8a  guix-build-2d258107b571/output/arm-linux-gnueabihf/bitcoin-2d258107b571-arm-linux-gnueabihf-debug.tar.gz\r\n08ec85b271da0f9635af02bfc058e77096ba9092137068955e8e2d3f4542b8a2  guix-build-2d258107b571/output/arm-linux-gnueabihf/bitcoin-2d258107b571-arm-linux-gnueabihf.tar.gz\r\n5a9bb233e3f36514bf7688db2e21656bb93e239dd251553aa144f47c31138d08  guix-build-2d258107b571/output/arm64-apple-darwin/SHA256SUMS.part\r\nf183ff9670aad8584268c8d941dfd9259b0329a1b5793cf324c6908266fcf05a  guix-build-2d258107b571/output/arm64-apple-darwin/bitcoin-2d258107b571-arm64-apple-darwin-unsigned.dmg\r\n47e5caaab3d7f46a85f6beaa90f3b3c9b7f709499462f014664236a18ea9b108  guix-build-2d258107b571/output/arm64-apple-darwin/bitcoin-2d258107b571-arm64-apple-darwin-unsigned.tar.gz\r\ncbc92e630d47c5d3ef47de7b0e03f74257ee9c2b37505e64f9a6a15c8899499d  guix-build-2d258107b571/output/arm64-apple-darwin/bitcoin-2d258107b571-arm64-apple-darwin.tar.gz\r\n77e7d0cfceb99540e6edc4a0a33e4b347a0873c636be0a2388d0fd25f189d8ba  guix-build-2d258107b571/output/dist-archive/bitcoin-2d258107b571.tar.gz\r\nbb320880d72f23f68d6a81cb73179b4e39330c9413e7c7712b5421ec5e63c889  guix-build-2d258107b571/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n4b82844ff411fc91ec90efec91d44cadd3683fb082f623aa2bc05b4226f4042a  guix-build-2d258107b571/output/powerpc64-linux-gnu/bitcoin-2d258107b571-powerpc64-linux-gnu-debug.tar.gz\r\n3b8077f819ad6368a7bad5a77a9b5df65acbe6b9ef981d8fd9317522c693dc99  guix-build-2d258107b571/output/powerpc64-linux-gnu/bitcoin-2d258107b571-powerpc64-linux-gnu.tar.gz\r\n5851b4127ad6c898bd817e20d1ed82e425bd8944db8a9325426790511ec3ddfe  guix-build-2d258107b571/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n48e0f599217a850e300efa4a623817ea9eb4ed6126be69c64944d2244159b42e  guix-build-2d258107b571/output/powerpc64le-linux-gnu/bitcoin-2d258107b571-powerpc64le-linux-gnu-debug.tar.gz\r\ncfd05fe5358b816c4b841c67d39376b6d57ce9dfad3a28f3470e88f149598378  guix-build-2d258107b571/output/powerpc64le-linux-gnu/bitcoin-2d258107b571-powerpc64le-linux-gnu.tar.gz\r\nd5f59ee98e32afeefad09e49103913ffe0a084837fac6be037e244590c988e03  guix-build-2d258107b571/output/riscv64-linux-gnu/SHA256SUMS.part\r\n6a3f61ba145b245fd49478efeae247c401f12554aed6ac07df618dc1d1b38468  guix-build-2d258107b571/output/riscv64-linux-gnu/bitcoin-2d258107b571-riscv64-linux-gnu-debug.tar.gz\r\n9308468239e3915a43347011fe4bf56382c84093b42a9443acdba33352b5453f  guix-build-2d258107b571/output/riscv64-linux-gnu/bitcoin-2d258107b571-riscv64-linux-gnu.tar.gz\r\ne819271d918e9df8cb99188123ff7476674b60eed363c8a0b90df7ddca4e072e  guix-build-2d258107b571/output/x86_64-apple-darwin/SHA256SUMS.part\r\n17e103e6844629b70a57894ada0b49a7c296ac868a0bb4969535135e573899c7  guix-build-2d258107b571/output/x86_64-apple-darwin/bitcoin-2d258107b571-x86_64-apple-darwin-unsigned.dmg\r\ne3a3c09e8b1ea70aede28a12c6c945c03a98712a148c73ff8cd0a487ed9ee095  guix-build-2d258107b571/output/x86_64-apple-darwin/bitcoin-2d258107b571-x86_64-apple-darwin-unsigned.tar.gz\r\n812fcd5a02bc5b18c8a10724393e20d9256597ac6eb5f2f4869933ef0a2370a4  guix-build-2d258107b571/output/x86_64-apple-darwin/bitcoin-2d258107b571-x86_64-apple-darwin.tar.gz\r\n415679743fd23edea683ae407c8f4e4b888c11128062cf3b580a9488653976aa  guix-build-2d258107b571/output/x86_64-linux-gnu/SHA256SUMS.part\r\n2d12a909dd88ffb27464f9c58cf8e0e4cc7411740c437f59b564e311d68e9141  guix-build-2d258107b571/output/x86_64-linux-gnu/bitcoin-2d258107b571-x86_64-linux-gnu-debug.tar.gz\r\n7cb247a192cf057d39e336657f8b9a4a190ef492acfc5f55a00c319fa7781b68  guix-build-2d258107b571/output/x86_64-linux-gnu/bitcoin-2d258107b571-x86_64-linux-gnu.tar.gz\r\n074fad654665bece50efe8ceca8dfc044ececb3189bf56d1d07ac50d5b3699b6  guix-build-2d258107b571/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n0cfa618db540b54799c7c0f5c19ebf51d6d1d6dddda552099f936ad49b5f4ebd  guix-build-2d258107b571/output/x86_64-w64-mingw32/bitcoin-2d258107b571-win64-debug.zip\r\n57360aec700e67dc1993669008b29267916fb9986f2157a9c3aade46c134c50e  guix-build-2d258107b571/output/x86_64-w64-mingw32/bitcoin-2d258107b571-win64-setup-unsigned.exe\r\n658ecc8f096ca2336ebf42b5898b7605bec77196191578daa38a56cd491fe2ca  guix-build-2d258107b571/output/x86_64-w64-mingw32/bitcoin-2d258107b571-win64-unsigned.tar.gz\r\nd1df5ff7cd47f4baf7c6846229ad1fc24849742831916d4e7bc5c6b80a812626  guix-build-2d258107b571/output/x86_64-w64-mingw32/bitcoin-2d258107b571-win64.zip\r\n```",
      "created_at" : "2022-11-08T14:39:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1307323913",
      "id" : 1307323913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585N7C4J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307323913/reactions"
      },
      "updated_at" : "2022-11-08T14:39:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307323913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated ([pr25797.33](https://github.com/hebasto/bitcoin/commits/pr25797.33)):\r\n\r\n- rebased\r\n- add the `SANITIZERS` option\r\n- 12 of 16 CI tasks have been migrated to CMake -- https://cirrus-ci.com/build/6656424604860416\r\n",
      "created_at" : "2022-11-11T22:06:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1312226438",
      "id" : 1312226438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ONvyG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312226438/reactions"
      },
      "updated_at" : "2022-11-12T13:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312226438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Guix builds:\r\n```\r\n52832f54f426c0cf5af8de29c721c97bb4719822e1ad15c13bba19c3e27eecbf  guix-build-22ca7396ce14/output/aarch64-linux-gnu/SHA256SUMS.part\r\nb688f1943508b53a4ab9717b5602667b5fd0eaaa3f748b565553745ecb5e2a59  guix-build-22ca7396ce14/output/aarch64-linux-gnu/bitcoin-22ca7396ce14-aarch64-linux-gnu-debug.tar.gz\r\ndc49db0237f1f4cd530aff692fd9216b418356f7ec78c646ed3b7d92a3f611f1  guix-build-22ca7396ce14/output/aarch64-linux-gnu/bitcoin-22ca7396ce14-aarch64-linux-gnu.tar.gz\r\neb1160121252cfa11d0c442a5361867383c865a2ae06e9bde7f74403eee87631  guix-build-22ca7396ce14/output/arm-linux-gnueabihf/SHA256SUMS.part\r\nbc74674499eda7848939c419626f8060df49065b4c59867273b0e4de9771ff87  guix-build-22ca7396ce14/output/arm-linux-gnueabihf/bitcoin-22ca7396ce14-arm-linux-gnueabihf-debug.tar.gz\r\n1072d500c3bc3ac0eacbe83c480ad59f3bab9623104110775a2cae8add3b8b5b  guix-build-22ca7396ce14/output/arm-linux-gnueabihf/bitcoin-22ca7396ce14-arm-linux-gnueabihf.tar.gz\r\n31bb7fc6133b89f278467c4e013ebb4f2cdbd128be51c823f746166584faf9d5  guix-build-22ca7396ce14/output/arm64-apple-darwin/SHA256SUMS.part\r\n957f06f3fc73e5511e7fdc359c5f3b54fc6a02dac2a30c54a17b54c3435d1b99  guix-build-22ca7396ce14/output/arm64-apple-darwin/bitcoin-22ca7396ce14-arm64-apple-darwin-unsigned.dmg\r\nd1031ce7e0c5cf39d6ca714e0fc173a09cbee4d8f5b879a391829c265c73c054  guix-build-22ca7396ce14/output/arm64-apple-darwin/bitcoin-22ca7396ce14-arm64-apple-darwin-unsigned.tar.gz\r\n3f47536fc946828c83c873b7b3151a757ebab0d09236230b8fe21398202793a6  guix-build-22ca7396ce14/output/arm64-apple-darwin/bitcoin-22ca7396ce14-arm64-apple-darwin.tar.gz\r\n24978bcaa13a6ec4cca2dbbf3171bbb1b0db562b84299ada6821ad628d366583  guix-build-22ca7396ce14/output/dist-archive/bitcoin-22ca7396ce14.tar.gz\r\n1c1ebde18fde86ecffe6d7637deca5443cf9491d7dc28b53d9aae2b28cbb0870  guix-build-22ca7396ce14/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nfb69f7374e32e2c9725df08251cd86564b5ee751b61d9b43630ef730ec451300  guix-build-22ca7396ce14/output/powerpc64-linux-gnu/bitcoin-22ca7396ce14-powerpc64-linux-gnu-debug.tar.gz\r\n076664d13654653e0db1706a3624c01d5d23a4ab0490b5eacc5f6d050cd53cb5  guix-build-22ca7396ce14/output/powerpc64-linux-gnu/bitcoin-22ca7396ce14-powerpc64-linux-gnu.tar.gz\r\n21ee21c5bf45fe32373615682a3da6a196530ef5af9f6627dee653bfc81e9975  guix-build-22ca7396ce14/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n361a811774b669f7157c6cd55c9ac821f8b93aff10348dc93ef8e284705b7e99  guix-build-22ca7396ce14/output/powerpc64le-linux-gnu/bitcoin-22ca7396ce14-powerpc64le-linux-gnu-debug.tar.gz\r\nb9c6688e1eca7b845205d46614828e03115f5116aeb0da9fbad4964eaf0a089f  guix-build-22ca7396ce14/output/powerpc64le-linux-gnu/bitcoin-22ca7396ce14-powerpc64le-linux-gnu.tar.gz\r\nb105397484b320d719153e3d8901deac54a94fb212391fc673427e1ba4392e5a  guix-build-22ca7396ce14/output/riscv64-linux-gnu/SHA256SUMS.part\r\nc83aea30a43de251f41c762cdc74a742f4ccf4872e9ec90b1128e6b22d543342  guix-build-22ca7396ce14/output/riscv64-linux-gnu/bitcoin-22ca7396ce14-riscv64-linux-gnu-debug.tar.gz\r\n9c7fbc84c2fe1a13b9a8513518ef2cf7619cb0d955c2e608dea54a24996a77ff  guix-build-22ca7396ce14/output/riscv64-linux-gnu/bitcoin-22ca7396ce14-riscv64-linux-gnu.tar.gz\r\ne6468e171b4565276f49540e83e632c4610251f9ff2aac99259b630465d38c19  guix-build-22ca7396ce14/output/x86_64-apple-darwin/SHA256SUMS.part\r\n68f8f7b7c1faa68ee0c3e16e5d981efb898c0c47139e4b13cddbb037f59f5da8  guix-build-22ca7396ce14/output/x86_64-apple-darwin/bitcoin-22ca7396ce14-x86_64-apple-darwin-unsigned.dmg\r\nfe23d0ab05b060438f68245b3e9094746bffa82e3aca6b49784b6b4f9b58f3e9  guix-build-22ca7396ce14/output/x86_64-apple-darwin/bitcoin-22ca7396ce14-x86_64-apple-darwin-unsigned.tar.gz\r\na09de4ecf300c4597f4f57e61a70197fa739f2bffb2511f6e6f0cca04b8ba778  guix-build-22ca7396ce14/output/x86_64-apple-darwin/bitcoin-22ca7396ce14-x86_64-apple-darwin.tar.gz\r\nf8bfa10c142fbe13984c70c6f6ccc8072ae51d967d6d7d05f74e5eaad3e92527  guix-build-22ca7396ce14/output/x86_64-linux-gnu/SHA256SUMS.part\r\n639ed8090d8c0fe41ba9e0fd9f01ad811fa0935ff03f5adb542d3beca5083610  guix-build-22ca7396ce14/output/x86_64-linux-gnu/bitcoin-22ca7396ce14-x86_64-linux-gnu-debug.tar.gz\r\n0c198c0fd19f5b2ba8e6796148389d9a82399ce60ad99e6ee471696db40bc473  guix-build-22ca7396ce14/output/x86_64-linux-gnu/bitcoin-22ca7396ce14-x86_64-linux-gnu.tar.gz\r\n3acef415941b8c9ed25e24a7687e3c1de26521e5cb9e13ecc66659e81502bf90  guix-build-22ca7396ce14/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n6be35017e1ccce2ec006f3ce1dbb5510837e3b2c875efb9f42340db742fc0a80  guix-build-22ca7396ce14/output/x86_64-w64-mingw32/bitcoin-22ca7396ce14-win64-debug.zip\r\n8a81fcbdc679025f24565156501f0f3e521d7baa88c216bf1a20751b8a906516  guix-build-22ca7396ce14/output/x86_64-w64-mingw32/bitcoin-22ca7396ce14-win64-setup-unsigned.exe\r\n5ecba9102b88bcb863830b111392ef28063fc69248bb40e798755e250fcd3649  guix-build-22ca7396ce14/output/x86_64-w64-mingw32/bitcoin-22ca7396ce14-win64-unsigned.tar.gz\r\n351d98273b73a8548b736347adcf8774cfe78c258309f64ff2417e7c2fe0ff1f  guix-build-22ca7396ce14/output/x86_64-w64-mingw32/bitcoin-22ca7396ce14-win64.zip\r\n```",
      "created_at" : "2022-11-12T13:48:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1312482102",
      "id" : 1312482102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585OOuM2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312482102/reactions"
      },
      "updated_at" : "2022-11-12T13:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312482102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 22ca7396ce1407b47f6ece5167f95c50509475ab -> f7ed9f9398c6a587018faa16af86bb48c3150dc6 ([pr25797.34](https://github.com/hebasto/bitcoin/commits/pr25797.34) -> [pr25797.35](https://github.com/hebasto/bitcoin/commits/pr25797.35)):\r\n\r\n- rebased\r\n- added the `-DASM` configuration option\r\n- improved `bitcoin_crypto` library\r\n- 13 of 16 CI tasks have been migrated to CMake -- https://cirrus-ci.com/build/6716495894937600\r\n\r\nGuix builds:\r\n```\r\ncadfa7b74983799b45dac13ab6e3737634ae7f2417f88c1c24578b1bab7ba328  guix-build-f7ed9f9398c6/output/aarch64-linux-gnu/SHA256SUMS.part\r\nfa969c0908b4cb81b79fa919d5502446976a8cca21b6ced56b99b05d39c1fd2d  guix-build-f7ed9f9398c6/output/aarch64-linux-gnu/bitcoin-f7ed9f9398c6-aarch64-linux-gnu-debug.tar.gz\r\n0f6902081fdc6c57a41581c81719eb54a18f036bdb8761c6db6ab146709ac9f5  guix-build-f7ed9f9398c6/output/aarch64-linux-gnu/bitcoin-f7ed9f9398c6-aarch64-linux-gnu.tar.gz\r\n49bdd3992d93207fd5b5ea9cda8d5dc3fceb65817ce61f89031814de56b705eb  guix-build-f7ed9f9398c6/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n25d895ffe694368800ffe13e210f48446d04e28ae4451f7191bfedc79fd9ac2e  guix-build-f7ed9f9398c6/output/arm-linux-gnueabihf/bitcoin-f7ed9f9398c6-arm-linux-gnueabihf-debug.tar.gz\r\n97ddc3125ead3b652e798b4b45ac2fa86f7325a01f5d42a6418f5c8cb530822e  guix-build-f7ed9f9398c6/output/arm-linux-gnueabihf/bitcoin-f7ed9f9398c6-arm-linux-gnueabihf.tar.gz\r\n21ee91cc8eb48a9f1aca5c18ec93c5f03a99a942dcf09dd08accc128ceea2ad6  guix-build-f7ed9f9398c6/output/arm64-apple-darwin/SHA256SUMS.part\r\n18cc268dd33ffcd32585f53283bacb7171fc10641e3e26e1cd1f47b1f2db8406  guix-build-f7ed9f9398c6/output/arm64-apple-darwin/bitcoin-f7ed9f9398c6-arm64-apple-darwin-unsigned.dmg\r\nbf63c940e6219160a973adfd7d1b28e3da801f4b520b67081c6d8ef89824f505  guix-build-f7ed9f9398c6/output/arm64-apple-darwin/bitcoin-f7ed9f9398c6-arm64-apple-darwin-unsigned.tar.gz\r\n76d6dbbf5c94abc0c2c6e0289ec8d61c22e28f8d46554bdc9820e679d65d3600  guix-build-f7ed9f9398c6/output/arm64-apple-darwin/bitcoin-f7ed9f9398c6-arm64-apple-darwin.tar.gz\r\nd27ce78ad5ceb3b32173c37477d1d13d425fcd62c3d311682890a6c66fe6cd3b  guix-build-f7ed9f9398c6/output/dist-archive/bitcoin-f7ed9f9398c6.tar.gz\r\n6f50dc81f9355ee950258ab41f4699eb5832799106db372e3453033df5890438  guix-build-f7ed9f9398c6/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nd9eaf2acb164874fdd10482f4ed406e799779127164aa8bc3b7e7421449c0675  guix-build-f7ed9f9398c6/output/powerpc64-linux-gnu/bitcoin-f7ed9f9398c6-powerpc64-linux-gnu-debug.tar.gz\r\n256ec2ff854c9245849d213dfcedcef42f0e5ffa32f166e6bfd79b20e4826b63  guix-build-f7ed9f9398c6/output/powerpc64-linux-gnu/bitcoin-f7ed9f9398c6-powerpc64-linux-gnu.tar.gz\r\naad9d8341121480484b234f4b388a4c012a1a17e3d37dae287d4731305257cdd  guix-build-f7ed9f9398c6/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\nf4db4e916b401e9c36d0716412dc97a6781322d21ffd4695258400650b9bf7b6  guix-build-f7ed9f9398c6/output/powerpc64le-linux-gnu/bitcoin-f7ed9f9398c6-powerpc64le-linux-gnu-debug.tar.gz\r\nede35d7e5edbf3e22a98bf1dc7e0b7d7c0cb2785be72725e0ff41c27484de413  guix-build-f7ed9f9398c6/output/powerpc64le-linux-gnu/bitcoin-f7ed9f9398c6-powerpc64le-linux-gnu.tar.gz\r\na98ed30e2b9664e17d644a61f0029320f43e10fa4a6427d274c2a3f590064f21  guix-build-f7ed9f9398c6/output/riscv64-linux-gnu/SHA256SUMS.part\r\n1bc0949f5df2981d542dfc66899c71bbd3675f0f32939ac0318724570e9dcfae  guix-build-f7ed9f9398c6/output/riscv64-linux-gnu/bitcoin-f7ed9f9398c6-riscv64-linux-gnu-debug.tar.gz\r\n3361a2c8813cac0060f66e6234741aca2183ce55d09d1b2edbfa60a71ac62b66  guix-build-f7ed9f9398c6/output/riscv64-linux-gnu/bitcoin-f7ed9f9398c6-riscv64-linux-gnu.tar.gz\r\na937ce1d200b6bc17399fede527a019619cebd955b05ccc106d4afa5aa556b96  guix-build-f7ed9f9398c6/output/x86_64-apple-darwin/SHA256SUMS.part\r\n27fe9256c9a007e72d6e13ddf1dcf7a0bfb567d5b2f48dd1b165de7bcd263d82  guix-build-f7ed9f9398c6/output/x86_64-apple-darwin/bitcoin-f7ed9f9398c6-x86_64-apple-darwin-unsigned.dmg\r\n66034f0ea1d5f686d3414a1afbc2bf9382bac3a5b9630b2b7c6567787cb10a06  guix-build-f7ed9f9398c6/output/x86_64-apple-darwin/bitcoin-f7ed9f9398c6-x86_64-apple-darwin-unsigned.tar.gz\r\n6059c3fc0da479313f14a1a4d7c36c31298c26c7c95f5bc5b657fcb5e9cb3b42  guix-build-f7ed9f9398c6/output/x86_64-apple-darwin/bitcoin-f7ed9f9398c6-x86_64-apple-darwin.tar.gz\r\nabce2647002aefc89122f9a7ea2a43c2d247645e5c4f79b5af3ae02b32093ab3  guix-build-f7ed9f9398c6/output/x86_64-linux-gnu/SHA256SUMS.part\r\nb154d572eb7685cdf68da707a34d68ebc99ae84fe1d72f0103252a777ac7c113  guix-build-f7ed9f9398c6/output/x86_64-linux-gnu/bitcoin-f7ed9f9398c6-x86_64-linux-gnu-debug.tar.gz\r\n71acc448615b5cfe584363e8af658918188cb0de4cf1fb3f5c142a2f1e3b2882  guix-build-f7ed9f9398c6/output/x86_64-linux-gnu/bitcoin-f7ed9f9398c6-x86_64-linux-gnu.tar.gz\r\n0fd696057066c4c4f7917775c4fea3c98321842100f53328ecd25b049e2991c1  guix-build-f7ed9f9398c6/output/x86_64-w64-mingw32/SHA256SUMS.part\r\ncc51d66f6ac3036e0fb83f1aeadea98894eb62c468370e2cb9cc3102be5ffff6  guix-build-f7ed9f9398c6/output/x86_64-w64-mingw32/bitcoin-f7ed9f9398c6-win64-debug.zip\r\n111aa29051931e1911d87d5e26c5a85b1ac1721cce6d70ffd8bc9308f694b6a9  guix-build-f7ed9f9398c6/output/x86_64-w64-mingw32/bitcoin-f7ed9f9398c6-win64-setup-unsigned.exe\r\n01e8039fab1597940113e22214789b2434fd783e8de58361f0d1505fd8f82ff7  guix-build-f7ed9f9398c6/output/x86_64-w64-mingw32/bitcoin-f7ed9f9398c6-win64-unsigned.tar.gz\r\n7a1470d41d8fe319d3be18cc339ed80696589c09c091d45d7e41294bdd56ddf6  guix-build-f7ed9f9398c6/output/x86_64-w64-mingw32/bitcoin-f7ed9f9398c6-win64.zip\r\n```",
      "created_at" : "2022-11-13T20:57:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1312819971",
      "id" : 1312819971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585OQAsD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312819971/reactions"
      },
      "updated_at" : "2022-11-13T22:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312819971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "GUIX hashes\r\n\r\nx86:\r\n```\r\n20f02048691ca60d9e4a7202cfc7607cbd16e616df81ccf346a8e09b91d94134  guix-build-219866feca50/output/aarch64-linux-gnu/SHA256SUMS.part\r\n73e722a001c303ca27762ceedffb53e092b22e3c5ff2130bc42cb9f42423433a  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu-debug.tar.gz\r\nb35a5e5295469aa3e4a99faba16f32b4a236014f1048f2602c0ed118279aec9f  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu.tar.gz\r\n9edacfaefa0eacd629488ec24ee8c9225b1f3bfc11c1f4bb2cd918fb04c7ed01  guix-build-219866feca50/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n3d83a9d4a6726ea0cd075d43d33924c844b5fec21e5b09136cd69eddcee61539  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf-debug.tar.gz\r\n1975b67418b7e8c353c3656af47a32640ba26257b60daaee2e03181f2e6bcf09  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf.tar.gz\r\n982557aa54df13656f79514ff0b3407674c72f7712eaa77054b2d2179500f044  guix-build-219866feca50/output/arm64-apple-darwin/SHA256SUMS.part\r\n9ddf8d105ca71e8b2c6cb412ebc7096a8b73683196d582cf41829d4efd08970d  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.dmg\r\n69ce578e761179caa5c89b3b6904a18306c6a2a71ccae8cd8319b19b0e77433f  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.tar.gz\r\n5d5f45579f878deb83d9c1efc90dc731c385645d0d0741733aa7069219f17ee3  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin.tar.gz\r\n5ff1b74f04033cce9bd81381f22dad7cce6cdd6f9a904660df4bb972f0f90a64  guix-build-219866feca50/output/dist-archive/bitcoin-219866feca50.tar.gz\r\n7007509d189f6e72dcec499c21863ac971394b20895ef787c97ee7334c4f03a9  guix-build-219866feca50/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nda6bba4dadec94c67373daf3e1c8360ffc2c106c9b3ed745e4377ec24614001d  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu-debug.tar.gz\r\n6c2eddecb33dc1a8fce980c6093188be19ba8d4bbe7ea391bfd5655d884e9563  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu.tar.gz\r\nedbe01931488033808ac143b8d0e5e908e600ba7adaa70762b5554ba8b2ddede  guix-build-219866feca50/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n37028a694608ea5de486a25814adcafea371686a0eb6293f1afa6f8da37823a4  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu-debug.tar.gz\r\n6bf6896934a96cd3ed088822af1ab236ffb75d56ca3c1607edf313ff88d0636d  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu.tar.gz\r\nb28d61a9be932b35b39e71651df787d132cf3a84b2057da037478dab9afa0d51  guix-build-219866feca50/output/riscv64-linux-gnu/SHA256SUMS.part\r\nd7f8a8db3e6b663f2f16584e0ae3e053f53ac28ab9eb04421bed6c30e490a8dd  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu-debug.tar.gz\r\nab9fc807d237d7d3e3ba48af2f8907c669c6282bcd6dfda68523505976d093fc  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu.tar.gz\r\nd583f668b9e81bc38b5a21121b0713337bd9ace9aeb32638cc8e1838e821c25d  guix-build-219866feca50/output/x86_64-apple-darwin/SHA256SUMS.part\r\n5582c5c7625d12165774ad2bf9e8b86bae6623870802e2b56f1b46daec46f03f  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.dmg\r\n4229782794fc915d65a29a7efc084246a46a31719e912e3d0d676e6ab21e5aed  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.tar.gz\r\n5eb722711acf9b0a7020c8291123c42f4c93bde0e075ce943493a36eb81567db  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin.tar.gz\r\n79688f6bb82cbc68ce9e0a5f33d3cab5c4b6dc962255287005c4899890f67986  guix-build-219866feca50/output/x86_64-linux-gnu/SHA256SUMS.part\r\n16c8f915c3387422e04be20f1161853721a607d7bf46e0cab0a944d927e1e7ab  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu-debug.tar.gz\r\ne8ab83d38a7ffb261dadb6ba6216321569bc560e9f60f9468781e91fbdf8c4b5  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu.tar.gz\r\n317c549a71c20766a632a19f7d555b05c40adb4ac9a63926524ec117227679c6  guix-build-219866feca50/output/x86_64-w64-mingw32/SHA256SUMS.part\r\nda29a3e4895097e8c65e1c3eb5fb968c142d97a2c0024285c9cd9c9bf08cd407  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-debug.zip\r\n913dd6b18ee709131cb67d903beec86eb98b430f4632b2a423c25baffe6d363d  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-setup-unsigned.exe\r\n34dbeda2d684595de8a3b171ff79fc50d9287df9e153bd332a93cccfb4f1fe3c  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-unsigned.tar.gz\r\n9e1d73e552eec44fde06d82b5eb72d7f077d68a826c6827f179ca6c25d66ad17  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64.zip\r\n```\r\n\r\narm64:\r\n```\r\n20f02048691ca60d9e4a7202cfc7607cbd16e616df81ccf346a8e09b91d94134  guix-build-219866feca50/output/aarch64-linux-gnu/SHA256SUMS.part\r\n73e722a001c303ca27762ceedffb53e092b22e3c5ff2130bc42cb9f42423433a  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu-debug.tar.gz\r\nb35a5e5295469aa3e4a99faba16f32b4a236014f1048f2602c0ed118279aec9f  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu.tar.gz\r\n9edacfaefa0eacd629488ec24ee8c9225b1f3bfc11c1f4bb2cd918fb04c7ed01  guix-build-219866feca50/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n3d83a9d4a6726ea0cd075d43d33924c844b5fec21e5b09136cd69eddcee61539  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf-debug.tar.gz\r\n1975b67418b7e8c353c3656af47a32640ba26257b60daaee2e03181f2e6bcf09  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf.tar.gz\r\n982557aa54df13656f79514ff0b3407674c72f7712eaa77054b2d2179500f044  guix-build-219866feca50/output/arm64-apple-darwin/SHA256SUMS.part\r\n9ddf8d105ca71e8b2c6cb412ebc7096a8b73683196d582cf41829d4efd08970d  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.dmg\r\n69ce578e761179caa5c89b3b6904a18306c6a2a71ccae8cd8319b19b0e77433f  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.tar.gz\r\n5d5f45579f878deb83d9c1efc90dc731c385645d0d0741733aa7069219f17ee3  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin.tar.gz\r\n5ff1b74f04033cce9bd81381f22dad7cce6cdd6f9a904660df4bb972f0f90a64  guix-build-219866feca50/output/dist-archive/bitcoin-219866feca50.tar.gz\r\n7007509d189f6e72dcec499c21863ac971394b20895ef787c97ee7334c4f03a9  guix-build-219866feca50/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nda6bba4dadec94c67373daf3e1c8360ffc2c106c9b3ed745e4377ec24614001d  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu-debug.tar.gz\r\n6c2eddecb33dc1a8fce980c6093188be19ba8d4bbe7ea391bfd5655d884e9563  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu.tar.gz\r\nedbe01931488033808ac143b8d0e5e908e600ba7adaa70762b5554ba8b2ddede  guix-build-219866feca50/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n37028a694608ea5de486a25814adcafea371686a0eb6293f1afa6f8da37823a4  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu-debug.tar.gz\r\n6bf6896934a96cd3ed088822af1ab236ffb75d56ca3c1607edf313ff88d0636d  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu.tar.gz\r\nb28d61a9be932b35b39e71651df787d132cf3a84b2057da037478dab9afa0d51  guix-build-219866feca50/output/riscv64-linux-gnu/SHA256SUMS.part\r\nd7f8a8db3e6b663f2f16584e0ae3e053f53ac28ab9eb04421bed6c30e490a8dd  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu-debug.tar.gz\r\nab9fc807d237d7d3e3ba48af2f8907c669c6282bcd6dfda68523505976d093fc  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu.tar.gz\r\nd583f668b9e81bc38b5a21121b0713337bd9ace9aeb32638cc8e1838e821c25d  guix-build-219866feca50/output/x86_64-apple-darwin/SHA256SUMS.part\r\n5582c5c7625d12165774ad2bf9e8b86bae6623870802e2b56f1b46daec46f03f  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.dmg\r\n4229782794fc915d65a29a7efc084246a46a31719e912e3d0d676e6ab21e5aed  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.tar.gz\r\n5eb722711acf9b0a7020c8291123c42f4c93bde0e075ce943493a36eb81567db  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin.tar.gz\r\n79688f6bb82cbc68ce9e0a5f33d3cab5c4b6dc962255287005c4899890f67986  guix-build-219866feca50/output/x86_64-linux-gnu/SHA256SUMS.part\r\n16c8f915c3387422e04be20f1161853721a607d7bf46e0cab0a944d927e1e7ab  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu-debug.tar.gz\r\ne8ab83d38a7ffb261dadb6ba6216321569bc560e9f60f9468781e91fbdf8c4b5  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu.tar.gz\r\n317c549a71c20766a632a19f7d555b05c40adb4ac9a63926524ec117227679c6  guix-build-219866feca50/output/x86_64-w64-mingw32/SHA256SUMS.part\r\nda29a3e4895097e8c65e1c3eb5fb968c142d97a2c0024285c9cd9c9bf08cd407  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-debug.zip\r\n913dd6b18ee709131cb67d903beec86eb98b430f4632b2a423c25baffe6d363d  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-setup-unsigned.exe\r\n34dbeda2d684595de8a3b171ff79fc50d9287df9e153bd332a93cccfb4f1fe3c  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-unsigned.tar.gz\r\n9e1d73e552eec44fde06d82b5eb72d7f077d68a826c6827f179ca6c25d66ad17  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64.zip\r\n```",
      "created_at" : "2022-11-15T02:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1314692546",
      "id" : 1314692546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585OXJ3C",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314692546/reactions"
      },
      "updated_at" : "2022-12-03T23:39:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314692546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 82fe672ea078371cfa7a504cba87e52a782235fa<br>(master) | commit 8d2b589a2b22461d5031e0cfc80cd73835158ccd<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`b38f95d08b23616f...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/SHA256SUMS.part) | [`ba10ed64adedb83a...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`9fa913450e29fc50...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-aarch64-linux-gnu-debug.tar.gz) | [`c32e47efad6e3420...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`260e9625075e4f19...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-aarch64-linux-gnu.tar.gz) | [`14c3b3d64e5b65bb...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`0bba99f7f5bec889...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-arm-linux-gnueabihf-debug.tar.gz) | [`0909cfc9eff7f479...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`fbf3a25ee9fc9e78...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-arm-linux-gnueabihf.tar.gz) | [`d1406926a4c2ed53...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.dmg | [`0bffc27fd303170b...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-arm64-apple-darwin-unsigned.dmg) | [`0f520318a7396437...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-arm64-apple-darwin-unsigned.dmg) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`433f72313857bbaf...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-arm64-apple-darwin-unsigned.tar.gz) | [`5d37af408e704fb4...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin.tar.gz | [`37b77895351f7522...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-arm64-apple-darwin.tar.gz) | [`27e2076e71f51400...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`8a93308bb6fc5390...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-powerpc64-linux-gnu-debug.tar.gz) | [`b8de829c361f9851...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`5c12db2cb10b0e1b...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-powerpc64-linux-gnu.tar.gz) | [`f81b953612b70b4a...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-powerpc64-linux-gnu.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`169f2a89a43bdefc...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-powerpc64le-linux-gnu-debug.tar.gz) | [`99132b8c994d2fbb...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz | [`6ed11e729af32b1b...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-powerpc64le-linux-gnu.tar.gz) | [`64cdf4cb02f4c338...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-powerpc64le-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`3fff971d326647fa...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-riscv64-linux-gnu-debug.tar.gz) | [`b491fa1d3aafeeaa...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`23d9c5727d6cbcda...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-riscv64-linux-gnu.tar.gz) | [`aa2227918d00d2b8...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-riscv64-linux-gnu.tar.gz) |\n| *-win64-debug.zip | [`900a6616c2cb833e...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-win64-debug.zip) | [`4a7a47a510a9f85f...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-win64-debug.zip) |\n| *-win64-setup-unsigned.exe | [`e8fe580806aeb211...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-win64-setup-unsigned.exe) | [`18e423930fd72430...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-win64-setup-unsigned.exe) |\n| *-win64-unsigned.tar.gz | [`6d4cf146144b002c...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-win64-unsigned.tar.gz) | [`cec5d1d704268791...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-win64-unsigned.tar.gz) |\n| *-win64.zip | [`90b2a0eacdf61f6c...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-win64.zip) | [`ce3f65aca8016c9e...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-win64.zip) |\n| *-x86_64-apple-darwin-unsigned.dmg | [`1db55013b34b61d0...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-x86_64-apple-darwin-unsigned.dmg) | [`6b1a3fa7804fba40...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-x86_64-apple-darwin-unsigned.dmg) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`52faa476c3df42ab...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-x86_64-apple-darwin-unsigned.tar.gz) | [`12ef0f09feb05ce2...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin.tar.gz | [`3bf6525ff9b6dc24...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-x86_64-apple-darwin.tar.gz) | [`7b6b64f5c9321e0a...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`8a104738429e1a8f...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-x86_64-linux-gnu-debug.tar.gz) | [`7d3a3f72eea40d45...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`37670b512a9f2c4e...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078-x86_64-linux-gnu.tar.gz) | [`d589d97ccdea8f29...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`abc53833a9a002b4...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/bitcoin-82fe672ea078.tar.gz) | [`f11828e42a0edd22...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/bitcoin-8d2b589a2b22.tar.gz) |\n| guix_build.log | [`5f09579d30fe2ea9...`](https://drahtbot.space/guix/bitcoin/bitcoin/82fe672ea078371cfa7a504cba87e52a782235fa/guix_build.log) | [`d1742a13aeac140e...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/guix_build.log) |\n| guix_build.log.diff |  | [`13b1535f67b9424c...`](https://drahtbot.space/guix/bitcoin/bitcoin/8d2b589a2b22461d5031e0cfc80cd73835158ccd/guix_build.log.diff) |\n\n",
      "created_at" : "2022-11-17T22:29:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1319291589",
      "id" : 1319291589,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585OosrF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1319291589/reactions"
      },
      "updated_at" : "2022-11-17T22:29:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1319291589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated f7ed9f9398c6a587018faa16af86bb48c3150dc6 -> 6dfed1e708fa874870d9880d6348836577239223 ([pr25797.35](https://github.com/hebasto/bitcoin/commits/pr25797.35) -> [pr25797.36](https://github.com/hebasto/bitcoin/commits/pr25797.36)):\r\n\r\n- rebased\r\n- fixed maxOS-specific minor bugs\r\n- improved multi-configuration handling for dependencies (MSVC)",
      "created_at" : "2022-11-22T16:37:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1323953050",
      "id" : 1323953050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585O6eua",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1323953050/reactions"
      },
      "updated_at" : "2022-11-22T16:37:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1323953050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK",
      "created_at" : "2022-11-25T17:37:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1327741167",
      "id" : 1327741167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585PI7jv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327741167/reactions"
      },
      "updated_at" : "2022-11-25T17:37:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327741167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.39](https://github.com/hebasto/bitcoin/commits/pr25797.39):\r\n\r\n- rebased\r\n- added the `-DBUILD_FUZZ_BINARY` configuration option\r\n- added the `-DFUZZ` configuration option\r\n- improved `check` target\r\n- 14 of 16 CI tasks have been migrated to CMake -- https://cirrus-ci.com/build/5443924467122176\r\n\r\nGuix builds:\r\n```\r\n20f02048691ca60d9e4a7202cfc7607cbd16e616df81ccf346a8e09b91d94134  guix-build-219866feca50/output/aarch64-linux-gnu/SHA256SUMS.part\r\n73e722a001c303ca27762ceedffb53e092b22e3c5ff2130bc42cb9f42423433a  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu-debug.tar.gz\r\nb35a5e5295469aa3e4a99faba16f32b4a236014f1048f2602c0ed118279aec9f  guix-build-219866feca50/output/aarch64-linux-gnu/bitcoin-219866feca50-aarch64-linux-gnu.tar.gz\r\n9edacfaefa0eacd629488ec24ee8c9225b1f3bfc11c1f4bb2cd918fb04c7ed01  guix-build-219866feca50/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n3d83a9d4a6726ea0cd075d43d33924c844b5fec21e5b09136cd69eddcee61539  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf-debug.tar.gz\r\n1975b67418b7e8c353c3656af47a32640ba26257b60daaee2e03181f2e6bcf09  guix-build-219866feca50/output/arm-linux-gnueabihf/bitcoin-219866feca50-arm-linux-gnueabihf.tar.gz\r\n982557aa54df13656f79514ff0b3407674c72f7712eaa77054b2d2179500f044  guix-build-219866feca50/output/arm64-apple-darwin/SHA256SUMS.part\r\n9ddf8d105ca71e8b2c6cb412ebc7096a8b73683196d582cf41829d4efd08970d  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.dmg\r\n69ce578e761179caa5c89b3b6904a18306c6a2a71ccae8cd8319b19b0e77433f  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin-unsigned.tar.gz\r\n5d5f45579f878deb83d9c1efc90dc731c385645d0d0741733aa7069219f17ee3  guix-build-219866feca50/output/arm64-apple-darwin/bitcoin-219866feca50-arm64-apple-darwin.tar.gz\r\n5ff1b74f04033cce9bd81381f22dad7cce6cdd6f9a904660df4bb972f0f90a64  guix-build-219866feca50/output/dist-archive/bitcoin-219866feca50.tar.gz\r\n7007509d189f6e72dcec499c21863ac971394b20895ef787c97ee7334c4f03a9  guix-build-219866feca50/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nda6bba4dadec94c67373daf3e1c8360ffc2c106c9b3ed745e4377ec24614001d  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu-debug.tar.gz\r\n6c2eddecb33dc1a8fce980c6093188be19ba8d4bbe7ea391bfd5655d884e9563  guix-build-219866feca50/output/powerpc64-linux-gnu/bitcoin-219866feca50-powerpc64-linux-gnu.tar.gz\r\nedbe01931488033808ac143b8d0e5e908e600ba7adaa70762b5554ba8b2ddede  guix-build-219866feca50/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n37028a694608ea5de486a25814adcafea371686a0eb6293f1afa6f8da37823a4  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu-debug.tar.gz\r\n6bf6896934a96cd3ed088822af1ab236ffb75d56ca3c1607edf313ff88d0636d  guix-build-219866feca50/output/powerpc64le-linux-gnu/bitcoin-219866feca50-powerpc64le-linux-gnu.tar.gz\r\nb28d61a9be932b35b39e71651df787d132cf3a84b2057da037478dab9afa0d51  guix-build-219866feca50/output/riscv64-linux-gnu/SHA256SUMS.part\r\nd7f8a8db3e6b663f2f16584e0ae3e053f53ac28ab9eb04421bed6c30e490a8dd  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu-debug.tar.gz\r\nab9fc807d237d7d3e3ba48af2f8907c669c6282bcd6dfda68523505976d093fc  guix-build-219866feca50/output/riscv64-linux-gnu/bitcoin-219866feca50-riscv64-linux-gnu.tar.gz\r\nd583f668b9e81bc38b5a21121b0713337bd9ace9aeb32638cc8e1838e821c25d  guix-build-219866feca50/output/x86_64-apple-darwin/SHA256SUMS.part\r\n5582c5c7625d12165774ad2bf9e8b86bae6623870802e2b56f1b46daec46f03f  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.dmg\r\n4229782794fc915d65a29a7efc084246a46a31719e912e3d0d676e6ab21e5aed  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin-unsigned.tar.gz\r\n5eb722711acf9b0a7020c8291123c42f4c93bde0e075ce943493a36eb81567db  guix-build-219866feca50/output/x86_64-apple-darwin/bitcoin-219866feca50-x86_64-apple-darwin.tar.gz\r\n79688f6bb82cbc68ce9e0a5f33d3cab5c4b6dc962255287005c4899890f67986  guix-build-219866feca50/output/x86_64-linux-gnu/SHA256SUMS.part\r\n16c8f915c3387422e04be20f1161853721a607d7bf46e0cab0a944d927e1e7ab  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu-debug.tar.gz\r\ne8ab83d38a7ffb261dadb6ba6216321569bc560e9f60f9468781e91fbdf8c4b5  guix-build-219866feca50/output/x86_64-linux-gnu/bitcoin-219866feca50-x86_64-linux-gnu.tar.gz\r\n317c549a71c20766a632a19f7d555b05c40adb4ac9a63926524ec117227679c6  guix-build-219866feca50/output/x86_64-w64-mingw32/SHA256SUMS.part\r\nda29a3e4895097e8c65e1c3eb5fb968c142d97a2c0024285c9cd9c9bf08cd407  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-debug.zip\r\n913dd6b18ee709131cb67d903beec86eb98b430f4632b2a423c25baffe6d363d  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-setup-unsigned.exe\r\n34dbeda2d684595de8a3b171ff79fc50d9287df9e153bd332a93cccfb4f1fe3c  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64-unsigned.tar.gz\r\n9e1d73e552eec44fde06d82b5eb72d7f077d68a826c6827f179ca6c25d66ad17  guix-build-219866feca50/output/x86_64-w64-mingw32/bitcoin-219866feca50-win64.zip\r\n```",
      "created_at" : "2022-11-25T20:11:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1327861519",
      "id" : 1327861519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585PJY8P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327861519/reactions"
      },
      "updated_at" : "2022-11-25T20:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327861519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-02T10:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1335027981",
      "id" : 1335027981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585PkukN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1335027981/reactions"
      },
      "updated_at" : "2022-12-02T10:12:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1335027981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Whilst I could get this to build pretty easily (nice work!) I had difficulty with _FindBerkeleyDB.cmake_ picking up my BDB4.8 build from the default location in my source directory on Ubuntu 22.04.\r\n\r\n```bash\r\n$ pwd\r\n/home/will/src/bitcoin\r\n$ ./contrib/install_db4.sh `pwd`\r\n# outputs db4 directory in /home/will/src/bitcoin/db4\r\n$ cmake -S . -B build\r\n ...\r\n-- Could NOT find BerkeleyDB (missing: BerkeleyDB_LIBRARY BerkeleyDB_INCLUDE_DIR) (Required is at least version \"4.8\")\r\nCMake Warning at cmake/optional.cmake:65 (message):\r\n  Berkeley DB (BDB) required for legacy wallet support, but not found.\r\n\r\n  Passing \"-DWITH_BDB=OFF\" will suppress this warning.\r\n\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:420 (include)\r\n\r\n```\r\n\r\nIn in order to fix I applied this patch: \r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```diff\r\ndiff --git a/cmake/module/FindBerkeleyDB.cmake b/cmake/module/FindBerkeleyDB.cmake\r\nindex 144120126..b1321d5fb 100644\r\n--- a/cmake/module/FindBerkeleyDB.cmake\r\n+++ b/cmake/module/FindBerkeleyDB.cmake\r\n@@ -13,7 +13,7 @@ endif()\r\n \r\n find_path(BerkeleyDB_INCLUDE_DIR\r\n   NAMES db.h\r\n-  HINTS ${bdb4_brew_prefix}/include\r\n+  HINTS ${bdb4_brew_prefix}/include $ENV{BerkeleyDB_INCLUDE_DIR}\r\n   PATH_SUFFIXES 4.8 48 4 db4 5 5.3 db5\r\n )\r\n \r\n@@ -43,7 +43,7 @@ if(MSVC)\r\n else()\r\n   find_library(BerkeleyDB_LIBRARY\r\n     NAMES db_cxx-4.8 libdb48 db4_cxx db_cxx db_cxx-5\r\n-    HINTS ${bdb4_brew_prefix}/lib\r\n+    HINTS ${bdb4_brew_prefix}/lib $ENV{BerkeleyDB_LIBRARY}\r\n   )\r\n   set(BerkeleyDB_required BerkeleyDB_LIBRARY)\r\n endif()\r\n```\r\n\r\n</details>\r\n\r\nSo that it could pick up exported BDB env vars `BerkeleyDB_INCLUDE_DIR` and `BerkeleyDB_LIBRARY`.\r\n\r\nI am curious if I was doing something wrong, as it doesn't seem like anyone else had this issue? I am on commit 219866feca50ba1c87388ed118b76f3cb3e41714",
      "created_at" : "2023-01-18T11:12:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1386882534",
      "id" : 1386882534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585SqiXm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1386882534/reactions"
      },
      "updated_at" : "2023-01-18T11:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1386882534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@willcl-ark \r\n\r\n> Whilst I could get this to build pretty easily (nice work!) I had difficulty with _FindBerkeleyDB.cmake_ picking up my BDB4.8 build from the default location in my source directory on Ubuntu 22.04.\r\n\r\nIn the light of #26834 it seems reasonable to postpone your patch. WDYT?",
      "created_at" : "2023-01-20T14:20:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398460245",
      "id" : 1398460245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TWs9V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398460245/reactions"
      },
      "updated_at" : "2023-01-20T14:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398460245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.40](https://github.com/hebasto/bitcoin/commits/pr25797.40):\r\n\r\n- rebased\r\n- added proper finding of python",
      "created_at" : "2023-01-20T15:18:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398549464",
      "id" : 1398549464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TXCvY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398549464/reactions"
      },
      "updated_at" : "2023-01-20T15:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398549464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> In the light of #26834 it seems reasonable to postpone your patch. WDYT?\r\n\r\nI think it still needs some tweaking, perhaps...\r\n\r\nIt might not be the most elegant but I was able to get it working \"automagically\" with: \r\n\r\n<details>\r\n<summary>this patch</summary>\r\n\r\n```diff\r\ndiff --git a/cmake/module/FindBerkeleyDB.cmake b/cmake/module/FindBerkeleyDB.cmake\r\nindex 144120126..4b581ae75 100644\r\n--- a/cmake/module/FindBerkeleyDB.cmake\r\n+++ b/cmake/module/FindBerkeleyDB.cmake\r\n@@ -13,7 +13,7 @@ endif()\r\n \r\n find_path(BerkeleyDB_INCLUDE_DIR\r\n   NAMES db.h\r\n-  HINTS ${bdb4_brew_prefix}/include\r\n+  HINTS ${bdb4_brew_prefix}/include BDB_INCLUDE\r\n   PATH_SUFFIXES 4.8 48 4 db4 5 5.3 db5\r\n )\r\n \r\n@@ -43,7 +43,7 @@ if(MSVC)\r\n else()\r\n   find_library(BerkeleyDB_LIBRARY\r\n     NAMES db_cxx-4.8 libdb48 db4_cxx db_cxx db_cxx-5\r\n-    HINTS ${bdb4_brew_prefix}/lib\r\n+    HINTS ${bdb4_brew_prefix}/lib BDB_LIBS\r\n   )\r\n   set(BerkeleyDB_required BerkeleyDB_LIBRARY)\r\n endif()\r\ndiff --git a/depends/toolchain.cmake.in b/depends/toolchain.cmake.in\r\nindex 291918497..791b52b1e 100644\r\n--- a/depends/toolchain.cmake.in\r\n+++ b/depends/toolchain.cmake.in\r\n@@ -74,6 +74,8 @@ set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\r\n set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\r\n set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\r\n set(QT_CROSS_LIBS_PATH \"${CMAKE_FIND_ROOT_PATH}/lib\")\r\n+set(BDB_LIBS \"${CMAKE_FIND_ROOT_PATH}/lib\")\r\n+set(BDB_INCLUDE \"${CMAKE_FIND_ROOT_PATH}/include\")\r\n set(PKG_CONFIG_PATH \"${CMAKE_FIND_ROOT_PATH}/lib/pkgconfig\")\r\n if(\"@allow_host_packages@\" STREQUAL \"1\")\r\n   set(DEPENDS_ALLOW_HOST_PACKAGES TRUE)\r\n```\r\n\r\n</details>\r\n\r\n...by running the following:\r\n\r\n```\r\nmake -C depends/ NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_ZMQ=1 NO_UPNP=1 NO_USDT=1 ALLOW_HOST_PACKAGES=1\r\ncmake --toolchain depends/x86_64-pc-linux-gnu/share/toolchain.cmake -S . -B build\r\n```\r\n\r\nI don't see how it is supposed to pick up the depends BDB lib/include directories otherwise? Are [these lines](https://github.com/hebasto/bitcoin/blob/220807-cmake/depends/toolchain.cmake.in#L71-L75) supposed to be handling adding */lib and */include type directories automatically (I couldn't find much documentation on them).\r\n\r\nI also didn't test this patch with any of the CI builds or anything, only on my machine.",
      "created_at" : "2023-01-20T16:01:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398598286",
      "id" : 1398598286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TXOqO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398598286/reactions"
      },
      "updated_at" : "2023-01-20T16:01:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398598286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@willcl-ark \r\n> ...by running the following:\r\n> \r\n> ```\r\n> make -C depends/ NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_ZMQ=1 NO_UPNP=1 NO_USDT=1 ALLOW_HOST_PACKAGES=1\r\n> cmake --toolchain depends/x86_64-pc-linux-gnu/share/toolchain.cmake -S . -B build\r\n> ```\r\n\r\nHmm. On my Ubuntu 22.04 with this PR unpatched branch:\r\n```\r\n$ make -j 16 -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1 ALLOW_HOST_PACKAGES=1\r\n...\r\ncopying packages: bdb\r\nto: /home/hebasto/git/bitcoin/depends/x86_64-pc-linux-gnu\r\nmake: Leaving directory '/home/hebasto/git/bitcoin/depends'\r\n$ cmake --toolchain depends/x86_64-pc-linux-gnu/share/toolchain.cmake -S . -B build\r\n...\r\n-- Found BerkeleyDB: /home/hebasto/git/bitcoin/depends/x86_64-pc-linux-gnu/lib/libdb_cxx-4.8.a (found suitable version \"4.8\", minimum required is \"4.8\")\r\n...\r\n```\r\n\r\nDo you have a clean build environment? Maybe `rm -rf build` would help?",
      "created_at" : "2023-01-20T17:05:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398675100",
      "id" : 1398675100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TXhac",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398675100/reactions"
      },
      "updated_at" : "2023-01-20T17:07:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398675100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Are [these lines](https://github.com/hebasto/bitcoin/blob/220807-cmake/depends/toolchain.cmake.in#L71-L75) supposed to be handling adding */lib and */include type directories automatically (I couldn't find much documentation on them).\r\n\r\n[`find_library`](https://cmake.org/cmake/help/latest/command/find_library.html), for example, uses `lib` as a path component in its searching procedure.",
      "created_at" : "2023-01-20T17:11:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398687871",
      "id" : 1398687871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TXkh_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398687871/reactions"
      },
      "updated_at" : "2023-01-20T17:11:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398687871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@willcl-ark \r\n\r\nFollowing an approach promoted by @fanquake in #26834, you could also specify a path to the BDB package in a CMake-specfic way as follows:\r\n```\r\n$ make -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1\r\n$ export BerkeleyDB_ROOT=/home/hebasto/git/bitcoin/depends/x86_64-pc-linux-gnu\r\n$ cmake -S . -B build\r\n```",
      "created_at" : "2023-01-20T17:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398742156",
      "id" : 1398742156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TXxyM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398742156/reactions"
      },
      "updated_at" : "2023-01-20T17:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398742156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do you have a clean build environment? \r\n\r\nCorrect! It's now working without patch, cool. I'm really enjoying cmake so far.",
      "created_at" : "2023-01-20T20:05:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1398871875",
      "id" : 1398871875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585TYRdD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398871875/reactions"
      },
      "updated_at" : "2023-01-20T20:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398871875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.42](https://github.com/hebasto/bitcoin/commits/pr25797.42):\r\n\r\n- rebased\r\n- added support for `libmultiprocess`\r\n- 15 of 16 CI tasks have been migrated to CMake -- https://cirrus-ci.com/build/5809175935057920\r\n\r\nGuix builds:\r\n```\r\n3f3c58ad29f91fe9ec97e9ed2fb98c6448150b0f9905df986c35a15a5d90a5d5  guix-build-d3e1ecc1f982/output/aarch64-linux-gnu/SHA256SUMS.part\r\ne13930bec76db2493fd68f74427bf4c4d1b14ca6d9af4903bd186beb038115c3  guix-build-d3e1ecc1f982/output/aarch64-linux-gnu/bitcoin-d3e1ecc1f982-aarch64-linux-gnu-debug.tar.gz\r\nb7cf6e6da2aeab202a060264d2f202b95df7d2afb632c27f8c9c8b152490a916  guix-build-d3e1ecc1f982/output/aarch64-linux-gnu/bitcoin-d3e1ecc1f982-aarch64-linux-gnu.tar.gz\r\nefd4eb6865afe549a4362813820c49eb0fbfcca28d322cb70287127204714467  guix-build-d3e1ecc1f982/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n15dc508e612599977d078774a38e49b549ade8fc3df0574d356225fd70f33e92  guix-build-d3e1ecc1f982/output/arm-linux-gnueabihf/bitcoin-d3e1ecc1f982-arm-linux-gnueabihf-debug.tar.gz\r\nd6e9bfeb94276c1bb20d0f8ea10d437df2e6c4a7f1d1704a91931259ee87f4b5  guix-build-d3e1ecc1f982/output/arm-linux-gnueabihf/bitcoin-d3e1ecc1f982-arm-linux-gnueabihf.tar.gz\r\n7c4b9b52de53cc1c5355499d76d59e25361b4c31acd06f4a8a9cb87a0bfd9149  guix-build-d3e1ecc1f982/output/arm64-apple-darwin/SHA256SUMS.part\r\n099849168eba8229f6e5e4a3e26028ed823519b8a5e1a59fd773579b60a4d646  guix-build-d3e1ecc1f982/output/arm64-apple-darwin/bitcoin-d3e1ecc1f982-arm64-apple-darwin-unsigned.dmg\r\n6976eb243d7416737453a1296dcf8fe2e03574f9570f102fb9f21fdbd1f7bde3  guix-build-d3e1ecc1f982/output/arm64-apple-darwin/bitcoin-d3e1ecc1f982-arm64-apple-darwin-unsigned.tar.gz\r\n1a11032ec819a50854933fcc77271afccd675ec39c8b6b8b31a820a8d1136884  guix-build-d3e1ecc1f982/output/arm64-apple-darwin/bitcoin-d3e1ecc1f982-arm64-apple-darwin.tar.gz\r\n996136522d71cb8a783ab6c20e3b87d261af569a0eaa53591c7ffc310cd138e8  guix-build-d3e1ecc1f982/output/dist-archive/bitcoin-d3e1ecc1f982.tar.gz\r\ndcfd0451c99310a753b9858f478cbd1626312afc7411f132fb27477df1973cb4  guix-build-d3e1ecc1f982/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n3ee13edc14c70df7c26174c0a2b7da27b1b15ba793329a6d8e2c0bac469ade06  guix-build-d3e1ecc1f982/output/powerpc64-linux-gnu/bitcoin-d3e1ecc1f982-powerpc64-linux-gnu-debug.tar.gz\r\n311ae30fde9095833087780f1f4515efdf042eaa1d736ef51632b7dac347cd88  guix-build-d3e1ecc1f982/output/powerpc64-linux-gnu/bitcoin-d3e1ecc1f982-powerpc64-linux-gnu.tar.gz\r\n23fbdcafff4872477f4f424a930eb53788d0602d3e644e57cfb2671601f1ca2e  guix-build-d3e1ecc1f982/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n8a6ca54e70de0f3abb679c120320469e061c5c645dbfc43be68ac9e3c87402aa  guix-build-d3e1ecc1f982/output/powerpc64le-linux-gnu/bitcoin-d3e1ecc1f982-powerpc64le-linux-gnu-debug.tar.gz\r\n66823db1433352a8a6652059346461dfc0f787b12d77a7c96075a06300fcf418  guix-build-d3e1ecc1f982/output/powerpc64le-linux-gnu/bitcoin-d3e1ecc1f982-powerpc64le-linux-gnu.tar.gz\r\n45ebdc988ccb9bc4068cc427c2b7c7bc216e8b31848971fb57f70bf1697979d0  guix-build-d3e1ecc1f982/output/riscv64-linux-gnu/SHA256SUMS.part\r\n9daddf8e4391d2477d7bf75acd2882678de797c8c0cea13e63971fcfac609c23  guix-build-d3e1ecc1f982/output/riscv64-linux-gnu/bitcoin-d3e1ecc1f982-riscv64-linux-gnu-debug.tar.gz\r\n441541534423bfa2c75b2b788b810ddc7f5d141e58e4e13df74bc37a1d070f20  guix-build-d3e1ecc1f982/output/riscv64-linux-gnu/bitcoin-d3e1ecc1f982-riscv64-linux-gnu.tar.gz\r\n7b0d130f3c340aca6833e2e95cb26bbe1adeb4126775bdd066c4c1ffa819d6b4  guix-build-d3e1ecc1f982/output/x86_64-apple-darwin/SHA256SUMS.part\r\nbbe6b1ee94d9ddf4d40cc5f0c0d651756c64dae5d543bfe62150bd5b55361b27  guix-build-d3e1ecc1f982/output/x86_64-apple-darwin/bitcoin-d3e1ecc1f982-x86_64-apple-darwin-unsigned.dmg\r\nc1b12006279e118a9f58fc7f91f8e014ce7205b832a9cbcbd2550d1f60bd9c5a  guix-build-d3e1ecc1f982/output/x86_64-apple-darwin/bitcoin-d3e1ecc1f982-x86_64-apple-darwin-unsigned.tar.gz\r\n36f3dcb8036a87994ad4cca0998d2891f9688b32f25013f0788ae9b25c5d3b88  guix-build-d3e1ecc1f982/output/x86_64-apple-darwin/bitcoin-d3e1ecc1f982-x86_64-apple-darwin.tar.gz\r\n0cee6a8091c25d623ce5a771e053b7660a1926e0d62f396558751553e4938319  guix-build-d3e1ecc1f982/output/x86_64-linux-gnu/SHA256SUMS.part\r\n2cf690c18d12971fa16a20a7466da3c3d0ecb169ee8cec47a911c668137ce228  guix-build-d3e1ecc1f982/output/x86_64-linux-gnu/bitcoin-d3e1ecc1f982-x86_64-linux-gnu-debug.tar.gz\r\n85715720ae3ff7bab1d9e81b0fd34e2a8c81378a6891b247f54f318fe5c571c5  guix-build-d3e1ecc1f982/output/x86_64-linux-gnu/bitcoin-d3e1ecc1f982-x86_64-linux-gnu.tar.gz\r\nc0724d850a0ea52d26514d6a1dd3459c454156af7c90fd4ce94d1ccfe8e3256c  guix-build-d3e1ecc1f982/output/x86_64-w64-mingw32/SHA256SUMS.part\r\ndb582b997e99836da6925b6bbbb43078bdcae4e4d286073179f42af044f490fa  guix-build-d3e1ecc1f982/output/x86_64-w64-mingw32/bitcoin-d3e1ecc1f982-win64-debug.zip\r\n84c32041bd40966ec49bbaf100204331ef87bd5c9d3238c8d69fe285974f0bb6  guix-build-d3e1ecc1f982/output/x86_64-w64-mingw32/bitcoin-d3e1ecc1f982-win64-setup-unsigned.exe\r\ncdb5e4b2dea7e0aa17c9d9bf9ddae061ffe7638217d86bdd2fb080bced488521  guix-build-d3e1ecc1f982/output/x86_64-w64-mingw32/bitcoin-d3e1ecc1f982-win64-unsigned.tar.gz\r\ne7c70ec3c80c0b4ce72f1b5b9027939dc8aa7e9b8514ff1504216f4b9a51b580  guix-build-d3e1ecc1f982/output/x86_64-w64-mingw32/bitcoin-d3e1ecc1f982-win64.zip\r\n```\r\n\r\n---\r\n\r\n@ryanofsky \r\n> I guess I can try getting multiprocess build to work with this since I don't see a flag for it yet.\r\n\r\nImplemented now :)",
      "created_at" : "2023-01-22T13:06:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1399479482",
      "id" : 1399479482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Taly6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1399479482/reactions"
      },
      "updated_at" : "2023-01-22T14:14:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1399479482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\n> Also we could ask people who graduated CS recently whether their curriculums encompassed Autotools and/or CMake\r\n\r\nAutotools in HPC/physics with Fortran 77, cmake in CS. I think that says it all. \r\n\r\nI'll list my arguments that I have not seen in this discussion before:\r\n\r\n- Using interactive configuring with `ccmake` is a breeze, testing this PR with it is very enjoyable\r\n- Modern IDEs have great cmake support and poor autotools support. Many require an additional compilation database for autotools projects\r\n- Out of tree builds are easier to manage\r\n\r\nI am a bit confused about the semantics that distinguish if something is a `module` or a `script` in the `cmake` subdirectory. What is the logic there? ",
      "created_at" : "2023-01-30T14:56:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1408772481",
      "id" : 1408772481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585T-CmB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1408772481/reactions"
      },
      "updated_at" : "2023-01-30T14:56:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1408772481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheCharlatan \r\n> I am a bit confused about the semantics that distinguish if something is a `module` or a `script` in the `cmake` subdirectory. What is the logic there?\r\n\r\n- `cmake/module`:\r\n  - find modules\r\n  - helper functions\r\n\r\n- `cmake/script`:\r\n  - code generation scripts which are supposed to be processed in script mode, i.e., `cmake -P <script>`. Also see `cmake/module/GenerateHeaders.cmake`.",
      "created_at" : "2023-01-30T15:27:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1408826401",
      "id" : 1408826401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585T-Pwh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1408826401/reactions"
      },
      "updated_at" : "2023-01-30T16:03:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1408826401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-02T11:07:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1413563672",
      "id" : 1413563672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585UQUUY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413563672/reactions"
      },
      "updated_at" : "2023-02-02T11:07:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413563672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-02T17:33:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1414116275",
      "id" : 1414116275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585USbOz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1414116275/reactions"
      },
      "updated_at" : "2023-02-02T17:33:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1414116275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.48](https://github.com/hebasto/bitcoin/commits/pr25797.48):\r\n\r\n- rebased\r\n- added support for Android hosts\r\n- 16 of 16 CI tasks have been migrated to CMake -- https://cirrus-ci.com/build/5822976705167360\r\n\r\nGuix builds:\r\n```\r\n197c847bcf39b51d7941a34bc41382a0c12290703bb27190f97a6ca9140ae953  guix-build-59cb4dd8f852/output/aarch64-linux-gnu/SHA256SUMS.part\r\na5332e286cf1ff01aaa07a60665a1784c0e17ce18a993c0764c10e7684908e5e  guix-build-59cb4dd8f852/output/aarch64-linux-gnu/bitcoin-59cb4dd8f852-aarch64-linux-gnu-debug.tar.gz\r\n3f1a1e913f2a58d179b2fb29ac7390fe9d5347d8fa13a0417a2bd2e0298385be  guix-build-59cb4dd8f852/output/aarch64-linux-gnu/bitcoin-59cb4dd8f852-aarch64-linux-gnu.tar.gz\r\n2feb1f5188baf65ea4b9dabf108d4860a1edd87be0a66a310219d9fa74d18802  guix-build-59cb4dd8f852/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n51b3bf47130bc7dcd309385daf425fdb1f7b8db674ccb88666cf5a5c0a22bcf5  guix-build-59cb4dd8f852/output/arm-linux-gnueabihf/bitcoin-59cb4dd8f852-arm-linux-gnueabihf-debug.tar.gz\r\nd7d7c6c0269cc822a168705ab5893d3cc79ef13fb266eedf5194e3ee767bae34  guix-build-59cb4dd8f852/output/arm-linux-gnueabihf/bitcoin-59cb4dd8f852-arm-linux-gnueabihf.tar.gz\r\n96a5513c1b364c5823d6e6058eea7c2700cfc821fc174ecb2a9aeec329f3ed45  guix-build-59cb4dd8f852/output/arm64-apple-darwin/SHA256SUMS.part\r\n46341521fc7952954dbb28cc3ce47a261949bc543df78969a6135dd8dc49050a  guix-build-59cb4dd8f852/output/arm64-apple-darwin/bitcoin-59cb4dd8f852-arm64-apple-darwin-unsigned.dmg\r\n4674a096eadf90d820d0ad9f2fe708fe1c8b7e6d2b0d4534e3c5a4738aea7c77  guix-build-59cb4dd8f852/output/arm64-apple-darwin/bitcoin-59cb4dd8f852-arm64-apple-darwin-unsigned.tar.gz\r\n377af6c8f5891c675a9110c1c038b82079d2fdba7cb6a4e74050efaf8a6da7db  guix-build-59cb4dd8f852/output/arm64-apple-darwin/bitcoin-59cb4dd8f852-arm64-apple-darwin.tar.gz\r\n1e20bdecb33db04aaa0fac770b4778b5a5082b8bb7c2f357ed1f142f2a8b446a  guix-build-59cb4dd8f852/output/dist-archive/bitcoin-59cb4dd8f852.tar.gz\r\n3832a919f604c48a8f763946be3a0f7df9c358ac01580ebb1d03562ad2a8de33  guix-build-59cb4dd8f852/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n4cb439509bfab37dc78ce39605b44468eb3db66ebf6831d4682612de4ddceca7  guix-build-59cb4dd8f852/output/powerpc64-linux-gnu/bitcoin-59cb4dd8f852-powerpc64-linux-gnu-debug.tar.gz\r\na0605a0e0520b46a107c16eb83a8f9ea0c5a8aa0ff4894a0192938dffc18e5e4  guix-build-59cb4dd8f852/output/powerpc64-linux-gnu/bitcoin-59cb4dd8f852-powerpc64-linux-gnu.tar.gz\r\n0e2663bcc7ec2eefd84aeacad7c2222df8c4834172412c7e8b75834b8d3cbab9  guix-build-59cb4dd8f852/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\nce2d0382b199742d19e77aaa673cc4647078ba7b351fb04fe703881105bee710  guix-build-59cb4dd8f852/output/powerpc64le-linux-gnu/bitcoin-59cb4dd8f852-powerpc64le-linux-gnu-debug.tar.gz\r\n1293c1e8e85767c6f65efd463cdf0c638015581a41c862006002a069c780fedd  guix-build-59cb4dd8f852/output/powerpc64le-linux-gnu/bitcoin-59cb4dd8f852-powerpc64le-linux-gnu.tar.gz\r\n9fc46fafcc3842938428c7970d5e3c9880929486066b3b21d9b9f7ff42f84eae  guix-build-59cb4dd8f852/output/riscv64-linux-gnu/SHA256SUMS.part\r\n9e8baf08603e25835cf89981dc5e2a0591269f2ef1d1e4b1aabe822f192ae882  guix-build-59cb4dd8f852/output/riscv64-linux-gnu/bitcoin-59cb4dd8f852-riscv64-linux-gnu-debug.tar.gz\r\n00f84ee31d35624563d80a7615b8bf4d7971086b105edfaaa6274f4246d8f3a1  guix-build-59cb4dd8f852/output/riscv64-linux-gnu/bitcoin-59cb4dd8f852-riscv64-linux-gnu.tar.gz\r\nf67a438290ccb401b00d2f3cf41897f8159ec070123175b37040b59f123ebc7c  guix-build-59cb4dd8f852/output/x86_64-apple-darwin/SHA256SUMS.part\r\n9912ea7c4fb802f63a0de7d97d0a3375abe9e802562c9a1c1cfbaf5cca7eaebc  guix-build-59cb4dd8f852/output/x86_64-apple-darwin/bitcoin-59cb4dd8f852-x86_64-apple-darwin-unsigned.dmg\r\nc3858c98f3aae74a1b062540fe914bdcaba62b46b970c9816e99058af4e2e879  guix-build-59cb4dd8f852/output/x86_64-apple-darwin/bitcoin-59cb4dd8f852-x86_64-apple-darwin-unsigned.tar.gz\r\n0c3d97a420196a1265e5a0beead2b88ee74f0302ff0a8f8ea1441eadde546521  guix-build-59cb4dd8f852/output/x86_64-apple-darwin/bitcoin-59cb4dd8f852-x86_64-apple-darwin.tar.gz\r\nb825a5d2e743a47afa5c0624470dea4a0917f0bef721a8401c00b14e4d6c78b3  guix-build-59cb4dd8f852/output/x86_64-linux-gnu/SHA256SUMS.part\r\n81d90e4b2eb102f2b6d1c3e59b97b36bc50fa8aff1ff40b49afade9759f073ed  guix-build-59cb4dd8f852/output/x86_64-linux-gnu/bitcoin-59cb4dd8f852-x86_64-linux-gnu-debug.tar.gz\r\n9b737a4ca1c32e828ba1764abd27efc911f5e4c89684ee46b4932f77af7ffe44  guix-build-59cb4dd8f852/output/x86_64-linux-gnu/bitcoin-59cb4dd8f852-x86_64-linux-gnu.tar.gz\r\nd200ffe02765d63cac5171abaa1fd4d89e6c13595001bccd9a83d04d6f2381f3  guix-build-59cb4dd8f852/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n891f138df29fe4783150d5b56d34665ebc2e8c5b12de633502a7fcb0aea240de  guix-build-59cb4dd8f852/output/x86_64-w64-mingw32/bitcoin-59cb4dd8f852-win64-debug.zip\r\n6efb468a97da5c2caba361d69e120a2826cb74d082b6c2b7e92ef684dbafd032  guix-build-59cb4dd8f852/output/x86_64-w64-mingw32/bitcoin-59cb4dd8f852-win64-setup-unsigned.exe\r\n7792e109d09ee227f6b90772edd3a85c50bfbb3165e4676d610f7cfab8a86d25  guix-build-59cb4dd8f852/output/x86_64-w64-mingw32/bitcoin-59cb4dd8f852-win64-unsigned.tar.gz\r\ne5d70a7c70c3274575d9ca7654994f3f0dcda97336c7317a63905b352485296e  guix-build-59cb4dd8f852/output/x86_64-w64-mingw32/bitcoin-59cb4dd8f852-win64.zip\r\n```\r\n",
      "created_at" : "2023-02-07T13:26:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1420774525",
      "id" : 1420774525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585Ur0x9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420774525/reactions"
      },
      "updated_at" : "2023-02-07T13:26:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1420774525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1099836276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099836276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not sure if related, but those changes to this file can probably be split up, including the bump to jammy below",
      "commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "created_at" : "2023-02-08T09:00:02Z",
      "diff_hunk" : "@@ -315,6 +316,8 @@ task:\n   << : *MAIN_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 2\n+    memory: 8G",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1099836276",
      "id" : 1099836276,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585Bjit0",
      "original_commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "original_line" : 320,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : ".cirrus.yml",
      "position" : 102,
      "pull_request_review_id" : 1288732037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099836276/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T09:00:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099836276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100149130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100149130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> not sure if related, but those changes to this file can probably be split up\r\n\r\nIt will be no longer required after #27062.\r\n\r\n> including the bump to jammy below\r\n\r\nThat is related to CMake, as Android's NDK 23 expects CMake 3.19+, while Ubuntu Focal provides [3.16](https://packages.ubuntu.com/focal/cmake).",
      "commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "created_at" : "2023-02-08T13:34:11Z",
      "diff_hunk" : "@@ -315,6 +316,8 @@ task:\n   << : *MAIN_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 2\n+    memory: 8G",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100149130",
      "id" : 1100149130,
      "in_reply_to_id" : 1099836276,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585BkvGK",
      "original_commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "original_line" : 320,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : ".cirrus.yml",
      "position" : 102,
      "pull_request_review_id" : 1289191525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100149130/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T13:34:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100149130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100172227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100172227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok. I mean that the NDK can be bumped regardless. I don't expect that anyone is building for android, and if they did, it should be fine to just require the latest Ubuntu LTS, which is Jammy, independent of cmake changes.",
      "commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "created_at" : "2023-02-08T13:54:05Z",
      "diff_hunk" : "@@ -315,6 +316,8 @@ task:\n   << : *MAIN_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 2\n+    memory: 8G",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100172227",
      "id" : 1100172227,
      "in_reply_to_id" : 1099836276,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585Bk0vD",
      "original_commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "original_line" : 320,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : ".cirrus.yml",
      "position" : 102,
      "pull_request_review_id" : 1289226147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100172227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T13:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100172227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100201839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100201839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Ok. I mean that the NDK can be bumped regardless. I don't expect that anyone is building for android, and if they did, it should be fine to just require the latest Ubuntu LTS, which is Jammy, independent of cmake changes.\r\n\r\nSee #27063.",
      "commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "created_at" : "2023-02-08T14:18:07Z",
      "diff_hunk" : "@@ -315,6 +316,8 @@ task:\n   << : *MAIN_TEMPLATE\n   container:\n     image: ubuntu:focal\n+    cpu: 2\n+    memory: 8G",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#discussion_r1100201839",
      "id" : 1100201839,
      "in_reply_to_id" : 1099836276,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585Bk79v",
      "original_commit_id" : "b82d2f1c57070944ea9103d9ae7794d4530c13c9",
      "original_line" : 320,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : ".cirrus.yml",
      "position" : 102,
      "pull_request_review_id" : 1289273394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25797",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100201839/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T14:18:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100201839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.50](https://github.com/hebasto/bitcoin/commits/pr25797.50):\r\n\r\n- rebased on the current [cmake-staging](https://github.com/hebasto/bitcoin/tree/cmake-staging) branch (first 19 out of a total of 74 commits)\r\n- some CI regressions need to be fixed\r\n\r\nGuix builds:\r\n```\r\n1fb441c811d3f919aeed3f356173a222221c6fcfe0986e45666c04f24c2cb197  guix-build-53c369f5a10b/output/aarch64-linux-gnu/SHA256SUMS.part\r\n83ef29ad6f9878b54288e11004801ce005a9af862fd7c6d11a4b3cce3bf6f52a  guix-build-53c369f5a10b/output/aarch64-linux-gnu/bitcoin-53c369f5a10b-aarch64-linux-gnu-debug.tar.gz\r\nee1358b96b59ca348455fa97ef2159c9c5dc60a2e83262521af765178ae5f4a4  guix-build-53c369f5a10b/output/aarch64-linux-gnu/bitcoin-53c369f5a10b-aarch64-linux-gnu.tar.gz\r\n37a5c0f2d034acf7edff55f05e45d8c94bbcc16a1fd45a780d498b52ed1cefa5  guix-build-53c369f5a10b/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n691b4be50a51c0b70626ee46b74f1727941f3a2b75779f40a5ede1e8e4a3f94e  guix-build-53c369f5a10b/output/arm-linux-gnueabihf/bitcoin-53c369f5a10b-arm-linux-gnueabihf-debug.tar.gz\r\n159c0b91d164a5f4efb15c12e08edd817a53340d218970b025bbe96452d92353  guix-build-53c369f5a10b/output/arm-linux-gnueabihf/bitcoin-53c369f5a10b-arm-linux-gnueabihf.tar.gz\r\ne515da9fa33370cad6d79912ce27c099e462d5c49bb1a0497e249a87913bd63a  guix-build-53c369f5a10b/output/arm64-apple-darwin/SHA256SUMS.part\r\nc5c1ba82b8548510ca7d16c5a6a15792609ba9aec99c3126d3499ef5d915e372  guix-build-53c369f5a10b/output/arm64-apple-darwin/bitcoin-53c369f5a10b-arm64-apple-darwin-unsigned.dmg\r\n55269fcaed6ad641c58edf2021eba54b82162c7e295811a7ea02376180bbcfd7  guix-build-53c369f5a10b/output/arm64-apple-darwin/bitcoin-53c369f5a10b-arm64-apple-darwin-unsigned.tar.gz\r\n48fa57916464242fc04b7cd8a1ea84c43e01b082e43c91e73f167a0d9a2b3b5e  guix-build-53c369f5a10b/output/arm64-apple-darwin/bitcoin-53c369f5a10b-arm64-apple-darwin.tar.gz\r\nea4e12e81706efac9f44e989bfead204261612d36deac5f9d153a04375012251  guix-build-53c369f5a10b/output/dist-archive/bitcoin-53c369f5a10b.tar.gz\r\n1d2a92d9df9a0068954c6a602f0de9ee21e8aad427477aad308ccf5a073ab3c5  guix-build-53c369f5a10b/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n61f285f16e9b0037ae209da5cbb5151cf450066be55bfa124c82f9803267dc7d  guix-build-53c369f5a10b/output/powerpc64-linux-gnu/bitcoin-53c369f5a10b-powerpc64-linux-gnu-debug.tar.gz\r\ne7bba264c1701b58db163159f310c94da6c341e8b2edab3d68bdd5b1274229dc  guix-build-53c369f5a10b/output/powerpc64-linux-gnu/bitcoin-53c369f5a10b-powerpc64-linux-gnu.tar.gz\r\ne485bbf2703cd4f9b24aa78d4d4c67b743db419252a17e82b8996c7ec40d3648  guix-build-53c369f5a10b/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n9efbb4d3c7c57136eed38ca69c43729ee4ddfb043c63bcbc07b6d44bdde4cdfb  guix-build-53c369f5a10b/output/powerpc64le-linux-gnu/bitcoin-53c369f5a10b-powerpc64le-linux-gnu-debug.tar.gz\r\n34e422d150d88f988a82cd397518ad744ccda217ee4864d21bf4552be976e9a7  guix-build-53c369f5a10b/output/powerpc64le-linux-gnu/bitcoin-53c369f5a10b-powerpc64le-linux-gnu.tar.gz\r\n3965d444b6c0d73d80d6e1959e6f8250d6308e48b8606f3d1a6e5b9d68a35871  guix-build-53c369f5a10b/output/riscv64-linux-gnu/SHA256SUMS.part\r\n02f6bf3e3cf7bef864b6beaf51ed9d434fbebba7794cfdcd52ed7272598d7668  guix-build-53c369f5a10b/output/riscv64-linux-gnu/bitcoin-53c369f5a10b-riscv64-linux-gnu-debug.tar.gz\r\n43d664eeadd297b14bd0c9a3ff7b3e3333c92c23d1079135fd980b8992670125  guix-build-53c369f5a10b/output/riscv64-linux-gnu/bitcoin-53c369f5a10b-riscv64-linux-gnu.tar.gz\r\n941448c54e1513f47f1f26e1298c9f26ac6caafe7f5daebe724e779ff92e22a8  guix-build-53c369f5a10b/output/x86_64-apple-darwin/SHA256SUMS.part\r\n108684d4c7b1348fdb71301cd0a23a516ccb9277421afa912ca8cd4119a6c8fc  guix-build-53c369f5a10b/output/x86_64-apple-darwin/bitcoin-53c369f5a10b-x86_64-apple-darwin-unsigned.dmg\r\nabc084e314f689a53c1e17c9344e6da68d9b7049ff9d2861c43b6b27afeb0ae0  guix-build-53c369f5a10b/output/x86_64-apple-darwin/bitcoin-53c369f5a10b-x86_64-apple-darwin-unsigned.tar.gz\r\ne5e1ed73a2f49b2ab0097d63ff63f9ad90946f6de2b19fc167e328062fb2131c  guix-build-53c369f5a10b/output/x86_64-apple-darwin/bitcoin-53c369f5a10b-x86_64-apple-darwin.tar.gz\r\n10399e8116d3f3b12c3cb39f51d59f1ea608be7179bc89c8a0ca7c308e4bbc4f  guix-build-53c369f5a10b/output/x86_64-linux-gnu/SHA256SUMS.part\r\n80101112c02778c5363451b84fbf38d7a831ffd464ea8c77fe601355baee7e34  guix-build-53c369f5a10b/output/x86_64-linux-gnu/bitcoin-53c369f5a10b-x86_64-linux-gnu-debug.tar.gz\r\nea76edaed0ea3fb8ce6488674db357cb9e2ea6ebabb0286f88b362771697a509  guix-build-53c369f5a10b/output/x86_64-linux-gnu/bitcoin-53c369f5a10b-x86_64-linux-gnu.tar.gz\r\ne4cb7d579dbecf3044621a9f99b1037527d879e6b603916b8d7f9a2adb8b5f7d  guix-build-53c369f5a10b/output/x86_64-w64-mingw32/SHA256SUMS.part\r\ne3855ecad6f2ba0e145026cca9a2f85480c6f1b6b1d8e969d48174ed6e47260b  guix-build-53c369f5a10b/output/x86_64-w64-mingw32/bitcoin-53c369f5a10b-win64-debug.zip\r\n5e53d7d71481698b0816ca2a48cc72d712bdfc04dc027f669acf2bb96200a2d2  guix-build-53c369f5a10b/output/x86_64-w64-mingw32/bitcoin-53c369f5a10b-win64-setup-unsigned.exe\r\nadd543ac6b319e8c2c389408f7cad9aa63356aa03364150b88768bfa41b1f5bd  guix-build-53c369f5a10b/output/x86_64-w64-mingw32/bitcoin-53c369f5a10b-win64-unsigned.tar.gz\r\ne66df3311aa6246089c4aa3778f65ffc5536a7f0e9a5d421bade5ee20a57b110  guix-build-53c369f5a10b/output/x86_64-w64-mingw32/bitcoin-53c369f5a10b-win64.zip\r\n```",
      "created_at" : "2023-04-02T16:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1493388491",
      "id" : 1493388491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZA0zL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493388491/reactions"
      },
      "updated_at" : "2023-04-02T19:09:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493388491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">    * some CI regressions need to be fixed\r\n\r\nThe \"previous releases\" CI task has been fixed.",
      "created_at" : "2023-04-02T20:42:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1493435688",
      "id" : 1493435688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZBAUo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493435688/reactions"
      },
      "updated_at" : "2023-04-02T20:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493435688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">    * some CI regressions need to be fixed\r\n\r\nThe \"fuzzer\" and \"multiprocess\" CI tasks have been fixed.",
      "created_at" : "2023-04-03T00:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1493484482",
      "id" : 1493484482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZBMPC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493484482/reactions"
      },
      "updated_at" : "2023-04-03T00:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493484482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> * some CI regressions need to be fixed\r\n\r\nThe \"tidy\" and \"TSan\" CI tasks have been fixed.\r\n\r\n",
      "created_at" : "2023-04-03T12:40:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1494253155",
      "id" : 1494253155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZEH5j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494253155/reactions"
      },
      "updated_at" : "2023-04-03T12:40:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494253155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased due to the conflict with bitcoin/bitcoin#27254.\r\n\r\nAll CI tasks are :green_circle: \r\n\r\nGuix builds:\r\n```\r\naa34dfbb1956fa04b56efa3cbbc798d75f62141787ea01e28796c3c7fc1743d4  guix-build-7f09e7118a59/output/aarch64-linux-gnu/SHA256SUMS.part\r\na7ceb4b814eb41558c5b8dcbe57e443505dac96181b9727fac235197ed729ef8  guix-build-7f09e7118a59/output/aarch64-linux-gnu/bitcoin-7f09e7118a59-aarch64-linux-gnu-debug.tar.gz\r\nb336955cf07c04c69cc03040fab63a5c862c7eb984ae56ddbec9b45345f1af99  guix-build-7f09e7118a59/output/aarch64-linux-gnu/bitcoin-7f09e7118a59-aarch64-linux-gnu.tar.gz\r\n88a7c5b582888fd1cbb2f782f7db66461b922ac0f8dc2cf16883907531182f9c  guix-build-7f09e7118a59/output/arm-linux-gnueabihf/SHA256SUMS.part\r\neb1a39583367b0d6d7e4dd85442c6a1e892cd3cc15f362b4472837487aaebb6f  guix-build-7f09e7118a59/output/arm-linux-gnueabihf/bitcoin-7f09e7118a59-arm-linux-gnueabihf-debug.tar.gz\r\n98deb1f76780144c4c6a52ed1c96b5f682a70e3ca18218e138e7c87334499deb  guix-build-7f09e7118a59/output/arm-linux-gnueabihf/bitcoin-7f09e7118a59-arm-linux-gnueabihf.tar.gz\r\n9e3a0de508a3072eab71357245e6419daa4a93ba909680751b36b4f5f235d3d1  guix-build-7f09e7118a59/output/arm64-apple-darwin/SHA256SUMS.part\r\nef98cd91204b5a43cd8cfd89e5d1634c05cc8c6af1fc03dbabd4cff5ebf83a36  guix-build-7f09e7118a59/output/arm64-apple-darwin/bitcoin-7f09e7118a59-arm64-apple-darwin-unsigned.dmg\r\n7dd49be111f58c2b3f016ef041b49733b491c83a99e9d454d717e6ed7e61e769  guix-build-7f09e7118a59/output/arm64-apple-darwin/bitcoin-7f09e7118a59-arm64-apple-darwin-unsigned.tar.gz\r\n5c6c24cc472f38b59c736b897d8660a008fe904cc8ebf69a07ec417b937a2e66  guix-build-7f09e7118a59/output/arm64-apple-darwin/bitcoin-7f09e7118a59-arm64-apple-darwin.tar.gz\r\nb7051454f59839dacc7b6eec12d55157e40671e3d853f696845cc69e3537f5aa  guix-build-7f09e7118a59/output/dist-archive/bitcoin-7f09e7118a59.tar.gz\r\ndab842b8fd5204d03968687a5d2f3d9a9ca123110ef337d717ffe834f8dadea8  guix-build-7f09e7118a59/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n9c298807bd893f89fa1eab5bf006377f9a3d5ad9f14bcd339bc4b35fb8437133  guix-build-7f09e7118a59/output/powerpc64-linux-gnu/bitcoin-7f09e7118a59-powerpc64-linux-gnu-debug.tar.gz\r\n32c93b1e3abe40639c36e7481c7110f46cfb5b93f1209b36143392edaa2c3f01  guix-build-7f09e7118a59/output/powerpc64-linux-gnu/bitcoin-7f09e7118a59-powerpc64-linux-gnu.tar.gz\r\n1457f1ace9b0a2a9da4fa63e9786aa82d266bc86ce17d56d05a80bf3ab2ba7c0  guix-build-7f09e7118a59/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n29dd12bd6e3513468a5100bd57b0b181b673b1ef14c7c6a075d838a3cc1a10bc  guix-build-7f09e7118a59/output/powerpc64le-linux-gnu/bitcoin-7f09e7118a59-powerpc64le-linux-gnu-debug.tar.gz\r\nc4a3c945adcd1ed73c8361baf5e769f01913c4fea1443c111798a49cf70c3fa7  guix-build-7f09e7118a59/output/powerpc64le-linux-gnu/bitcoin-7f09e7118a59-powerpc64le-linux-gnu.tar.gz\r\nc216f19d31006cff568c20c4de94f62ba77447dc563e6667c855ffa171d67027  guix-build-7f09e7118a59/output/riscv64-linux-gnu/SHA256SUMS.part\r\n8384074d1f33fb6ab148866c75448cb5ff642018df9f4ebeb20d912796a5921f  guix-build-7f09e7118a59/output/riscv64-linux-gnu/bitcoin-7f09e7118a59-riscv64-linux-gnu-debug.tar.gz\r\ned97103a771f54a0653d71bbf40c67be01dc6847f0241cf416c36cb78736ed89  guix-build-7f09e7118a59/output/riscv64-linux-gnu/bitcoin-7f09e7118a59-riscv64-linux-gnu.tar.gz\r\nfced51a5449bb20afd87bb806666c1977a232eec437b4c05db2d399943dedd32  guix-build-7f09e7118a59/output/x86_64-apple-darwin/SHA256SUMS.part\r\n5e78bec524968a10bac4378bf97ee33f07083ae02758d3d9f0af193865e557cd  guix-build-7f09e7118a59/output/x86_64-apple-darwin/bitcoin-7f09e7118a59-x86_64-apple-darwin-unsigned.dmg\r\n673139580ea513f008864248f6cba44f55f1ae789424f09908763ca83f40e59e  guix-build-7f09e7118a59/output/x86_64-apple-darwin/bitcoin-7f09e7118a59-x86_64-apple-darwin-unsigned.tar.gz\r\n55b0f0936fa831f71624d700f30337bd2b8f5a3a73556754c6ce56177ecd1ab3  guix-build-7f09e7118a59/output/x86_64-apple-darwin/bitcoin-7f09e7118a59-x86_64-apple-darwin.tar.gz\r\nf32c51dcdb164bfc5d3d02a4d9fd1351381bc64783a570859c9c1f63e8c175e8  guix-build-7f09e7118a59/output/x86_64-linux-gnu/SHA256SUMS.part\r\n0874a7622869a03af961426b01ca67ab8f4eec3cc5343a27b87dab5ab5fc74bc  guix-build-7f09e7118a59/output/x86_64-linux-gnu/bitcoin-7f09e7118a59-x86_64-linux-gnu-debug.tar.gz\r\n5cff7e564f44cc5b8440ddd89052e2f432b7bb8a577e1ae4aa6a2e107b2ffc40  guix-build-7f09e7118a59/output/x86_64-linux-gnu/bitcoin-7f09e7118a59-x86_64-linux-gnu.tar.gz\r\ne91a91a1d64be61b71e19c5c2964d90430a94add57228207f5cda7fe940abde3  guix-build-7f09e7118a59/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n3a758ceb7c00474fe261b8d8b49521b6f484c5ac5ba5015a101aba3fc83b3d5d  guix-build-7f09e7118a59/output/x86_64-w64-mingw32/bitcoin-7f09e7118a59-win64-debug.zip\r\n15e081d5b5c7432737d99a655ef0202af5bc5b0ec6a5b782f2329088ccea5b55  guix-build-7f09e7118a59/output/x86_64-w64-mingw32/bitcoin-7f09e7118a59-win64-setup-unsigned.exe\r\n9551ebb61378f009b0216cdb00a04940445dc73d62e002f825ed1d0cd1736c05  guix-build-7f09e7118a59/output/x86_64-w64-mingw32/bitcoin-7f09e7118a59-win64-unsigned.tar.gz\r\n2383972fd9fae4f5804b64ff09b975a6ed766550a10a114ac5010572e6670775  guix-build-7f09e7118a59/output/x86_64-w64-mingw32/bitcoin-7f09e7118a59-win64.zip\r\n```",
      "created_at" : "2023-04-03T21:15:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1494989972",
      "id" : 1494989972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZG7yU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 2,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494989972/reactions"
      },
      "updated_at" : "2023-04-03T21:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494989972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-04-05T14:28:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1497586199",
      "id" : 1497586199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585ZQ1oX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497586199/reactions"
      },
      "updated_at" : "2023-04-05T14:28:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497586199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated up to [pr25797.59](https://github.com/hebasto/bitcoin/commits/pr25797.59):\r\n\r\nRebased on the current [cmake-staging](https://github.com/hebasto/bitcoin/tree/cmake-staging) branch (first 25 out of a total of 75 commits).\r\n\r\nAll CI tasks are :green_circle: \r\n\r\nGuix builds:\r\n```\r\n25a62ef8d51c07799b2fe3f687f2340b9f5cf2523079ed12cdc1bbac07b38188  guix-build-33b2db8e6f7c/output/aarch64-linux-gnu/SHA256SUMS.part\r\naf60d9a558ed74492cdf2697d54c3a25aa236a29721269a0eaa35a37997724bd  guix-build-33b2db8e6f7c/output/aarch64-linux-gnu/bitcoin-33b2db8e6f7c-aarch64-linux-gnu-debug.tar.gz\r\naf96e13399e83c52abd7ef662083dfaa0a65eefe604d9b5120455c7850ce0171  guix-build-33b2db8e6f7c/output/aarch64-linux-gnu/bitcoin-33b2db8e6f7c-aarch64-linux-gnu.tar.gz\r\n550961782fadeb4b3cfa90c8afc2d5817a22c81d807d7dc60a3d96de0d363b4b  guix-build-33b2db8e6f7c/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n98784733b5778b053f4c6c4e39b53a67fe55915ea3f15ffbac124c3e7bcedce9  guix-build-33b2db8e6f7c/output/arm-linux-gnueabihf/bitcoin-33b2db8e6f7c-arm-linux-gnueabihf-debug.tar.gz\r\nfa96724fc0a73024977de9becdae9cfe5dd7075a7559efa383b8fc5464890021  guix-build-33b2db8e6f7c/output/arm-linux-gnueabihf/bitcoin-33b2db8e6f7c-arm-linux-gnueabihf.tar.gz\r\ncba90bbd8f6c58fab88a114802cf6c0daa65a9a22ad37e43137e8ecfcb7a1226  guix-build-33b2db8e6f7c/output/arm64-apple-darwin/SHA256SUMS.part\r\nd16ee4ff870a8274294efa19ad0a8c95ef494cf70cd30e9eac319d03be76af83  guix-build-33b2db8e6f7c/output/arm64-apple-darwin/bitcoin-33b2db8e6f7c-arm64-apple-darwin-unsigned.dmg\r\n242156b3435c6fe772455ad5863aa15e9d902f5c1db0bff59554673553ad4713  guix-build-33b2db8e6f7c/output/arm64-apple-darwin/bitcoin-33b2db8e6f7c-arm64-apple-darwin-unsigned.tar.gz\r\n00545ea7be77a9282c748118252706818a83f778b0efac8bb402dba5ee5b0d54  guix-build-33b2db8e6f7c/output/arm64-apple-darwin/bitcoin-33b2db8e6f7c-arm64-apple-darwin.tar.gz\r\n43e58fe001eff44cc80f4aef4c3d2bfb075a0eb5e0d1e86111d3bf7e149136a3  guix-build-33b2db8e6f7c/output/dist-archive/bitcoin-33b2db8e6f7c.tar.gz\r\n27fda6b50dbcf0a50785e5e4a93239396938f5fb82a0540e8d568dfa474ad1df  guix-build-33b2db8e6f7c/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n92b414b6da2e99d118b6a596eb1731c6473e2292673ef0911478edfdef7bd5ce  guix-build-33b2db8e6f7c/output/powerpc64-linux-gnu/bitcoin-33b2db8e6f7c-powerpc64-linux-gnu-debug.tar.gz\r\n6144b1df8dbfac1fc9b6041b26d25ff5082896e9a0e7d1c2ee8e167ba3eb3c7a  guix-build-33b2db8e6f7c/output/powerpc64-linux-gnu/bitcoin-33b2db8e6f7c-powerpc64-linux-gnu.tar.gz\r\n5428d3b39dd1c308545e6f95215afb85e3bec265008a6e69a505cfe832fb26aa  guix-build-33b2db8e6f7c/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n11222fa40517d7933f662941a7bb0799f640fb0b8a0b3ad8517889f3afa59d9d  guix-build-33b2db8e6f7c/output/powerpc64le-linux-gnu/bitcoin-33b2db8e6f7c-powerpc64le-linux-gnu-debug.tar.gz\r\n07c8ffbe396f7c8c5e40eea1bee435446c65cee51e064d81e03b9cf06d5594db  guix-build-33b2db8e6f7c/output/powerpc64le-linux-gnu/bitcoin-33b2db8e6f7c-powerpc64le-linux-gnu.tar.gz\r\na82208ec2ff6d137ac0d2fd9b836db76b6fd572ce97e4d5102a90f7aee4f6fef  guix-build-33b2db8e6f7c/output/riscv64-linux-gnu/SHA256SUMS.part\r\n59e2de9f1008433cab8ffc9f9e8f9e8528feb2a548096d8012893ef52eb89dc7  guix-build-33b2db8e6f7c/output/riscv64-linux-gnu/bitcoin-33b2db8e6f7c-riscv64-linux-gnu-debug.tar.gz\r\nacc0b76896d01a360a67a338f595dba7bf279e24d94f7ad78030170644a64618  guix-build-33b2db8e6f7c/output/riscv64-linux-gnu/bitcoin-33b2db8e6f7c-riscv64-linux-gnu.tar.gz\r\ne8b5505e3229834a0479f68614ee28ae6a2540c41824e2a5296af31eeddfe7f4  guix-build-33b2db8e6f7c/output/x86_64-apple-darwin/SHA256SUMS.part\r\nc3ead10696d15bd8851350da81d8430fb138fc36ee506b417c171053efed93b6  guix-build-33b2db8e6f7c/output/x86_64-apple-darwin/bitcoin-33b2db8e6f7c-x86_64-apple-darwin-unsigned.dmg\r\ne09ac2d4539a6a4335aa245cfa9f1870704b6b9f1aa858bd4e59b33b4f258a20  guix-build-33b2db8e6f7c/output/x86_64-apple-darwin/bitcoin-33b2db8e6f7c-x86_64-apple-darwin-unsigned.tar.gz\r\nc121c99424c428505d97e1183959b5aee08d163a0e5747300dad2442f54f37e1  guix-build-33b2db8e6f7c/output/x86_64-apple-darwin/bitcoin-33b2db8e6f7c-x86_64-apple-darwin.tar.gz\r\n9f877c75b2eca7d874027fe8c5cdb029e47ac9f8e66a24488c8a3e0a7456085d  guix-build-33b2db8e6f7c/output/x86_64-linux-gnu/SHA256SUMS.part\r\n8e1d83b7e467316504aae34ac7e37107b429911105f02f609b00cad23dd36434  guix-build-33b2db8e6f7c/output/x86_64-linux-gnu/bitcoin-33b2db8e6f7c-x86_64-linux-gnu-debug.tar.gz\r\n47a49e55a5d50ad0f554c11fcc8fd8ac81b748ead33500a2e8be6faf04332fad  guix-build-33b2db8e6f7c/output/x86_64-linux-gnu/bitcoin-33b2db8e6f7c-x86_64-linux-gnu.tar.gz\r\n410893fdc7d830f773bcec95f5c57b25e5d0c2d4f5c7643cba666ec2371ac0ee  guix-build-33b2db8e6f7c/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n32885ed9d6a538a4afb82bacfb427a53f1feb5433c17315a0da425e383b916ce  guix-build-33b2db8e6f7c/output/x86_64-w64-mingw32/bitcoin-33b2db8e6f7c-win64-debug.zip\r\n1a39afa1449f80938500f5e47649ccc81d5193b1f7cbb643ca95a15c8d42679e  guix-build-33b2db8e6f7c/output/x86_64-w64-mingw32/bitcoin-33b2db8e6f7c-win64-setup-unsigned.exe\r\n0b43db6e26fbefe93597c9cc33091e63464a7b252ebc38658b681cb3ff098e6a  guix-build-33b2db8e6f7c/output/x86_64-w64-mingw32/bitcoin-33b2db8e6f7c-win64-unsigned.tar.gz\r\n296486c2cbf00dc658a78e90d4ea7584ca1c1d1dd6f38a4f6c161573b7274e27  guix-build-33b2db8e6f7c/output/x86_64-w64-mingw32/bitcoin-33b2db8e6f7c-win64.zip\r\n```",
      "created_at" : "2023-04-19T21:20:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1515397369",
      "id" : 1515397369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585aUyD5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1515397369/reactions"
      },
      "updated_at" : "2023-04-19T21:20:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1515397369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-04-28T10:45:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1527373309",
      "id" : 1527373309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585bCd39",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527373309/reactions"
      },
      "updated_at" : "2023-04-28T10:45:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527373309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated on top of the recent https://github.com/hebasto/bitcoin/pull/15.\r\n\r\nCI [build](https://cirrus-ci.com/build/5395835672854528) is :green_circle: \r\n\r\nGuix builds:\r\n```\r\n040eb5ee40cf57dcfe34caf8598cd856ac8585565c74386905feccbeb1868830  guix-build-7cc0a620fd74/output/aarch64-linux-gnu/SHA256SUMS.part\r\nbb542a379b8c8ff54c645b4260ddf26265efcd0fc204fa09ce5eaf201f30ddb7  guix-build-7cc0a620fd74/output/aarch64-linux-gnu/bitcoin-7cc0a620fd74-aarch64-linux-gnu-debug.tar.gz\r\nc8a307a90343c8553ff98e17209989debfc39d8b458aacdb15300f570fd17931  guix-build-7cc0a620fd74/output/aarch64-linux-gnu/bitcoin-7cc0a620fd74-aarch64-linux-gnu.tar.gz\r\nb1f7db338801cd31356a893950db8829f17cf12ad3274494c365c33a5db60ac9  guix-build-7cc0a620fd74/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n0575f8bd2323cfd44cf5cd700356e43f2b64b61c83145a5478ff5e5abb49e3e8  guix-build-7cc0a620fd74/output/arm-linux-gnueabihf/bitcoin-7cc0a620fd74-arm-linux-gnueabihf-debug.tar.gz\r\n6b32b77446c84623e119b6dcee72370f6d8d27036746c747638222b3daad6af0  guix-build-7cc0a620fd74/output/arm-linux-gnueabihf/bitcoin-7cc0a620fd74-arm-linux-gnueabihf.tar.gz\r\ndacf80f256dd007ec7cced824fb4318631c29d70357d0d5ea87141a65901cc6b  guix-build-7cc0a620fd74/output/arm64-apple-darwin/SHA256SUMS.part\r\n58ca86d8aa8a7d56a166e98aefb00001c57bdee0f55468b2b35f72831e47f709  guix-build-7cc0a620fd74/output/arm64-apple-darwin/bitcoin-7cc0a620fd74-arm64-apple-darwin-unsigned.dmg\r\n723c29160150146d2c2c1f3bba60f15eb576b074bc867d94477b9336261c8266  guix-build-7cc0a620fd74/output/arm64-apple-darwin/bitcoin-7cc0a620fd74-arm64-apple-darwin-unsigned.tar.gz\r\n34f64a9f13c7747182e991936b216d3f0df189006c989c8070e976263d72ab23  guix-build-7cc0a620fd74/output/arm64-apple-darwin/bitcoin-7cc0a620fd74-arm64-apple-darwin.tar.gz\r\n1da871c7bd2f98a87d8994b0b4fef1b728027174eaf96d937dbf27b3695cdc56  guix-build-7cc0a620fd74/output/dist-archive/bitcoin-7cc0a620fd74.tar.gz\r\n119d35fb81da37358022351eaa2637935557450891f6474d8351620310872c0e  guix-build-7cc0a620fd74/output/powerpc64-linux-gnu/SHA256SUMS.part\r\na3fe00b000a6e5d14304cb696f0aac111b0c7c14a3e0fbc6e8e130fb27d898cc  guix-build-7cc0a620fd74/output/powerpc64-linux-gnu/bitcoin-7cc0a620fd74-powerpc64-linux-gnu-debug.tar.gz\r\n8256b626c095bac572f072b5715218eaa2526219a379931eea68692e968092d4  guix-build-7cc0a620fd74/output/powerpc64-linux-gnu/bitcoin-7cc0a620fd74-powerpc64-linux-gnu.tar.gz\r\n87a57ad92fad64d5a90113f906798e24350ef17fc72f18b92d554f0ee337f3d1  guix-build-7cc0a620fd74/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\nf26c439e669779ba12e8a6b2c328ed5519abd8edf7b84160e2c9c13849bdfa46  guix-build-7cc0a620fd74/output/powerpc64le-linux-gnu/bitcoin-7cc0a620fd74-powerpc64le-linux-gnu-debug.tar.gz\r\nf930566537e99cdf7e56a3d06d5fab287950d27a80d08cd419828044fff0283a  guix-build-7cc0a620fd74/output/powerpc64le-linux-gnu/bitcoin-7cc0a620fd74-powerpc64le-linux-gnu.tar.gz\r\n1654e6fc1ada5b652d058f7d16c30251a72e7ee887771d0412a064160879e791  guix-build-7cc0a620fd74/output/riscv64-linux-gnu/SHA256SUMS.part\r\n55235d1f1e49e3e1ec315ca0ada603a07e230e07a9cf71ad4ab3d26c6a001945  guix-build-7cc0a620fd74/output/riscv64-linux-gnu/bitcoin-7cc0a620fd74-riscv64-linux-gnu-debug.tar.gz\r\nc017f5c635a2ebfa4891a76496508458c99ecee6950130893f11b3bed5f80d81  guix-build-7cc0a620fd74/output/riscv64-linux-gnu/bitcoin-7cc0a620fd74-riscv64-linux-gnu.tar.gz\r\n73c6373293a3ed759c7ce918ed704167306b8c598f41eda4fd725e7aceead10c  guix-build-7cc0a620fd74/output/x86_64-apple-darwin/SHA256SUMS.part\r\nce76699a80c6698f4f1b6434a05cd83aa6ad3101eab999b40d06372c7fb43afe  guix-build-7cc0a620fd74/output/x86_64-apple-darwin/bitcoin-7cc0a620fd74-x86_64-apple-darwin-unsigned.dmg\r\na87e4f2bb39f5a69b2577906a68303505be907f9996e2008929f621d48635047  guix-build-7cc0a620fd74/output/x86_64-apple-darwin/bitcoin-7cc0a620fd74-x86_64-apple-darwin-unsigned.tar.gz\r\nf4e740ef03cf030c2da98b9c5806262de886a61566e05324c3eb51e8ea05d09f  guix-build-7cc0a620fd74/output/x86_64-apple-darwin/bitcoin-7cc0a620fd74-x86_64-apple-darwin.tar.gz\r\n6cda85c3e8b3948c9356dc37e9c0b3c65f42a17368fb82d6b30d3af8a2c87348  guix-build-7cc0a620fd74/output/x86_64-linux-gnu/SHA256SUMS.part\r\na0d167ba9c00d16c89b1ac5d536197376f81dfd82296319753a508d628d2c998  guix-build-7cc0a620fd74/output/x86_64-linux-gnu/bitcoin-7cc0a620fd74-x86_64-linux-gnu-debug.tar.gz\r\n445cadcc3d1b96b00a4a26111cd23f32cebe13a579bcd8dfb8e030a1f6bcd91f  guix-build-7cc0a620fd74/output/x86_64-linux-gnu/bitcoin-7cc0a620fd74-x86_64-linux-gnu.tar.gz\r\n6188e51d7e6f5bdaec57ce1e89d1e4f5e8c7a6c3ac7e067bc1780735ef514461  guix-build-7cc0a620fd74/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n3ce66119f6600ead136d0331507577960e3eb921025beade89f18415c77d65d7  guix-build-7cc0a620fd74/output/x86_64-w64-mingw32/bitcoin-7cc0a620fd74-win64-debug.zip\r\ncb1df2bc4ab8f5ea738a2e189ea6b2acafcd25d7efca98cfc40321b807b16c08  guix-build-7cc0a620fd74/output/x86_64-w64-mingw32/bitcoin-7cc0a620fd74-win64-setup-unsigned.exe\r\n70569b6faadb4a3a8331f1e58aa4f6866281d1dddc262de97273a176b736db44  guix-build-7cc0a620fd74/output/x86_64-w64-mingw32/bitcoin-7cc0a620fd74-win64-unsigned.tar.gz\r\ne2aeb256daf04bb97dca3be0c73143371385002b5dda064a0dab059a4e3365db  guix-build-7cc0a620fd74/output/x86_64-w64-mingw32/bitcoin-7cc0a620fd74-win64.zip\r\n```",
      "created_at" : "2023-05-03T19:32:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1533601248",
      "id" : 1533601248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585baOXg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1533601248/reactions"
      },
      "updated_at" : "2023-05-03T19:32:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1533601248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of the bitcoin/bitcoin#27554.\r\n\r\nThe CI build is :green_circle: ",
      "created_at" : "2023-05-05T18:50:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1536643935",
      "id" : 1536643935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585bl1Nf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1536643935/reactions"
      },
      "updated_at" : "2023-05-05T18:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1536643935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-10T11:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25797#issuecomment-1542001092",
      "id" : 1542001092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25797",
      "node_id" : "IC_kwDOABII585b6RHE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1542001092/reactions"
      },
      "updated_at" : "2023-05-10T11:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1542001092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
