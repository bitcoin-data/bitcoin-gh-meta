[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25756](https://github.com/bitcoin/bitcoin/pull/25756) (rest: Remove support for a number of `-deprecatedrest` options by stickies-v)\n* [#25755](https://github.com/bitcoin/bitcoin/pull/25755) (rest: Use from_blockhash and txdetails query parameters by stickies-v)\n* [#25754](https://github.com/bitcoin/bitcoin/pull/25754) (rest: Extend HTTPRequest interface to support querying path (parameters) by stickies-v)\n* [#25753](https://github.com/bitcoin/bitcoin/pull/25753) (rest: Move format string from path-like parameter to query parameter by stickies-v)\n* [#25412](https://github.com/bitcoin/bitcoin/pull/25412) (rest: add `/deploymentinfo` endpoint by brunoerg)\n* [#21422](https://github.com/bitcoin/bitcoin/pull/21422) (Add feerate histogram to getmempoolinfo by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-07-31T19:45:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1200487616",
      "id" : 1200487616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585HjfzA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1200487616/reactions"
      },
      "updated_at" : "2022-07-31T19:45:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1200487616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Alternatively, you could also only register /rest/mempool/ and inspect the str_uri_part? I think this would allow for slightly more code reduction.\r\n\r\nNice, I had thought about it, but I think `str_uri_part` wouldn't get me the whole URI but only (in this case) the format, like: '.json'. Am I missing something?",
      "created_at" : "2022-08-02T21:01:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203210096",
      "id" : 1203210096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585Ht4dw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203210096/reactions"
      },
      "updated_at" : "2022-08-02T21:01:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203210096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`http_request_cb` [passes](https://github.com/bitcoin/bitcoin/blob/de3c46c93818c6e4000175bcdbf7dd332f54768d/src/httpserver.cpp#L262) everything after the endpoint prefix to `str_uri_part`. If you register the endpoints with prefix `/rest/mempool/<info|content>`, then indeed only `.json` would get passed to `str_uri_part`. If however you just register `/rest/mempool/`, then everything after that i.e. `<info|content>.json` would get passed. (plug: #25754 is trying to clean up this interface)\r\n\r\nI don't think the current approach of registering both separately is unreasonable, so this is just a suggestion if you think that implementation makes sense - intuitively it would be my first approach.",
      "created_at" : "2022-08-02T21:22:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203227318",
      "id" : 1203227318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585Ht8q2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203227318/reactions"
      },
      "updated_at" : "2022-08-02T21:22:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203227318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice, @stickies-v. Force-pushed addressing your suggestion.\r\n\r\nIt is clearer having only `/rest/mempool/`, and then check the `str_uri_part`.",
      "created_at" : "2022-08-03T00:36:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1203351864",
      "id" : 1203351864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585HubE4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203351864/reactions"
      },
      "updated_at" : "2022-08-03T00:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203351864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936520429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936520429"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd use `param` instead of `str_uri_part` directly because it already has the format string and any query parameters stripped from it, that makes it a bit more resilient.",
      "commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "created_at" : "2022-08-03T10:51:54Z",
      "diff_hunk" : "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936520429",
      "id" : 936520429,
      "line" : 607,
      "node_id" : "PRRC_kwDOABII58430irt",
      "original_commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "original_line" : 607,
      "original_position" : 44,
      "original_start_line" : 605,
      "path" : "src/rest.cpp",
      "position" : 44,
      "pull_request_review_id" : 1060092401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936520429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 605,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-03T11:04:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936520429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936523979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936523979"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ideally this check is done earlier in the code, if an invalid path is provided we shouldn't even be getting the mempool etc first. It also makes bad calls more clear, if you e.g. call `GET /rest/mempool/doesntexist` you'd get \"output format not found (available: json)\" as response, whereas \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\" would be more helpful.",
      "commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "created_at" : "2022-08-03T10:56:16Z",
      "diff_hunk" : "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        } else {\n+            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format\");\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936523979",
      "id" : 936523979,
      "line" : 611,
      "node_id" : "PRRC_kwDOABII58430jjL",
      "original_commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "original_line" : 611,
      "original_position" : 48,
      "original_start_line" : 609,
      "path" : "src/rest.cpp",
      "position" : 48,
      "pull_request_review_id" : 1060092401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936523979/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 609,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-03T11:04:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936523979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936852664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936852664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice, I agree.",
      "commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "created_at" : "2022-08-03T16:07:45Z",
      "diff_hunk" : "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        } else {\n+            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format\");\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r936852664",
      "id" : 936852664,
      "in_reply_to_id" : 936523979,
      "line" : 611,
      "node_id" : "PRRC_kwDOABII58431zy4",
      "original_commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "original_line" : 611,
      "original_position" : 48,
      "original_start_line" : 609,
      "path" : "src/rest.cpp",
      "position" : 48,
      "pull_request_review_id" : 1060588558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936852664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 609,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-03T16:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936852664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937000609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937000609"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "created_at" : "2022-08-03T18:20:40Z",
      "diff_hunk" : "@@ -590,45 +590,28 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n     std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n-\n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n-    }\n-}\n-\n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (str_uri_part == \"contents.json\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else if (str_uri_part == \"info.json\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937000609",
      "id" : 937000609,
      "in_reply_to_id" : 936520429,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58432X6h",
      "original_commit_id" : "001b45fc5e944176188c18986662f76ee40f25c9",
      "original_line" : 607,
      "original_position" : 44,
      "original_start_line" : 605,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 1060812872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937000609/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-03T18:20:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937000609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, @stickies-v for your review! Force-pushed addressing the latest suggestions.",
      "created_at" : "2022-08-03T18:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1204322228",
      "id" : 1204322228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585HyH-0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1204322228/reactions"
      },
      "updated_at" : "2022-08-03T18:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1204322228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937008396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937008396"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: We already have 3 other instances of this where we don't prefix with \"Error:\", so maybe best to keep it consistent.\r\n```suggestion\r\n        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\r\n```",
      "commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "created_at" : "2022-08-03T18:30:10Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937008396",
      "id" : 937008396,
      "line" : 601,
      "node_id" : "PRRC_kwDOABII58432Z0M",
      "original_commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "original_line" : 601,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 29,
      "pull_request_review_id" : 1060823662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937008396/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T18:47:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937008396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937035930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937035930"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting, there are some places where \"Error:\" seems to be used. Gonna check it.\r\n\r\n\r\n\r\n",
      "commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "created_at" : "2022-08-03T19:04:03Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937035930",
      "id" : 937035930,
      "in_reply_to_id" : 937008396,
      "line" : 601,
      "node_id" : "PRRC_kwDOABII58432gia",
      "original_commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "original_line" : 601,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 29,
      "pull_request_review_id" : 1060861885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937035930/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T19:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937035930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937037452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937037452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah there is, just not for the \"Invalid URI format\" ones. ",
      "commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "created_at" : "2022-08-03T19:06:05Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r937037452",
      "id" : 937037452,
      "in_reply_to_id" : 937008396,
      "line" : 601,
      "node_id" : "PRRC_kwDOABII58432g6M",
      "original_commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "original_line" : 601,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 29,
      "pull_request_review_id" : 1060864129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937037452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T19:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/937037452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938808129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938808129"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done! ",
      "commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "created_at" : "2022-08-05T13:23:05Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: invalid URI format. Expected /rest/mempool/<info|contents>.json\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938808129",
      "id" : 938808129,
      "in_reply_to_id" : 937008396,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58439RNB",
      "original_commit_id" : "da0c612c3d69164da19332167c38bfcd1f9777a8",
      "original_line" : 601,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 1063353381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938808129/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-05T13:23:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938808129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed removing the `Error:` prefix. Thanks, @stickies-v.",
      "created_at" : "2022-08-05T13:29:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#issuecomment-1206460839",
      "id" : 1206460839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25760",
      "node_id" : "IC_kwDOABII585H6SGn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206460839/reactions"
      },
      "updated_at" : "2022-08-05T13:29:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206460839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938833287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833287"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe reduce temporaries and reassignments here.\r\n\r\n```diff\r\n     case RESTResponseFormat::JSON: {\r\n-        std::string str_json;\r\n-        if (param == \"contents\") {\r\n-            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\r\n-        } else {\r\n-            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\r\n-        }\r\n-\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, str_json);\r\n+        req->WriteReply(HTTP_OK, (param == \"contents\" ? MempoolToJSON(*mempool, /*verbose=*/true) : MempoolInfoToJSON(*mempool)).write() + \"\\n\");\r\n         return true;\r\n```\r\n",
      "commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "created_at" : "2022-08-05T13:47:16Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\n     }\n-}\n \n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (param == \"contents\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938833287",
      "id" : 938833287,
      "line" : 614,
      "node_id" : "PRRC_kwDOABII58439XWH",
      "original_commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_line" : 614,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 49,
      "pull_request_review_id" : 1063388021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-05T13:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938833348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const RESTResponseFormat& rf = ParseDataFormat(param, str_uri_part);\r\n```",
      "commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "created_at" : "2022-08-05T13:47:20Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938833348",
      "id" : 938833348,
      "line" : 599,
      "node_id" : "PRRC_kwDOABII58439XXE",
      "original_commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_line" : 599,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 27,
      "pull_request_review_id" : 1063388021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-05T13:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938833348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938852332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938852332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It could make sense to avoid `std::string` copies in `WriteReply`, but maybe for a follow-up?\r\n\r\nedit: I guess that's not possible, as libevent only accepts a (read-only) span, not the memory directly",
      "commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "created_at" : "2022-08-05T14:06:50Z",
      "diff_hunk" : "@@ -590,45 +590,31 @@ static bool rest_chaininfo(const std::any& context, HTTPRequest* req, const std:\n     }\n }\n \n-static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool(const std::any& context, HTTPRequest* req, const std::string& str_uri_part)\n {\n     if (!CheckWarmup(req))\n         return false;\n-    const CTxMemPool* mempool = GetMemPool(context, req);\n-    if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n-\n-    switch (rf) {\n-    case RESTResponseFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n \n-        std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n-        req->WriteHeader(\"Content-Type\", \"application/json\");\n-        req->WriteReply(HTTP_OK, strJSON);\n-        return true;\n-    }\n-    default: {\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n-    }\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, str_uri_part);\n+    if (param != \"contents\" && param != \"info\") {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/mempool/<info|contents>.json\");\n     }\n-}\n \n-static bool rest_mempool_contents(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n-{\n-    if (!CheckWarmup(req)) return false;\n     const CTxMemPool* mempool = GetMemPool(context, req);\n     if (!mempool) return false;\n-    std::string param;\n-    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n \n     switch (rf) {\n     case RESTResponseFormat::JSON: {\n-        UniValue mempoolObject = MempoolToJSON(*mempool, true);\n+        std::string str_json;\n+        if (param == \"contents\") {\n+            str_json = MempoolToJSON(*mempool, true).write() + \"\\n\";\n+        } else {\n+            str_json = MempoolInfoToJSON(*mempool).write() + \"\\n\";\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25760#discussion_r938852332",
      "id" : 938852332,
      "in_reply_to_id" : 938833287,
      "line" : 614,
      "node_id" : "PRRC_kwDOABII58439b_s",
      "original_commit_id" : "acbea66589100fe6ef726f4b2a92ec26132ef17b",
      "original_line" : 614,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rest.cpp",
      "position" : 49,
      "pull_request_review_id" : 1063415730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25760",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938852332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-05T15:36:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938852332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
