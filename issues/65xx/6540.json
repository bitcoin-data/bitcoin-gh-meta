{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "(Largely reproduced from https://github.com/bitcoin/bitcoin/pull/6171#issuecomment-126485236 et seq.)\n\nI'm seeing occasional deadlocks in `test_bitcoin` as recently as `v0.11.0`, but only with debugging symbols removed (e.g., via `eu-strip .../bin/test_bitcoin`). They may also happen with a binary whose debugging symbols are intact, but I haven't observed that (yet).\n\nHere's what I found:\n\n```\n% eu-strip -f .../bin/test_bitcoin.debug .../bin/test_bitcoin\n% # Run test_bitcoin in another shell and wait for it to hang\n% gdb -s .../bin/test_bitcoin.debug .../bin/test_bitcoin <PID>\n...\nReading symbols from .../bin/test_bitcoin...Reading symbols from .../bin/test_bitcoin.debug...done.\ndone.\nAttaching to program: .../bin/test_bitcoin, process <PID>\n...\n(gdb) bt\n#0  0x00007fa0334e308f in pthread_cond_wait@@GLIBC_2.3.2 () from /lib/x86_64-linux-gnu/libpthread.so.0\n#1  0x00007fa0359f8a9b in boost::condition_variable::wait (this=0x7fa036fde358, m=...) at /usr/include/boost/thread/pthread/condition_variable.hpp:73\n#2  0x00007fa034e455ac in boost::thread::join_noexcept (this=this@entry=0x7fa036fd9180) at libs/thread/src/pthread/thread.cpp:312\n#3  0x00007fa0359f93e6 in join (this=0x7fa036fd9180) at /usr/include/boost/thread/detail/thread.hpp:756\n#4  boost::thread_group::join_all (this=this@entry=0x7ffe608fbf90) at /usr/include/boost/thread/detail/thread_group.hpp:118\n#5  0x00007fa0359f6c7e in scheduler_tests::manythreads::test_method (this=this@entry=0x7ffe608fcc87) at test/scheduler_tests.cpp:109\n#6  0x00007fa0359f70ce in scheduler_tests::manythreads_invoker () at test/scheduler_tests.cpp:43\n#7  0x00007fa035970bf7 in invoke<void (*)()> (this=<optimized out>, f=<optimized out>) at /usr/include/boost/test/utils/callback.hpp:56\n#8  boost::unit_test::ut_detail::callback0_impl_t<boost::unit_test::ut_detail::unused, void (*)()>::invoke (this=<optimized out>)\n    at /usr/include/boost/test/utils/callback.hpp:89\n#9  0x00007fa0349ed8f1 in operator() (this=<optimized out>) at ./boost/test/utils/callback.hpp:118\n#10 operator() (this=<optimized out>) at ./boost/test/impl/unit_test_monitor.ipp:41\n#11 invoke<boost::unit_test::(anonymous namespace)::zero_return_wrapper_t<boost::unit_test::callback0<> > > (this=<optimized out>, f=...)\n    at ./boost/test/utils/callback.hpp:42\n#12 boost::unit_test::ut_detail::callback0_impl_t<int, boost::unit_test::(anonymous namespace)::zero_return_wrapper_t<boost::unit_test::callback0<boost::unit_test::ut_detail::unused> > >::invoke (this=<optimized out>) at ./boost/test/utils/callback.hpp:89\n#13 0x00007fa0349c46de in operator() (this=0x7ffe608fd7d0) at ./boost/test/utils/callback.hpp:118\n#14 do_invoke<boost::scoped_ptr<boost::detail::translate_exception_base>, boost::unit_test::callback0<int> > (F=..., tr=...)\n    at ./boost/test/impl/execution_monitor.ipp:281\n#15 boost::execution_monitor::catch_signals (\n    this=this@entry=0x7fa034c2d9a0 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\n    at ./boost/test/impl/execution_monitor.ipp:885\n#16 0x00007fa0349c4f33 in boost::execution_monitor::execute (\n    this=this@entry=0x7fa034c2d9a0 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\n    at ./boost/test/impl/execution_monitor.ipp:1211\n#17 0x00007fa0349eda05 in boost::unit_test::unit_test_monitor_t::execute_and_translate (\n    this=0x7fa034c2d9a0 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, tc=...)\n    at ./boost/test/impl/unit_test_monitor.ipp:69\n#18 0x00007fa0349d44af in boost::unit_test::framework_impl::visit (this=0x7fa034c2d8c0 <boost::unit_test::(anonymous namespace)::s_frk_impl()::the_inst>,\n    tc=...) at ./boost/test/impl/framework.ipp:156\n#19 0x00007fa034a08a33 in boost::unit_test::traverse_test_tree (suite=..., V=...) at ./boost/test/impl/unit_test_suite.ipp:207\n#20 0x00007fa034a08a33 in boost::unit_test::traverse_test_tree (suite=..., V=...) at ./boost/test/impl/unit_test_suite.ipp:207\n#21 0x00007fa0349cf9fa in boost::unit_test::framework::run (id=1, id@entry=4294967295, continue_test=continue_test@entry=true)\n    at ./boost/test/impl/framework.ipp:442\n#22 0x00007fa0349eb697 in boost::unit_test::unit_test_main (init_func=<optimized out>, argc=<optimized out>, argv=<optimized out>)\n    at ./boost/test/impl/unit_test_main.ipp:185\n#23 0x00007fa03314fb45 in __libc_start_main () from /lib/x86_64-linux-gnu/libc.so.6\n#24 0x00007fa035957b7e in _start ()\n(gdb) generate-core-file\nwarning: Memory read failed for corefile section, 8192 bytes at 0x7ffe6097a000.\nSaved corefile core.<PID>\n...\n```\n\nIt looks like it's hanging on a join, but I don't know why. See [`test/scheduler_tests.cpp#L109`](https://github.com/bitcoin/bitcoin/blob/v0.11.0/src/test/scheduler_tests.cpp#L109). A core file (dumped from `gdb`) is [here](https://s3.amazonaws.com/uploads.hipchat.com/126832/920830/QbNkgspoixU8viK/core.%3CPID%3E.gz), if it's worth anything.\n",
   "closed_at" : "2016-05-10T10:08:28Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 27,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6540/comments",
   "created_at" : "2015-08-10T17:20:59Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6540/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/6540",
   "id" : 100120880,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6540/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUxMDAxMjA4ODA=",
   "number" : 6540,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "scheduler_tests (currently disabled) occasionally deadlocks",
   "updated_at" : "2016-05-10T10:08:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6540",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/222581?v=4",
      "events_url" : "https://api.github.com/users/posita/events{/privacy}",
      "followers_url" : "https://api.github.com/users/posita/followers",
      "following_url" : "https://api.github.com/users/posita/following{/other_user}",
      "gists_url" : "https://api.github.com/users/posita/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/posita",
      "id" : 222581,
      "login" : "posita",
      "node_id" : "MDQ6VXNlcjIyMjU4MQ==",
      "organizations_url" : "https://api.github.com/users/posita/orgs",
      "received_events_url" : "https://api.github.com/users/posita/received_events",
      "repos_url" : "https://api.github.com/users/posita/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/posita/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/posita/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/posita"
   }
}
