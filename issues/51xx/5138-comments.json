[
   {
      "body" : "Possible patch that fixes the problem for me, not sure if it will cause other problems:\r\n```\r\ndiff --git a/src/main.cpp b/src/main.cpp\r\nindex 0cfe90b..fc17c4b 100644\r\n--- a/src/main.cpp\r\n+++ b/src/main.cpp\r\n@@ -4419,7 +4419,14 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\r\n         // Start block sync\r\n         if (pindexBestHeader == NULL)\r\n             pindexBestHeader = chainActive.Tip();\r\n-        bool fFetch = !pto->fInbound || (pindexBestHeader && (state.pindexLastCommonBlock ? state.pindexLastCommonBlock->nHeight : 0) + 144 > pindexBestHeader->nHeight);\r\n+        bool fFetch = !pto->fInbound;\r\n+        if (!fFetch && pindexBestHeader)\r\n+        {\r\n+            if (state.pindexLastCommonBlock)\r\n+                fFetch = (state.pindexLastCommonBlock->nHeight + 144 > pindexBestHeader->nHeight);\r\n+            else\r\n+                fFetch = true;\r\n+        }\r\n         if (!state.fSyncStarted && !pto->fClient && fFetch && !fImporting && !fReindex) {\r\n             // Only actively request headers from a single peer, unless we're close to today.\r\n             if (nSyncStarted == 0 || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {\r\n```\r\n",
      "created_at" : "2014-10-24T19:31:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-60437794",
      "id" : 60437794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-10-24T19:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60437794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "That patch will just make you download from all peers at startup (until you have something). That won't hurt, but it's not really the intended effect. What it's trying to do is only fetch from non-outbound if we're synced up to less than 144 blocks (a day) from the best known headers synced already.\r\n\r\nThe problem is really just the lack of outbound connections. If there are no such connections, we should probably just fetch from all peers.",
      "created_at" : "2014-10-24T19:39:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-60438608",
      "id" : 60438608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-10-24T19:39:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60438608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Relatedly, the \"chainActive.Tip()->GetBlockTime() > GetAdjustedTime() - Params().TargetSpacing() * 20\" condition causes block data to not be fetched (immediately) upon receiving the block announcement when the current Tip is older by more than 3.33 hours (Params().TargetSpacing() * 20). Such a time gap is not unlikely with fully-synced nodes in regtest mode, but also not inconceivable in any.\r\n\r\nThis causes immediate node divergence, as headers-first sync never gets going either. The patch corrects this, but I wonder whether the conditional logic needs revisiting too.\r\n",
      "created_at" : "2014-10-25T03:29:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-60470183",
      "id" : 60470183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-10-25T03:29:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60470183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8286077?v=3",
         "events_url" : "https://api.github.com/users/21E14/events{/privacy}",
         "followers_url" : "https://api.github.com/users/21E14/followers",
         "following_url" : "https://api.github.com/users/21E14/following{/other_user}",
         "gists_url" : "https://api.github.com/users/21E14/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/21E14",
         "id" : 8286077,
         "login" : "21E14",
         "organizations_url" : "https://api.github.com/users/21E14/orgs",
         "received_events_url" : "https://api.github.com/users/21E14/received_events",
         "repos_url" : "https://api.github.com/users/21E14/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/21E14/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/21E14/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/21E14"
      }
   },
   {
      "body" : "@sipa : is there a higher-level description somewhere of how peers figure out what chains they have in common? I'm having trouble following the logic in main.cpp.\r\n\r\nAlso, I get the feeling there might have been some premature optimization here; in particular, just looking at the data structures I expected that CNodeState->pindexLastCommonBlock should be non-null not too long after a peer has completed the version/verack sequence, but I guess that is not true? Seems to me upon connection peers should always tell each other what their best blocks are, even if they are at the same height.",
      "created_at" : "2014-10-27T15:47:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-60615378",
      "id" : 60615378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-10-27T15:47:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60615378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "I ran into this again today writing a regression test.  Here is a distilled test case that will fail:\r\n\r\n```\r\n#!/usr/bin/env python\r\n# Copyright (c) 2014 The Bitcoin Core developers\r\n# Distributed under the MIT software license, see the accompanying\r\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\r\n#\r\n# Test proper initiation of block sync between nodes\r\n#\r\n\r\nfrom test_framework import BitcoinTestFramework\r\nfrom bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\r\nfrom util import *\r\nimport os\r\nimport shutil\r\n\r\nclass BlockSyncTest(BitcoinTestFramework):\r\n\r\n    def setup_network(self):\r\n        # Nodes will all start with same chain, but\r\n        # are disconnected\r\n        self.nodes = start_nodes(4, self.options.tmpdir)\r\n\r\n    def run_test(self):\r\n        # Have node0 mine two blocks, disconnected from other nodes\r\n        blocks = self.nodes[0].setgenerate(True, 2)\r\n\r\n        # Now connect 0 to 1, then 2 to 0:\r\n        connect_nodes(self.nodes[0], 1)\r\n        connect_nodes(self.nodes[2], 0)\r\n\r\n        # Wait a few seconds for inv/getdata/block messages\r\n        time.sleep(3)\r\n\r\n        # Everybody should have the same idea of best block\r\n        assert_equal(self.nodes[1].getbestblockhash(), blocks[-1])\r\n        assert_equal(self.nodes[2].getbestblockhash(), blocks[-1])\r\n\r\n        # if node3 mines three then connects, everybody should sync with\r\n        # it's chain:\r\n        blocks = self.nodes[3].setgenerate(True, 3)\r\n        connect_nodes(self.nodes[3], 0)\r\n        time.sleep(3)\r\n        bestblocks = [ node.getbestblockhash() for node in self.nodes ]\r\n        assert_equal(bestblocks, [blocks[-1]]*len(self.nodes) )\r\n\r\nif __name__ == '__main__':\r\n    BlockSyncTest().main()\r\n```\r\n\r\nReversing the connection direction in the last ```connect_nodes(self.nodes[3], 0)``` and the test succeeds.\r\n\r\n",
      "created_at" : "2014-11-19T21:41:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-63719026",
      "id" : 63719026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-11-19T21:41:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63719026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "I went through the logic of this.   When the connection direction is reversed, node3 is an outbound connection of node0 and is therefore a \"nice\" peer (fPreferredDownload is true).  But in the connection direction of your test case, node3 is inbound and so its not preferred and since node0 has another preferredDownload peer (it made an outbound connection to node1) it does not feel the need to sync headers with node3.  See `main.cpp:SendMessages()` at line 4520.",
      "created_at" : "2014-12-01T23:08:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-65153247",
      "id" : 65153247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2014-12-01T23:08:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65153247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "~~Should be fixed by #5157~~ (turns out to be not the case)",
      "created_at" : "2015-01-08T13:26:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-69178342",
      "id" : 69178342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2015-01-08T15:08:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/69178342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "As discussed on irc, @gavinandresen's test in his Nov 14 comment still fails.  The problem is that if an inbound peer is multiple blocks ahead of you and you have other outbound peers, the download logic tries to download the intermediate blocks from one of the outbound peers.  If the outbound peers haven't announced the block, then you'll never request them.  \r\n\r\nThat's true even if an inbound peer continued to announce blocks that continue to build on its chain, you wouldn't ever advance your tip to catch up, because you'll be held up by not requesting the intermediate blocks, since you have no one to request them of.  ",
      "created_at" : "2015-01-08T15:32:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-69195318",
      "id" : 69195318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2015-01-08T15:32:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/69195318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Should be fixed by #5662",
      "created_at" : "2015-06-01T08:53:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138#issuecomment-107371429",
      "id" : 107371429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
      "updated_at" : "2015-06-01T08:53:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107371429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
