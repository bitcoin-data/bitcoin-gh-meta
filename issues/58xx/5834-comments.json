[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r25519267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/25519267"
         }
      },
      "body" : "please use `strCommand.c_str()` (if you need zero-terminated) or `strCommand.data()` (if no zero terminator is necessary) i.s.o `&strCommand[0]`",
      "commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "created_at" : "2015-02-27T16:43:44Z",
      "diff_hunk" : "@@ -682,7 +682,36 @@ boost::filesystem::path GetTempPath() {\n \n void runCommand(std::string strCommand)\n {\n-    int nErr = ::system(strCommand.c_str());\n+    int nErr = 0;\n+#ifdef WIN32\n+    // If we're in Windows, try using CreateProcess first.\n+    ULONG nExitCode;\n+    STARTUPINFO info={sizeof(info)};\n+    ZeroMemory(&info, sizeof(STARTUPINFO));\n+    info.cb = sizeof(STARTUPINFO);\n+    info.dwFlags = STARTF_USESHOWWINDOW;\n+    info.wShowWindow = SW_HIDE;\n+    PROCESS_INFORMATION processInfo;\n+    ZeroMemory(&processInfo, sizeof(PROCESS_INFORMATION));\n+    if (CreateProcess(NULL, &strCommand[0], NULL, NULL, false, 0, NULL, NULL, &info, &processInfo))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r25519267",
      "id" : 25519267,
      "original_commit_id" : "e1b25744c766fdea2980ec1fbe50e77dc48e086f",
      "original_position" : 16,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834",
      "updated_at" : "2015-03-14T01:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/25519267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r25519762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/25519762"
         }
      },
      "body" : "Are you sure that this fallback is needed? I'm not sure what the implementation of mingw's system() does internally, but I'd assume it also makes use of CreateProcess or another win32 call.",
      "commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "created_at" : "2015-02-27T16:50:12Z",
      "diff_hunk" : "@@ -682,7 +682,36 @@ boost::filesystem::path GetTempPath() {\n \n void runCommand(std::string strCommand)\n {\n-    int nErr = ::system(strCommand.c_str());\n+    int nErr = 0;\n+#ifdef WIN32\n+    // If we're in Windows, try using CreateProcess first.\n+    ULONG nExitCode;\n+    STARTUPINFO info={sizeof(info)};\n+    ZeroMemory(&info, sizeof(STARTUPINFO));\n+    info.cb = sizeof(STARTUPINFO);\n+    info.dwFlags = STARTF_USESHOWWINDOW;\n+    info.wShowWindow = SW_HIDE;\n+    PROCESS_INFORMATION processInfo;\n+    ZeroMemory(&processInfo, sizeof(PROCESS_INFORMATION));\n+    if (CreateProcess(NULL, &strCommand[0], NULL, NULL, false, 0, NULL, NULL, &info, &processInfo))\n+    {\n+        // CreateProcess succeeded so wait, check exit code and clean up.\n+        WaitForSingleObject(processInfo.hProcess, INFINITE);\n+        if(!GetExitCodeProcess(processInfo.hProcess, &nExitCode))\n+          nExitCode = 1;\n+        CloseHandle(processInfo.hThread);\n+        CloseHandle(processInfo.hProcess);\n+        nErr = (int)nExitCode; // Had to pass a ULONG to GetExitCodeProcess().\n+    }\n+    else\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r25519762",
      "id" : 25519762,
      "original_commit_id" : "e1b25744c766fdea2980ec1fbe50e77dc48e086f",
      "original_position" : 27,
      "path" : "src/util.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834",
      "updated_at" : "2015-03-14T01:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/25519762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Laanwj thanks for the feedback. Not quite sure why I did that &strCommand[0], I'll fix and reroll today. Regarding the second item, I believe system() handles more types of files, e.g. .bat files and document opening. I could be wrong about this. I will do some experimenting with both calls under MinGW and also possibly reroll that today.",
      "created_at" : "2015-02-27T17:58:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-76440859",
      "id" : 76440859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-02-27T17:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76440859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "Perhaps you can call ShellExecute, instead of CreateProcess?",
      "created_at" : "2015-03-01T10:58:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-76592012",
      "id" : 76592012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-01T10:58:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76592012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Yes, at least bat files would need to be supported. Document opening isn't that terribly important here, if one really wants to do that they could provide the program to launch it with in the command line.",
      "created_at" : "2015-03-09T12:04:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-77841651",
      "id" : 77841651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-09T12:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/77841651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Looks like a good start.  Needs more testing.\r\n",
      "created_at" : "2015-03-11T13:58:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-78267442",
      "id" : 78267442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-11T13:58:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/78267442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Okay finally had some time to research this a little better. Thanks everyone here for the suggestions.\r\n\r\nI am not quite sure how to proceed, so here is what I have discovered, perhaps everyone here can make suggestions about the best route forward.\r\n\r\n[Here's the gist of the program I used for testing](https://gist.github.com/dfletcher/e7ee74166ce9bd6bdd58). Edit: oh, right. don't forget to build using mingw with -mwindows flag.\r\n\r\nEdit2: Whoops my bad, Sleep takes milliseconds arg not seconds. Gist and table below updated, self exe is not always async. Thought that seemed funky. And really the \"s\" of the whole CreateProcess() column is because my code waits. We could change that behavior and be always async there.\r\n\r\n|                          | CreateProcess() | ShellExecute() | ::system() |\r\n| -------------------- |:--------------------:|:------------------:|:------------:|\r\n| **.bat script**      | n s                     | n a                   | p s           |\r\n| **self exe**         | n s                     | n a                   | p s           |\r\n| **pythonw.exe**  | n s                     | n a                   | p s            |\r\n| **python.exe**    | n s                     | n a                   | p s            |\r\n<sup>**Key**: p = popup, n = no popup, s = synchronous, a = asynchronous</sup>\r\n\r\nEach method has own strengths and weaknesses.\r\n\r\n### CreateProcess()\r\n\r\n**Pros**\r\n* No popups.\r\n* Straightforward command implementation, pass whole command string to windows.\r\n\r\n**Cons**\r\n* As laanwj pointed out it is using &strCommand[0]. Reason is that CreateProcessW might change that data, so we can't pass a const. \"[The Unicode version of this function, CreateProcessW, can modify the contents of this string](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425%28v=vs.85%29.aspx)\". Why this affects the non \"W\" version I have no idea. Is the fix to copy the string? Or to just cast c_str() to (char*)? Unsure.\r\n\r\n### ShellExecute()\r\n\r\n**Pros**\r\n* Very consistent results while using SW_HIDE in the sixth argument of ShellExecute().\r\n* (Possible pro) users can change the SW_HIDE to SW_SHOW to change this behavior in a local build.\r\n\r\n**Cons**\r\n* Command must be parsed. The gist above only breaks on first whitespace, this would need to be smarter (accept a quoted string).\r\n\r\n### ::system()\r\n**Pros**\r\n* Simple.\r\n\r\n**Cons**\r\n* Popups everywhere!\r\n\r\nThoughts and opinions? Thanks again for the feedback!\r\n",
      "created_at" : "2015-03-12T21:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-78624721",
      "id" : 78624721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-12T21:51:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/78624721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "Seems to me that CreateProcess comes out best. Especially if it can work without fallback to ::system.\r\n\r\n> Why this affects the non \"W\" version I have no idea. Is the fix to copy the string? Or to just cast c_str() to (char*)? Unsure.\r\n\r\nJust make a copy. Strings are not allowed to be mutated in-place in C++, but you could pass a begin_ptr(x) of a std::vector instead.\r\n",
      "created_at" : "2015-03-13T09:15:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-78881170",
      "id" : 78881170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T09:15:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/78881170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Ok updated. Nice call on begin_ptr() laanwj that makes it nice and clean. Since we removed the fallback wasn't quite sure what to do with nErr in that case, so just set it to -1 if CreateProcess() failed.",
      "created_at" : "2015-03-13T17:58:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79192055",
      "id" : 79192055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T17:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79192055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "Does the walletnotify hook need to be stress tested here? Sometimes there are quite a few created simultaneously.",
      "created_at" : "2015-03-13T18:03:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79197127",
      "id" : 79197127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T18:03:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79197127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/101238?v=3",
         "events_url" : "https://api.github.com/users/kanzure/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanzure/followers",
         "following_url" : "https://api.github.com/users/kanzure/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanzure/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanzure",
         "id" : 101238,
         "login" : "kanzure",
         "organizations_url" : "https://api.github.com/users/kanzure/orgs",
         "received_events_url" : "https://api.github.com/users/kanzure/received_events",
         "repos_url" : "https://api.github.com/users/kanzure/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanzure/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanzure"
      }
   },
   {
      "body" : "@kanzure well it's anecdotal but I did just test 10 days of blocknotify with that last commit. Worked great, barely a blip on the CPU radar (admittedly fast 4 core modern machine). My test script this time is just a .bat piping the block hash to a file. It added 145 blocks to the output file really quickly and was not noticeably different from running it without the script. Would walletnotify be appreciably different from that? What's a good way to test it I wonder? Guess I could trash my blockchain and let it reload with a walletnotify script. Suggestions on what to put in it?\r\n\r\nEdit: oh hum I probably don't have enough tx in my testnet wallet to really \"stress\" test anything. Other ideas for approaches to this?\r\n\r\nEdit2: watchonly addresses I guess, could just add tons of them. Is this worthwhile?\r\n\r\nEdit3: Well I'm not really sure how to measure the results of this, so I'm leaning towards not testing walletnotify explicitly for performance. Intuition tells me this is a more efficient solution than ::system() just for the raw fact that Windows doesn't have to setup/teardown a window for each launch.",
      "created_at" : "2015-03-13T18:17:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79211125",
      "id" : 79211125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T18:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79211125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "I'm confused why Travis failed here. Is that something in my fork? Did I screw up the merge from bitcoin/master?",
      "created_at" : "2015-03-13T19:41:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79295907",
      "id" : 79295907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T19:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79295907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "Thanks a lot to jonasschnelli who helped me a ton in IRC figuring out how to work with github (this is my first pull request!)",
      "created_at" : "2015-03-13T20:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79349890",
      "id" : 79349890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-13T20:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79349890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "@laanwj It seems that the fallback was necessary for the case of calling a terminal command like the \"echo\" in [this test case](https://github.com/bitcoin/bitcoin/blob/master/src/test/alert_tests.cpp#L159) (which is what fails w commit  01087f7 above).\r\n\r\nI can imagine one other solution to this which I just tested with my gist ([updated](https://gist.github.com/dfletcher/e7ee74166ce9bd6bdd58)) locally. We can prepend `C:\\Windows\\System32\\cmd.exe /C ` to the user command and force it to execute in a shell. Of course, the code would need to be better than just hard coding C:\\Windows.\r\n\r\ntl;dr: The two choices I can think of is either use the fallback solution or call an interpreter by hand.\r\n\r\nOther ideas?\r\n\r\nEdit: oh I'd just like to add, using the interpreter actually works very nicely. No popup and it pipes to file as expected. My vote on how to implement this is heading in that direction.\r\n\r\nEdit2: just [updated the gist](https://gist.github.com/dfletcher/e7ee74166ce9bd6bdd58) to use GetSystemDirectory(). Could work. Edit3: gist makes a vector. Edit4: it now does that in a nicer way using a stringstream. Edit5: Travis seems okay with this solution :+1: ",
      "created_at" : "2015-03-13T23:34:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-79531640",
      "id" : 79531640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-14T02:02:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/79531640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "Still no opinions? Well it's easy for me to change this code to go either route, fallback or call cmd.exe. I would really like to have some solution for this even if it still pops up the window in some cases (the fallback solution).",
      "created_at" : "2015-03-16T18:28:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-81855436",
      "id" : 81855436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-16T18:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/81855436",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "@dfletcher It's IMO not necessary to support providing a terminal command directly. As I said, what needs to be supported are .exe's and .bat's. The rest can be done from there.\r\n\r\nAs said, if remotely possible there should only be one path and no chain of fallbacks. If it fails, it fails. And simple code is preferable to complex code.",
      "created_at" : "2015-03-19T12:25:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-83536158",
      "id" : 83536158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-19T12:26:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83536158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj there is a test in the system which is testing using `echo`. This fails if we do not provide a fallback or use the cmd.exe interpreter directly. See the Travis failure above + two successes afterwards, failure uses no fallback or interpreter, first success is just putting the fallback back, second success is with an interpreter.\r\n\r\nSo that leaves (1) Use fallback. (2) Use an interpreter. (3) Remove [this test that uses \"echo\"](https://github.com/bitcoin/bitcoin/blob/master/src/test/alert_tests.cpp#L159) which is not an exe it's an interpreter command.\r\n\r\nYou seem to be suggesting #3 which doesn't sound good to me. Changing the test conditions because of a difference in the API calls we're making seems backwards to me.",
      "created_at" : "2015-03-19T17:31:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-83687057",
      "id" : 83687057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-19T17:31:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83687057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "body" : "-alertnotify is a bitcoind, not Bitcoin-Qt, feature-- I wouldn't expect people running Bitcoin-Qt to run with -alertnotify, they're notified of alerts through the GUI.\r\n\r\nSo I think I'm NACK on this pull request in general for solving a problem that I don't think needs solving (command window popping up if you -alertnotify with Bitcoin-Qt).\r\n",
      "created_at" : "2015-03-19T17:38:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-83690019",
      "id" : 83690019,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-19T17:38:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83690019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "@gavinandresen It solves -blocknotify and -walletnotify popping up a window also. -alertnotify is incidental.\r\n\r\nEdit hum maybe I'm not being super clear about this. All three of those functions use the same utility function runCommand(). The fact that that test is checking -alertnotify is not exactly important. What is important is that I believe whoever wrote that test wants to make sure that the command processor can handle a command like \"echo %s >> poo.txt\" which is a perfectly reasonable implementation of any of the notifies, stuff it in a file and read it back later in some other process.",
      "created_at" : "2015-03-19T17:40:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-83690522",
      "id" : 83690522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-03-19T17:53:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83690522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/189317?v=3",
         "events_url" : "https://api.github.com/users/dfletcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dfletcher/followers",
         "following_url" : "https://api.github.com/users/dfletcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dfletcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dfletcher",
         "id" : 189317,
         "login" : "dfletcher",
         "organizations_url" : "https://api.github.com/users/dfletcher/orgs",
         "received_events_url" : "https://api.github.com/users/dfletcher/received_events",
         "repos_url" : "https://api.github.com/users/dfletcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dfletcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dfletcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dfletcher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28410976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28410976"
         }
      },
      "body" : "It is not allowed to use end()+1: end() is the end of the data. There is guarantee that there is anything after it, let alone a \\0 byte. Only `c_str` guarantees a zero-terminated string.\r\n\r\nThis is becoming quite ugly, but I guess what you could do is (this gets rid of the stringstream too)\r\n```\r\nstd::string strTempCmd = std::string(system32) + \"\\\\cmd.exe /C \" + strCommand;\r\nconst char *sTempCmd = ssCommand.c_str();\r\nstd::vector<char> vecCommand(sTempCmd, sTempCmd + strlen(sTempCmd) + 1);\r\n```",
      "commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "created_at" : "2015-04-15T11:15:05Z",
      "diff_hunk" : "@@ -697,7 +697,43 @@ boost::filesystem::path GetTempPath() {\n \n void runCommand(std::string strCommand)\n {\n-    int nErr = ::system(strCommand.c_str());\n+    int nErr = 0;\n+#ifdef WIN32\n+    // If we're in Windows, use CreateProcess.\n+    ULONG nExitCode;\n+    STARTUPINFO info={sizeof(info)};\n+    ZeroMemory(&info, sizeof(STARTUPINFO));\n+    info.cb = sizeof(STARTUPINFO);\n+    info.dwFlags = STARTF_USESHOWWINDOW;\n+    info.wShowWindow = SW_HIDE;\n+    PROCESS_INFORMATION processInfo;\n+    ZeroMemory(&processInfo, sizeof(PROCESS_INFORMATION));\n+    char system32[256];\n+    if (GetSystemDirectory(system32, 255)) {\n+        std::stringstream ssCommand;\n+        ssCommand << system32 << \"\\\\cmd.exe /C \" << strCommand;\n+        std::string strTempCmd = ssCommand.str();\n+        std::vector<char> vecCommand(strTempCmd.begin(), strTempCmd.end() + 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28410976",
      "id" : 28410976,
      "original_commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "original_position" : 21,
      "path" : "src/util.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834",
      "updated_at" : "2015-04-15T11:17:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28410976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28411002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28411002"
         }
      },
      "body" : "Code style: we have `{` on the same line as the if/else.",
      "commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "created_at" : "2015-04-15T11:15:47Z",
      "diff_hunk" : "@@ -697,7 +697,43 @@ boost::filesystem::path GetTempPath() {\n \n void runCommand(std::string strCommand)\n {\n-    int nErr = ::system(strCommand.c_str());\n+    int nErr = 0;\n+#ifdef WIN32\n+    // If we're in Windows, use CreateProcess.\n+    ULONG nExitCode;\n+    STARTUPINFO info={sizeof(info)};\n+    ZeroMemory(&info, sizeof(STARTUPINFO));\n+    info.cb = sizeof(STARTUPINFO);\n+    info.dwFlags = STARTF_USESHOWWINDOW;\n+    info.wShowWindow = SW_HIDE;\n+    PROCESS_INFORMATION processInfo;\n+    ZeroMemory(&processInfo, sizeof(PROCESS_INFORMATION));\n+    char system32[256];\n+    if (GetSystemDirectory(system32, 255)) {\n+        std::stringstream ssCommand;\n+        ssCommand << system32 << \"\\\\cmd.exe /C \" << strCommand;\n+        std::string strTempCmd = ssCommand.str();\n+        std::vector<char> vecCommand(strTempCmd.begin(), strTempCmd.end() + 1);\n+        if (CreateProcess(NULL, begin_ptr(vecCommand), NULL, NULL, false, 0, NULL, NULL, &info, &processInfo))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28411002",
      "id" : 28411002,
      "original_commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "original_position" : 22,
      "path" : "src/util.cpp",
      "position" : 22,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834",
      "updated_at" : "2015-04-15T11:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28411002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28411140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28411140"
         }
      },
      "body" : "OTOH I don't see anywhere in the [CreateProcess](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425%28v=vs.85%29.aspx) documentation that it will actually try to change the passed-in string. So this should suffice:\r\n```\r\nstd::string strTempCmd = std::string(system32) + \"\\\\cmd.exe /C \" + strCommand;\r\nif (CreateProcess(NULL, const_cast<char*>(strTempCmd.c_str()), NULL, NULL, false, 0, NULL, NULL, &info, &processInfo))\r\n```\r\n",
      "commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "created_at" : "2015-04-15T11:19:23Z",
      "diff_hunk" : "@@ -697,7 +697,43 @@ boost::filesystem::path GetTempPath() {\n \n void runCommand(std::string strCommand)\n {\n-    int nErr = ::system(strCommand.c_str());\n+    int nErr = 0;\n+#ifdef WIN32\n+    // If we're in Windows, use CreateProcess.\n+    ULONG nExitCode;\n+    STARTUPINFO info={sizeof(info)};\n+    ZeroMemory(&info, sizeof(STARTUPINFO));\n+    info.cb = sizeof(STARTUPINFO);\n+    info.dwFlags = STARTF_USESHOWWINDOW;\n+    info.wShowWindow = SW_HIDE;\n+    PROCESS_INFORMATION processInfo;\n+    ZeroMemory(&processInfo, sizeof(PROCESS_INFORMATION));\n+    char system32[256];\n+    if (GetSystemDirectory(system32, 255)) {\n+        std::stringstream ssCommand;\n+        ssCommand << system32 << \"\\\\cmd.exe /C \" << strCommand;\n+        std::string strTempCmd = ssCommand.str();\n+        std::vector<char> vecCommand(strTempCmd.begin(), strTempCmd.end() + 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#discussion_r28411140",
      "id" : 28411140,
      "original_commit_id" : "90c1d35e3976a68be19659f4b4268efd71e96565",
      "original_position" : 21,
      "path" : "src/util.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5834",
      "updated_at" : "2015-04-15T11:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28411140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I do tend to agree with @gavinandresen that it'not s terribly useful to use `-*notify` with the GUI. For the daemon `bitcoind.exe` this is not an issue as it has its own shell window so should never pop up a new one?",
      "created_at" : "2015-04-15T11:21:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-93333729",
      "id" : 93333729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-04-15T11:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/93333729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing due to inactivity. There are still some comments open. Let me know when you start working on this again, and I'll reopen.",
      "created_at" : "2015-06-10T08:19:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5834#issuecomment-110647305",
      "id" : 110647305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5834",
      "updated_at" : "2015-06-10T08:19:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/110647305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
