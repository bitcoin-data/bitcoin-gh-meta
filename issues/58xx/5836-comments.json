[
   {
      "body" : "ut ACK -- seems like @theuni trivial tree material",
      "created_at" : "2015-02-27T14:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-76398480",
      "id" : 76398480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-02-27T14:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76398480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Adding some more as I work through.\r\n@jgarzik should just be trivial if I steer clear of that gray line between formatting and functionality.",
      "created_at" : "2015-02-27T23:43:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-76493839",
      "id" : 76493839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-02-27T23:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76493839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/637706?v=3",
         "events_url" : "https://api.github.com/users/randy-waterhouse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/randy-waterhouse/followers",
         "following_url" : "https://api.github.com/users/randy-waterhouse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/randy-waterhouse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/randy-waterhouse",
         "id" : 637706,
         "login" : "randy-waterhouse",
         "organizations_url" : "https://api.github.com/users/randy-waterhouse/orgs",
         "received_events_url" : "https://api.github.com/users/randy-waterhouse/received_events",
         "repos_url" : "https://api.github.com/users/randy-waterhouse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/randy-waterhouse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/randy-waterhouse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/randy-waterhouse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/5836#discussion_r26027461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/26027461"
         }
      },
      "body" : "Although it adds a bit of readability, 'pad with spaces' alignment has the disadvantage that a change on one line makes it necessary to change every line in the table, which makes reviewing changes harder, and can introduce merge conflicts. So I'm generally not in favor of it.",
      "commit_id" : "38c0798f8aba8337b39abff497b4b3ff23810ed5",
      "created_at" : "2015-03-09T11:10:27Z",
      "diff_hunk" : "@@ -52,178 +53,186 @@ dnl Libtool init checks.\n LT_INIT([pic-only])\n \n dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_PROG(LCOV, lcov)\n-AC_PATH_PROG(JAVA, java)\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL([AR],      ar)\n+AC_PATH_PROG([CCACHE],  ccache)\n+AC_PATH_TOOL([GCOV],    gcov)\n+AC_PATH_PROG([GENHTML], genhtml)\n+AC_PATH_PROG([GIT],     git)\n+AC_PATH_PROG([HEXDUMP], hexdump)\n+AC_PATH_PROG([JAVA],    java)\n+AC_PATH_PROG([LCOV],    lcov)\n+AC_PATH_TOOL([RANLIB],  ranlib)\n+AC_PATH_TOOL([STRIP],   strip)\n+AC_PATH_PROG([XGETTEXT],xgettext)\n \n dnl pkg-config check.\n PKG_PROG_PKG_CONFIG\n \n-# Enable wallet\n+dnl Enable optional features:\n AC_ARG_ENABLE([wallet],\n   [AS_HELP_STRING([--enable-wallet],\n-  [enable wallet (default is yes)])],\n+     [enable wallet (default is yes)])],\n   [enable_wallet=$enableval],\n   [enable_wallet=yes])\n \n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n AC_ARG_ENABLE([upnp-default],\n   [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n+     [if UPNP is enabled, turn it on at startup (default is no)])],\n   [use_upnp_default=$enableval],\n   [use_upnp_default=no])\n \n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_WITH([comparison-tool],\n-    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n-    [use_comparison_tool=$withval],\n-    [use_comparison_tool=no])\n+AC_ARG_ENABLE([tests],\n+  [AS_HELP_STRING([--enable-tests],\n+     [compile tests (default is yes)])],\n+  [use_tests=$enableval],\n+  [use_tests=yes])\n \n AC_ARG_ENABLE([comparison-tool-reorg-tests],\n-    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n-    [use_comparison_tool_reorg_tests=$enableval],\n-    [use_comparison_tool_reorg_tests=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n+  [AS_HELP_STRING([--enable-comparison-tool-reorg-tests],\n+     [enable expensive reorg tests in the comparison tool (default no)])],\n+  [use_comparison_tool_reorg_tests=$enableval],\n+  [use_comparison_tool_reorg_tests=no])\n \n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--enable-hardening],\n-  [attempt to harden the resulting executables (default is yes)])],\n+     [attempt to harden the resulting executables (default is yes)])],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n AC_ARG_ENABLE([reduce-exports],\n   [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n+     [attempt to reduce exported symbols in the resulting executables (default is no)])],\n   [use_reduce_exports=$enableval],\n   [use_reduce_exports=no])\n \n AC_ARG_ENABLE([ccache],\n   [AS_HELP_STRING([--enable-ccache],\n-  [use ccache for building (default is yes if ccache is found)])],\n+     [use ccache for building (default is yes if ccache is found)])],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n \n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n+     [enable lcov testing (default is no)])],\n   [use_lcov=yes],\n   [use_lcov=no])\n \n AC_ARG_ENABLE([glibc-back-compat],\n   [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n+     [enable backwards compatibility with glibc])],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n-\n-# Enable debug \n AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n+  [AS_HELP_STRING([--enable-debug],\n+     [use debug compiler flags and macros (default is no)])],\n+  [enable_debug=$enableval],\n+  [enable_debug=no])\n \n if test \"x$enable_debug\" = xyes; then\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"-g3 -O0 -DDEBUG\"\n-    fi\n+  if test \"x$GCC\" = xyes; then\n+    CFLAGS=\"-g3 -O0 -DDEBUG\"\n+  fi\n     \n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"-g3 -O0 -DDEBUG\"\n-    fi\n+  if test \"x$GXX\" = xyes; then\n+    CXXFLAGS=\"-g3 -O0 -DDEBUG\"\n+  fi\n fi \n \n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n+dnl TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+dnl       compatibility with the legacy buildsystem.\n+\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n fi\n CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n+dnl --with(out) optionals:\n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n+     [build libraries (default=yes)])],\n   [build_bitcoin_libs=$withval],\n   [build_bitcoin_libs=yes])\n \n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+     [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n+     [build bitcoind daemon (default=yes)])],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+     [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_WITH([comparison-tool],\n+  [AS_HELP_STRING([--with-comparison-tool],\n+     [path to java comparison tool (requires --enable-tests)])],\n+  [use_comparison_tool=$withval],\n+  [use_comparison_tool=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+     [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_WITH([protoc-bindir],\n+  [AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],\n+     [specify protoc bin path])],\n+  [protoc_bin_path=$withval],\n+  [])\n+\n+dnl Begin C++ interpreting\n AC_LANG_PUSH([C++])\n \n use_pkgconfig=yes\n case $host in\n   *mingw*)\n \n-     #pkgconfig does more harm than good with MinGW\n+     dnl pkgconfig does more harm than good with MinGW\n      use_pkgconfig=no\n \n      TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n+     AC_CHECK_LIB([mingwthrd],[main],[], AC_MSG_ERROR([lib missing]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#discussion_r26027461",
      "id" : 26027461,
      "original_commit_id" : "38c0798f8aba8337b39abff497b4b3ff23810ed5",
      "original_position" : 288,
      "path" : "configure.ac",
      "position" : 288,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5836",
      "updated_at" : "2015-03-09T11:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/26027461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'll leave this up to @theuni.\r\n\r\nI wonder if there is something akin to clang-format for these files. I'm not against increasing readability, but it is very subjective if it is not possible to automate a certain set of rules. At least try to do this all at once, so that we don't break current pulls affecting `configure.ac` multiple times.\r\n",
      "created_at" : "2015-03-09T11:16:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-77835998",
      "id" : 77835998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-03-09T11:16:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/77835998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Sorry for the slow response here, I've been trying to get to the bottom of the AWS block file corruption. I'll review tomorrow.",
      "created_at" : "2015-03-10T02:55:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-77987309",
      "id" : 77987309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-03-10T02:55:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/77987309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@laanwj My thoughts exactly. These are all good cleanups, but without any real formatting rules this is basically a never-ending syntax ping-pong.\r\n\r\n@randy-waterhouse I'm not thrilled about all the whitespace/formatting changes because as I see it one of two things will happen:\r\n1. These will go in, but the next set of changes won't necessarily match.\r\n2. These go in, then we start policing nits in the future (see header includes as an example there).\r\n\r\nMy preference would be to take the stuff that is more technically correct (# -> dnl and adding missing [ ] for example), and leave the stuff that's just internal formatting alone.\r\n\r\nRe-ordering the options makes sense though, I like it when other programs have theirs organized.\r\n\r\nEither way, let's take this over to the trivial tree to discuss, to avoid burning c-i cycles here. Please PR to trivial-next in https://github.com/theuni/bitcoin.",
      "created_at" : "2015-03-12T03:49:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-78419429",
      "id" : 78419429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-03-12T03:49:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/78419429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I agree, it is too trivial to waste our time on a back and forward about formatting style preferences.\r\nYou seem to know what you want and you can take from my mods whatever you like. \r\n\r\nThe file does need cleaning up though it is in a bit of a state.",
      "created_at" : "2015-03-13T07:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5836#issuecomment-78851856",
      "id" : 78851856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5836",
      "updated_at" : "2015-03-13T07:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/78851856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/637706?v=3",
         "events_url" : "https://api.github.com/users/randy-waterhouse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/randy-waterhouse/followers",
         "following_url" : "https://api.github.com/users/randy-waterhouse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/randy-waterhouse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/randy-waterhouse",
         "id" : 637706,
         "login" : "randy-waterhouse",
         "organizations_url" : "https://api.github.com/users/randy-waterhouse/orgs",
         "received_events_url" : "https://api.github.com/users/randy-waterhouse/received_events",
         "repos_url" : "https://api.github.com/users/randy-waterhouse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/randy-waterhouse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/randy-waterhouse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/randy-waterhouse"
      }
   }
]
