{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Let's say i have two xpubs, derived at `m/1'/2'/3'/0` from a master xpub. I'd like to create a descriptor describing a multisig between those 2 keys.\r\n\r\nI create a descriptor wallet\r\n```\r\n$ bcreg1 -named createwallet wallet_name=repro disable_private_keys=true descriptors=true\r\n{\r\n  \"name\": \"repro\",\r\n  \"warning\": \"\"\r\n}\r\n```\r\n\r\nSince i won't compute the checksum by hand i use the hack of getting it from `getdescriptorinfo`\r\n```\r\n$ bcreg1 getdescriptorinfo \"wsh(multi(2,[0a0a0a0a/1'/2'/3'/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1'/2'/3'/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))\"\r\n{\r\n  \"descriptor\": \"wsh(multi(2,[0a0a0a0a/1'/2'/3'/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1'/2'/3'/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))#hs0kuwwv\",\r\n  \"checksum\": \"hs0kuwwv\",\r\n  \"isrange\": true,\r\n  \"issolvable\": true,\r\n  \"hasprivatekeys\": false\r\n}\r\n```\r\n\r\nNow i use the output of `getdescriptorinfo` to import the descriptor and...\r\n```\r\n$ bcreg1 -rpcwallet=repro importdescriptors '[{\"desc\":\"wsh(multi(2,[0a0a0a0a/1'/2'/3'/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1'/2'/3'/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))#hs0kuwwv\",\"timestamp\":\"now\"}]'\r\n[\r\n  {\r\n    \"success\": false,\r\n    \"error\": {\r\n      \"code\": -5,\r\n      \"message\": \"Provided checksum 'hs0kuwwv' does not match computed checksum 'rgsu3znf'\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nHmm. Turns out the checksum `getdescriptorinfo` gave me is invalid (both in the `\"descriptor\"` and `\"checksum\"` fields). I remember some discussions around canonicalization and the `h`Â vs `'` notation for hardened paths, so i try by using `h` instead. \r\n```\r\n$ bcreg1 getdescriptorinfo \"wsh(multi(2,[0a0a0a0a/1h/2h/3h/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1h/2h/3h/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))\"\r\n{\r\n  \"descriptor\": \"wsh(multi(2,[0a0a0a0a/1'/2'/3'/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1'/2'/3'/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))#hs0kuwwv\",\r\n  \"checksum\": \"6nuh6ujc\",\r\n  \"isrange\": true,\r\n  \"issolvable\": true,\r\n  \"hasprivatekeys\": false\r\n}\r\n```\r\n\r\nIt outputs the same invalid descriptor in the `\"descriptor\"` field. Fortunately the checksum in `\"checksum\"` is actually valid, so i can use that in `importdescriptors`.\r\n\r\n\r\nMaybe worth mentioning, before trying on latest master i had an additional issue with `22.0` where `getdescriptorinfo` would literally remove the hardened paths from the origin info:\r\n```\r\n$ bc getdescriptorinfo 'wsh(sortedmulti(2,[f4d84203/48'/0'/0']xpub6BqGLdDLrAeSfoaxcU4VPLrLjWnVAdTcE1jFaocxupbqpyU6tdUA6nZoU17RrYQaGxpjWh7eLempM6W8d6C4p5siF8rWvgvwnASKyzKn14S/0/*,[ff620a62/48'/0'/0']xpub6C7cPJJsmrM6hQuqX2DEdqn38VF2csDeC5BmQbSzpga4EP64V211hYSCSStkFKnELchieG2WKMckrKRdHrUjeaCbRszHJJ7nP4E68rPViPE/0/*))'        \r\n{                                                                                                                                                                                                                                                                                                                                                                          \r\n  \"descriptor\": \"wsh(sortedmulti(2,[f4d84203/48/0/0]xpub6BqGLdDLrAeSfoaxcU4VPLrLjWnVAdTcE1jFaocxupbqpyU6tdUA6nZoU17RrYQaGxpjWh7eLempM6W8d6C4p5siF8rWvgvwnASKyzKn14S/0/*,[ff620a62/48/0/0]xpub6C7cPJJsmrM6hQuqX2DEdqn38VF2csDeC5BmQbSzpga4EP64V211hYSCSStkFKnELchieG2WKMckrKRdHrUjeaCbRszHJJ7nP4E68rPViPE/0/*))#kvvtf4uz\",                                                  \r\n  \"checksum\": \"kvvtf4uz\",                                                                                                                                                                                                                                                                                                                                                  \r\n  \"isrange\": true,                                                                                                                                                                                                                                                                                                                                                         \r\n  \"issolvable\": true,                                                                                                                                                                                                                                                                                                                                                      \r\n  \"hasprivatekeys\": false                                                                                                                                                                                                                                                                                                                                                  \r\n}\r\n```\r\n\r\nSo maybe the bad checksum above was the checksum without the hardened paths?\r\n```\r\n$ bcreg1 getdescriptorinfo \"wsh(multi(2,[0a0a0a0a/1/2/3/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1/2/3/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))\"                     \r\n\r\n{\r\n  \"descriptor\": \"wsh(multi(2,[0a0a0a0a/1/2/3/0]tpubD6NzVbkrYhZ4WkU5UCcpShsnkYoYPSH9Lor6Kg7J6ytgCjcrpZKtpLPT4NtWLoVirjiWPhgupH1V1UkKaTJoFCRPbcZwMN6kxepTUzKg6mM/*,[bbbbbbbb/1/2/3/0]tpubD6NzVbkrYhZ4Xm62aaUb6DiTMqnnbQNKQsBddsiHwx2Q2KaqYApSCizhyZcEaCRSvr5QSZKuF53pJ6ZQcRzFFDJ6HaKAkpdJAfZt8h1ZzDz/*))#rgsu3znf\",\r\n  \"checksum\": \"rgsu3znf\",\r\n  \"isrange\": true,\r\n  \"issolvable\": true,\r\n  \"hasprivatekeys\": false\r\n}\r\n```\r\nBingo!",
   "closed_at" : "2022-09-16T16:49:46Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
      "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
      "followers_url" : "https://api.github.com/users/darosior/followers",
      "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/darosior",
      "id" : 22457751,
      "login" : "darosior",
      "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
      "organizations_url" : "https://api.github.com/users/darosior/orgs",
      "received_events_url" : "https://api.github.com/users/darosior/received_events",
      "repos_url" : "https://api.github.com/users/darosior/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/darosior"
   },
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317/comments",
   "created_at" : "2022-02-11T14:56:17Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/24317",
   "id" : 1132711306,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585Dg82K",
   "number" : 24317,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317/timeline",
   "title" : "`gestdescriptorinfo` ignores hardened paths in origin info for computing the checksum (therefore returns invalid checksums)",
   "updated_at" : "2022-09-16T16:49:46Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24317",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
      "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
      "followers_url" : "https://api.github.com/users/darosior/followers",
      "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/darosior",
      "id" : 22457751,
      "login" : "darosior",
      "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
      "organizations_url" : "https://api.github.com/users/darosior/orgs",
      "received_events_url" : "https://api.github.com/users/darosior/received_events",
      "repos_url" : "https://api.github.com/users/darosior/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/darosior"
   }
}
