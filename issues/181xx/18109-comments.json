[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378209601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378209601"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This not just matches `%<some junk>c`, but also `c<some junk>%`, since both searches start from the begin of the format string. To correct that you'd need to save the found position of the `%` (=return value of the first `.find()`) and pass it to the search for the `c` (=second parameter of the second `.find()`). Given that if I understood your intention correctly ;-)\r\nAlso, a tiny nit: could use the overloaded version of `.find()` which takes a `char` as first parameter instead of passing strings with length 1, see http://www.cplusplus.com/reference/string/string/find/ (probably more efficient).",
      "commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "created_at" : "2020-02-12T12:03:51Z",
      "diff_hunk" : "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378209601",
      "id" : 378209601,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwOTYwMQ==",
      "original_commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "original_position" : 18,
      "path" : "src/test/fuzz/strprintf.cpp",
      "position" : 18,
      "pull_request_review_id" : 357398705,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
      "updated_at" : "2020-02-12T12:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378209601",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378211259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378211259"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See my review comment above (matching logic and as micro-nit using `.find()`-version with `char` as first parameter).",
      "commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "created_at" : "2020-02-12T12:07:49Z",
      "diff_hunk" : "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {\n+        // Avoid triggering the following:\n+        // * strprintf(\"%c\", 1.31783e+38);\n+        // tinyformat.h:244:36: runtime error: 1.31783e+38 is outside the range of representable values of type 'char'\n+        return;\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"*\") != std::string::npos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378211259",
      "id" : 378211259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxMTI1OQ==",
      "original_commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "original_position" : 25,
      "path" : "src/test/fuzz/strprintf.cpp",
      "position" : 25,
      "pull_request_review_id" : 357398705,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
      "updated_at" : "2020-02-12T12:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378211259",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I usually avoid to do code-reviews before I can give at least \"Concept ACK\". In this case I unfortunately don't have enough clue about the details of fuzzing, but saw that the matching logic doesn't correspond to the desired effect in the PR description. Hope that's still okay and helpful.",
      "created_at" : "2020-02-12T12:12:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18109#issuecomment-585177117",
      "id" : 585177117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTE3NzExNw==",
      "updated_at" : "2020-02-12T12:13:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585177117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theStack Thanks for the review! I'll address the nit about `.find(char)`. The skipping logic is intentional - I wanted to keep it as simple as possible and the overshoot (that `c[â¦]%` is matched in addition to `%[â¦]c`) doesn't matter in practice. I'm happy to change that if proven wrong or if anyone cares strongly :)  Regardless I'll update the PR description to make the intention more clear. Again, thanks for reviewing!",
      "created_at" : "2020-02-12T12:31:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18109#issuecomment-585183783",
      "id" : 585183783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18109",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTE4Mzc4Mw==",
      "updated_at" : "2020-02-12T12:39:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585183783",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378222055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378222055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See comment below :)",
      "commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "created_at" : "2020-02-12T12:32:33Z",
      "diff_hunk" : "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378222055",
      "id" : 378222055,
      "in_reply_to_id" : 378209601,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyMjA1NQ==",
      "original_commit_id" : "7f82eec0c55090eeace58cf3298e1185fd422b57",
      "original_position" : 18,
      "path" : "src/test/fuzz/strprintf.cpp",
      "position" : 18,
      "pull_request_review_id" : 357414812,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
      "updated_at" : "2020-02-12T12:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378222055",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
