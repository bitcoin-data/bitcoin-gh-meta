[
   {
      "author_association" : "MEMBER",
      "body" : "Great first-time contribution! Welcome as a contributor! Hope to see more contributions from you.\r\n\r\nThanks for tackling UB issues in the project. The bulk of them should be fixed by now and this is one of the last few UB issues I'm aware of. Don't hesitate to report and/or fix any other UB issues you might find and don't hesitate to ping me if you want your work reviewed.\r\n\r\nConcept ACK\r\n\r\nFWIW:\r\n\r\n1. The C++ Core Guidelines â with editors Bjarne Stroustrup and Herb Sutter â [has this to say](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c183-dont-use-a-union-for-type-punning): \"It is undefined behavior to read a union member with a different type from the one with which it was written.\"\r\n\r\n2. The C++ Core Guidelines [has this to say](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c183-dont-use-a-union-for-type-punning): \"Unfortunately, unions are commonly used for type punning. We donât consider âsometimes, it works as expectedâ a strong argument.\"\r\n\r\n3. Professor John Regehr [has this to say](https://blog.regehr.org/archives/959): \"Again, although we might expect that adding a function call would make the code harder to optimize, both compilers understand memcpy deeply enough that we get the desired object code [â¦] In my opinion c5 is the easiest code to understand out of this little batch of functions because it doesnât do the messy shifting and also it is totally, completely, obviously free of complications that might arise from the confusing rules for unions and strict aliasing. It became my preferred idiom for type punning a few years ago when I discovered that compilers could see through the memcpy and generate the right code.\"\r\n\r\n4. Video recommendation: Timur Doumler's talk [âType punning in modern C++â](https://www.youtube.com/watch?v=_qzMpk-22cc) from CppCon 2019",
      "created_at" : "2020-02-17T22:08:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-587174040",
      "id" : 587174040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzE3NDA0MA==",
      "updated_at" : "2020-02-17T22:08:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587174040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK be94096dfb0c4862e2314cbae4120d7360b08ef2\r\n\r\nVerified that `clang++ -O1` (trunk) generates exactly the same object code before and after the change (as expected) for each of the changed functions:\r\n\r\n<details><summary>Click for results</summary>\r\n\r\n```\r\n#include <cstdint>\r\n#include <cstring>\r\n\r\nuint64_t ser_double_to_uint64_old(double x)\r\n{\r\n    union { double x; uint64_t y; } tmp;\r\n    tmp.x = x;\r\n    return tmp.y;\r\n}\r\n\r\nuint64_t ser_double_to_uint64_new(double x)\r\n{\r\n    uint64_t tmp;\r\n    std::memcpy(&tmp, &x, sizeof(x));\r\n    return tmp;\r\n}\r\n\r\nuint32_t ser_float_to_uint32_old(float x)\r\n{\r\n    union { float x; uint32_t y; } tmp;\r\n    tmp.x = x;\r\n    return tmp.y;\r\n}\r\n\r\nuint32_t ser_float_to_uint32_new(float x)\r\n{\r\n    uint32_t tmp;\r\n    std::memcpy(&tmp, &x, sizeof(x));\r\n    return tmp;\r\n}\r\n\r\ndouble ser_uint64_to_double_old(uint64_t y)\r\n{\r\n    union { double x; uint64_t y; } tmp;\r\n    tmp.y = y;\r\n    return tmp.x;\r\n}\r\n\r\ndouble ser_uint64_to_double_new(uint64_t y)\r\n{\r\n    double tmp;\r\n    std::memcpy(&tmp, &y, sizeof(y));\r\n    return tmp;\r\n}\r\n\r\nfloat ser_uint32_to_float_old(uint32_t y)\r\n{\r\n    union { float x; uint32_t y; } tmp;\r\n    tmp.y = y;\r\n    return tmp.x;\r\n}\r\n\r\nfloat ser_uint32_to_float_new(uint32_t y)\r\n{\r\n    float tmp;\r\n    std::memcpy(&tmp, &y, sizeof(y));\r\n    return tmp;\r\n}\r\n```\r\n\r\nâ¦\r\n\r\n```\r\nser_double_to_uint64_old(double):          # @ser_double_to_uint64_old(double)\r\n        movq    rax, xmm0\r\n        ret\r\nser_double_to_uint64_new(double):          # @ser_double_to_uint64_new(double)\r\n        movq    rax, xmm0\r\n        ret\r\nser_float_to_uint32_old(float):           # @ser_float_to_uint32_old(float)\r\n        movd    eax, xmm0\r\n        ret\r\nser_float_to_uint32_new(float):           # @ser_float_to_uint32_new(float)\r\n        movd    eax, xmm0\r\n        ret\r\nser_uint64_to_double_old(unsigned long):          # @ser_uint64_to_double_old(unsigned long)\r\n        movq    xmm0, rdi\r\n        ret\r\nser_uint64_to_double_new(unsigned long):          # @ser_uint64_to_double_new(unsigned long)\r\n        movq    xmm0, rdi\r\n        ret\r\nser_uint32_to_float_old(unsigned int):           # @ser_uint32_to_float_old(unsigned int)\r\n        movd    xmm0, edi\r\n        ret\r\nser_uint32_to_float_new(unsigned int):           # @ser_uint32_to_float_new(unsigned int)\r\n        movd    xmm0, edi\r\n        ret\r\n```\r\n\r\n</details>",
      "created_at" : "2020-02-18T14:32:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-587488632",
      "id" : 587488632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzQ4ODYzMg==",
      "updated_at" : "2020-02-18T14:41:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587488632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~0\r\n\r\nSeems like the better solution here is to stop assuming floats have a specific internal representation? :/",
      "created_at" : "2020-02-19T03:45:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-588020656",
      "id" : 588020656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODAyMDY1Ng==",
      "updated_at" : "2020-02-19T03:45:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588020656",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr That would indeed be preferable, but it seems that would effectively require implementing a IEEE 754 software encoder/decoder, which is nontrivial.\n\nThis is still an improvement though. memcpy into another type seems indeed to be the modern idiom (we use the same in ReadLE32 and friends, after verifying that compilers indeed optimize through that).\n\nConcept ACK",
      "created_at" : "2020-02-19T03:48:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-588021264",
      "id" : 588021264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODAyMTI2NA==",
      "updated_at" : "2020-02-19T03:48:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588021264",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381259171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381259171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe add `static_assert(sizeof(tmp) == sizeof(x), \"double and uint64_t assumed to have the same size\");`?\r\n(this might be redundant with other places but I think it's also helpful as documentation)\r\n\r\n(Same for the rest of the functions)",
      "commit_id" : "0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T12:26:50Z",
      "diff_hunk" : "@@ -139,27 +140,27 @@ template<typename Stream> inline uint64_t ser_readdata64(Stream &s)\n }\n inline uint64_t ser_double_to_uint64(double x)\n {\n-    union { double x; uint64_t y; } tmp;\n-    tmp.x = x;\n-    return tmp.y;\n+    uint64_t tmp;\n+    std::memcpy(&tmp, &x, sizeof(x));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381259171",
      "id" : 381259171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI1OTE3MQ==",
      "original_commit_id" : "be94096dfb0c4862e2314cbae4120d7360b08ef2",
      "original_position" : 16,
      "path" : "src/serialize.h",
      "position" : 16,
      "pull_request_review_id" : 361069357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167",
      "updated_at" : "2020-02-19T17:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381259171",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381296307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381296307"
         }
      },
      "author_association" : "NONE",
      "body" : "I swear I wanted to do that, but then I was afraid people would find it paranoid ð¤ \r\n\r\nYou sure I should go for that?",
      "commit_id" : "0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T13:43:08Z",
      "diff_hunk" : "@@ -139,27 +140,27 @@ template<typename Stream> inline uint64_t ser_readdata64(Stream &s)\n }\n inline uint64_t ser_double_to_uint64(double x)\n {\n-    union { double x; uint64_t y; } tmp;\n-    tmp.x = x;\n-    return tmp.y;\n+    uint64_t tmp;\n+    std::memcpy(&tmp, &x, sizeof(x));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381296307",
      "id" : 381296307,
      "in_reply_to_id" : 381259171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5NjMwNw==",
      "original_commit_id" : "be94096dfb0c4862e2314cbae4120d7360b08ef2",
      "original_position" : 16,
      "path" : "src/serialize.h",
      "position" : 16,
      "pull_request_review_id" : 361117988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167",
      "updated_at" : "2020-02-19T17:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381296307",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
         "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
         "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheQuantumPhysicist",
         "id" : 8694366,
         "login" : "TheQuantumPhysicist",
         "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
         "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
         "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
         "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheQuantumPhysicist"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @luke-jr That would indeed be preferable, but it seems that would effectively require implementing a IEEE 754 software encoder/decoder, which is nontrivial.\r\n\r\nThere's a famous library, called [softfloat](http://www.jhauser.us/arithmetic/SoftFloat.html). It does all that. But I think that's unnecessary. IEEE 754 is the same everywhere as repsentation. The differences between different CPUs come from certain operations, like rounding and division by epsilon (IIRC). You can see in softfloat different rounding modes and similar things.",
      "created_at" : "2020-02-19T13:46:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-588239070",
      "id" : 588239070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODIzOTA3MA==",
      "updated_at" : "2020-02-19T14:36:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588239070",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
         "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
         "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheQuantumPhysicist",
         "id" : 8694366,
         "login" : "TheQuantumPhysicist",
         "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
         "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
         "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
         "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheQuantumPhysicist"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381307550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381307550"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Explicitly stating assumptions is good and `static_assert`:s cannot hurt :)  Go for it! :)\r\n\r\nFWIW:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/68e841e0af223a220d1f037e4c5680c1b228aa3e/src/compat/assumptions.h#L43-L46",
      "commit_id" : "0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T14:01:07Z",
      "diff_hunk" : "@@ -139,27 +140,27 @@ template<typename Stream> inline uint64_t ser_readdata64(Stream &s)\n }\n inline uint64_t ser_double_to_uint64(double x)\n {\n-    union { double x; uint64_t y; } tmp;\n-    tmp.x = x;\n-    return tmp.y;\n+    uint64_t tmp;\n+    std::memcpy(&tmp, &x, sizeof(x));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381307550",
      "id" : 381307550,
      "in_reply_to_id" : 381259171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwNzU1MA==",
      "original_commit_id" : "be94096dfb0c4862e2314cbae4120d7360b08ef2",
      "original_position" : 16,
      "path" : "src/serialize.h",
      "position" : 16,
      "pull_request_review_id" : 361131674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167",
      "updated_at" : "2020-02-19T17:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381307550",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381438787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381438787"
         }
      },
      "author_association" : "NONE",
      "body" : "Done.",
      "commit_id" : "0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T17:46:26Z",
      "diff_hunk" : "@@ -139,27 +140,27 @@ template<typename Stream> inline uint64_t ser_readdata64(Stream &s)\n }\n inline uint64_t ser_double_to_uint64(double x)\n {\n-    union { double x; uint64_t y; } tmp;\n-    tmp.x = x;\n-    return tmp.y;\n+    uint64_t tmp;\n+    std::memcpy(&tmp, &x, sizeof(x));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#discussion_r381438787",
      "id" : 381438787,
      "in_reply_to_id" : 381259171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzODc4Nw==",
      "original_commit_id" : "be94096dfb0c4862e2314cbae4120d7360b08ef2",
      "original_position" : 16,
      "path" : "src/serialize.h",
      "position" : 16,
      "pull_request_review_id" : 361302307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18167",
      "updated_at" : "2020-02-19T17:46:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381438787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
         "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
         "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheQuantumPhysicist",
         "id" : 8694366,
         "login" : "TheQuantumPhysicist",
         "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
         "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
         "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
         "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheQuantumPhysicist"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T19:02:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-588391180",
      "id" : 588391180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODM5MTE4MA==",
      "updated_at" : "2020-02-19T19:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588391180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-19T20:26:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-588432418",
      "id" : 588432418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODQzMjQxOA==",
      "updated_at" : "2020-02-19T20:26:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588432418",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 0653939ac130eddffe40c53ac418bea305d3bf82",
      "created_at" : "2020-02-26T17:55:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-591558413",
      "id" : 591558413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTU1ODQxMw==",
      "updated_at" : "2020-02-26T17:55:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591558413",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That would indeed be preferable, but it seems that would effectively require implementing a IEEE 754 software encoder/decoder, which is nontrivial.\r\n\r\nPlease, don't. If you're really willing to pick up a huge amount of work to support obscure platforms, I would prefer to move away from serializing floating point numbers at all.I tried this once but there's quite some usage (luckily, not in the P2P or consensus, only for internal file formats, so it's not impossible at least!). \r\n",
      "created_at" : "2020-02-26T17:59:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-591560027",
      "id" : 591560027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTU2MDAyNw==",
      "updated_at" : "2020-02-26T17:59:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591560027",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Great to see this merged!\r\n\r\n@TheQuantumPhysicist If you want to tackle the few remaining instances of UB you might want to build with `CC=clang CXX=clang++ ./configure --with-sanitizers=undefined && make` and fix any violations you are able to trigger :)",
      "created_at" : "2020-02-26T18:59:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-591586911",
      "id" : 591586911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTU4NjkxMQ==",
      "updated_at" : "2020-02-26T18:59:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591586911",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Thanks for the support! Actually I use clang sanitizers all the time. Thread sanitizer, undefined behavior sanitizer, memory sanitizer and address sanitizer. You can see them in all my github projects that I wrote myself. But this one here I discovered by coincidence and hence fixed ð \r\n\r\nAnd I almost never use gcc anymore ð \r\n\r\nBtw, if you're interested, there's an issue I opened in libbtc about undefined behavior like 2 years ago... it's still untouched and not merged. ",
      "created_at" : "2020-02-26T19:04:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-591589156",
      "id" : 591589156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTU4OTE1Ng==",
      "updated_at" : "2020-02-26T19:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591589156",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
         "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
         "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheQuantumPhysicist",
         "id" : 8694366,
         "login" : "TheQuantumPhysicist",
         "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
         "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
         "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
         "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheQuantumPhysicist"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Checked that be94096dfb0c4862e2314cbae4120d7360b08ef2 compiles to the same bitcoind with `-O2` on:\r\n\r\n* clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)\r\nTarget: aarch64-unknown-linux-gnu\r\n\r\n* clang version 9.0.0 (Fedora 9.0.0-1.fc31)\r\nTarget: x86_64-unknown-linux-gnu\r\n",
      "created_at" : "2020-02-26T19:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18167#issuecomment-591609045",
      "id" : 591609045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18167",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTYwOTA0NQ==",
      "updated_at" : "2020-02-26T19:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591609045",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
