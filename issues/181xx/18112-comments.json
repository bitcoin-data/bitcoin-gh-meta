[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-02-10T22:10:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#issuecomment-584382373",
      "id" : 584382373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NDM4MjM3Mw==",
      "updated_at" : "2020-02-14T00:19:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584382373",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-11T08:56:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#issuecomment-584532231",
      "id" : 584532231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NDUzMjIzMQ==",
      "updated_at" : "2020-02-11T08:56:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584532231",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2020-02-13T17:16:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#issuecomment-585869249",
      "id" : 585869249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTg2OTI0OQ==",
      "updated_at" : "2020-02-13T17:16:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585869249",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379142464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379142464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert CCompactSize to proper formatter\" (8b8ebf016c1de3c3827beff7666c0adb628355bf)\r\n\r\nI'd consider dropping the static asserts here, because they don't really make sense for deserializing (they do make sense in the `Ser` function below). I don't thinks a reason to disallow deserializing into variables wider than 64 bits or signed variables if the value fits.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-13T21:58:42Z",
      "diff_hunk" : "@@ -547,21 +547,29 @@ class BigEndian\n     }\n };\n \n-class CCompactSize\n+/** Formatter for integers in CompactSize format. */\n+struct CompactSizeFormatter\n {\n-protected:\n-    uint64_t &n;\n-public:\n-    explicit CCompactSize(uint64_t& nIn) : n(nIn) { }\n+    template<typename Stream, typename I>\n+    void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"CompactSize only supported for unsigned integers\");\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max(), \"CompactSize only supports 64-bit integers and below\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379142464",
      "id" : 379142464,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MjQ2NA==",
      "original_commit_id" : "99fa6174c51fc62dbe966498b5c528532bcc30e7",
      "original_position" : 25,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379142464",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379144218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379144218"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert CCompactSize to proper formatter\" (8b8ebf016c1de3c3827beff7666c0adb628355bf)\r\n\r\nIt's unlikely to make a difference in practice unless `I` is some crazy type that starts above 0, but I'd add `|| n < std::numeric_limits<I>::min()` to be complete here",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-13T22:02:19Z",
      "diff_hunk" : "@@ -547,21 +547,29 @@ class BigEndian\n     }\n };\n \n-class CCompactSize\n+/** Formatter for integers in CompactSize format. */\n+struct CompactSizeFormatter\n {\n-protected:\n-    uint64_t &n;\n-public:\n-    explicit CCompactSize(uint64_t& nIn) : n(nIn) { }\n+    template<typename Stream, typename I>\n+    void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"CompactSize only supported for unsigned integers\");\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max(), \"CompactSize only supports 64-bit integers and below\");\n \n-    template<typename Stream>\n-    void Serialize(Stream &s) const {\n-        WriteCompactSize<Stream>(s, n);\n+        uint64_t n = ReadCompactSize<Stream>(s);\n+        if (n > std::numeric_limits<I>::max()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379144218",
      "id" : 379144218,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0NDIxOA==",
      "original_commit_id" : "99fa6174c51fc62dbe966498b5c528532bcc30e7",
      "original_position" : 31,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379144218",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379149016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379149016"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nI think you could drop this class and use DefaultFormatter below instead",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-13T22:13:25Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379149016",
      "id" : 379149016,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTAxNg==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 9,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379149016",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379162025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379162025"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nWould drop these lines. There should be no problem serializing a value smaller than 48 bits as 48 bits (or serializing a signed value value that's positive). I think a runtime check would be more appropriate:\r\n\r\n```c++\r\nif (v >> 48 || v < 0) {\r\n    throw std::ios_base::failure(\"Uint48Formatter value out of range\");\r\n}\r\n```",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-13T22:46:21Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379162025",
      "id" : 379162025,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MjAyNQ==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 20,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379162025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379583265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379583265"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nThese checks seem too strict. Could just check for a big enough range and not care about the format\r\n\r\n```c++\r\nstatic_assert(std::numeric_limits<I>::max() >= 0xffffffffffff && std::numeric_limits<I>::min() <= 0, \"Uint48Formatter needs a 48+ bit type\");\r\n```\r\n\r\n",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-14T18:36:41Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379583265",
      "id" : 379583265,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4MzI2NQ==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 31,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379583265",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379587383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379587383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nShould this raise an error if `val <= tmp`? It seems like the serializer shouldn't create a sequence that the deserializer would reject.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-14T18:46:28Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        v = (uint64_t(msb) << 32) | uint64_t(lsb);\n+    }\n+};\n+\n+struct DifferentialSerTransform\n+{\n+    uint16_t m_subtract = 0;\n+\n+    uint16_t operator()(uint16_t val)\n+    {\n+        uint16_t tmp = val - m_subtract;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379587383",
      "id" : 379587383,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4NzM4Mw==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 49,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379587383",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379601414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379601414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nMaybe not worth extra effort or complexity, but I think the transforms would be safer and actually more understandable if they were templated. Safer because by hardcoding uint16_t as the sequence and diff types, lets c++ get away with truncating wider values to 16 bits with no checking. I think the ideal would look something like:\r\n\r\n```c++\r\ntemplate<typename DT> struct DifferentialSerTransform {\r\n   template<typename T> DT operator()(T val);\r\n};\r\n\r\ntemplate<typename T> struct DifferentialUnserTransform {\r\n  template<typename DT> T operator()(DT diff);\r\n};\r\n```",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-14T19:18:51Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        v = (uint64_t(msb) << 32) | uint64_t(lsb);\n+    }\n+};\n+\n+struct DifferentialSerTransform\n+{\n+    uint16_t m_subtract = 0;\n+\n+    uint16_t operator()(uint16_t val)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379601414",
      "id" : 379601414,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMTQxNA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 47,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379601414",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379623376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379623376"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nThere should be no need to have custom serialize and deserialize methods, and do overflow checking with a temporary variable now that `CompactSizeFormatter` has the same checking. The following seems to be sufficient:\r\n\r\n```c++\r\nSERIALIZE_METHODS(PrefilledTransaction, obj) { READWRITE(COMPACTSIZE(obj.index), obj.tx); }\r\n```",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-14T20:10:41Z",
      "diff_hunk" : "@@ -105,16 +103,22 @@ struct PrefilledTransaction {\n     uint16_t index;\n     CTransactionRef tx;\n \n-    ADD_SERIALIZE_METHODS;\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        s << COMPACTSIZE(index) << Using<TransactionCompression>(tx);\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        uint64_t idx = index;\n-        READWRITE(COMPACTSIZE(idx));\n-        if (idx > std::numeric_limits<uint16_t>::max())\n+    template<typename Stream>\n+    void Unserialize(Stream& s)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379623376",
      "id" : 379623376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYyMzM3Ng==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 158,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379623376",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379630763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379630763"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert blockencodings.h to new serialization framework\" (d46dfeccaf1992ba92bff7e0d4988ae3f66b327a)\r\n\r\nMaybe a matter of preference, but it might be nice to avoid needing to repeat `s << header...`  `ss >> header...` serialization order. Could do:\r\n\r\n```c++\r\nSERIALIZE_METHODS(CBlockHeaderAndShortTxIDs, obj)\r\n{\r\n    static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\r\n    READWRITE(obj.header, obj.nonce, Using<VectorFormatter<Uint48Formatter>>(obj.shorttxids), obj.prefilledtxn);\r\n    if (ser_action.ForRead()) {\r\n        if (obj.BlockTxCount() > std::numeric_limits<uint16_t>::max()) {\r\n            throw std::ios_base::failure(\"indexes overflowed 16 bits\");\r\n        }\r\n        obj.FillShortTxIDSelector();\r\n    }\r\n}\r\n```",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-14T20:29:55Z",
      "diff_hunk" : "@@ -153,43 +157,21 @@ class CBlockHeaderAndShortTxIDs {\n \n     size_t BlockTxCount() const { return shorttxids.size() + prefilledtxn.size(); }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(header);\n-        READWRITE(nonce);\n-\n-        uint64_t shorttxids_size = (uint64_t)shorttxids.size();\n-        READWRITE(COMPACTSIZE(shorttxids_size));\n-        if (ser_action.ForRead()) {\n-            size_t i = 0;\n-            while (shorttxids.size() < shorttxids_size) {\n-                shorttxids.resize(std::min((uint64_t)(1000 + shorttxids.size()), shorttxids_size));\n-                for (; i < shorttxids.size(); i++) {\n-                    uint32_t lsb = 0; uint16_t msb = 0;\n-                    READWRITE(lsb);\n-                    READWRITE(msb);\n-                    shorttxids[i] = (uint64_t(msb) << 32) | uint64_t(lsb);\n-                    static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n-                }\n-            }\n-        } else {\n-            for (size_t i = 0; i < shorttxids.size(); i++) {\n-                uint32_t lsb = shorttxids[i] & 0xffffffff;\n-                uint16_t msb = (shorttxids[i] >> 32) & 0xffff;\n-                READWRITE(lsb);\n-                READWRITE(msb);\n-            }\n-        }\n-\n-        READWRITE(prefilledtxn);\n+    template <typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        s << header << nonce << Using<VectorFormatter<Uint48Formatter>>(shorttxids) << prefilledtxn;\n+    }\n \n-        if (BlockTxCount() > std::numeric_limits<uint16_t>::max())\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s)\n+    {\n+        static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n+        s >> header >> nonce >> Using<VectorFormatter<Uint48Formatter>>(shorttxids) >> prefilledtxn;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379630763",
      "id" : 379630763,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMDc2Mw==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 217,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 358581908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379630763",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714117"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:24:10Z",
      "diff_hunk" : "@@ -547,21 +547,29 @@ class BigEndian\n     }\n };\n \n-class CCompactSize\n+/** Formatter for integers in CompactSize format. */\n+struct CompactSizeFormatter\n {\n-protected:\n-    uint64_t &n;\n-public:\n-    explicit CCompactSize(uint64_t& nIn) : n(nIn) { }\n+    template<typename Stream, typename I>\n+    void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"CompactSize only supported for unsigned integers\");\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max(), \"CompactSize only supports 64-bit integers and below\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714117",
      "id" : 379714117,
      "in_reply_to_id" : 379142464,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDExNw==",
      "original_commit_id" : "99fa6174c51fc62dbe966498b5c528532bcc30e7",
      "original_position" : 25,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 359300467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714117",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:24:18Z",
      "diff_hunk" : "@@ -547,21 +547,29 @@ class BigEndian\n     }\n };\n \n-class CCompactSize\n+/** Formatter for integers in CompactSize format. */\n+struct CompactSizeFormatter\n {\n-protected:\n-    uint64_t &n;\n-public:\n-    explicit CCompactSize(uint64_t& nIn) : n(nIn) { }\n+    template<typename Stream, typename I>\n+    void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"CompactSize only supported for unsigned integers\");\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max(), \"CompactSize only supports 64-bit integers and below\");\n \n-    template<typename Stream>\n-    void Serialize(Stream &s) const {\n-        WriteCompactSize<Stream>(s, n);\n+        uint64_t n = ReadCompactSize<Stream>(s);\n+        if (n > std::numeric_limits<I>::max()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714125",
      "id" : 379714125,
      "in_reply_to_id" : 379144218,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDEyNQ==",
      "original_commit_id" : "99fa6174c51fc62dbe966498b5c528532bcc30e7",
      "original_position" : 31,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 359300474,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714125",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, by adding a type alias (keeping it obvious where new implementations would go).",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:24:44Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714138",
      "id" : 379714138,
      "in_reply_to_id" : 379149016,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDEzOA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 9,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714138",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:24:52Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714139",
      "id" : 379714139,
      "in_reply_to_id" : 379162025,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDEzOQ==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 20,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714139",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the code is written assuming that the data fed to the serializer is sane.\r\n\r\nI've merged the two differential transforms into one; I think this is more readable too.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:25:54Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        v = (uint64_t(msb) << 32) | uint64_t(lsb);\n+    }\n+};\n+\n+struct DifferentialSerTransform\n+{\n+    uint16_t m_subtract = 0;\n+\n+    uint16_t operator()(uint16_t val)\n+    {\n+        uint16_t tmp = val - m_subtract;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714197",
      "id" : 379714197,
      "in_reply_to_id" : 379587383,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDE5Nw==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 49,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714197",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That doesn't really work, because `VectorFormatter` needs the input and output of the transform to be identical (or at least compatible)...  suspect there is a way to make it infer what the input type to the transform on deserialization is, but right now, it creates a `V::value_type` to deserialize into.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:27:30Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        v = (uint64_t(msb) << 32) | uint64_t(lsb);\n+    }\n+};\n+\n+struct DifferentialSerTransform\n+{\n+    uint16_t m_subtract = 0;\n+\n+    uint16_t operator()(uint16_t val)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714278",
      "id" : 379714278,
      "in_reply_to_id" : 379601414,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDI3OA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 47,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714278",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714290"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:27:39Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714290",
      "id" : 379714290,
      "in_reply_to_id" : 379583265,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDI5MA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 31,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714290",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice, done!",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:34:03Z",
      "diff_hunk" : "@@ -105,16 +103,22 @@ struct PrefilledTransaction {\n     uint16_t index;\n     CTransactionRef tx;\n \n-    ADD_SERIALIZE_METHODS;\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        s << COMPACTSIZE(index) << Using<TransactionCompression>(tx);\n+    }\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        uint64_t idx = index;\n-        READWRITE(COMPACTSIZE(idx));\n-        if (idx > std::numeric_limits<uint16_t>::max())\n+    template<typename Stream>\n+    void Unserialize(Stream& s)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714574",
      "id" : 379714574,
      "in_reply_to_id" : 379623376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDU3NA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 158,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359300868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714574",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah indeed, that works because `shorttxidkX` are mutable, which they probably shouldn't be. But no need to fix that here.\r\n\r\nDone.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-15T03:38:58Z",
      "diff_hunk" : "@@ -153,43 +157,21 @@ class CBlockHeaderAndShortTxIDs {\n \n     size_t BlockTxCount() const { return shorttxids.size() + prefilledtxn.size(); }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(header);\n-        READWRITE(nonce);\n-\n-        uint64_t shorttxids_size = (uint64_t)shorttxids.size();\n-        READWRITE(COMPACTSIZE(shorttxids_size));\n-        if (ser_action.ForRead()) {\n-            size_t i = 0;\n-            while (shorttxids.size() < shorttxids_size) {\n-                shorttxids.resize(std::min((uint64_t)(1000 + shorttxids.size()), shorttxids_size));\n-                for (; i < shorttxids.size(); i++) {\n-                    uint32_t lsb = 0; uint16_t msb = 0;\n-                    READWRITE(lsb);\n-                    READWRITE(msb);\n-                    shorttxids[i] = (uint64_t(msb) << 32) | uint64_t(lsb);\n-                    static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n-                }\n-            }\n-        } else {\n-            for (size_t i = 0; i < shorttxids.size(); i++) {\n-                uint32_t lsb = shorttxids[i] & 0xffffffff;\n-                uint16_t msb = (shorttxids[i] >> 32) & 0xffff;\n-                READWRITE(lsb);\n-                READWRITE(msb);\n-            }\n-        }\n-\n-        READWRITE(prefilledtxn);\n+    template <typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        s << header << nonce << Using<VectorFormatter<Uint48Formatter>>(shorttxids) << prefilledtxn;\n+    }\n \n-        if (BlockTxCount() > std::numeric_limits<uint16_t>::max())\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s)\n+    {\n+        static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n+        s >> header >> nonce >> Using<VectorFormatter<Uint48Formatter>>(shorttxids) >> prefilledtxn;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379714783",
      "id" : 379714783,
      "in_reply_to_id" : 379630763,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDc4Mw==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 217,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359301046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379714783",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379873178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379873178"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer relevant in new code.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-16T03:53:40Z",
      "diff_hunk" : "@@ -11,17 +11,60 @@\n class CTxMemPool;\n \n // Dumb helper to handle CTransaction compression at serialize-time\n-struct TransactionCompressor {\n-private:\n-    CTransactionRef& tx;\n-public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+struct TransactionCompression\n+{\n+    template<typename Stream> void Ser(Stream& s, const CTransactionRef& tx) { s << tx; }\n+    template<typename Stream> void Unser(Stream& s, CTransactionRef& tx) { s >> tx; }\n+};\n+\n+struct Uint48Formatter\n+{\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n+\n+        uint32_t lsb = v & 0xffffffff;\n+        uint16_t msb = (v >> 32) & 0xffff;\n+        s << lsb << msb;\n+    }\n \n-    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename I> void Unser(Stream& s, I& v)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"Uint48Formatter needs an unsigned integer\");\n+        static_assert(sizeof(I) >= 6, \"Uint48Formatter needs a 48+ bit type\");\n \n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(tx); //TODO: Compress tx encoding\n+        uint32_t lsb;\n+        uint16_t msb;\n+        s >> lsb >> msb;\n+        v = (uint64_t(msb) << 32) | uint64_t(lsb);\n+    }\n+};\n+\n+struct DifferentialSerTransform\n+{\n+    uint16_t m_subtract = 0;\n+\n+    uint16_t operator()(uint16_t val)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r379873178",
      "id" : 379873178,
      "in_reply_to_id" : 379601414,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MzE3OA==",
      "original_commit_id" : "f3480e04d7d8973a715037b58adbb1457b12109a",
      "original_position" : 47,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 359378669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379873178",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky That's amazing, it looks so much cleaner than my approach. I've taken your code and restructured it as commits in this PR.\r\n\r\nI've also replaced `Uint48Formatter` with a `CustomUintFormatter` in serialize.h instead, as a separate commit.",
      "created_at" : "2020-02-16T03:56:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#issuecomment-586666028",
      "id" : 586666028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjY2NjAyOA==",
      "updated_at" : "2020-02-16T03:56:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586666028",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r383402583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383402583"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add CustomUintFormatter\" (96b18829d750baea8577cf409d85c0cd5186b67c)\r\n\r\nCould replace `(v & ~I(MASK)) != 0` with `v <= MASK` to be more consistent with other assert and avoid making an assumption about representation of `v`.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-24T17:21:13Z",
      "diff_hunk" : "@@ -513,6 +513,28 @@ struct VarIntFormatter\n     }\n };\n \n+template<int Bytes>\n+struct CustomUintFormatter\n+{\n+    static_assert(Bytes > 0 && Bytes <= 8, \"CustomUintFormatter Bytes out of range\");\n+    static constexpr uint64_t MASK = 0xffffffffffffffff >> (8 * (8 - Bytes));\n+\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        if (v < 0 || (v & ~I(MASK)) != 0) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r383402583",
      "id" : 383402583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwMjU4Mw==",
      "original_commit_id" : "96b18829d750baea8577cf409d85c0cd5186b67c",
      "original_position" : 12,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 363563041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383402583",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r384157716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384157716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, also renamed MASK to MAX.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2020-02-25T22:11:20Z",
      "diff_hunk" : "@@ -513,6 +513,28 @@ struct VarIntFormatter\n     }\n };\n \n+template<int Bytes>\n+struct CustomUintFormatter\n+{\n+    static_assert(Bytes > 0 && Bytes <= 8, \"CustomUintFormatter Bytes out of range\");\n+    static constexpr uint64_t MASK = 0xffffffffffffffff >> (8 * (8 - Bytes));\n+\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        if (v < 0 || (v & ~I(MASK)) != 0) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r384157716",
      "id" : 384157716,
      "in_reply_to_id" : 383402583,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1NzcxNg==",
      "original_commit_id" : "96b18829d750baea8577cf409d85c0cd5186b67c",
      "original_position" : 12,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 364487398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "updated_at" : "2020-02-25T22:11:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384157716",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 353f376277ad9b87e03c9ccbc1028c4b6d12e8ea, nice change\r\nThanks @ryanofsky for the suggestion making it even more concise.",
      "created_at" : "2020-03-02T16:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#issuecomment-593498483",
      "id" : 593498483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18112",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzQ5ODQ4Mw==",
      "updated_at" : "2020-03-02T16:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593498483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762431419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762431419"
         }
      },
      "author_association" : "NONE",
      "body" : "Late to the party here -- but this does not seem equivalent to the previous encoding mechanism.  In particular, if the host machine is big endian, the previous code and this change will produce different, incompatible results.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2021-12-04T14:23:48Z",
      "diff_hunk" : "@@ -513,6 +513,28 @@ struct VarIntFormatter\n     }\n };\n \n+template<int Bytes>\n+struct CustomUintFormatter\n+{\n+    static_assert(Bytes > 0 && Bytes <= 8, \"CustomUintFormatter Bytes out of range\");\n+    static constexpr uint64_t MAX = 0xffffffffffffffff >> (8 * (8 - Bytes));\n+\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        if (v < 0 || v > MAX) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");\n+        uint64_t raw = htole64(v);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762431419",
      "id" : 762431419,
      "line" : 525,
      "node_id" : "PRRC_kwDOABII584tcce7",
      "original_commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "original_line" : 525,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 22,
      "pull_request_review_id" : 823273168,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762431419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-04T14:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762431419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266627?v=4",
         "events_url" : "https://api.github.com/users/cculianu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cculianu/followers",
         "following_url" : "https://api.github.com/users/cculianu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cculianu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cculianu",
         "id" : 266627,
         "login" : "cculianu",
         "node_id" : "MDQ6VXNlcjI2NjYyNw==",
         "organizations_url" : "https://api.github.com/users/cculianu/orgs",
         "received_events_url" : "https://api.github.com/users/cculianu/received_events",
         "repos_url" : "https://api.github.com/users/cculianu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cculianu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cculianu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cculianu"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762432042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762432042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you give an example of how it would fail?\n\nhtole64 converts a number in host native representation (= the value the uint64_t input has in C) to 64-bit LE representation. On LE systems htole64 is a no-op. On BE systems it performs a byteswap on the representation of the number.",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2021-12-04T14:31:07Z",
      "diff_hunk" : "@@ -513,6 +513,28 @@ struct VarIntFormatter\n     }\n };\n \n+template<int Bytes>\n+struct CustomUintFormatter\n+{\n+    static_assert(Bytes > 0 && Bytes <= 8, \"CustomUintFormatter Bytes out of range\");\n+    static constexpr uint64_t MAX = 0xffffffffffffffff >> (8 * (8 - Bytes));\n+\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        if (v < 0 || v > MAX) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");\n+        uint64_t raw = htole64(v);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762432042",
      "id" : 762432042,
      "in_reply_to_id" : 762431419,
      "line" : 525,
      "node_id" : "PRRC_kwDOABII584tccoq",
      "original_commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "original_line" : 525,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 22,
      "pull_request_review_id" : 823273637,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762432042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-04T14:31:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762432042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762438066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762438066"
         }
      },
      "author_association" : "NONE",
      "body" : "Oh, nevermind. False alarm.  The serializations end up equivalent, they just take different paths to get there. :)",
      "commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "created_at" : "2021-12-04T15:39:32Z",
      "diff_hunk" : "@@ -513,6 +513,28 @@ struct VarIntFormatter\n     }\n };\n \n+template<int Bytes>\n+struct CustomUintFormatter\n+{\n+    static_assert(Bytes > 0 && Bytes <= 8, \"CustomUintFormatter Bytes out of range\");\n+    static constexpr uint64_t MAX = 0xffffffffffffffff >> (8 * (8 - Bytes));\n+\n+    template <typename Stream, typename I> void Ser(Stream& s, I v)\n+    {\n+        if (v < 0 || v > MAX) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");\n+        uint64_t raw = htole64(v);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18112#discussion_r762438066",
      "id" : 762438066,
      "in_reply_to_id" : 762431419,
      "line" : 525,
      "node_id" : "PRRC_kwDOABII584tceGy",
      "original_commit_id" : "353f376277ad9b87e03c9ccbc1028c4b6d12e8ea",
      "original_line" : 525,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 22,
      "pull_request_review_id" : 823278548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18112",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762438066/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-04T15:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/762438066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266627?v=4",
         "events_url" : "https://api.github.com/users/cculianu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cculianu/followers",
         "following_url" : "https://api.github.com/users/cculianu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cculianu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cculianu",
         "id" : 266627,
         "login" : "cculianu",
         "node_id" : "MDQ6VXNlcjI2NjYyNw==",
         "organizations_url" : "https://api.github.com/users/cculianu/orgs",
         "received_events_url" : "https://api.github.com/users/cculianu/received_events",
         "repos_url" : "https://api.github.com/users/cculianu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cculianu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cculianu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cculianu"
      }
   }
]
