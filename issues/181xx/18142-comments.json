[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems critical, thanks for the link on IRC (and the link to the cosigner electrum issue here.) I feel like I saw something on the bitcoin-dev mailing list go by awhile ago, which didn't get much attention, regarding cosigner xpubs in PSBT for the purpose of constructing change addresses -- I forget the details, though.",
      "created_at" : "2020-02-13T23:24:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586021570",
      "id" : 586021570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjAyMTU3MA==",
      "updated_at" : "2020-02-13T23:24:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586021570",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Indeed there is a [mailinglist proposal](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016909.html) to add xpub's to PSBT, which may have its own utility, but a signing device also needs to know those xpub's before it receives coins. That way it can display a receive address without having to trust a connected computer to give it the right cosigner pubkeys.",
      "created_at" : "2020-02-14T08:33:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586152883",
      "id" : 586152883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjE1Mjg4Mw==",
      "updated_at" : "2020-02-14T08:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586152883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Multisig setup is certainly important, but there are many aspects of interaction between parties to make, use, and rotate a multisig wallet. Maybe the wallet composition/proposal file should include information about communication channels for contacting each party?\r\n\r\nI would also worry about flexibility. There are many kinds of exotic wallets (including lightning) that should fit into this kind of model, but right now they require significant custom protocol development.\r\n\r\nI recognize this is \"kitchen sink\" style software that I'm proposing, but I do think there's value in thinking about the full lifecycle of a wallet and its users.",
      "created_at" : "2020-02-14T14:49:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586320083",
      "id" : 586320083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjMyMDA4Mw==",
      "updated_at" : "2020-02-14T14:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586320083",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/101238?v=4",
         "events_url" : "https://api.github.com/users/kanzure/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanzure/followers",
         "following_url" : "https://api.github.com/users/kanzure/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanzure/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanzure",
         "id" : 101238,
         "login" : "kanzure",
         "node_id" : "MDQ6VXNlcjEwMTIzOA==",
         "organizations_url" : "https://api.github.com/users/kanzure/orgs",
         "received_events_url" : "https://api.github.com/users/kanzure/received_events",
         "repos_url" : "https://api.github.com/users/kanzure/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanzure/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanzure"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I'm pretty concerned about cross-device mutual authentication, and compromise of the computer that coordinates signing. I'm assuming a descriptor-based wallet is already used and devices are a \"little smarter\". How does one wallet device know that the other devices are doing what they're supposed to, and what attacks are possible because they don't? Since each device knows the pubkeys of all the others, those same keys can be used to bootstrap cross-device mutual authentication for the multisig signing set. The security of the assets is also a function of the coordinating wallet (online with UTXO set), which is kind of an invisible party to the security of the keys. Cross-device mutual authentication can solve the following problems:\r\n1. Has any device signed a transaction that the others didn't? (e.g. less than m keys in m-of-n have been compromised -- detect probing or failed attack)\r\n2. m of n operators can collude to create one extra transaction by signing two transactions per access to the signing device, and sharing the second transaction with the other m-1 operators. After m trips to cold storage signing legitimate transactions, they can create one extra arbitrary transaction that the coordinating computer (providing UTXOs) doesn't know about. (A single compromised operator with access to all m different signing devices, at different times, could accomplish the same thing)\r\n3. Have the devices been used to sign for forked coins or a 51% attack? (unexpectedly)\r\n4. Is the coordinating computer compromised (e.g. remove a threshold number of devices from the signing entity and take them to a different coordinating computer).\r\n\r\nPrivate communication channels between (offline) devices can generically be created using the SNICKER half-DH idea (if necessary -- but it seems like signatures might be sufficient), since each device knows the pubkeys of all the others. This can then be relayed, but not falsified by the coordinating computer. This creates an encrypted out-of-band communications channel between offline devices, to share whatever state is necessary to ensure that the data being fed to them is consistent across devices. The coordinating computer(s) is then holding some state, so kind-of is an epsilon participant in the (m+epsilon)-of-n wallet. I have two ideas that might be interesting:\r\n1. A rolling state hash: each device maintains an \"epoch\" hash defined as `h_{epoch} = hash(h_{epoch-1}|serialized_transaction)`. After signing, each device updates its epoch hash and *signs* the new epoch hash for relay to the other devices. Devices excluded from signing but used later (n-m of those) can be relayed the entire history of signing by the coordinating computer (or another signing device).\r\n2. UTXO set accumulator: each device can be fed the set of known/available UTXOs for storage. When one is spent, it removes it from its memory (and could refuse to sign a double-spend if desired). The device refuses to sign unknown UTXOs (forked coins). NiPoWPoW can be used to prevent falsifying the UTXO set.\r\n\r\nOne could define a BIP32 key path for mutual device authentication or half-DH/SNICKER encrypted communication.\r\n\r\nIt might be interesting to consider whether such \"rolling state\" could be used as entropy for determining the k value in MuSig. I'd love to kill that extra round of communication...\r\n\r\nWhat other attack vectors can be mitigated by giving offline devices an encrypted communications channel, and do you think this is valuable enough to implement?",
      "created_at" : "2020-02-14T22:56:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586510581",
      "id" : 586510581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjUxMDU4MQ==",
      "updated_at" : "2020-02-14T22:56:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586510581",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1746780?v=4",
         "events_url" : "https://api.github.com/users/mcelrath/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mcelrath/followers",
         "following_url" : "https://api.github.com/users/mcelrath/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mcelrath/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mcelrath",
         "id" : 1746780,
         "login" : "mcelrath",
         "node_id" : "MDQ6VXNlcjE3NDY3ODA=",
         "organizations_url" : "https://api.github.com/users/mcelrath/orgs",
         "received_events_url" : "https://api.github.com/users/mcelrath/received_events",
         "repos_url" : "https://api.github.com/users/mcelrath/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mcelrath/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mcelrath"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think we should take small steps :-)\r\n\r\nSimilar to PSBT, whatever format we come up with can have [proprietary fields](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#proprietary-use-type), which people can use to try out new (authentication) protocols.\r\n\r\nI would like to limit the scope of this issue to initial wallet setup. For many wallet types you can derive all future addresses during setup. PSBT can be expanded for things that happen before / during / after signing.\r\n\r\nOther wallet types, like Lightning, can't derive addresses at wallet generation. Some of that information can piggy-back in PSBTs as most steps in the lightning protocol involve generating a new transaction. But maybe interactive addresses generating requires yet another mechanism.",
      "created_at" : "2020-02-15T09:37:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586572575",
      "id" : 586572575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjU3MjU3NQ==",
      "updated_at" : "2020-02-15T09:37:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586572575",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think proprietary fields will cover everything I mentioned. Thanks!",
      "created_at" : "2020-02-15T17:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-586622852",
      "id" : 586622852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjYyMjg1Mg==",
      "updated_at" : "2020-02-15T17:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586622852",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1746780?v=4",
         "events_url" : "https://api.github.com/users/mcelrath/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mcelrath/followers",
         "following_url" : "https://api.github.com/users/mcelrath/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mcelrath/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mcelrath",
         "id" : 1746780,
         "login" : "mcelrath",
         "node_id" : "MDQ6VXNlcjE3NDY3ODA=",
         "organizations_url" : "https://api.github.com/users/mcelrath/orgs",
         "received_events_url" : "https://api.github.com/users/mcelrath/received_events",
         "repos_url" : "https://api.github.com/users/mcelrath/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mcelrath/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mcelrath"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> ({0,1} is a fake descriptor syntax; for now you need a separate receive and change descriptor)\r\n\r\nTo be pedantic, the receiving and change chains need to be separate and marked appropriately. One is useful for eliding outputs from display during transaction signing, and the other for displaying addresses on the screen for depositing verification purposes.",
      "created_at" : "2020-02-18T15:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-587515306",
      "id" : 587515306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzUxNTMwNg==",
      "updated_at" : "2020-02-18T15:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587515306",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think an interesting security problem is validating the data being put together to define the on-chain policy, i.e., making sure the composer file hasn't been owned by a malicious or fault actor. It needs to be simple to re-compute by hand.",
      "created_at" : "2020-02-18T15:28:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-587518233",
      "id" : 587518233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NzUxODIzMw==",
      "updated_at" : "2020-02-18T15:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587518233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs I've been tinkering with the format a bit, including splitting receive and change: https://gist.github.com/Sjors/c7342cb27a7cf5f2d35469bb06eae4f4",
      "created_at" : "2020-02-18T20:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-587780508",
      "id" : 587780508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4Nzc4MDUwOA==",
      "updated_at" : "2020-02-18T20:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587780508",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 suggested on IRC (wallet meeting 2020-02-28) to just pass a miniscript policy around and have each participant fill out the details. I think that covers at least simple use cases. Though we need a way to:\r\n1. add placeholders to policy language (and still be able to reason about them)\r\n2. add origin info to policy language (I think #16800 does that?)\r\n3. check if your policy is part of the overal policy, and of the final compiled miniscript (not supported yet in c++ miniscript)\r\n ",
      "created_at" : "2020-02-28T19:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-592690755",
      "id" : 592690755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjY5MDc1NQ==",
      "updated_at" : "2020-02-28T19:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592690755",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think that this post from last year (https://shiftcrypto.ch/blog/the-pitfalls-of-multisig-when-using-hardware-wallets/) and this very recent blog post (https://shiftcrypto.ch/blog/how-nearly-all-personal-hardware-wallet-multisig-setups-are-insecure/) by ShiftCrypto do a very good job demonstrating that there isn't any well defined and observed standard for secure multisig setups.\r\n\r\nThere are many attacks that need to be defended against, various data that needs to be confirmed/verified (which needs to be properly communicated to the user - the design community wants to start working on this), and bad practices that need to end (we shouldn't be using Zpubs/Ypubs etc, wallets should be using descriptors).\r\n\r\nIs the wallet composer file being discussed here intended to be Core policy, or a larger industry wide standard? I have tried to summarize everyone's points here:  https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018132.html",
      "created_at" : "2020-11-10T19:57:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-724932318",
      "id" : 724932318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNDkzMjMxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-10T19:57:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724932318",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "For the situation of a central multisig co-ordinator doing a wallet setup from multiple hardware wallets, it may be worthwhile to consider the Uniform Resource (UR) specification, specifically the [UR Type Definition for BIP44 Accounts](https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-015-account.md). \r\n\r\nUR is a standard mainly used to structure data concisely for transmission over QR codes. The specification in the link above allows hardware wallets to share details of a particular BIP44 account they can sign for. All the common script types are supported through an array of output descriptors, which is supplied along with the master fingerprint for the device. This allows the co-ordinator to select the appropriate output descriptor depending on the script type for the wallet it is creating, and then add the device to the multisig setup.",
      "created_at" : "2020-11-11T12:20:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-725392530",
      "id" : 725392530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNTM5MjUzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-11T12:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/725392530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/862166?v=4",
         "events_url" : "https://api.github.com/users/craigraw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/craigraw/followers",
         "following_url" : "https://api.github.com/users/craigraw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/craigraw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/craigraw",
         "id" : 862166,
         "login" : "craigraw",
         "node_id" : "MDQ6VXNlcjg2MjE2Ng==",
         "organizations_url" : "https://api.github.com/users/craigraw/orgs",
         "received_events_url" : "https://api.github.com/users/craigraw/received_events",
         "repos_url" : "https://api.github.com/users/craigraw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/craigraw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/craigraw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/craigraw"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thank you for the link, I wasn't aware of that research.\r\n\r\nBlockchain Commons have also worked on a standard for URIs and QR codes for PSBTs, wallet info, etc (BCR-2020-005) linked here:  https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-005-ur.md\r\n\r\nMy concern would be that we should all be going through the existing standards process (bitcoin-dev; BIP) to create a secure standard(s) for coordination of (offline) multisig wallets  (where offline can be HWWs or offline Core).  Here is where I brought up the same concerns with Blockchain Commons https://github.com/BlockchainCommons/Airgapped-Wallet-Community/issues/28\r\n\r\nThere is also the existing BIP 45 https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki\r\n\r\nI don't think this should be Core policy or a standard within Blockchain Commons (I was not a part of these discussions, so maybe my interpretation is incorrect).\r\n\r\nOr, with Musig, Schnorr, and Taproot, do we just continue the work on implementing Musig keytrees for multisig? And say that pre-Schnorr multisig was never securely standardized/implemented?",
      "created_at" : "2020-11-11T20:15:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-725638500",
      "id" : 725638500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNTYzODUwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-11T20:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/725638500",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@Rspigler wrote:\r\n> I think that this post from last year (https://shiftcrypto.ch/blog/the-pitfalls-of-multisig-when-using-hardware-wallets/) and this very recent blog post (https://shiftcrypto.ch/blog/how-nearly-all-personal-hardware-wallet-multisig-setups-are-insecure/) by ShiftCrypto do a very good job demonstrating that there isn't any well defined and observed standard for secure multisig setups.\r\n\r\nOne thing that we've been concerned about lately is reuse of the xprv/xpub path (what I call a keyset) in multisig wallets. This is where the same keyset  is used for two different multisigs. It isn't as dangerous as address reuse, but it does mean compromise of one keyset's private key also compromises all multisig account descriptors that it is used with.\r\n\r\nCurrently Gordian Signer (a multisig signing-only app) doesn't store seeds, but instead using offline airgapped tools like LetheKit to derive the xprv/xpub. But we do have to store state as to what keysets have been offered to other multisig descriptors. I'd really like to see a standard approach on how to manage against keyset reuse to enable interoperability and portability.",
      "created_at" : "2020-11-12T22:19:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-726374155",
      "id" : 726374155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNjM3NDE1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-12T22:19:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726374155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "This thread is timely, as this is exactly what we are puzzling through right now with Gordian Signer (for Mac, iOS and Android), which is a co-signing only app (no PSBT initiation, solely co-signing). In general, all the Gordian apps (wallet, signer, coordinator, server, etc.) are explicitly descriptor and multisig-centric âÂ we are even considering dropping single sig. They also all are able to be airgapped and torgapped based on different security models.\r\n\r\nhttps://github.com/BlockchainCommons/GordianSigner-macOS\r\nhttps://github.com/BlockchainCommons/GordianSigner-Android\r\nhttps://github.com/BlockchainCommons/GordianSigner-Catalyst\r\nhttps://github.com/BlockchainCommons/bc-keytool-cli\r\n\r\nAll of the above can already sign PSBTs, including animated QRs for large PSBTs, but the important design question is a standard way to accept a policy request (\"will you participate in a 3 of 5 with a timelock to 2 of 3\"), and if that is acceptable offer a keyset (e.g. [d34db33f/48'/0'/19']xpub6ERApfZwUNrhLCkâ¦\", and hopefully get an account map back (an account map is a descriptor with no xprvs in it]. \r\n",
      "created_at" : "2020-11-12T22:28:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-726380877",
      "id" : 726380877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNjM4MDg3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-12T22:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726380877",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "/cc @fonta1n3 @wolfmcnally @jollyjoker992 @ksedgwic",
      "created_at" : "2020-11-12T22:31:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-726381744",
      "id" : 726381744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNjM4MTc0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-12T22:31:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726381744",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@benma @achow101 @hugohn @stepansnigirev @prusnak @jlopp ",
      "created_at" : "2020-11-19T04:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-730121999",
      "id" : 730121999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMDEyMTk5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-19T04:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730121999",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "So if my understanding is correct, the BCR-2020-015 standard offers an array for all script types, because the use case is for the offline signer to supply the coordinator with all the information that might be needed (the coordinator will then choose the one descriptor that is necessary to create the wallet).  That seems superfluous.  Why not have the coordinator start the creation process, send a 'policy request', and get a 'keyset' back like @ChristopherA  talked about? That seems much nicer, no?  The coordinator could then transfer 'account maps' to all offline signers.\r\n\r\nBesides that, a concern I have with BCR-2020-015 is the use of 'BIP48', which isn't actually a standard.\r\n\r\nIs there a BCR in process for policy requests or account maps? I guess that's why we're all here.",
      "created_at" : "2020-12-12T22:04:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-743911629",
      "id" : 743911629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MzkxMTYyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-12T22:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743911629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I raised this topic, originally as an issue, but given lack of consensus I moved to to a discussion (a new GitHub feature). \r\n\r\nhttps://github.com/BlockchainCommons/Airgapped-Wallet-Community/discussions/32\r\n\r\n@Rspigler Iâd appreciate you also adding your thoughts there.",
      "created_at" : "2020-12-13T01:46:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-743933429",
      "id" : 743933429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MzkzMzQyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T01:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743933429",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Why not have the coordinator start the creation process, send a 'policy request', and get a 'keyset' back\r\n\r\nOn the contrary, this seems superfluous to me, requiring two data exchanges rather than one. When it's easy to derive different public keys, why put additional burden on the user? The complete output descriptor can then be shared when known with BCR-2020-010.\r\n\r\n> Besides that, a concern I have with BCR-2020-015 is the use of 'BIP48', which isn't actually a standard.\r\n\r\nI find this concern to be impractical. The use of the 48'/... paths is so well accepted and common that there is no multisig capable hardware wallet that does not conform. There is no way to replace it with something else without causing great confusion and \"loss\" of funds. \r\n\r\n",
      "created_at" : "2020-12-13T06:24:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-743960289",
      "id" : 743960289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mzk2MDI4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T06:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743960289",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/862166?v=4",
         "events_url" : "https://api.github.com/users/craigraw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/craigraw/followers",
         "following_url" : "https://api.github.com/users/craigraw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/craigraw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/craigraw",
         "id" : 862166,
         "login" : "craigraw",
         "node_id" : "MDQ6VXNlcjg2MjE2Ng==",
         "organizations_url" : "https://api.github.com/users/craigraw/orgs",
         "received_events_url" : "https://api.github.com/users/craigraw/received_events",
         "repos_url" : "https://api.github.com/users/craigraw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/craigraw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/craigraw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/craigraw"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@craigraw write:\r\n> The use of the 48'/... paths is so well accepted and common that there is no multisig capable hardware wallet that does not conform. \r\n\r\nIâm still quite uncomfortable with the so-called 48â conventions. They result in key reuse with multsigs, which I believe to be a bad idea. Less risky than address reuse, but still an issue.\r\n\r\nI also donât like that you canât create sub-accounts like you can with single-sig.\r\n\r\nIâm fine with a multisig coordinator suggesting a a specific path, but it should be able to handle when it is returned a keyset â[m fingerprint/path]xpubâ â it may have already given that path to another multisig. ",
      "created_at" : "2020-12-13T07:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-743969282",
      "id" : 743969282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mzk2OTI4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T07:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743969282",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "We're also assuming the coordinator is trusted, so wherever/whenever this is implemented, there should be some UX warning to not accept a policy request or to send a keyset to/from a coordinator that you don't know or recognize.\r\n\r\n@craigraw You bring up a good point.  All signers will need to know all other signers info to securely sign PSBTs (@benma has done good research on this). So this means the coordinator will need to send account maps back to all signers after creation of the wallet (last step).\r\n\r\nIf we create the wallet your way (BCR-2020-015), there may be redundant information, but it means there are only 2 data exchanges.  Signers send the BIP 44 arrays, the coordinator creates the wallet, and sends back to the signers all the account maps.\r\n\r\nMy proposed way would require 3 data exchanges. (Coordinator proposes wallet to signers, signers send back specific BIP44 descriptor, then coordinator sends back account maps).",
      "created_at" : "2020-12-13T21:48:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-744073781",
      "id" : 744073781,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDA3Mzc4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T21:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744073781",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What is the authentication scheme here? Is it just trust on first use, with warnings if data changes?* Encourage out of band/in person authentication?\r\n\r\nIs there a need to encrypt or authenticate the PSBTs in transit?\r\n\r\n*From Benma's articles, (at least) the following needs to happen for secure offline multisignature:\r\n\r\nTo receive securely, the offline signers need to be able to verify the following:\r\n\r\n    The receive address, which has to encode the hash of an ordinary multisig redeem script with no other spending conditions\r\n    The key of the hardware wallet, which has to be one of the public keys in the redeem script\r\n    The keypath of the displayed address in order to avoid ransom attacks if no restrictions are enforced by the hardware wallet\r\n    The number of cosigners in order to prevent an attacker from adding more\r\n    The threshold of required signatures to not be higher or lower than intended\r\n    The xpubs of the cosigners in order to prevent an attacker from swapping them\r\n\r\nIt is advised that in order to prevent human error or hardware/firmware vulnerabilities, to verify receive addresses on multiple devices.\r\n\r\n\r\nTo send securely, the offline signers need to be able to verify the following:\r\n\r\n    The recipientâs address, displayed and confirmed by the user like with singlesig\r\n    The change address, having the same cosigners and threshold in an ordinary multisig script with no other spending conditions\r\n    The change goes to an address at a keypath recoverable by the user\r\n\r\n\r\nAll major HWW vendors (Trezor, Ledger, Coldcard, and Bitbox) have been vulnerable to a remote attack due to at least one of the above, so I think that's why this is such an important task.\r\n\r\nAlthough we're just working on a standard right now, hopefully good software and UI could check all of the above and alert the end user instead of them having to do the checks manually.\r\n\r\nJust trying to put all my thoughts down.",
      "created_at" : "2020-12-14T20:23:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-744688397",
      "id" : 744688397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDY4ODM5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T20:23:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744688397",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @craigraw write:\r\n> \r\n> > The use of the 48'/... paths is so well accepted and common that there is no multisig capable hardware wallet that does not conform.\r\n> \r\n> Iâm still quite uncomfortable with the so-called 48â conventions. They result in key reuse with multsigs, which I believe to be a bad idea. Less risky than address reuse, but still an issue.\r\n> \r\n> I also donât like that you canât create sub-accounts like you can with single-sig.\r\n> \r\n> Iâm fine with a multisig coordinator suggesting a a specific path, but it should be able to handle when it is returned a keyset â[m fingerprint/path]xpubâ â it may have already given that path to another multisig.\r\n\r\nI was under the impression you can create sub accounts with 48':\r\n\r\naccount 0: `m/48'/0'/0'/2'`\r\naccount 1: `m/48'/0'/1'/2'`",
      "created_at" : "2020-12-15T02:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745005934",
      "id" : 745005934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTAwNTkzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T02:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745005934",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30832395?v=4",
         "events_url" : "https://api.github.com/users/Fonta1n3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fonta1n3/followers",
         "following_url" : "https://api.github.com/users/Fonta1n3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fonta1n3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fonta1n3",
         "id" : 30832395,
         "login" : "Fonta1n3",
         "node_id" : "MDQ6VXNlcjMwODMyMzk1",
         "organizations_url" : "https://api.github.com/users/Fonta1n3/orgs",
         "received_events_url" : "https://api.github.com/users/Fonta1n3/received_events",
         "repos_url" : "https://api.github.com/users/Fonta1n3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fonta1n3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fonta1n3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fonta1n3"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@Fonta1n3 wrote\r\n> I was under the impression you can create sub accounts with 48':\r\n> \r\n> account 0: `m/48'/0'/0'/2'`\r\n> account 1: `m/48'/0'/1'/2'`\r\n\r\nI wasn't aware that any current wallet software was using these sub-accounts in an interoperable way.  I had a report from at least one implementor that had investigated it with no good results.\r\n\r\nIs anyone watching this issue successfully using 48' sub-accounts?\r\n\r\n-- Christopher Allen\r\n\r\n",
      "created_at" : "2020-12-15T02:30:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745011559",
      "id" : 745011559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTAxMTU1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T02:30:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745011559",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @Fonta1n3 wrote\n> \n> > I was under the impression you can create sub accounts with 48':\n> \n> > \n> \n> > account 0: `m/48'/0'/0'/2'`\n> \n> > account 1: `m/48'/0'/1'/2'`\n> \n> \n> \n> I wasn't aware that any current wallet software was using these sub-accounts in an interoperable way.  I had a report from at least one implementor that had investigated it with no good results.\n> \n> \n> \n> Is anyone watching this issue successfully using 48' sub-accounts?\n> \n> \n> \n> -- Christopher Allen\n> \n> \n> \n> \n\nI propose we do support that and we get an actual BIP written up so we no longer need to speculate.",
      "created_at" : "2020-12-15T02:32:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745012100",
      "id" : 745012100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTAxMjEwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T02:32:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745012100",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30832395?v=4",
         "events_url" : "https://api.github.com/users/Fonta1n3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fonta1n3/followers",
         "following_url" : "https://api.github.com/users/Fonta1n3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fonta1n3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fonta1n3",
         "id" : 30832395,
         "login" : "Fonta1n3",
         "node_id" : "MDQ6VXNlcjMwODMyMzk1",
         "organizations_url" : "https://api.github.com/users/Fonta1n3/orgs",
         "received_events_url" : "https://api.github.com/users/Fonta1n3/received_events",
         "repos_url" : "https://api.github.com/users/Fonta1n3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fonta1n3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fonta1n3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fonta1n3"
      }
   },
   {
      "author_association" : "NONE",
      "body" : ">> I was under the impression you can create sub accounts with 48':\r\n>>\r\n>> account 0: m/48'/0'/0'/2'\r\n>> account 1: m/48'/0'/1'/2'\r\n>\r\n> I propose we do support that and we get an actual BIP written up so we no longer need to speculate.\r\n\r\nI was the one who originally came up with this `48h` scheme.\r\nWe needed a default derivation path to use for segwit multisig of bip39/hw-cosigners for Electrum.\r\nAt the time no other wallet seemed to have any interest in such a scheme [0], and we wanted to have something out, so instead of creating a BIP, we just rolled a \"custom\" scheme with properties we considered reasonable.\r\n\r\nSee e.g.:\r\nhttps://github.com/spesmilo/electrum/issues/4352#issuecomment-398028047\r\nhttps://github.com/spesmilo/electrum/pull/4465\r\n\r\nRe account support, as said there, the scheme is:\r\n`m / purpose' / coin_type' / account' / script_type' / change / address_index`\r\nbut also:\r\n> For multisig accounts, there is no way to autodetect any accounts\r\n\r\n[0]: I asked devs from trezor/ledger/bitbox privately. (benma from bitbox expressed interest but said they were busy with other things and had not had time to look into multisig yet. johoe ~from trezor had constructive feedback, see linked issue. No response from ledger.) I have also tried to find other wallets besides Electrum that supported multisig and at least had segwit on the roadmap, to solicit feedback, but could not find any.",
      "created_at" : "2020-12-15T10:42:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745206343",
      "id" : 745206343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTIwNjM0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T10:43:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745206343",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/29142493?v=4",
         "events_url" : "https://api.github.com/users/SomberNight/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SomberNight/followers",
         "following_url" : "https://api.github.com/users/SomberNight/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SomberNight/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SomberNight",
         "id" : 29142493,
         "login" : "SomberNight",
         "node_id" : "MDQ6VXNlcjI5MTQyNDkz",
         "organizations_url" : "https://api.github.com/users/SomberNight/orgs",
         "received_events_url" : "https://api.github.com/users/SomberNight/received_events",
         "repos_url" : "https://api.github.com/users/SomberNight/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SomberNight/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SomberNight/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SomberNight"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the link to https://github.com/spesmilo/electrum/issues/4352\r\n\r\nthe 48' makes more sense to me now (BIP44 with `script_type` to support future updates).  I still think it'd be best to standardize it with a BIP as proposed by @Fonta1n3 (maybe most devs would prefer to have a BIP for each script type, like was done for BIP 49 and 84, I don't know.  That's the purpose of the standardization process).\r\n\r\nHow does it work without a `cosigner_index`? I can't find any documentation.",
      "created_at" : "2020-12-15T18:56:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745496010",
      "id" : 745496010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTQ5NjAxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T18:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745496010",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "There is more discussion about documenting or revising the 48â derivation, and more links, in the Airgapped Wallet Community discussion in GitHub https://github.com/BlockchainCommons/Airgapped-Wallet-Community/discussions/16",
      "created_at" : "2020-12-15T20:21:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745544550",
      "id" : 745544550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTU0NDU1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T20:21:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745544550",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ghost43 There does not seem to be any âsub-accountâ (not 0 but 1+) capability for this using the same xpubs. Is that correct? \r\n\r\nAs I interpret the difference between a BIP44 definition of account, vs its usage in multisig under 48, the possessor of an xpub level -1 in BIP48 can create and watch all sub-accounts. This is not true under 48, as each account may have different other xpubs involved in their descriptors, thus canât watch them.\r\n\r\nRelated, how does Electrum increment its account to prevent xpub reuse? Do you have some state that increments for each multisig you has been requested?",
      "created_at" : "2020-12-15T20:31:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745549648",
      "id" : 745549648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTU0OTY0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T20:31:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745549648",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I wonder if there is some way for script_type' to hash the wallet descriptor Account Map (subtracting the xpubs). That way common descriptor types could be differentiated and discovered without requiring registration?\r\n\r\nFor instance, use as account_index' the hash of âsh(wpkh())â instead of 84'?",
      "created_at" : "2020-12-15T20:38:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745553135",
      "id" : 745553135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTU1MzEzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T20:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745553135",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Another example: the has of `wsh(multi(2,,,))` is the account_typeâ for a P2WSH 2-of-3.\r\n\r\nBTW, Gordian Wallet (a Bitcoin multisig & descriptor centric wallet) calls these empty descriptors like `wsh(multi(2,,,))` as a *âPolicy Mapâ*. We use them in a protocol when initiating a new account on a co-signing device. Your device gets one of these Policy Maps as a request, and you decide if you want to participate. If later you receive a descriptor (aka Account Map) or a PSBT that doesnât match that Policy Map, you refuse to sign it.\r\n\r\n/cc @fonta1n3 @wolfmcnally\r\n",
      "created_at" : "2020-12-15T20:51:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745559430",
      "id" : 745559430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTU1OTQzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T21:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745559430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/69103?v=4",
         "events_url" : "https://api.github.com/users/ChristopherA/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ChristopherA/followers",
         "following_url" : "https://api.github.com/users/ChristopherA/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ChristopherA/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ChristopherA",
         "id" : 69103,
         "login" : "ChristopherA",
         "node_id" : "MDQ6VXNlcjY5MTAz",
         "organizations_url" : "https://api.github.com/users/ChristopherA/orgs",
         "received_events_url" : "https://api.github.com/users/ChristopherA/received_events",
         "repos_url" : "https://api.github.com/users/ChristopherA/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ChristopherA/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ChristopherA/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ChristopherA"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is it possible to fix the sub-account issue? Instead of m/48' we could make a 'BIP-45' like BIP per script type - however, BIP45 doesn't have accounts. Could we add accounts to the derivation?\r\n\r\nI guess there is also the option to write a BIP44 type BIP with specific BIP43 purpose fields per script type, then remove the specially created`script_type` index, which would leave you with a normal BIP44 derivation path and working accounts?",
      "created_at" : "2020-12-15T23:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745630175",
      "id" : 745630175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTYzMDE3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T23:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745630175",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> That way common descriptor types could be differentiated and discovered without requiring registration?\r\n\r\nThe signers still need to register to the coordinator, for a total of 2 data exchanges? (https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-744073781).  What does having some of the derivation written from itself benefit?\r\n\r\n> Your device gets one of these Policy Maps as a request...\r\n\r\nI guess any comprehensive standard should support either the signer or coordinator initiating the wallet creation (the array of descriptors method described in BCR-2020-015, or the Policy Map request method).  \r\n\r\n> If later you receive a descriptor (aka Account Map) or a PSBT that doesnât match that Policy Map, you refuse to sign it.\r\n\r\nThose checks are good way to prevent some of https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-744688397",
      "created_at" : "2020-12-15T23:41:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-745635978",
      "id" : 745635978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTYzNTk3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-15T23:41:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745635978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ChristopherA \r\n\r\n> There does not seem to be any âsub-accountâ (not 0 but 1+) capability for this using the same xpubs. Is that correct?\r\n>\r\n> As I interpret the difference between a BIP44 definition of account, vs its usage in multisig under 48, the possessor of an xpub level -1 in BIP48 can create and watch all sub-accounts. This is not true under 48, as each account may have different other xpubs involved in their descriptors, thus canât watch them.\r\n\r\nYou misunderstand BIP44 then. Even in BIP44, you cannot generate the public keys for multiple accounts from any xpub. xpubs are only possible for specific accounts, not across accounts. See [BIP32](https://github.com/bitcoin/bips/blob/7e13d23d4339e5704f3c12d88704ee7520d16149/bip-0032.mediawiki#public-parent-key--private-child-key) (note that the account level is hardened in both \"purpose48\" and BIP44).",
      "created_at" : "2020-12-16T10:21:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-746044560",
      "id" : 746044560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjA0NDU2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T10:22:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746044560",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/29142493?v=4",
         "events_url" : "https://api.github.com/users/SomberNight/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SomberNight/followers",
         "following_url" : "https://api.github.com/users/SomberNight/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SomberNight/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SomberNight",
         "id" : 29142493,
         "login" : "SomberNight",
         "node_id" : "MDQ6VXNlcjI5MTQyNDkz",
         "organizations_url" : "https://api.github.com/users/SomberNight/orgs",
         "received_events_url" : "https://api.github.com/users/SomberNight/received_events",
         "repos_url" : "https://api.github.com/users/SomberNight/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SomberNight/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SomberNight/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SomberNight"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> > > I was under the impression you can create sub accounts with 48':\r\n> > > account 0: m/48'/0'/0'/2'\r\n> > > account 1: m/48'/0'/1'/2'\r\n> > \r\n> > \r\n> > I propose we do support that and we get an actual BIP written up so we no longer need to speculate.\r\n> \r\n> I was the one who originally came up with this `48h` scheme.\r\n> We needed a default derivation path to use for segwit multisig of bip39/hw-cosigners for Electrum.\r\n> At the time no other wallet seemed to have any interest in such a scheme [0], and we wanted to have something out, so instead of creating a BIP, we just rolled a \"custom\" scheme with properties we considered reasonable.\r\n> \r\n> See e.g.:\r\n> [spesmilo/electrum#4352 (comment)](https://github.com/spesmilo/electrum/issues/4352#issuecomment-398028047)\r\n> [spesmilo/electrum#4465](https://github.com/spesmilo/electrum/pull/4465)\r\n> \r\n> Re account support, as said there, the scheme is:\r\n> `m / purpose' / coin_type' / account' / script_type' / change / address_index`\r\n> but also:\r\n> \r\n> > For multisig accounts, there is no way to autodetect any accounts\r\n> \r\n> [0]: I asked devs from trezor/ledger/bitbox privately. (benma from bitbox expressed interest but said they were busy with other things and had not had time to look into multisig yet. johoe ~from trezor had constructive feedback, see linked issue. No response from ledger.) I have also tried to find other wallets besides Electrum that supported multisig and at least had segwit on the roadmap, to solicit feedback, but could not find any.\r\n\r\nIt would be great to get your input (and anyone else here!) to help make BIP48 a reality, I have gone ahead and essentially modified bip44 to what my interpretation of what a bip48 would look like [https://github.com/Fonta1n3/bips/blob/master/bip-0048.mediawiki](https://github.com/Fonta1n3/bips/blob/master/bip-0048.mediawiki). I am not interested in doing this on my own, but it needs to be done. Any feedback, contribution or proposal would be appreciated.",
      "created_at" : "2020-12-17T02:03:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-747155856",
      "id" : 747155856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzE1NTg1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T02:03:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747155856",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/30832395?v=4",
         "events_url" : "https://api.github.com/users/Fonta1n3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fonta1n3/followers",
         "following_url" : "https://api.github.com/users/Fonta1n3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fonta1n3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fonta1n3",
         "id" : 30832395,
         "login" : "Fonta1n3",
         "node_id" : "MDQ6VXNlcjMwODMyMzk1",
         "organizations_url" : "https://api.github.com/users/Fonta1n3/orgs",
         "received_events_url" : "https://api.github.com/users/Fonta1n3/received_events",
         "repos_url" : "https://api.github.com/users/Fonta1n3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fonta1n3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fonta1n3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fonta1n3"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@achow101's proposed new PSBT v1:\r\n\r\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-December/018300.html",
      "created_at" : "2020-12-17T03:28:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-747181043",
      "id" : 747181043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzE4MTA0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T03:28:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747181043",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Does this help streamline the process at all?\r\nhttps://github.com/bitcoin/bitcoin/issues/17190",
      "created_at" : "2021-01-14T00:43:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-759849501",
      "id" : 759849501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTg0OTUwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T00:43:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759849501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "See [BSMS](https://github.com/bitcoin/bips/pull/1097) for a standard for coordinating multisig wallets",
      "created_at" : "2021-05-13T07:46:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-840385161",
      "id" : 840385161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDM4NTE2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T07:46:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840385161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "BSMS / [BIP 129](https://github.com/bitcoin/bips/blob/master/bip-0129.mediawiki) seems reasonable, but afaik only [Nunchuk](https://resources.nunchuk.io/getting-started/singledevicemultisig/) uses it. Some Coinkite folks were involved with the standard, but it's not yet anywhere in their firmware. Specter Desktop doesn't support it either yet.\r\n\r\nA good place to start for Bitcoin Core might be implementing the Coordinator and Signer role as a Python helper script. It's easiest to implement with encryption disabled. The script could make calls to HWI (directly or via External Signer RPC calls).\r\n\r\nI added a reference to BSMS to the multisig labyrinth guide in #24861, closing this.",
      "created_at" : "2022-09-06T13:28:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-1238152553",
      "id" : 1238152553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "IC_kwDOABII585JzLVp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238152553/reactions"
      },
      "updated_at" : "2022-09-06T13:28:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238152553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors sounds great! There is also a lot of demand for other Bitcoin Core clients to act as the signers (not just external signers), but that can be discussed in the future",
      "created_at" : "2022-09-06T19:28:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18142#issuecomment-1238565768",
      "id" : 1238565768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18142",
      "node_id" : "IC_kwDOABII585J0wOI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238565768/reactions"
      },
      "updated_at" : "2022-09-06T19:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238565768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   }
]
