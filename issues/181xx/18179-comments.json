[
   {
      "author_association" : "MEMBER",
      "body" : "While this is an impressive piece of work, I don't think it makes sense to add layer 2 functionality to this project. Using the same repository, the same codebase, will automatically make reviews harder and will increase the risk of introducing critical bugs that impact all areas of the software.\r\n\r\nInstead of clutching everything together, we should try to achieve process separation (wallet / node / validation / GUI / etc.).\r\n\r\nWhat are the benefits of this over a separated Bitcoin-Core & c-lightning (or any other ln daemon)?\r\nIf the user interface should be improved, one could developer a new type of a `bitcoin-cli` (a command-line client) that combines the calls to Bitcoin Core and a lightning daemon.",
      "created_at" : "2020-02-19T17:34:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588345702",
      "id" : 588345702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODM0NTcwMg==",
      "updated_at" : "2020-02-19T17:34:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588345702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @icota for this cool PoC, that's really impressive but I do share Jonas opinion here. Better would be to spend time on process separation/interface cleaning/reusable library than pouring more stuff in one repository which would slow down development process of every component involved. It would be great for bitcoin ecosystem to reuse Core components like wallet utxo-management or fee-bumping if we turn them more library-like a la rust-lightning and avoid a lot of reinventing the wheel again and again. It's true they aren't easy piece of software to get right. \r\n\r\nEnforcing a specific runtime on users is a hazardous move given the huge diversity of use-cases. A mobile wallet is easier to build as one monolithic process whereas exchange maybe interested to have a micro-services approach for high-availability. And there is also resources-constrained, embedded devices where you're not going to run a full bitcoin stack on it. Running a full-node is already  bandwidth-expensive in a lot of places, not even mentionning mobile data plan. So IMO _modularity_ is a better way to serve a broad, diverse base of users/requirements.",
      "created_at" : "2020-02-19T20:03:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588421629",
      "id" : 588421629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODQyMTYyOQ==",
      "updated_at" : "2020-02-19T20:03:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588421629",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What are the benefits of this over a separated Bitcoin-Core & c-lightning (or any other ln daemon)?\r\n\r\nPresumably one hypothetical benefit is not having a separate wallet.",
      "created_at" : "2020-02-19T21:45:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588487315",
      "id" : 588487315,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODQ4NzMxNQ==",
      "updated_at" : "2020-02-19T21:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588487315",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Assume you were to rebase this on top of @ryanofsky's process isolated wallet, could you keep all of the rust integrated stuff in the wallet process? Can the rust ln networking stuff be running a separate process from most of the wallet stuff?\r\n\r\nI think it would be a pretty decent design that you can offer a wallet module compiled with or without lightning, and then the \"core node\" software (which should have a minimum amount of stuff) can be just about validation.",
      "created_at" : "2020-02-19T22:46:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588513055",
      "id" : 588513055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODUxMzA1NQ==",
      "updated_at" : "2020-02-19T22:46:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588513055",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you split the rust-lightning code out of this, at least? Check for it in configure and dynamic link to its library...",
      "created_at" : "2020-02-20T00:09:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588540559",
      "id" : 588540559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODU0MDU1OQ==",
      "updated_at" : "2020-02-20T00:09:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588540559",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm very divided about this. I's impressive work, but also, I don't want this project to compete with c-lightning, lnd et al. It's their own specialty, they do what they do well, and maintaining the core validation layer is enough work for us. There shouldn't be more going through the bottleneck of bitcoin core review. \r\n(also there's the more abstract but not less important concern of layer 2 being permissionless-should \"we\" choose lightning as \"winner\", should we integrate every possible, mature, layer 2 then? I've always been in favor of limiting the scope of this project, not extending it)\r\n\r\nI'm really sorry to say this after you did all this work.",
      "created_at" : "2020-02-20T08:29:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588758644",
      "id" : 588758644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODc1ODY0NA==",
      "updated_at" : "2020-02-20T08:33:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588758644",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  Presumably one hypothetical benefit is not having a separate wallet.\r\n\r\nPresumably, if people want to pursue advanced mobile wallet functionality (I heard about Bluetooth integrations, or device power management, NFC and now L2 integration)âthis is all very cool, but I think we need to limit the scope of this project, these are so far from *block/transaction validation*, the critical mission of this project. So bitcoin core's wallet would have to split to a separate repository with different maintainers.\r\n\r\n(it can still be distributed together with the node, so from the perspective of an end-user not much would change, but avoids maintenance headaches, and the risks of complex, highly coupled systems, like we don't want some wallet commit adding some shiny new feature to accidentally break validation)\r\n",
      "created_at" : "2020-02-20T09:12:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588817460",
      "id" : 588817460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODgxNzQ2MA==",
      "updated_at" : "2020-02-20T09:16:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588817460",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you all for the feedback, I really appreciate it.\r\n\r\n> What are the benefits of this over a separated Bitcoin-Core & c-lightning (or any other ln daemon)?\r\n> If the user interface should be improved, one could developer a new type of a `bitcoin-cli` (a command-line client) that combines the calls to Bitcoin Core and a lightning daemon.\r\n\r\n@jonasschnelli To open a channel in your scenario we are doing two additional steps (`newaddr` and `sendtoaddress`). Built-in CoreLightning approach saves the user time and money since we are broadcasting only one transaction instead of two. Huge UX win in my opinion.\r\n\r\n\r\n> Enforcing a specific runtime on users is a hazardous move given the huge diversity of use-cases. A mobile wallet is easier to build as one monolithic process whereas exchange maybe interested to have a micro-services approach for high-availability.\r\n\r\n@ariard I absolutely agree with this. I don't believe in a one-size-fits-all approach. I am familiar with @ryanofsky and your work on process separation. But crucially multiprocess is optional at compile time and one can still build a monolithic binary. \r\n\r\nI say crucially because, on mobile, monolithic is the only way to go. Multiple processes and IPC pose huge challenges on Android and this situation is not likely to improve (iOS is completely locked down). Take a look at this c-lightning issue and the following [comments](https://github.com/ElementsProject/lightning/issues/3484#issuecomment-583069705).\r\n\r\nLong story short mobile OSes want to manage the lifecycle of the apps. Spawning processes and various IPC goes against that grain.\r\n\r\n\r\n> Assume you were to rebase this on top of @ryanofsky's process isolated wallet, could you keep all of the rust integrated stuff in the wallet process?\r\n\r\n@JeremyRubin I'm not entirely sure. Is tx broadcast and notifying of new blocks part of the wallet process? Right now division of labour is like this: Rust code is dealing with Lightning only and Core does everything else.\r\n\r\n\r\nHaving said all that I realise now that I got carried away a little bit. I was following work on https://github.com/bitcoin/bitcoin/pull/16834, https://github.com/bitcoin/bitcoin/pull/17376, https://github.com/bitcoin/bitcoin/pull/16762 and I lost sight that while fetching headers and blocks is a core (heh) competency of Core - Lightning is probably not.\r\n\r\nBut before I close this I'd like to take the opportunity to propose a way forward. \r\n\r\nWhat about having CoreLightning as a separate library in its own repository? This way at configure time one could decide to link against it and the only thing needed on the Core side would be the `rusty` interface to stuff lightning needs like signing and broadcasting tx, fee estimation...\r\n\r\n\r\n> Can you split the rust-lightning code out of this, at least? Check for it in configure and dynamic link to its library...\r\n\r\n@luke-jr It would have to look for much more than rust-lightning so I think the above approach is more appropriate.\r\n\r\n\r\n> I'm really sorry to say this after you did all this work.\r\n\r\n@laanwj I really appreciate the sentiment but don't be sorry. This was a great learning experience for me and I learned a ton. I would even go so far to say I had fun. :open_mouth: \r\n\r\n",
      "created_at" : "2020-02-20T09:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588845218",
      "id" : 588845218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODg0NTIxOA==",
      "updated_at" : "2020-02-20T09:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588845218",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/762502?v=4",
         "events_url" : "https://api.github.com/users/icota/events{/privacy}",
         "followers_url" : "https://api.github.com/users/icota/followers",
         "following_url" : "https://api.github.com/users/icota/following{/other_user}",
         "gists_url" : "https://api.github.com/users/icota/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/icota",
         "id" : 762502,
         "login" : "icota",
         "node_id" : "MDQ6VXNlcjc2MjUwMg==",
         "organizations_url" : "https://api.github.com/users/icota/orgs",
         "received_events_url" : "https://api.github.com/users/icota/received_events",
         "repos_url" : "https://api.github.com/users/icota/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/icota/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/icota/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/icota"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with @laanwj and most of the other commentors here. These comments:\r\n> Presumably, if people want to pursue advanced mobile wallet functionality (I heard about Bluetooth integrations, or device power management, NFC and now L2 integration)âthis is all very cool, but I think we need to limit the scope of this project, these are so far from block/transaction validation, the critical mission of this project. So bitcoin core's wallet would have to split to a separate repository with different maintainers.\r\n\r\ncame from a discussion me and @laanwj had after I took at look at @icota's [\"mobile roadmap\"](https://icota.github.io/).",
      "created_at" : "2020-02-20T09:38:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-588854122",
      "id" : 588854122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODg1NDEyMg==",
      "updated_at" : "2020-02-20T09:38:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588854122",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you make this repository a submodule? If that works, then hopefully you only need some modest changes in this repo, e.g. a way to insert RPC methods, or helper classes like `BlockProviderState`. That way you get to have a monolithic app for mobile.",
      "created_at" : "2020-02-20T15:55:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589151124",
      "id" : 589151124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4OTE1MTEyNA==",
      "updated_at" : "2020-02-20T15:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589151124",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">@luke-jr It would have to look for much more than rust-lightning so I think the above approach is more appropriate.\r\n\r\nIt's not. Besides, what else would it need to look for? If rust-lightning itself has dependencies, consumers of rust-lightning shouldn't need to care...",
      "created_at" : "2020-02-20T17:32:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18179#issuecomment-589215101",
      "id" : 589215101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4OTIxNTEwMQ==",
      "updated_at" : "2020-02-20T17:32:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589215101",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
