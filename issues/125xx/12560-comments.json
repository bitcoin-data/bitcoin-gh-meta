[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r170993749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170993749"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Text should also tell user that change addresses will be removed(or not)",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-02-27T17:00:45Z",
      "diff_hunk" : "@@ -3788,6 +3788,71 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses from the keypool.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r170993749",
      "id" : 170993749,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDk5Mzc0OQ==",
      "original_commit_id" : "48f09bd64053a3fadbfdf71902470e813ef89acf",
      "original_line" : 3807,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 99768912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170993749/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/170993749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171005721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171005721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. Also included some more text explaining hd chain split stuff.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-02-27T17:39:08Z",
      "diff_hunk" : "@@ -3788,6 +3788,71 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses from the keypool.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171005721",
      "id" : 171005721,
      "in_reply_to_id" : 170993749,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAwNTcyMQ==",
      "original_commit_id" : "48f09bd64053a3fadbfdf71902470e813ef89acf",
      "original_line" : 3807,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 99783315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171005721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171005721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171434437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171434437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: IMO this inline throw style makes the code less readable, and it's not used elsewhere in the file.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-01T00:48:53Z",
      "diff_hunk" : "@@ -3788,6 +3788,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) flush_key_pool = request.params[0].get_bool();\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171434437",
      "id" : 171434437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTQzNDQzNw==",
      "original_commit_id" : "d40de04228426826844ae1cd6539bfb4dec2c487",
      "original_line" : 3833,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 100285856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171434437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171434437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this can be useful, though the following potential risks may be harmful in certain scenarios:\r\n* Missing key rotation: generating a new hd seed may imply for novice users that this protects from a compromised seed/masterkey.\r\n* seed option: if someone uses the optional seed parameter, it's possible that the child keys have already been used to send funds to. Eventually a rescan or a UTXO-set scan should be considered?\r\n* \"Upgrading\" existing non-hd wallets: leads to a mix of HD non HD-keys. Hard to \"untangle\" the non HD keys in case one wants to forward all funds to the new hd keyspace.",
      "created_at" : "2018-03-01T12:45:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-369580505",
      "id" : 369580505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM2OTU4MDUwNQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369580505/reactions"
      },
      "updated_at" : "2018-03-01T12:45:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369580505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Missing key rotation: generating a new hd seed may imply for novice users that this protects from a compromised seed/masterkey.\r\n\r\nThe help text could be updated to indicate that only coins sent to newly generated addresses will have keys generated with the new seed.\r\n\r\n> seed option: if someone uses the optional seed parameter, it's possible that the child keys have already been used to send funds to. Eventually a rescan or a UTXO-set scan should be considered?\r\n\r\nI could add a rescan option that is disabled by default. It could only be enabled if explicitly set and if the keypool is regenerated.\r\n\r\n> \"Upgrading\" existing non-hd wallets: leads to a mix of HD non HD-keys. Hard to \"untangle\" the non HD keys in case one wants to forward all funds to the new hd keyspace.\r\n\r\nAt the time of upgrade, one could send all coins to a new address.",
      "created_at" : "2018-03-01T22:14:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-369749811",
      "id" : 369749811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM2OTc0OTgxMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369749811/reactions"
      },
      "updated_at" : "2018-03-01T22:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369749811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171712798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171712798"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed this and other places that have similar inline ifs that are hard to read.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-01T22:21:13Z",
      "diff_hunk" : "@@ -3788,6 +3788,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) flush_key_pool = request.params[0].get_bool();\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r171712798",
      "id" : 171712798,
      "in_reply_to_id" : 171434437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTcxMjc5OA==",
      "original_commit_id" : "d40de04228426826844ae1cd6539bfb4dec2c487",
      "original_line" : 3833,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 100615884,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171712798/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171712798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing test for this error and another for `params[1].get_str()`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:39:09Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037363",
      "id" : 175037363,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTAzNzM2Mw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3838,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037492"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing test for this error.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:39:48Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037492",
      "id" : 175037492,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTAzNzQ5Mg==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3843,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037492/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing test `get_bool()`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:40:47Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037717",
      "id" : 175037717,
      "line" : 4127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTAzNzcxNw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4127,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 49,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing test for this error.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:41:29Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175037897",
      "id" : 175037897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTAzNzg5Nw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4140,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037897/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175037897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175038823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175038823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This always returns `true` so it's not possible to test the error raised below ð",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:44:53Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175038823",
      "id" : 175038823,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTAzODgyMw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3858,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175038823/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175038823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175040839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175040839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should test return value (never false). However consider returning an object as per developer notes.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:53:50Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Storing master key failed\");\n+    }\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175040839",
      "id" : 175040839,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MDgzOQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4151,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175040839/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175040839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175041550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175041550"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe should be `newkeypool`?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:57:03Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175041550",
      "id" : 175041550,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MTU1MA==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3808,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175041550/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175041550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175042040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042040"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Return value of `NewkeyPool` ignored and nothing is logged. Maybe that's fine?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T09:59:05Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Storing master key failed\");\n+    }\n+    if (flush_key_pool) pwallet->NewKeyPool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175042040",
      "id" : 175042040,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MjA0MA==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4147,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042040/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042040",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175042553"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042553"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could have a test for extra parameters. See [example](https://github.com/bitcoin/bitcoin/pull/12083/files#diff-695d736c7d2a38a42ae900546aed52f8).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T10:01:18Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175042553",
      "id" : 175042553,
      "line" : 4090,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MjU1Mw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4090,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 12,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042553/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175042553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175043020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175043020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe:\r\n```cpp\r\nif (request.params[1].isNull()) {\r\n    master_pub_key = pwallet->GenerateNewHDMasterKey();\r\n} else {\r\n```",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-16T10:03:24Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175043020",
      "id" : 175043020,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MzAyMA==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3833,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104502283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175043020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175043020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:08:46Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277505",
      "id" : 175277505,
      "in_reply_to_id" : 175037363,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUwNQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3838,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277505/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277506"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:08:50Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277506",
      "id" : 175277506,
      "in_reply_to_id" : 175037492,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUwNg==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3843,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277506/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:08:56Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277507",
      "id" : 175277507,
      "in_reply_to_id" : 175037717,
      "line" : 4127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUwNw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4127,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 49,
      "pull_request_review_id" : 104785730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:00Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277509",
      "id" : 175277509,
      "in_reply_to_id" : 175037897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUwOQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4140,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277509/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277511"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed the if block",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:07Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277511",
      "id" : 175277511,
      "in_reply_to_id" : 175038823,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUxMQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3858,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277511/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to `NullUniValue`",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:16Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Storing master key failed\");\n+    }\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277515",
      "id" : 175277515,
      "in_reply_to_id" : 175040839,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUxNQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4151,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277516"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:20Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277516",
      "id" : 175277516,
      "in_reply_to_id" : 175041550,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUxNg==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3808,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277516/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's fine. It only returns false when the wallet is locked, and that is caught earlier with `EnsureWalletIsUnlocked`",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:53Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Storing master key failed\");\n+    }\n+    if (flush_key_pool) pwallet->NewKeyPool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277527",
      "id" : 175277527,
      "in_reply_to_id" : 175042040,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUyNw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4147,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277527/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:09:58Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277529",
      "id" : 175277529,
      "in_reply_to_id" : 175042553,
      "line" : 4090,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUyOQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4090,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 12,
      "pull_request_review_id" : 104785753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-18T05:10:08Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r175277533",
      "id" : 175277533,
      "in_reply_to_id" : 175043020,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI3NzUzMw==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 3833,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 104785757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277533/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175277533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Had to rebase this.",
      "created_at" : "2018-03-18T19:30:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-374037539",
      "id" : 374037539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM3NDAzNzUzOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374037539/reactions"
      },
      "updated_at" : "2018-03-18T19:30:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374037539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176804789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176804789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: also check it's not the same key(not just path)",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-23T17:14:06Z",
      "diff_hunk" : "@@ -118,5 +119,38 @@ def run_test (self):\n \n         assert_equal(keypath[0:7], \"m/0'/1'\")\n \n+        # Generate a new HD seed on node 1 and make sure it is set\n+        orig_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        self.nodes[1].sethdseed()\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address is the first from the keypool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176804789",
      "id" : 176804789,
      "line" : 130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjgwNDc4OQ==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 130,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 18,
      "pull_request_review_id" : 106578720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176804789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176804789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176808906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176808906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "is this for invalid named arguments? Without running this I'm not sure what it's doing",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-23T17:28:27Z",
      "diff_hunk" : "@@ -118,5 +119,38 @@ def run_test (self):\n \n         assert_equal(keypath[0:7], \"m/0'/1'\")\n \n+        # Generate a new HD seed on node 1 and make sure it is set\n+        orig_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        self.nodes[1].sethdseed()\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address is the first from the keypool\n+        self.nodes[1].keypoolrefill(1) # Fill keypool with 1 key\n+\n+        # Set a new HD seed on node 1 without flushing the keypool\n+        new_seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        orig_masterkeyid = new_masterkeyid\n+        self.nodes[1].sethdseed(False, new_seed)\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(orig_masterkeyid, self.nodes[1].getaddressinfo(addr)['hdmasterkeyid'])\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/1\\'') # Make sure the new address continues previous keypool\n+\n+        # Check that the next address is from the new seed\n+        self.nodes[1].keypoolrefill(1)\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(new_masterkeyid, self.nodes[1].getaddressinfo(addr)['hdmasterkeyid'])\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address continues previous keypool\n+\n+        # Sethdseed parameter validity\n+        assert_raises_rpc_error(-1, 'sethdseed', self.nodes[0].sethdseed, False, new_seed, 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176808906",
      "id" : 176808906,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjgwODkwNg==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 151,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 106578720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176808906/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176808906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176812580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176812580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~~I think it stands to be noted that Core software will never(?) return this value on a currently running wallet. You can get address' keys, but not the seed itself. I can easily see users getting confused and thinking that backing up some address key will save their wallet in the future.~~\r\n\r\nYou may want to leave a note here saying how this specific key can be extracted from the wallet, through `dumpwallet`->`hdmaster=1` key",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-23T17:41:10Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r176812580",
      "id" : 176812580,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjgxMjU4MA==",
      "original_commit_id" : "a5c95dd4b3036b0cfacdb8afd8d885b71928f9e4",
      "original_line" : 3839,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 106578720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176812580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176812580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177508595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177508595"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the reason for disallowing master keys with opposite compressedness? Unless another party knows the master xpubkey, they would not be able to tell that any child keys are related through a shared master key.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-27T17:32:14Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177508595",
      "id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUwODU5NQ==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 107391924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177508595/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177508595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177838900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177838900"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This just tests that an error is thrown when there are too many arguments",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-28T18:00:39Z",
      "diff_hunk" : "@@ -118,5 +119,38 @@ def run_test (self):\n \n         assert_equal(keypath[0:7], \"m/0'/1'\")\n \n+        # Generate a new HD seed on node 1 and make sure it is set\n+        orig_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        self.nodes[1].sethdseed()\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address is the first from the keypool\n+        self.nodes[1].keypoolrefill(1) # Fill keypool with 1 key\n+\n+        # Set a new HD seed on node 1 without flushing the keypool\n+        new_seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        orig_masterkeyid = new_masterkeyid\n+        self.nodes[1].sethdseed(False, new_seed)\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(orig_masterkeyid, self.nodes[1].getaddressinfo(addr)['hdmasterkeyid'])\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/1\\'') # Make sure the new address continues previous keypool\n+\n+        # Check that the next address is from the new seed\n+        self.nodes[1].keypoolrefill(1)\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(new_masterkeyid, self.nodes[1].getaddressinfo(addr)['hdmasterkeyid'])\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address continues previous keypool\n+\n+        # Sethdseed parameter validity\n+        assert_raises_rpc_error(-1, 'sethdseed', self.nodes[0].sethdseed, False, new_seed, 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177838900",
      "id" : 177838900,
      "in_reply_to_id" : 176808906,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzgzODkwMA==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 151,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 107787159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177838900/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177838900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177841097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177841097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The seed value is interpreted and saved as private key. We don't want to have a seed where we already have that seed value as a key in the wallet. The only way to check whether we have a given private key is to derive its public key, get the id of that public key, and look it up. So to ensure that we don't have the seed value already, we need to derive both compressed and uncompressed public keys, get their ids, and look them up.\r\n\r\nIt's important to note that the seed is not actually a private key so it doesn't have a corresponding public key. We just use WIF because its a common format.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-28T18:07:55Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177841097",
      "id" : 177841097,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzg0MTA5Nw==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 107789835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177841097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177841097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177842616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177842616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-28T18:13:05Z",
      "diff_hunk" : "@@ -118,5 +119,38 @@ def run_test (self):\n \n         assert_equal(keypath[0:7], \"m/0'/1'\")\n \n+        # Generate a new HD seed on node 1 and make sure it is set\n+        orig_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        self.nodes[1].sethdseed()\n+        new_masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n+        assert orig_masterkeyid != new_masterkeyid\n+        addr = self.nodes[1].getnewaddress()\n+        assert_equal(self.nodes[1].getaddressinfo(addr)['hdkeypath'], 'm/0\\'/0\\'/0\\'') # Make sure the new address is the first from the keypool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177842616",
      "id" : 177842616,
      "in_reply_to_id" : 176804789,
      "line" : 130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzg0MjYxNg==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 130,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 18,
      "pull_request_review_id" : 107791602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177842616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177842616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177843919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177843919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-28T18:17:19Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177843919",
      "id" : 177843919,
      "in_reply_to_id" : 176812580,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzg0MzkxOQ==",
      "original_commit_id" : "a5c95dd4b3036b0cfacdb8afd8d885b71928f9e4",
      "original_line" : 3839,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 107793208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177843919/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177843919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177856375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177856375"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the problem with having a seed that is the same private key with opposite compressedness? It wouldn't have an existing entry in the the wallet file because the CKeyID is different.\r\n\r\nIf there is a good reason to protect against this, it might make sense to add a `bool HaveKey(CKey& key) const` method on `CKeyStore`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-28T18:58:54Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r177856375",
      "id" : 177856375,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzg1NjM3NQ==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 107808343,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177856375/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177856375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At the risk of expanding the scope, can we fix -upgradewallet to work for HD as well here? The fact that upgradewallet will work to upgrade your wallet to HD-1 and then you have to call sethdseed to upgrade seems....strange.\r\nSeparately, can we either check that we're fully synced before allowing an HD master rotate or keep around old HD keys for key derivation? I'd prefer the second, but its obviously a ton more complicated, so just ensuring that we're at least synced first is likely sufficient to ensure people dont rotate and miss some payments.",
      "created_at" : "2018-03-30T16:47:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-377567454",
      "id" : 377567454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM3NzU2NzQ1NA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377567454/reactions"
      },
      "updated_at" : "2018-03-30T16:47:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377567454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r178436100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178436100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we use a key that already exists in the wallet but with opposite compressedness, that key could be exportable with `dumpprivkey`. But the user would not necessarily know that the key that is exported is their seed just with opposite compressedness. I don't think that we want the seed to be exportable like that, and if we do want the seed to be exported in some way, it should be via its own RPC and not through `dumpprivkey`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-03-31T16:33:57Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r178436100",
      "id" : 178436100,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQzNjEwMA==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 108496723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178436100/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178436100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I changed `-upgradewallet` so it upgrades non-HD wallets to HD and HD chain split. I've updated the OP and title to indicate as such.\r\n\r\nUnfortunately automated tests can't be done with `-upgradewallet`.\r\n\r\n> Separately, can we either check that we're fully synced before allowing an HD master rotate \r\n\r\nThis seems incompatible with `-upgradewallet` as an upgrade method.\r\n\r\n> or keep around old HD keys for key derivation? I'd prefer the second, but its obviously a ton more complicated, so just ensuring that we're at least synced first is likely sufficient to ensure people dont rotate and miss some payments.\r\n\r\nI think this should be done as a separate PR. It's quite a bit of scope creep.",
      "created_at" : "2018-03-31T18:26:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-377713319",
      "id" : 377713319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM3NzcxMzMxOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377713319/reactions"
      },
      "updated_at" : "2018-03-31T18:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377713319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This seems incompatible with -upgradewallet as an upgrade method.\r\n\r\nI dont care as much about it for first-upgrade (first-upgrade-to-HD is actually no different from just using your existing wallet from a backup/keypool perspective, as long as you dont flush keypool, its just a new way to generate keypool entries), but for HD master *rotation*, I think making sure we dont need any future new keys is pretty easy to add, no?",
      "created_at" : "2018-04-02T13:58:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-377934857",
      "id" : 377934857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM3NzkzNDg1Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377934857/reactions"
      },
      "updated_at" : "2018-04-02T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377934857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r178583204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178583204"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "OK. I'm still not convinced (I could make similar arguments about rejecting keys with the lowest bit toggled), but it doesn't really matter.\r\n\r\nI would prefer to see the lookups moved over to a `HaveKey(CKey& key)` method on KeyStore though.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-02T16:32:40Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r178583204",
      "id" : 178583204,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODU4MzIwNA==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 108662017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178583204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178583204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I dont care as much about it for first-upgrade (first-upgrade-to-HD is actually no different from just using your existing wallet from a backup/keypool perspective\r\n\r\nRight, duh.\r\n\r\n***\r\n\r\nI rebased this and added a check for IBD so it won't set a new seed if we are still in IBD.",
      "created_at" : "2018-04-05T19:55:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-379057314",
      "id" : 379057314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM3OTA1NzMxNA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379057314/reactions"
      },
      "updated_at" : "2018-04-05T19:55:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379057314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181192314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181192314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jimpo I don't understand what HaveKey(CKey) would do. There is a 1-to-1 correspondence both ways between CKeys and CPubKeys. ",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-12T19:13:42Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181192314",
      "id" : 181192314,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5MjMxNA==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 111756065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181192314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181192314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181205710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181205710"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa It would replicate the logic here that checks whether there is a CPubKey corresponding to either the provided CKey or the one with opposite compressedness. Basically, I don't think that this RPC function is the best place for that logic. Maybe the method would be better named `HaveKeyIgnoringCompressedness`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-12T20:05:59Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181205710",
      "id" : 181205710,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTIwNTcxMA==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 111772674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181205710/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181205710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181207845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181207845"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jimpo Ah, I see. My concern is adding extra unnecessary functions to the CKeyStore interface (which need to be implemented by all implementations, even though there's just one now). What would you think about having a *function* (not method) in keystore.h/cpp that does this, which takes a `const CKeyStore&` as argument?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-12T20:13:57Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181207845",
      "id" : 181207845,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTIwNzg0NQ==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 111775411,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181207845/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181207845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181229181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181229181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I implemented @sipa's suggestion",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-12T21:37:09Z",
      "diff_hunk" : "@@ -3815,6 +3815,73 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181229181",
      "id" : 181229181,
      "in_reply_to_id" : 177508595,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTIyOTE4MQ==",
      "original_commit_id" : "1bc2bf2a3186dee7d98088c2b80ae617d6f6d774",
      "original_line" : 3869,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 111803957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181229181/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181229181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thinking about this a bit more, it definitely feels odd that I can't sethdseed to a past value. If I have a seed set, then change it to a new one, then want to change it back, I'm not allowed to do that. Not a big deal I guess...\r\n\r\nutACK modulo the linter error:\r\n```\r\nsrc/wallet/wallet.cpp:                LogPrintf(\"Upgrading wallet to use HD chain split\");\r\n^---- failure generated from contrib/devtools/lint-logs.sh\r\n```",
      "created_at" : "2018-04-13T01:56:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-380996966",
      "id" : 380996966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MDk5Njk2Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380996966/reactions"
      },
      "updated_at" : "2018-04-13T01:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380996966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the linter I think",
      "created_at" : "2018-04-13T02:38:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-381003820",
      "id" : 381003820,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MTAwMzgyMA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381003820/reactions"
      },
      "updated_at" : "2018-04-13T02:38:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381003820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181937030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181937030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps you wanted this `LOCK` inside the scope that follows? As is, the lock is held during the call to `SetBestChain` below.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T02:27:08Z",
      "diff_hunk" : "@@ -3991,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        LOCK(walletInstance->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r181937030",
      "id" : 181937030,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTkzNzAzMA==",
      "original_commit_id" : "3bed0c2019663d061dcbaeb076f02a0d1bac707a",
      "original_line" : 4002,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112648648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181937030/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181937030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182163050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182163050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, that's what I wanted to do. Fixed.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T17:26:06Z",
      "diff_hunk" : "@@ -3991,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        LOCK(walletInstance->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182163050",
      "id" : 182163050,
      "in_reply_to_id" : 181937030,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE2MzA1MA==",
      "original_commit_id" : "3bed0c2019663d061dcbaeb076f02a0d1bac707a",
      "original_line" : 4002,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112915068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182163050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182163050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182183747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182183747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should probably not silently upgrade HD-but-not-HD_SPLIT wallets to HD_SPLIT here.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T18:34:13Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182183747",
      "id" : 182183747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE4Mzc0Nw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 3877,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112939984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182183747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182183747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182192215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is not sufficient to ensure old wallets continue to operate using the existing keypool. In the case of HD split, you're gonna have an empty internal keypool and will instantly refresh your keypool, resulting in all change addresses being from the new HD seed. I dont see an obvious fix, but its definitely a major issue.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:03:24Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182192215",
      "id" : 182192215,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5MjIxNQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4147,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112939984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192215/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182192873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I dont think we should \"upgrade\" to NO_DEFAULT_KEY (unless we delete the default key, but that seems useless). Rather, we should upgrade to HD_SPLIT and then upgrade to NO_DEFAULT_KEY when we next bump FEATURE_LATEST (probably leave a comment to that effect here).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:05:38Z",
      "diff_hunk" : "@@ -95,7 +95,7 @@ enum WalletFeature\n \n     FEATURE_NO_DEFAULT_KEY = 159900, // Wallet without a default key written\n \n-    FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n+    FEATURE_LATEST = FEATURE_NO_DEFAULT_KEY",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182192873",
      "id" : 182192873,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5Mjg3Mw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 92,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 112939984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182192873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182193563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same comment here, this implicitly will generate a new keypool on next internal key usage.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:08:06Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        {\n+            LOCK(walletInstance->cs_wallet);\n+            bool hd_upgrade = false;\n+            if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+                LogPrintf(\"Upgrading wallet to HD\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD);\n+\n+                // generate a new master key\n+                CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                    throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+                hd_upgrade = true;\n+            }\n+            // Upgrade to HD chain split if necessary\n+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182193563",
      "id" : 182193563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5MzU2Mw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4067,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112939984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193563/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182193897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is it ok to remove this if (fFirstRun) SetMinVersion(NO_DEFAULT_KEY)?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:09:15Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182193897",
      "id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5Mzg5Nw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112939984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193897/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182193897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182200932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182200932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is explicitly mentioned in the help text.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:36:11Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182200932",
      "id" : 182200932,
      "in_reply_to_id" : 182183747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMDkzMg==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 3877,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112961178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182200932/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182200932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182201217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do you think that it would be better then to not touch the version number in `sethdseed` and leave that to `-upgradewallet`? So then `sethdseed` would only work for HD wallets and retain whatever splitness is already in the wallet.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:37:10Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182201217",
      "id" : 182201217,
      "in_reply_to_id" : 182192215,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMTIxNw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4147,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112961505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182201455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Still probably shouldn't do it...there isnt any reason for it, is there?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:38:07Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182201455",
      "id" : 182201455,
      "in_reply_to_id" : 182183747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMTQ1NQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 3877,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112961791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201455/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182201455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182202551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182202551"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`-upgradewallet` is implicitly true (and 0) on the first run. So the wallet version will be set to `FEATURE_LATEST`which is `FEATURE_NO_DEFAULT_KEY`.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:42:27Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182202551",
      "id" : 182202551,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMjU1MQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112963171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182202551/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182202551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182203285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203285"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suppose there isn't. But then if the version number is changed only for non-HD wallets to upgrade them, then theres still the same issue with keypools.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:45:07Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182203285",
      "id" : 182203285,
      "in_reply_to_id" : 182183747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMzI4NQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 3877,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112964112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203285/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182203533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that would solve it for sethdseed and would certainly make this easier to review (as its otherwise the first time we're doing an upgrade at runtime), though it does limit the utility a good bit. It would not, however, solve the identical issue during -upgradewallet.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:46:01Z",
      "diff_hunk" : "@@ -3812,6 +3812,75 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182203533",
      "id" : 182203533,
      "in_reply_to_id" : 182192215,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwMzUzMw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4147,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112964397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203533/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182203533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182204055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is that a problem though? An upgrade was explicitly asked for. Would it be better to regenerate the keypool in this instance too? Either way, both the internal and external keypools will still be generated from the same seed.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:48:01Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        {\n+            LOCK(walletInstance->cs_wallet);\n+            bool hd_upgrade = false;\n+            if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+                LogPrintf(\"Upgrading wallet to HD\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD);\n+\n+                // generate a new master key\n+                CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                    throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+                hd_upgrade = true;\n+            }\n+            // Upgrade to HD chain split if necessary\n+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182204055",
      "id" : 182204055,
      "in_reply_to_id" : 182193563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwNDA1NQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4067,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 112964995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182204542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see why not upgrade to NO_DEFAULT_KEY. FEATURE_LATEST is only used for new wallets and upgraded wallets; users should expect new and upgraded wallets to not be backwards compatible.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-17T19:49:47Z",
      "diff_hunk" : "@@ -95,7 +95,7 @@ enum WalletFeature\n \n     FEATURE_NO_DEFAULT_KEY = 159900, // Wallet without a default key written\n \n-    FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n+    FEATURE_LATEST = FEATURE_NO_DEFAULT_KEY",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182204542",
      "id" : 182204542,
      "in_reply_to_id" : 182192873,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjIwNDU0Mg==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 92,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 112965569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204542/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182204542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I changed `sethdseed` to only work on HD wallets and not modify the wallet version.",
      "created_at" : "2018-04-17T20:12:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382126502",
      "id" : 382126502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MjEyNjUwMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382126502/reactions"
      },
      "updated_at" : "2018-04-17T20:12:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382126502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK afafc9b92dc1c501ca1ff63a5042e1925b7ac55a. I think it's fine that running with -upgradewallet defaults to NO_DEFAULT_KEY.",
      "created_at" : "2018-04-19T01:34:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382580887",
      "id" : 382580887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MjU4MDg4Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382580887/reactions"
      },
      "updated_at" : "2018-04-19T01:34:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382580887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182836584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "NO_DEFAULT_KEY doesnt even have a meaning in this case, I mean you're upgrading to nVersion == NO_DEFAULT_KEY but you still have a default key? Its just needless incompatibility at that point (though, I agree, not a huge deal given the user asked for that).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-19T18:08:05Z",
      "diff_hunk" : "@@ -95,7 +95,7 @@ enum WalletFeature\n \n     FEATURE_NO_DEFAULT_KEY = 159900, // Wallet without a default key written\n \n-    FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n+    FEATURE_LATEST = FEATURE_NO_DEFAULT_KEY",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182836584",
      "id" : 182836584,
      "in_reply_to_id" : 182192873,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjgzNjU4NA==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 92,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 113717502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836584/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182836825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, this significantly changes the upgradewallet semantics, before you could upgrade and you'd still be able to use your backup in the same way based on the keypool size, now that is no longer true, which needs huge flashing warnings, at a minimum.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-19T18:08:54Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        {\n+            LOCK(walletInstance->cs_wallet);\n+            bool hd_upgrade = false;\n+            if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+                LogPrintf(\"Upgrading wallet to HD\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD);\n+\n+                // generate a new master key\n+                CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                    throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+                hd_upgrade = true;\n+            }\n+            // Upgrade to HD chain split if necessary\n+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182836825",
      "id" : 182836825,
      "in_reply_to_id" : 182193563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjgzNjgyNQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4067,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 113717813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836825/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182836825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182850939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182850939"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, @TheBlueMatt. I was forgetting about the distinction \"need a new backup\" and \"need new software in the future\".\r\n\r\nWhat would you suggest as an ideal solution? `-upgradewallet` by default never making a change that requires a new backup, while having another option (`-fullupgradewallet` ?) to indicate you're aware a new backup is needed?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-19T18:57:04Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        {\n+            LOCK(walletInstance->cs_wallet);\n+            bool hd_upgrade = false;\n+            if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+                LogPrintf(\"Upgrading wallet to HD\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD);\n+\n+                // generate a new master key\n+                CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                    throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+                hd_upgrade = true;\n+            }\n+            // Upgrade to HD chain split if necessary\n+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182850939",
      "id" : 182850939,
      "in_reply_to_id" : 182193563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mjg1MDkzOQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4067,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 113735166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182850939/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182850939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One option might be splitting the existing keypool between internal and external at the time of the upgrade, though that also violates previous API guarantees. The only \"full\" fix would require the new-key-from-pool callsites to be aware of the upgrade, though I don't think that'd be a ton of code.\n\nOn April 19, 2018 6:57:17 PM UTC, Pieter Wuille <notifications@github.com> wrote:\n>sipa commented on this pull request.\n>\n>\n>\n>> +            LOCK(walletInstance->cs_wallet);\n>+            bool hd_upgrade = false;\n>+            if (walletInstance->CanSupportFeature(FEATURE_HD) &&\n>!walletInstance->IsHDEnabled()) {\n>+                LogPrintf(\"Upgrading wallet to HD\\n\");\n>+                walletInstance->SetMinVersion(FEATURE_HD);\n>+\n>+                // generate a new master key\n>+                CPubKey masterPubKey =\n>walletInstance->GenerateNewHDMasterKey();\n>+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n>+                    throw std::runtime_error(std::string(__func__) +\n>\": Storing master key failed\");\n>+                hd_upgrade = true;\n>+            }\n>+            // Upgrade to HD chain split if necessary\n>+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n>+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n>+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n>\n>Good point, @TheBlueMatt. I was forgetting about the distinction \"need\n>a new backup\" and \"need new software in the future\".\n>\n>What would you suggest as an ideal solution? `-upgradewallet` by\n>default never making a change that requires a new backup, while having\n>another option (`-fullupgradewallet` ?) to indicate you're aware a new\n>backup is needed?\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182850939\n",
      "created_at" : "2018-04-19T19:01:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382846198",
      "id" : 382846198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg0NjE5OA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382846198/reactions"
      },
      "updated_at" : "2018-04-19T19:01:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382846198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182867406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182867406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What about an `InitWarning` message that appears when the keypool is regenerated that a new backup will need to be made?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-19T19:59:43Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        // Upgrade to HD if necessary\n+        {\n+            LOCK(walletInstance->cs_wallet);\n+            bool hd_upgrade = false;\n+            if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+                LogPrintf(\"Upgrading wallet to HD\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD);\n+\n+                // generate a new master key\n+                CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n+                    throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+                hd_upgrade = true;\n+            }\n+            // Upgrade to HD chain split if necessary\n+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182867406",
      "id" : 182867406,
      "in_reply_to_id" : 182193563,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mjg2NzQwNg==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4067,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 113755630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182867406/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182867406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think InitWarning is sufficient. For GUI I'd expect a pop-up asking if I'd like to continue, on bitcoind people don't read their debug.log, so unless we want to implement the \"knowledge of past upgrade\" in new key logic (which I think is probably doable), we probably need a different option :(.\n\nOn April 19, 2018 7:59:53 PM UTC, Andrew Chow <notifications@github.com> wrote:\n>achow101 commented on this pull request.\n>\n>\n>\n>> +            LOCK(walletInstance->cs_wallet);\n>+            bool hd_upgrade = false;\n>+            if (walletInstance->CanSupportFeature(FEATURE_HD) &&\n>!walletInstance->IsHDEnabled()) {\n>+                LogPrintf(\"Upgrading wallet to HD\\n\");\n>+                walletInstance->SetMinVersion(FEATURE_HD);\n>+\n>+                // generate a new master key\n>+                CPubKey masterPubKey =\n>walletInstance->GenerateNewHDMasterKey();\n>+                if (!walletInstance->SetHDMasterKey(masterPubKey))\n>+                    throw std::runtime_error(std::string(__func__) +\n>\": Storing master key failed\");\n>+                hd_upgrade = true;\n>+            }\n>+            // Upgrade to HD chain split if necessary\n>+            if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n>+                LogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n>+                walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n>\n>What about an `InitWarning` message that appears when the keypool is\n>regenerated that a new backup will need to be made?\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12560#discussion_r182867406\n",
      "created_at" : "2018-04-19T20:06:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382864414",
      "id" : 382864414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg2NDQxNA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382864414/reactions"
      },
      "updated_at" : "2018-04-19T20:06:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382864414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For GUI I'd expect a pop-up asking if I'd like to continue\r\n\r\nThere's `UIInterface.ThreadSafeQuestion` which can be used for that.\r\n\r\n> on bitcoind people don't read their debug.log\r\n\r\n`InitError`, `InitWarning`, and `ThreadSafeQuestion` all print to stderr for bitcoind. Also a recent change makes `-printtoconsole` default when using without `-daemon`.\r\n\r\n~~I suppose the case with `-daemon` can really only be accounted for with a separate option.~~ Actually it should still print even with `-daemon`.\r\n\r\n(I don't like the idea of introducing another option for this)",
      "created_at" : "2018-04-19T20:18:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382867483",
      "id" : 382867483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg2NzQ4Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382867483/reactions"
      },
      "updated_at" : "2018-04-19T20:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382867483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If you get a chance to implement tracking upgrade and remaining-original-keypool stuff I have a feeling it'll be workable.\n\nOn April 19, 2018 8:18:22 PM UTC, Andrew Chow <notifications@github.com> wrote:\n>> For GUI I'd expect a pop-up asking if I'd like to continue\n>\n>There's `UIInterface.ThreadSafeQuestion` which can be used for that.\n>\n>> on bitcoind people don't read their debug.log\n>\n>`InitError`, `InitWarning`, and `ThreadSafeQuestion` all print to\n>stderr for bitcoind (unless `-daemon`). Also a recent change makes\n>`-printtoconsole` default when using without `-daemon`.\n>\n>I suppose the case with `-daemon` can really only be accounted for with\n>a separate option.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382867483\n",
      "created_at" : "2018-04-19T20:22:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382868738",
      "id" : 382868738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg2ODczOA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382868738/reactions"
      },
      "updated_at" : "2018-04-19T20:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382868738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If you get a chance to implement tracking upgrade and remaining-original-keypool stuff I have a feeling it'll be workable.\r\n\r\nSo basically use the original keypool until it runs out, and then new keys are generated from the seed? So the callers (particularly getting change keys) will need to know whether it should use external keypool if it was upgraded but not run out yet?\r\n\r\nI assume that this will still require warning that a new backup is required.",
      "created_at" : "2018-04-19T20:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382870871",
      "id" : 382870871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg3MDg3MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382870871/reactions"
      },
      "updated_at" : "2018-04-19T20:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382870871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, but that doesn't need a new backup any more than using up your current keypool does. The real issue is I believe we'd need a version bump for it (and, thus, you'd need to upgrade to the new version and wouldn't be able to upgrade to HD/HD_SPLIT/NO_DEFAULT_KEY but would have to skip them and upgrade to the new version).\n\nOn April 19, 2018 8:30:18 PM UTC, Andrew Chow <notifications@github.com> wrote:\n>> If you get a chance to implement tracking upgrade and\n>remaining-original-keypool stuff I have a feeling it'll be workable.\n>\n>So basically use the original keypool until it runs out, and then new\n>keys are generated from the seed? So the callers (particularly getting\n>change keys) will need to know whether it should use external keypool\n>if it was upgraded but not run out yet?\n>\n>I assume that this will still require warning that a new backup is\n>required.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382870871\n",
      "created_at" : "2018-04-19T20:39:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382873527",
      "id" : 382873527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg3MzUyNw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382873527/reactions"
      },
      "updated_at" : "2018-04-19T20:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382873527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think that a wallet version upgrade is necessarily required.\r\n\r\nFor upgrade from non-HD to HD, it's easy to tell when you have exhausted the original keypool: the CKeyMetadata hdMsaterKeyID for each key will change from Null to the current hdMasterKeyID.\r\n\r\nNon chain split to chain split is harder. However it would be very easy if a new seed was used. I don't think there would be any adverse effects if the upgrade from non split to split resulted in a new seed being set, although that may be undesireable.",
      "created_at" : "2018-04-19T22:10:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382896391",
      "id" : 382896391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Mjg5NjM5MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382896391/reactions"
      },
      "updated_at" : "2018-04-19T22:10:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382896391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Actually bumping the version number and having another field is easier to do and has less weirdness with `-salvagewallet` scenarios, so I'm going to to that instead.",
      "created_at" : "2018-04-19T22:40:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382902402",
      "id" : 382902402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MjkwMjQwMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382902402/reactions"
      },
      "updated_at" : "2018-04-19T22:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382902402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, `-salvagewallet` isn't actually a problem because `pool` entries aren't retained. Also there's no guarantees of anything when that is used.\r\n\r\nThe question then is whether we want to generate a new seed for non-split to split upgrade or if there is some other way to detect that upgrade.",
      "created_at" : "2018-04-19T22:59:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-382905935",
      "id" : 382905935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MjkwNTkzNQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382905935/reactions"
      },
      "updated_at" : "2018-04-19T22:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382905935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have decided to go with this method (from the commit message):\r\n\r\n> After upgrading to HD chain split, we want to continue to use keys from the old keypool. To do this, before we generate any new keys after upgrading, we mark all of the keypool entries as being pre-chain split and move them to a separate pre chain split keypool. Keys are fetched from that keypool until it is  mptied. Only then are the new internal and external keypools used.\r\n\r\nWith this approach, we don't need to change the wallet version.\r\n\r\nAlso rebased\r\n",
      "created_at" : "2018-04-21T07:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-383274066",
      "id" : 383274066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4MzI3NDA2Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383274066/reactions"
      },
      "updated_at" : "2018-04-21T07:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/383274066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Merge/review beg",
      "created_at" : "2018-04-26T18:12:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-384737663",
      "id" : 384737663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NDczNzY2Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384737663/reactions"
      },
      "updated_at" : "2018-04-26T18:12:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/384737663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks, I do like the pre-split keypool thing. However, I do think you need to bump the version for it - otherwise you could 1) upgrade to HD, 2) downgrade one version to 0.16 (will still open your wallet), 3) end up using keys from the new keypool without realizing it. Its not exactly a huge concern, but fixing it seems to me to be ~free, so we might as well.",
      "created_at" : "2018-04-27T18:30:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-385056229",
      "id" : 385056229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NTA1NjIyOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385056229/reactions"
      },
      "updated_at" : "2018-04-27T18:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385056229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I bumped the wallet version number. I've also disallowed upgrades to any version between HD_SPLIT and PRE_SPLIT_KEYPOOL.",
      "created_at" : "2018-04-28T03:35:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-385136812",
      "id" : 385136812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NTEzNjgxMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385136812/reactions"
      },
      "updated_at" : "2018-04-28T03:35:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385136812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r184839095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184839095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, but what if I override it? Can I start my node accidentally with upgradewallet=0 have it create a wallet and end up with a borked wallet?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-04-28T04:09:07Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r184839095",
      "id" : 184839095,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDgzOTA5NQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 116120747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184839095/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/184839095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185325483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185325483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this supposed to have a comma in the string?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-01T20:30:36Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185325483",
      "id" : 185325483,
      "line" : 4108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyNTQ4Mw==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4108,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 30,
      "pull_request_review_id" : 116691567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185325483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185325483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185326258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326258"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This needs cs_wallet.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-01T20:33:51Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185326258",
      "id" : 185326258,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyNjI1OA==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4119,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 116691567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326258/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185326534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "key2 looks unused.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-01T20:34:56Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185326534",
      "id" : 185326534,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyNjUzNA==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 116691567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185326534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185331281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185331281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Still needs addressing, I think -upgradewallet=0 may break first-init after this patch.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-01T20:54:28Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r185331281",
      "id" : 185331281,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMzMTI4MQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 116691567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185331281/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185331281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-05T04:46:54Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252442",
      "id" : 186252442,
      "in_reply_to_id" : 185325483,
      "line" : 4108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI1MjQ0Mg==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4108,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 30,
      "pull_request_review_id" : 117804123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252730"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-05T05:01:31Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252730",
      "id" : 186252730,
      "in_reply_to_id" : 185326258,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI1MjczMA==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4119,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 117804451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252730/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-05T05:01:35Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str()), key2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252732",
      "id" : 186252732,
      "in_reply_to_id" : 185326534,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI1MjczMg==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 117804453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I changed the if statement to `if (gArgs.GetBoolArg(\"-upgradewallet\", fFirstRun) || fFirstRun)`",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-05T05:02:01Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186252739",
      "id" : 186252739,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI1MjczOQ==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 117804460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252739/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186252739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @TheBlueMatt's comments, also rebased.\r\n\r\nOh, forgot to do the things with pre_split_keypool",
      "created_at" : "2018-05-05T05:02:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-386779691",
      "id" : 386779691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Njc3OTY5MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386779691/reactions"
      },
      "updated_at" : "2018-05-05T05:04:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386779691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have added checks for whether to use `set_pre_split_keypool` in places where keypools are chosen.",
      "created_at" : "2018-05-05T05:17:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-386780356",
      "id" : 386780356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4Njc4MDM1Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386780356/reactions"
      },
      "updated_at" : "2018-05-05T05:17:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386780356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186507764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186507764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Grr, the whole first if block *was* dead code and is no longer, making this harder to review. I think its mostly equivalent to the old stuff, but would be really nice to get the diff cleaned up here. Can we just not merge out the two if statements?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-07T18:29:55Z",
      "diff_hunk" : "@@ -4002,9 +4037,10 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         }\n     }\n \n-    if (gArgs.GetBoolArg(\"-upgradewallet\", fFirstRun))\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", fFirstRun) || fFirstRun)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186507764",
      "id" : 186507764,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUwNzc2NA==",
      "original_commit_id" : "0444c769a8858721d1ee7ae2bdb1d6fea4620c88",
      "original_line" : 4040,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118099901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186507764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186507764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186508163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186508163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I still dont think this is right - I dont see where an fFirstRun wallet with upgradewallet=something non-0 in the bitcoin.conf will get its MinVersion set to at least FEATURE_NO_DEFAULT_KEY.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-07T18:31:16Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186508163",
      "id" : 186508163,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUwODE2Mw==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118099901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186508163/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186508163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt I simplified the diff by removing the combination of those two if blocks. The hd upgrading code has been moved to its own if block that enters if `-upgradewallet` is actually explicitly set.",
      "created_at" : "2018-05-08T17:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-387476399",
      "id" : 387476399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NzQ3NjM5OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387476399/reactions"
      },
      "updated_at" : "2018-05-08T17:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387476399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186987298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987298"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Î¼-nit: unnecessary space before `\\n` at end of line.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T09:41:48Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186987298",
      "id" : 186987298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njk4NzI5OA==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4100,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118673335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987298/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186987902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987902"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Isn't this supposed to return true or false depending on success? From L4105 above (result).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T09:44:13Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str());\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186987902",
      "id" : 186987902,
      "line" : 4149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njk4NzkwMg==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4149,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 118673335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987902/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186987902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186988643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988643"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `{` on same line as `if (..)`",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T09:47:03Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186988643",
      "id" : 186988643,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njk4ODY0Mw==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4062,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118673335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988643/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186988979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This error would scare me (since I'm juggling privkeys and it's not a very easy to understand message). Maybe be nice and do `[...]split keypool. To do this, run [XYZ] first.` or similar?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T09:48:34Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {\n+        LOCK(walletInstance->cs_wallet);\n+\n+        // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n+        int nMaxVersion = walletInstance->nWalletVersion;\n+        if (!walletInstance->CanSupportFeature(FEATURE_HD_SPLIT) && nMaxVersion >=FEATURE_HD_SPLIT && nMaxVersion < FEATURE_PRE_SPLIT_KEYPOOL) {\n+            InitError(_(\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186988979",
      "id" : 186988979,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njk4ODk3OQ==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4068,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118673335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988979/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186988979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186989408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186989408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Î¼: Should try to avoid the type prefix camel case style in new code (`max_version`?). ",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T09:50:18Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {\n+        LOCK(walletInstance->cs_wallet);\n+\n+        // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n+        int nMaxVersion = walletInstance->nWalletVersion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r186989408",
      "id" : 186989408,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njk4OTQwOA==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4066,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118673335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186989408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186989408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T16:46:47Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103587",
      "id" : 187103587,
      "in_reply_to_id" : 186987298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEwMzU4Nw==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4100,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118816614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103587/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T16:46:51Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str());\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103603",
      "id" : 187103603,
      "in_reply_to_id" : 186987902,
      "line" : 4149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEwMzYwMw==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4149,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 118816632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103603/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103625"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T16:46:55Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103625",
      "id" : 187103625,
      "in_reply_to_id" : 186988643,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEwMzYyNQ==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4062,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118816653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103625/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I edited the error to say what to do instead.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T16:47:18Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {\n+        LOCK(walletInstance->cs_wallet);\n+\n+        // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n+        int nMaxVersion = walletInstance->nWalletVersion;\n+        if (!walletInstance->CanSupportFeature(FEATURE_HD_SPLIT) && nMaxVersion >=FEATURE_HD_SPLIT && nMaxVersion < FEATURE_PRE_SPLIT_KEYPOOL) {\n+            InitError(_(\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103722",
      "id" : 187103722,
      "in_reply_to_id" : 186988979,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEwMzcyMg==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4068,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118816777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103722/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103738"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T16:47:22Z",
      "diff_hunk" : "@@ -4021,14 +4057,57 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false))\n+    {\n+        LOCK(walletInstance->cs_wallet);\n+\n+        // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n+        int nMaxVersion = walletInstance->nWalletVersion;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187103738",
      "id" : 187103738,
      "in_reply_to_id" : 186989408,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEwMzczOA==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4066,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118816794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103738/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187103738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187169789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187169789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, not changed.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T20:41:39Z",
      "diff_hunk" : "@@ -3788,6 +3788,81 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"flushkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed. Wallets that do\\n\"\n+            \"not support the HD Chain split feature will be upgraded to do so and all new change addresses will come from the internal keychain.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"flushkeypool\\\"       (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed;\\n\"\n+            \"                             if not provided a random seed will be used.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (!request.params[1].isNull()) {\n+        CBitcoinSecret secret;\n+        if (!secret.SetString(request.params[1].get_str())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+\n+        CKey key = secret.GetKey(), key2;\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        }\n+\n+        // check that we don't already have this key, compressed or otherwise\n+        key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+        if (pwallet->HaveKey(key.GetPubKey().GetID()) || pwallet->HaveKey(key2.GetPubKey().GetID())) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    } else {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    }\n+\n+    // Upgrade the wallet to version FEATURE_HD_SPLIT if it isn't aleady\n+    pwallet->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    if (!pwallet->SetHDMasterKey(master_pub_key)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Storing master key failed\");\n+    }\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187169789",
      "id" : 187169789,
      "in_reply_to_id" : 175040839,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE2OTc4OQ==",
      "original_commit_id" : "6e8eb0830c40c75d38594dd804ad996b714ad3b4",
      "original_line" : 4151,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118897010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187169789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187169789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187198831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187198831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Style nit: braces for if spanning multiple lines.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T22:53:07Z",
      "diff_hunk" : "@@ -4025,14 +4025,42 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false)) {\n+        LOCK(walletInstance->cs_wallet);\n+        bool hd_upgrade = false;\n+        if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+            LogPrintf(\"Upgrading wallet to HD\\n\");\n+            walletInstance->SetMinVersion(FEATURE_HD);\n+\n+            // generate a new master key\n+            CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+            if (!walletInstance->SetHDMasterKey(masterPubKey))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187198831",
      "id" : 187198831,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE5ODgzMQ==",
      "original_commit_id" : "dfeabfb47b21c5d2b3ff3a8baad108e1bbe550bc",
      "original_line" : 4038,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118897010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187198831/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187198831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187199134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187199134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt I'm confused by the history here - does this still apply?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T22:54:58Z",
      "diff_hunk" : "@@ -3987,37 +3991,54 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n             return nullptr;\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n-    }\n \n-    if (fFirstRun)\n-    {\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-        if (!gArgs.GetBoolArg(\"-usehd\", true)) {\n+        if (!gArgs.GetBoolArg(\"-usehd\", true) && fFirstRun) {\n             InitError(strprintf(_(\"Error creating %s: You can't create non-HD wallets with this version.\"), walletFile));\n             return nullptr;\n         }\n-        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187199134",
      "id" : 187199134,
      "in_reply_to_id" : 182193897,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE5OTEzNA==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 4031,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118897010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187199134/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187199134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187200881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187200881"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can test for this using `!(ser_action.ForRead() && s.empty())` instead of trying/catching.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-09T23:06:16Z",
      "diff_hunk" : "@@ -141,9 +142,18 @@ class CKeyPool\n                    (this will be the case for any wallet before the HD chain split version) */\n                 fInternal = false;\n             }\n+            try {\n+                READWRITE(m_pre_split);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187200881",
      "id" : 187200881,
      "line" : 148,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzIwMDg4MQ==",
      "original_commit_id" : "d4707852c1acd1d5703b67ada87ff1294eb80345",
      "original_line" : 148,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 24,
      "pull_request_review_id" : 118897010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187200881/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187200881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187225596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't quite understand what you mean.\r\n\r\nAlso, I would like to keep this consistent with the block above which does the same thing.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-10T02:25:13Z",
      "diff_hunk" : "@@ -141,9 +142,18 @@ class CKeyPool\n                    (this will be the case for any wallet before the HD chain split version) */\n                 fInternal = false;\n             }\n+            try {\n+                READWRITE(m_pre_split);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187225596",
      "id" : 187225596,
      "in_reply_to_id" : 187200881,
      "line" : 148,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzIyNTU5Ng==",
      "original_commit_id" : "d4707852c1acd1d5703b67ada87ff1294eb80345",
      "original_line" : 148,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 24,
      "pull_request_review_id" : 118962238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187225712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225712"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-10T02:26:11Z",
      "diff_hunk" : "@@ -4025,14 +4025,42 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n \n+    // Upgrade to HD if explicit upgrade\n+    if (gArgs.GetBoolArg(\"-upgradewallet\", false)) {\n+        LOCK(walletInstance->cs_wallet);\n+        bool hd_upgrade = false;\n+        if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n+            LogPrintf(\"Upgrading wallet to HD\\n\");\n+            walletInstance->SetMinVersion(FEATURE_HD);\n+\n+            // generate a new master key\n+            CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+            if (!walletInstance->SetHDMasterKey(masterPubKey))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187225712",
      "id" : 187225712,
      "in_reply_to_id" : 187198831,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzIyNTcxMg==",
      "original_commit_id" : "dfeabfb47b21c5d2b3ff3a8baad108e1bbe550bc",
      "original_line" : 4038,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118962353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225712/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187225712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187226164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187226164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually I'll keep it as `NullUnivalue` and I updated the docs.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-10T02:29:54Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str());\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187226164",
      "id" : 187226164,
      "in_reply_to_id" : 186987902,
      "line" : 4149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzIyNjE2NA==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4149,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 118962768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187226164/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187226164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187249931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187249931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense to me.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-10T06:27:01Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Do not do anything to non-HD wallets\n+    if (!pwallet->IsHDEnabled()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Start with -upgradewallet in order to upgrade a non-HD wallet to HD\");\n+    }\n+\n+    EnsureWalletIsUnlocked(pwallet);\n+\n+    bool flush_key_pool = true;\n+    if (!request.params[0].isNull()) {\n+        flush_key_pool = request.params[0].get_bool();\n+    }\n+\n+    CPubKey master_pub_key;\n+    if (request.params[1].isNull()) {\n+        master_pub_key = pwallet->GenerateNewHDMasterKey();\n+    } else {\n+        CKey key = DecodeSecret(request.params[1].get_str());\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        }\n+\n+        if (HaveKey(*pwallet, key)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Already have this key (either as an HD seed or as a loose private key)\");\n+        }\n+\n+        master_pub_key = pwallet->DeriveNewMasterHDKey(key);\n+    }\n+\n+    pwallet->SetHDMasterKey(master_pub_key);\n+    if (flush_key_pool) pwallet->NewKeyPool();\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187249931",
      "id" : 187249931,
      "in_reply_to_id" : 186987902,
      "line" : 4149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzI0OTkzMQ==",
      "original_commit_id" : "8db939a7b953335c5014147dd0d85069b606e0fb",
      "original_line" : 4149,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 118990020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187249931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187249931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187250236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187250236"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just leave the result section out -- e.g. like in `setlabel` (L326).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-10T06:29:11Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing\\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"null                    (boolean) Returns null if successful\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187250236",
      "id" : 187250236,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzI1MDIzNg==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 4105,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 118990355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187250236/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187250236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this have performance impacts?\r\nWhat are the downside of not checking the non-compressed (or compressed if non-compressed)?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T10:11:43Z",
      "diff_hunk" : "@@ -195,3 +195,10 @@ CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n     }\n     return CKeyID();\n }\n+\n+bool HaveKey(const CKeyStore& store, const CKey& key)\n+{\n+    CKey key2;\n+    key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+    return store.HaveKey(key.GetPubKey().GetID()) || store.HaveKey(key2.GetPubKey().GetID());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769556",
      "id" : 187769556,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc2OTU1Ng==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 203,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/keystore.cpp",
      "position" : 9,
      "pull_request_review_id" : 119622748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769586"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you elaborate why a IBD check is necessary and why the wallet-key-state is connected to IBD?",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T10:13:33Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing\\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"null                    (boolean) Returns null if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769586",
      "id" : 187769586,
      "line" : 4113,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc2OTU4Ng==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 4113,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 119622784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769586/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769639"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think sipa meant to check during read if there are more bytes in the stream because this changed only appends data at the end.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T10:16:44Z",
      "diff_hunk" : "@@ -141,9 +142,18 @@ class CKeyPool\n                    (this will be the case for any wallet before the HD chain split version) */\n                 fInternal = false;\n             }\n+            try {\n+                READWRITE(m_pre_split);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187769639",
      "id" : 187769639,
      "in_reply_to_id" : 187200881,
      "line" : 148,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc2OTYzOQ==",
      "original_commit_id" : "d4707852c1acd1d5703b67ada87ff1294eb80345",
      "original_line" : 148,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 24,
      "pull_request_review_id" : 119622849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769639/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187769639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, will test more later.",
      "created_at" : "2018-05-12T10:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-388545169",
      "id" : 388545169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4ODU0NTE2OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388545169/reactions"
      },
      "updated_at" : "2018-05-12T10:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388545169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187777985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187777985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From Matt's earlier comments:\r\n\r\n> Separately, can we either check that we're fully synced before allowing an HD master rotate or keep around old HD keys for key derivation? I'd prefer the second, but its obviously a ton more complicated, so just ensuring that we're at least synced first is likely sufficient to ensure people dont rotate and miss some payments.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T17:12:15Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing\\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"null                    (boolean) Returns null if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")\n+            );\n+    }\n+\n+    if (IsInitialBlockDownload()) {\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Cannot set a new HD seed while still in Initial Block Download\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187777985",
      "id" : 187777985,
      "in_reply_to_id" : 187769586,
      "line" : 4113,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc3Nzk4NQ==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 4113,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 119631538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187777985/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187777985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187778017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think there are performance impacts, or if there are, they are not noticeable. The reason to check for both is to avoid having a seed value which was already in the wallet before and thus could have been revealed.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T17:13:33Z",
      "diff_hunk" : "@@ -195,3 +195,10 @@ CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n     }\n     return CKeyID();\n }\n+\n+bool HaveKey(const CKeyStore& store, const CKey& key)\n+{\n+    CKey key2;\n+    key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+    return store.HaveKey(key.GetPubKey().GetID()) || store.HaveKey(key2.GetPubKey().GetID());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187778017",
      "id" : 187778017,
      "in_reply_to_id" : 187769556,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc3ODAxNw==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 203,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/keystore.cpp",
      "position" : 9,
      "pull_request_review_id" : 119631565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187778057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778057"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T17:15:29Z",
      "diff_hunk" : "@@ -4079,6 +4079,78 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing\\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"null                    (boolean) Returns null if successful\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187778057",
      "id" : 187778057,
      "in_reply_to_id" : 187250236,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc3ODA1Nw==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 4105,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 119631606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778057/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T17:15:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187778057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187780016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187780016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed, what @jonasschnelli says. If it's how similar already operates we can change it later in one go, too.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T18:36:22Z",
      "diff_hunk" : "@@ -141,9 +142,18 @@ class CKeyPool\n                    (this will be the case for any wallet before the HD chain split version) */\n                 fInternal = false;\n             }\n+            try {\n+                READWRITE(m_pre_split);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187780016",
      "id" : 187780016,
      "in_reply_to_id" : 187200881,
      "line" : 148,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MDAxNg==",
      "original_commit_id" : "d4707852c1acd1d5703b67ada87ff1294eb80345",
      "original_line" : 148,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 24,
      "pull_request_review_id" : 119633606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187780016/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T18:36:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187780016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187782929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If there's a noticable performance impact (it should perhaps be 50-100 microseconds extra), we can create a function to simultaneously compute the compressed and uncompressed pubkey for a secret. Can be done later, and it's probably not necessarily.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T20:47:59Z",
      "diff_hunk" : "@@ -195,3 +195,10 @@ CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n     }\n     return CKeyID();\n }\n+\n+bool HaveKey(const CKeyStore& store, const CKey& key)\n+{\n+    CKey key2;\n+    key2.Set(key.begin(), key.end(), !key.IsCompressed());\n+    return store.HaveKey(key.GetPubKey().GetID()) || store.HaveKey(key2.GetPubKey().GetID());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187782929",
      "id" : 187782929,
      "in_reply_to_id" : 187769556,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MjkyOQ==",
      "original_commit_id" : "ae810ff48650a07160877199f9283edfda1b3632",
      "original_line" : 203,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/keystore.cpp",
      "position" : 9,
      "pull_request_review_id" : 119636572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782929/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T21:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187782941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782941"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Really? That's not even valid JSON :)",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T20:48:58Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187782941",
      "id" : 187782941,
      "in_reply_to_id" : 185325483,
      "line" : 4108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4Mjk0MQ==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4108,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 30,
      "pull_request_review_id" : 119636572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T21:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187783216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187783216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt Does that matter? This is just the default for new wallets or explicit upgrades. I don't really care about gratuitous incompatibility when you're explicitly not caring about that.\r\n\r\nUPDATE: especially with the new PRE_SPLIT type added afterwards this is probably inevitable.",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T21:04:00Z",
      "diff_hunk" : "@@ -95,7 +95,7 @@ enum WalletFeature\n \n     FEATURE_NO_DEFAULT_KEY = 159900, // Wallet without a default key written\n \n-    FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n+    FEATURE_LATEST = FEATURE_NO_DEFAULT_KEY",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187783216",
      "id" : 187783216,
      "in_reply_to_id" : 182192873,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MzIxNg==",
      "original_commit_id" : "077afcc502478fc85ce28cdb6cf20127ddc4abb8",
      "original_line" : 92,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 119636572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187783216/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T21:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187783216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187785610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187785610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Really? Looks like valid to me once the full string is constructed:\r\n\r\n`> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sethdseed\", \"params\": [true, \"wifkey\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/`",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-12T23:41:28Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187785610",
      "id" : 187785610,
      "in_reply_to_id" : 185325483,
      "line" : 4108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4NTYxMA==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4108,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 30,
      "pull_request_review_id" : 119639291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187785610/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-12T23:41:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187785610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187787802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187787802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, you're right. This is very confusing, though. Can't we make `HelpExampleRpc` take a list of UniValue arguments, and have it construct the correct JSON code for it automatically (not for this PR, obviously).",
      "commit_id" : "a8da482a8bc87ff26194612727d4a7b86b2fb60d",
      "created_at" : "2018-05-13T02:58:04Z",
      "diff_hunk" : "@@ -4115,6 +4115,77 @@ UniValue listlabels(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue sethdseed(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"sethdseed ( \\\"newkeypool\\\" \\\"seed\\\" )\\n\"\n+            \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n+            \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n+            \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\\n\"\n+            + HelpRequiringPassphrase(pwallet) +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"newkeypool\\\"         (boolean, optional, default=true) Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n+            \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n+            \"                             If false, addresses (including change addresses if the wallet already had HD Chain Split enabled) from the existing \\n\"\n+            \"                             keypool will be used until it has been depleted.\\n\"\n+            \"2. \\\"seed\\\"               (string, optional) The WIF private key to use as the new HD seed; if not provided a random seed will be used.\\n\"\n+            \"                             The seed value can be retrieved using the dumpwallet command. It is the private key marked hdmaster=1\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false              (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"sethdseed\", \"\")\n+            + HelpExampleCli(\"sethdseed\", \"false\")\n+            + HelpExampleCli(\"sethdseed\", \"true \\\"wifkey\\\"\")\n+            + HelpExampleRpc(\"sethdseed\", \"true, \\\"wifkey\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#discussion_r187787802",
      "id" : 187787802,
      "in_reply_to_id" : 185325483,
      "line" : 4108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4NzgwMg==",
      "original_commit_id" : "be06fb1ba87f79cf45ee7a6cfeedcd139f3d85ff",
      "original_line" : 4108,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 30,
      "pull_request_review_id" : 119641540,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12560",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187787802/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2018-05-13T02:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187787802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonasschnelli You added this to the 15.2 milestone without the \"needs backport\" label. Was this done in mistake? I think a backport should be discussed shortly on irc",
      "created_at" : "2018-05-13T14:51:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-388632654",
      "id" : 388632654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4ODYzMjY1NA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388632654/reactions"
      },
      "updated_at" : "2018-05-13T14:51:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388632654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK a8da482a8bc87ff26194612727d4a7b86b2fb60d\n(hope this works, the github unicorn is preventing me from going to this PR\nwhile logged in)\n",
      "created_at" : "2018-05-14T09:15:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-388750871",
      "id" : 388750871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12560",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4ODc1MDg3MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388750871/reactions"
      },
      "updated_at" : "2018-05-14T09:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388750871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
