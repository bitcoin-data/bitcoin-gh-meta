[
   {
      "author_association" : "MEMBER",
      "body" : "TODOs (probably for future PRs):\r\n\r\n- Automatically build the package using the child transaction, i.e. when we already have unconfirmed parents in the mempool or `mapWallet`. I expect to have this before package relay (users shouldn't be expected to construct packages themselves imo), but just haven't implemented it yet. LMK if this is something you want now.\r\n- Add `maxfeerate` to allow users to set a maximum package feerate. This just requires adding a `TestPackage` codepath separate from testmempoolaccept so we can say \"just kidding\" if the validation succeeds.\r\n",
      "created_at" : "2022-04-12T16:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1096948837",
      "id" : 1096948837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BYhxl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096948837/reactions"
      },
      "updated_at" : "2022-04-12T16:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096948837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">It could be unsafe/confusing to create an actual mainnet interface while package relay doesn't exist.\r\n\r\nHow so?\r\n\r\n> However, it's currently very inconvenient for wallet/application devs to try to test current package policies. \r\n\r\nThey shouldn't need to. No assumptions should be made about user package policies...",
      "created_at" : "2022-04-13T02:29:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1097487355",
      "id" : 1097487355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BalP7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097487355/reactions"
      },
      "updated_at" : "2022-04-13T02:29:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097487355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849163198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849163198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        {\"hidden\", &submitrawpackage},\r\n```\r\n\r\nnit?",
      "commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "created_at" : "2022-04-13T07:26:06Z",
      "diff_hunk" : "@@ -682,6 +810,7 @@ void RegisterMempoolRPCCommands(CRPCTable& t)\n         {\"blockchain\", &getmempoolinfo},\n         {\"blockchain\", &getrawmempool},\n         {\"blockchain\", &savemempool},\n+        {\"hidden\", &submitrawpackage,},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849163198",
      "id" : 849163198,
      "line" : 813,
      "node_id" : "PRRC_kwDOABII584ynTO-",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 813,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 146,
      "pull_request_review_id" : 940524052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849163198/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T07:28:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849163198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849164846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849164846"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        {\r\n```\r\n\r\nnit: I accidentally didn't fix the whitespace when creating this file, but I think it is fine for new code to use the right amount of spaces.",
      "commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "created_at" : "2022-04-13T07:28:08Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849164846",
      "id" : 849164846,
      "line" : 712,
      "node_id" : "PRRC_kwDOABII584ynTou",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 712,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 51,
      "pull_request_review_id" : 940524052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849164846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T07:28:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849164846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > It could be unsafe/confusing to create an actual mainnet interface while package relay doesn't exist.\r\n\r\n> How so?\r\n\r\nUntil package relay, it's unreasonable to assume that anything submitted to the mempool this way will propagate. For example, package cpfp allows 0-fee transactions to be accepted to the mempool if they have a high-fee child. But this likely won't go much further than the user's mempool, since most nodes will reject 0-fee transactions.\r\n\r\n>>    However, it's currently very inconvenient for wallet/application devs to try to test current package policies.\r\n\r\n> They shouldn't need to. No assumptions should be made about user package policies...\r\n\r\nThe point here is to encourage testing. Even if they aren't supposed to rely on the interface, the reality is that most nodes run bitcoind and don't configure their nodes differently, it's a good idea for wallet/application devs to write a test suite for what their expectations are. I would also prefer to know as early as possible (i.e. PR comment or in RC testing, not catastrophic bug after release) if we're going to accidentally harm LN tx propagation with a policy restriction, as >$100million of the network is in it.",
      "created_at" : "2022-04-13T15:02:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1098161866",
      "id" : 1098161866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BdJ7K",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098161866/reactions"
      },
      "updated_at" : "2022-05-30T20:11:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098161866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849633828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849633828"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you're already using \"wtxid\" as a key, maybe not adding it as  \"value\" ?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T15:41:29Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849633828",
      "id" : 849633828,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypGIk",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 693,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 941189256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849633828/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T15:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849633828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849635219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849635219"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well sounds `PackageValidationResult::PCKG_MEMPOOL_ERROR` has its equivalent `TransactionError::MEMPOOL_ERROR` ? Or other reason to use `INVALID_PACKAGE` ?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T15:42:55Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitrawpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849635219",
      "id" : 849635219,
      "line" : 752,
      "node_id" : "PRRC_kwDOABII584ypGeT",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 752,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 91,
      "pull_request_review_id" : 941189256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849635219/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T15:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849635219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849641801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849641801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To inform the package user, you could link back to `doc/policy/packages.md` somewhere.",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T15:49:29Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849641801",
      "id" : 849641801,
      "line" : 679,
      "node_id" : "PRRC_kwDOABII584ypIFJ",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 679,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 18,
      "pull_request_review_id" : 941189256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849641801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T15:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849641801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> They shouldn't need to. No assumptions should be made about user package policies...\r\n\r\nWhy no assumptions should be made about user package policies ? Could you layout the reasoning underpinning that statement ?\r\n\r\nI believe to be of a contrary position. I think the default core policy should be designed to be compatible with miner incentives. In the present case, accepting relayed packages should increase your mining fee reward. If we assume that the majority of users are economically rational, they aim for their mempools contents to reflect the state of the next blocks and thus they should relay packages. Under this assumption concerning the base layer, I think an upper layer like LN can expect a policy like package relay to be widely supported.",
      "created_at" : "2022-04-13T16:13:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1098238254",
      "id" : 1098238254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585Bdcku",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098238254/reactions"
      },
      "updated_at" : "2022-04-13T16:13:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098238254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849695130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849695130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Because it's possible that the wtxid is different from the key, if there is a same-txid-different-witness tx in the mempool. I could make this more clear maybe?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T16:47:45Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849695130",
      "id" : 849695130,
      "in_reply_to_id" : 849633828,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypVGa",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 693,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 941274750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849695130/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T16:47:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849695130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">Until package relay, it's unreasonable to assume that anything submitted to the mempool this way will propagate. For example, package cpfp allows 0-fee transactions to be accepted to the mempool if they have a high-fee child. But this likely won't go much further than the user's mempool, since most nodes will reject 0-fee transactions.\r\n\r\nPropagation isn't a guarantee made by sendrawtransaction either, and could very well be in the same situation if node policies don't align.\r\n\r\nSeems like this PR should just be a modification to `sendrawtransaction` IMO. (If there's a reason to make it regtest-only, that can still be done without a new RPC method)\r\n\r\n>Why no assumptions should be made about user package policies ?\r\n\r\nUsers should ideally decide their own policies. This is especially true when consideration is being made for security purposes.\r\n\r\n> I think the default core policy should be designed to be compatible with miner incentives.\r\n\r\nThat's illogical. Most nodes aren't miners, and don't benefit from miner incentives. They *create* miner incentives, by deciding their own policies (blocks which don't match the node policy will relay slower).\r\n\r\n>If we assume that the majority of users are economically rational, they aim for their mempools contents to reflect the state of the next blocks and thus they should relay packages. \r\n\r\nThere is no economically rational reason for this. Miners have a reason to match node policies, but nodes do not really benefit from matching miners.\r\n\r\n>Under this assumption concerning the base layer, I think an upper layer like LN can expect a policy like package relay to be widely supported.\r\n\r\nIt presently isn't...",
      "created_at" : "2022-04-13T17:07:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1098287400",
      "id" : 1098287400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585Bdoko",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098287400/reactions"
      },
      "updated_at" : "2022-04-13T17:07:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098287400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed comments from @MarcoFalke and @ariard. Also renamed s/submitrawpackage/submitpackage because I don't think we'd ever submit non-raw packages.",
      "created_at" : "2022-04-13T17:36:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1098313792",
      "id" : 1098313792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BdvBA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098313792/reactions"
      },
      "updated_at" : "2022-04-13T17:36:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098313792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849736260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, `TransactionError::MEMPOOL_ERROR` is more appropriate here. Switched.",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:37:01Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitrawpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849736260",
      "id" : 849736260,
      "in_reply_to_id" : 849635219,
      "line" : 752,
      "node_id" : "PRRC_kwDOABII584ypfJE",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 752,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 91,
      "pull_request_review_id" : 941330994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:37:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849736347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736347"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:37:08Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849736347",
      "id" : 849736347,
      "in_reply_to_id" : 849641801,
      "line" : 679,
      "node_id" : "PRRC_kwDOABII584ypfKb",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 679,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 18,
      "pull_request_review_id" : 941331108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736347/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:37:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849736347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok I've renamed it to `other-wtxid` and only use it when communicating that a same-txid-different-witness tx was found. You're right that the wtxid key was redundant otherwise.",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:38:00Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737112",
      "id" : 849737112,
      "in_reply_to_id" : 849633828,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypfWY",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 693,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 941332173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737578"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:38:36Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737578",
      "id" : 849737578,
      "in_reply_to_id" : 849164846,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypfdq",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 712,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 941332799,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737578/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:38:43Z",
      "diff_hunk" : "@@ -682,6 +810,7 @@ void RegisterMempoolRPCCommands(CRPCTable& t)\n         {\"blockchain\", &getmempoolinfo},\n         {\"blockchain\", &getrawmempool},\n         {\"blockchain\", &savemempool},\n+        {\"hidden\", &submitrawpackage,},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849737685",
      "id" : 849737685,
      "in_reply_to_id" : 849163198,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypffV",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 813,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 941332939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737685/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:38:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849737685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849754180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849754180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like this PR should just be a modification to sendrawtransaction",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T17:58:37Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849754180",
      "id" : 849754180,
      "line" : 676,
      "node_id" : "PRRC_kwDOABII584ypjhE",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 15,
      "pull_request_review_id" : 941355836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849754180/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849754180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849760312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849760312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sendrawtransaction is not regtest-only",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T18:06:27Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849760312",
      "id" : 849760312,
      "in_reply_to_id" : 849754180,
      "line" : 676,
      "node_id" : "PRRC_kwDOABII584yplA4",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 15,
      "pull_request_review_id" : 941364590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849760312/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T18:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849760312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849783825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849783825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nor should this be, IMO. Certainly not long-term.\r\n\r\nBut regardless, the regtest check can be part of the existing RPC too. (I don't think it'd be the first case of such either IIRC)",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-13T18:36:54Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r849783825",
      "id" : 849783825,
      "in_reply_to_id" : 849754180,
      "line" : 676,
      "node_id" : "PRRC_kwDOABII584ypqwR",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 15,
      "pull_request_review_id" : 941397676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849783825/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T18:36:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849783825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Users should ideally decide their own policies. This is especially true when consideration is being made for security purposes.\r\n\r\nUsers deciding their own policies doesn't mean they won't spontaneously converge towards few common policies per type of bitcoin applications/hosts.\r\n\r\n> They create miner incentives, by deciding their own policies (blocks which don't match the node policy will relay slower).\r\n\r\nIf we define further miner incentives as optimizing block fee reward, i don't think node policies _creates_ them. Nodes policies (full-rbf, package relay) are just _means_ to achieve the incentives. I'm not sure it's a sane node policy to reject consensus-valid blocks.\r\n\r\n> There is no economically rational reason for this. Miners have a reason to match node policies, but nodes do not really benefit from matching miners.\r\n\r\nIf users decide their own policies with a high degree of arbitrary of miners can expect to match the node policies ? At the contrary, node benefit from their policies matching the miners to improve their visibility of the future blockchain state and block space demand. I think restrictions, which can be motivated for security reasons or host perfomances or whatever, comes with the trade-off of a worsen view of the blockchain.",
      "created_at" : "2022-04-15T16:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1100224997",
      "id" : 1100224997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BlBnl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100224997/reactions"
      },
      "updated_at" : "2022-04-15T16:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100224997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> They shouldn't need to. No assumptions should be made about user package policies.\r\n\r\n@luke-jr Agree. Any application assuming mempool policies is vulnerable. Although this RPC could be helpful for testing in general.",
      "created_at" : "2022-04-15T19:50:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1100331851",
      "id" : 1100331851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585BlbtL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100331851/reactions"
      },
      "updated_at" : "2022-04-15T19:50:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100331851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25434](https://github.com/bitcoin/bitcoin/pull/25434) (mempool: Add option to bypass contextual timelocks in testmempoolaccept by w0xlt)\n* [#25038](https://github.com/bitcoin/bitcoin/pull/25038) (BIP125-based Package RBF by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-04-25T03:44:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1108043202",
      "id" : 1108043202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585CC2XC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108043202/reactions"
      },
      "updated_at" : "2022-06-21T10:10:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108043202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r857330931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857330931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        {\r\n```\r\n\r\nnit: spaces missing. I know it is my fault for missing them when I created this file (Is it too late to change now :sweat_smile: ?), but I think new code should use spaces, otherwise it is weird, see also https://github.com/bitcoin/bitcoin/pull/24408#discussion_r844024462",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-04-25T07:28:37Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r857330931",
      "id" : 857330931,
      "line" : 713,
      "node_id" : "PRRC_kwDOABII584zGdTz",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 713,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 52,
      "pull_request_review_id" : 951446797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857330931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T07:30:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857330931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r857331391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857331391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\r\n```\r\n\r\nI think the one in the beginning is not needed.",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-04-25T07:29:16Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r857331391",
      "id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zGda_",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 951446797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857331391/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T15:30:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857331391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Seems like this PR should just be a modification to sendrawtransaction IMO. (If there's a reason to make it regtest-only, that can still be done without a new RPC method)\r\n> \r\n> But regardless, the regtest check can be part of the existing RPC too. (I don't think it'd be the first case of such either IIRC)\r\n\r\nFor the benefit of other reviewers this seems on the face of it to be a reasonable counter-suggestion to what this PR is doing that is worth exploring.\r\n\r\nThe rest of the conversation seems to be a rehashing of the \"Lightning security ideally wouldn't rely on mempool policy\" and \"One of the motivations for having a mempool is having a set of already validated transactions that the node expects to be mined in an upcoming block\"\r\n\r\nedit: [This](https://btctranscripts.com/adopting-bitcoin/2021/2021-11-16-gloria-zhao-transaction-relay-policy/#mempool-policy) is good from the PR author on why it makes sense for the user to care about miner incentives.",
      "created_at" : "2022-04-30T06:22:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1113928476",
      "id" : 1113928476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585CZTMc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113928476/reactions"
      },
      "updated_at" : "2022-04-30T07:14:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113928476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884715627"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884715627"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"anything goes wrong\" is  quite vague. Does it mean \"if the transaction or package is rejected for consensus or policy reasons\"?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:15:02Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884715627",
      "id" : 884715627,
      "line" : 677,
      "node_id" : "PRRC_kwDOABII5840u7Br",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 677,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 16,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884715627/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884715627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884718053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884718053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        \"\\nThis RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\r\n```",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:18:13Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884718053",
      "id" : 884718053,
      "line" : 678,
      "node_id" : "PRRC_kwDOABII5840u7nl",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 678,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 17,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884718053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884718053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884727429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884727429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/false));\r\n```",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:29:31Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884727429",
      "id" : 884727429,
      "line" : 740,
      "node_id" : "PRRC_kwDOABII5840u96F",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 740,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 79,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884727429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884727429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884728899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884728899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you've changed the wrong line. Should this be `TransactionError::MEMPOOL_ERROR` and the case above be `TransactionError::INVALID_PACKAGE`?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:31:27Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitrawpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884728899",
      "id" : 884728899,
      "in_reply_to_id" : 849635219,
      "line" : 752,
      "node_id" : "PRRC_kwDOABII5840u-RD",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 752,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 91,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884728899/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884728899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884730198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884730198"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we either `Assume(false)` here or raise a `JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR)`?  There shouldn't be a `PackageValidationResult::PCKG_TX` without one of the transactions having an invalid status.",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:33:10Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                package_result.m_state.GetRejectReason());\n+        }\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                package_result.m_state.GetRejectReason());\n+        }\n+        case PackageValidationResult::PCKG_TX:\n+        {\n+            for (const auto& tx : txns) {\n+                auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                        strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884730198",
      "id" : 884730198,
      "line" : 763,
      "node_id" : "PRRC_kwDOABII5840u-lW",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 763,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 102,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884730198/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884730198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884733272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884733272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\r\n```\r\n\r\n(result is always valid if this rpc returns)",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:36:52Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884733272",
      "id" : 884733272,
      "line" : 696,
      "node_id" : "PRRC_kwDOABII5840u_VY",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 696,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 35,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884733272/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884733272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884735992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884735992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need for this to be a tuple:\r\n\r\n```suggestion\r\n        chain_hex, _ = create_raw_chain(node, self.coins.pop(), self.address, self.privkeys, 3)\r\n```",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:40:12Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitres_package[\"tx-results\"]\n+            tx_result = submitres_package[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testres_package, submitres_package)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.\n+        child_txid = testres_package[-1][\"txid\"]\n+        if \"package-feerate\" in submitres_package:\n+            assert_equal(submitres_package[\"package-feerate\"], node.getmempoolentry(child_txid)[\"fees\"][\"ancestor\"])\n+\n+    def test_submitpackage(self):\n+        node = self.nodes[0]\n+\n+        self.log.info(\"Submitrawpackage valid packages with 1 child and some number of parents\")\n+        for num_parents in [1, 2, 10, 24]:\n+            self.test_submit_child_with_parents(num_parents)\n+\n+        self.log.info(\"Submitrawpackage only allows packages of 1 child with its parents\")\n+        # Chain of 3 transactions has too many generations\n+        (chain_hex, _) = create_raw_chain(node, self.coins.pop(), self.address, self.privkeys, 3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884735992",
      "id" : 884735992,
      "line" : 380,
      "node_id" : "PRRC_kwDOABII5840u__4",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 380,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 111,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884735992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884735992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741649"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These names seems a bit confusing to me. What do you think about `testmempoolaccept_result` and `submitpackage_result`?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:46:28Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741649",
      "id" : 884741649,
      "line" : 346,
      "node_id" : "PRRC_kwDOABII5840vBYR",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 346,
      "original_position" : 77,
      "original_start_line" : 345,
      "path" : "test/functional/rpc_packages.py",
      "position" : 77,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741649/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 345,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this always true?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:46:38Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741796",
      "id" : 884741796,
      "line" : 319,
      "node_id" : "PRRC_kwDOABII5840vBak",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 319,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 50,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this always true?",
      "commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "created_at" : "2022-05-30T11:46:52Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitres_package[\"tx-results\"]\n+            tx_result = submitres_package[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testres_package, submitres_package)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.\n+        child_txid = testres_package[-1][\"txid\"]\n+        if \"package-feerate\" in submitres_package:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r884741999",
      "id" : 884741999,
      "line" : 368,
      "node_id" : "PRRC_kwDOABII5840vBdv",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 368,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 99,
      "pull_request_review_id" : 989192562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741999/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:50:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884741999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:39:44Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099262",
      "id" : 885099262,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYr-",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hopefully now clearer",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:40:06Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099327",
      "id" : 885099327,
      "in_reply_to_id" : 884715627,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYs_",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 677,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099327/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099359"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, taken",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:40:15Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099359",
      "id" : 885099359,
      "in_reply_to_id" : 884718053,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYtf",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 678,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099359/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, leftover from previous iteration, thanks for catching",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:40:34Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099406",
      "id" : 885099406,
      "in_reply_to_id" : 884733272,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYuO",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 696,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099406/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assume you meant to indent all of it? Did that in the last push.",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:41:05Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099507",
      "id" : 885099507,
      "in_reply_to_id" : 857330931,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYvz",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 713,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099546"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:41:18Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099546",
      "id" : 885099546,
      "in_reply_to_id" : 884727429,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYwa",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 740,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch, swapped",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:41:31Z",
      "diff_hunk" : "@@ -669,6 +670,133 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitrawpackage()\n+{\n+    return RPCHelpMan{\"submitrawpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only). Experimental, API may be unstable.\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitrawpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099581",
      "id" : 885099581,
      "in_reply_to_id" : 849635219,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYw9",
      "original_commit_id" : "f09106314119577d5716bb1cb57d7b575c7f4218",
      "original_line" : 752,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099581/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, added `NONFATAL_UNREACHABLE()`",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:41:55Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"\\nThe package will be validated and accepted to mempool if it passes consensus and mempool policy rules. Throws a JSONRPCError if anything goes wrong.\\n\"\n+        \"\\nExperimental. API may be unstable. Refer to docs/policy/packages.md for documentation on package policies.\\n\"\n+        \"\\nWarning: successful submission does not mean the transaction will propagate to other nodes on the network.\\n\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if result=\\\"valid\\\")\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate in \" + CURRENCY_UNIT + \" per KvB. Not always available.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+    {\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+    }\n+    RPCTypeCheck(request.params, {\n+        UniValue::VARR,\n+    });\n+    const UniValue raw_transactions = request.params[0].get_array();\n+    if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                           \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+    }\n+\n+    std::vector<CTransactionRef> txns;\n+    txns.reserve(raw_transactions.size());\n+    for (const auto& rawtx : raw_transactions.getValues()) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                               \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+        }\n+        txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+    }\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CTxMemPool& mempool = EnsureMemPool(node);\n+    CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+    const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /* test_accept */ false));\n+\n+    // First catch any errors.\n+    switch(package_result.m_state.GetResult()) {\n+        case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+        case PackageValidationResult::PCKG_POLICY:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                package_result.m_state.GetRejectReason());\n+        }\n+        case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+        {\n+            throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                package_result.m_state.GetRejectReason());\n+        }\n+        case PackageValidationResult::PCKG_TX:\n+        {\n+            for (const auto& tx : txns) {\n+                auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                        strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099650",
      "id" : 885099650,
      "in_reply_to_id" : 884730198,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYyC",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 763,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099650/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099728"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not if we have partial submissions - added that test case and an explanation comment",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:42:25Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099728",
      "id" : 885099728,
      "in_reply_to_id" : 884741796,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII5840wYzQ",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 320,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 51,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099728/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not if we have partial submissions - added that test case and an explanation comment",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:42:32Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitres_package[\"tx-results\"]\n+            tx_result = submitres_package[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testres_package, submitres_package)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.\n+        child_txid = testres_package[-1][\"txid\"]\n+        if \"package-feerate\" in submitres_package:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099748",
      "id" : 885099748,
      "in_reply_to_id" : 884741999,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wYzk",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 368,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:42:41Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099781",
      "id" : 885099781,
      "in_reply_to_id" : 884741649,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wY0F",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 346,
      "original_position" : 77,
      "original_start_line" : 345,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099781/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "created_at" : "2022-05-30T22:42:48Z",
      "diff_hunk" : "@@ -306,5 +306,80 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testres_package = node.testmempoolaccept(rawtxs=package_hex)\n+        submitres_package = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitres_package[\"tx-results\"]\n+            tx_result = submitres_package[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testres_package, submitres_package)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.\n+        child_txid = testres_package[-1][\"txid\"]\n+        if \"package-feerate\" in submitres_package:\n+            assert_equal(submitres_package[\"package-feerate\"], node.getmempoolentry(child_txid)[\"fees\"][\"ancestor\"])\n+\n+    def test_submitpackage(self):\n+        node = self.nodes[0]\n+\n+        self.log.info(\"Submitrawpackage valid packages with 1 child and some number of parents\")\n+        for num_parents in [1, 2, 10, 24]:\n+            self.test_submit_child_with_parents(num_parents)\n+\n+        self.log.info(\"Submitrawpackage only allows packages of 1 child with its parents\")\n+        # Chain of 3 transactions has too many generations\n+        (chain_hex, _) = create_raw_chain(node, self.coins.pop(), self.address, self.privkeys, 3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r885099802",
      "id" : 885099802,
      "in_reply_to_id" : 884735992,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840wY0a",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 380,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 989705610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099802/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T22:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885099802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased to use `NONFATAL_UNREACHABLE`",
      "created_at" : "2022-05-30T22:53:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1141524567",
      "id" : 1141524567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585ECkhX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141524567/reactions"
      },
      "updated_at" : "2022-05-30T22:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141524567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @MarcoFalke @jnewbery, took your comments",
      "created_at" : "2022-05-31T04:16:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1141650123",
      "id" : 1141650123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585EDDLL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141650123/reactions"
      },
      "updated_at" : "2022-05-31T04:16:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141650123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887013764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887013764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You've taken out too many now! The help text description is now just one (very) long line.",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-01T16:35:42Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887013764",
      "id" : 887013764,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58403sGE",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 992275825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887013764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T16:35:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887013764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887019581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887019581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This run on sentence is a bit mangled. How about:\r\n\r\n\"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\"\r\n\r\nI don't think you need to mention the JSONRPCError, which is an internal implementation concept. Other RPC methods don't document error conditions in the help text.",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-01T16:42:37Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887019581",
      "id" : 887019581,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58403tg9",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 737,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 992284456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887019581/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T17:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887019581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887020277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887020277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\r\n```\r\n\r\n(no space between comment and parameter - same for other instances below)",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-01T16:43:24Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887020277",
      "id" : 887020277,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58403tr1",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 754,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 992284456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887020277/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T17:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887020277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887031584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887031584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you think about using the same naming convention here (`testmempoolaccept_result` and `submitpackage_result`)?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-01T16:54:00Z",
      "diff_hunk" : "@@ -306,5 +306,85 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887031584",
      "id" : 887031584,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58403wcg",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 309,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 992284456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887031584/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T17:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887031584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887037954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887037954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This test is done even if this is a partial submission. Is partial submission the same as deduplication? If so, why does this test still pass? Is it because the feerate of every transaction in the package is the same?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-01T17:00:49Z",
      "diff_hunk" : "@@ -306,5 +306,85 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            # No \"allowed\" if the tx was already in the mempool\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents, partial_submit):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+            if partial_submit and random.choice([True, False]):\n+                node.sendrawtransaction(txhex)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testmempoolaccept_result = node.testmempoolaccept(rawtxs=package_hex)\n+        submitpackage_result = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitpackage_result[\"tx-results\"]\n+            tx_result = submitpackage_result[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testmempoolaccept_result, submitpackage_result)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r887037954",
      "id" : 887037954,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58403yAC",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 369,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 992284456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887037954/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T17:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887037954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892966456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966456"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unclear comment : this RPC requires package to be at least 2 transactions and this mention a singular transaction. Though I would be even clearer and say something like \"for now, the package transactions are going to be relayed individually to the other nodes and might not propagate on the network\" ?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-09T00:13:32Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892966456",
      "id" : 892966456,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841OZY4",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 739,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1000583466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966456/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T00:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892966683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966683"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe \"wtxid\" instead of \"xxxx\"",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-09T00:14:20Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892966683",
      "id" : 892966683,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841OZcb",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 752,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1000583466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T00:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892966683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892968011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892968011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is no such thing as \"submitrawtransaction\" am I missing something ?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-09T00:18:12Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892968011",
      "id" : 892968011,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841OZxL",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 770,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1000583466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892968011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T00:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892968011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892969531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892969531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't know about leaking package policy checks at the RPC-level as now you have duplicated checks (i.e in `CheckPackage`). If you wanna fail fast, maybe just call the iirc context-free `CheckPackage`",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-09T00:22:44Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892969531",
      "id" : 892969531,
      "line" : 781,
      "node_id" : "PRRC_kwDOABII5841OaI7",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 781,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 60,
      "pull_request_review_id" : 1000583466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892969531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T00:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892969531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892972205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892972205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you think about adding a `maxfeerate` client-level check like in `sendrawtransaction` ?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-09T00:30:34Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r892972205",
      "id" : 892972205,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841Oayt",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 761,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1000583466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892972205/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T00:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892972205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898845914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898845914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I think that's a good idea for the future, see https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1096948837\r\n",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:42:44Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898845914",
      "id" : 898845914,
      "in_reply_to_id" : 892972205,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k0za",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 761,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008704999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898845914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898845914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898847232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898847232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's good to have a max number of transactions on the rpc - this is a \"invalid params\" error. Could be 500 or something, but 25 is quite natural since it'll get rejected anyway if it's more than that. I could make a new number instead of `MAX_PACKAGE_COUNT` but again, more natural to just use a constant we already have.",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:44:10Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898847232",
      "id" : 898847232,
      "in_reply_to_id" : 892969531,
      "line" : 781,
      "node_id" : "PRRC_kwDOABII5841k1IA",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 781,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 60,
      "pull_request_review_id" : 1008706792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898847232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898847232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898849947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:11Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898849947",
      "id" : 898849947,
      "in_reply_to_id" : 887019581,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k1yb",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 737,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849947/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898849997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:15Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898849997",
      "id" : 898849997,
      "in_reply_to_id" : 892966456,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k1zN",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 739,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849997/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898849997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:18Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850053",
      "id" : 898850053,
      "in_reply_to_id" : 892966683,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k10F",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 752,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850106"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850106"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:22Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850106",
      "id" : 898850106,
      "in_reply_to_id" : 887020277,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k106",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 754,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850106/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850106",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry yes, sendrawtransaction. Fixed",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:36Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated and accepted to mempool if it passes consensus and mempool policy rules, otherwise throws a JSONRPCError.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network.\",\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"xxxx\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/ true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/ true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/ true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"submitrawtransaction\", \"[rawtx1, rawtx2]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850317",
      "id" : 898850317,
      "in_reply_to_id" : 892968011,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k14N",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 770,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850317/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:44Z",
      "diff_hunk" : "@@ -306,5 +306,85 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850433",
      "id" : 898850433,
      "in_reply_to_id" : 887031584,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k16B",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 309,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850433/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clarified the comment",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T08:47:56Z",
      "diff_hunk" : "@@ -306,5 +306,85 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testres_package, submitres_package):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testres_package:\n+            # Grab this result from the submitres\n+            submitres_tx = submitres_package[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            # No \"allowed\" if the tx was already in the mempool\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents, partial_submit):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+            if partial_submit and random.choice([True, False]):\n+                node.sendrawtransaction(txhex)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testmempoolaccept_result = node.testmempoolaccept(rawtxs=package_hex)\n+        submitpackage_result = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitpackage_result[\"tx-results\"]\n+            tx_result = submitpackage_result[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testmempoolaccept_result, submitpackage_result)\n+\n+        # With no deduplications, the package feerate is just the ancestor feerate of the child.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r898850642",
      "id" : 898850642,
      "in_reply_to_id" : 887037954,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841k19S",
      "original_commit_id" : "411cc6eb9f4203fa702ffe82dcd75d1189cbbcb5",
      "original_line" : 369,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 1008710616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850642/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T08:48:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898850642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899130155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899130155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe be explicit in saying each individual tx will have to pass feefilter checks for propagation? ",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T14:13:26Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network. Until package relay exists, they will each be relayed individually.\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899130155",
      "id" : 899130155,
      "line" : 739,
      "node_id" : "PRRC_kwDOABII5841l6Mr",
      "original_commit_id" : "d7d8a9b70cb5420ba10bfbb423185448a2c980eb",
      "original_line" : 739,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 18,
      "pull_request_review_id" : 1009113051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899130155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T14:13:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899130155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK",
      "created_at" : "2022-06-16T14:23:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1157720313",
      "id" : 1157720313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585FAWj5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157720313/reactions"
      },
      "updated_at" : "2022-06-16T14:23:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157720313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899168759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899168759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wait I'm confused. Are there supposed to be newlines?",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T14:47:53Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899168759",
      "id" : 899168759,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841mDn3",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1009167017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899168759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T14:47:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899168759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899215072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899215072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Currently yes, newlines are needed within text, but not as a prefix for the description. (My bad, I've edited the suggested change above)",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T15:31:03Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899215072",
      "id" : 899215072,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841mO7g",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1009235101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899215072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T15:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899215072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899216239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899216239"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We could also do auto-formatting of newlines, but maybe this can be done later",
      "commit_id" : "fbc6b8613eb4e6fd59fa45979aeff71e152c78e7",
      "created_at" : "2022-06-16T15:31:56Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899216239",
      "id" : 899216239,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841mPNv",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1009236339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899216239/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-16T15:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/899216239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Last push\r\n- fixed the newline stuff in the description https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899215072\r\n- added a sentence about individual broadcast https://github.com/bitcoin/bitcoin/pull/24836#discussion_r899130155\r\n- re-added `BroadcastTransaction()` (not sure if I lost that in a rebase or something)",
      "created_at" : "2022-06-20T08:44:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1160154100",
      "id" : 1160154100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585FJov0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160154100/reactions"
      },
      "updated_at" : "2022-06-20T08:44:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160154100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901409435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-20T08:45:49Z",
      "diff_hunk" : "@@ -729,6 +730,138 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\"\n+        \"Warning: successful submission does not mean the transaction will propagate to other nodes on the network. Until package relay exists, they will each be relayed individually.\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901409435",
      "id" : 901409435,
      "in_reply_to_id" : 899130155,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841umqb",
      "original_commit_id" : "d7d8a9b70cb5420ba10bfbb423185448a2c980eb",
      "original_line" : 739,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1011911018,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T08:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901409994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok based on the new suggestion, I've added newlines at the end, but not at the beginning. Hopefully that's correct",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-20T08:46:22Z",
      "diff_hunk" : "@@ -669,6 +670,136 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"\\nSubmit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901409994",
      "id" : 901409994,
      "in_reply_to_id" : 857331391,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841umzK",
      "original_commit_id" : "04bb60029457fb7085041a414b195fd4f0e78d42",
      "original_line" : 676,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1011911798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409994/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T08:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901409994",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901460956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901460956"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The second example should use `submitpackage`, shouldn't it?\r\n\r\n```suggestion\r\n            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\r\n            HelpExampleCli(\"submitpackage\", \"[rawtx1, rawtx2]\")\r\n```",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-20T09:37:35Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901460956",
      "id" : 901460956,
      "line" : 772,
      "node_id" : "PRRC_kwDOABII5841uzPc",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 772,
      "original_position" : 51,
      "original_start_line" : 771,
      "path" : "src/rpc/mempool.cpp",
      "position" : 51,
      "pull_request_review_id" : 1011983676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901460956/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 771,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-20T11:31:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901460956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901956070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901956070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think one way to exercise the `BroadcastTransaction` here could be to extend `rpc_packages.py` adding a `add_p2p_connection()` and waiting for an inv to be received with the package transactions txids. ",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-20T19:30:25Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901956070",
      "id" : 901956070,
      "line" : 832,
      "node_id" : "PRRC_kwDOABII5841wsHm",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 832,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 111,
      "pull_request_review_id" : 1012686576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901956070/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T19:34:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901956070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902595822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902595822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we're hitting this error condition it seems more useful to get back some usable information about the transactions that already were broadcasted in this loop.",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-21T13:06:43Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);\n+                if (err != TransactionError::OK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902595822",
      "id" : 902595822,
      "line" : 833,
      "node_id" : "PRRC_kwDOABII5841zITu",
      "original_commit_id" : "421f28661500de1ce38d429d1a93da32350c0296",
      "original_line" : 833,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 112,
      "pull_request_review_id" : 1013569261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902595822/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T13:18:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902595822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902599382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902599382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "some places we're using wtxid for indexing, others txid(replaced txns), is there a guiding principle here?",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-21T13:10:06Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);\n+                if (err != TransactionError::OK) {\n+                    throw JSONRPCTransactionError(err, err_string);\n+                }\n+            }\n+            UniValue rpc_result{UniValue::VOBJ};\n+            UniValue tx_result_map{UniValue::VOBJ};\n+            std::set<uint256> replaced_txids;\n+            for (const auto& tx : txns) {\n+                auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                CHECK_NONFATAL(it != package_result.m_tx_results.end());\n+                UniValue result_inner{UniValue::VOBJ};\n+                result_inner.pushKV(\"txid\", tx->GetHash().GetHex());\n+                if (it->second.m_result_type == MempoolAcceptResult::ResultType::DIFFERENT_WITNESS) {\n+                    result_inner.pushKV(\"other-wtxid\", it->second.m_other_wtxid.value().GetHex());\n+                }\n+                if (it->second.m_result_type == MempoolAcceptResult::ResultType::VALID ||\n+                    it->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY) {\n+                    result_inner.pushKV(\"vsize\", int64_t{it->second.m_vsize.value()});\n+                    UniValue fees(UniValue::VOBJ);\n+                    fees.pushKV(\"base\", ValueFromAmount(it->second.m_base_fees.value()));\n+                    result_inner.pushKV(\"fees\", fees);\n+                    if (it->second.m_replaced_transactions.has_value()) {\n+                        for (const auto& ptx : it->second.m_replaced_transactions.value()) {\n+                            replaced_txids.insert(ptx->GetHash());\n+                        }\n+                    }\n+                }\n+                tx_result_map.pushKV(tx->GetWitnessHash().GetHex(), result_inner);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902599382",
      "id" : 902599382,
      "line" : 860,
      "node_id" : "PRRC_kwDOABII5841zJLW",
      "original_commit_id" : "421f28661500de1ce38d429d1a93da32350c0296",
      "original_line" : 860,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 139,
      "pull_request_review_id" : 1013569261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902599382/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T13:18:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902599382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902607877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902607877"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could we assert this condition is the case when \"package-feerate\" doesn't exist, rather than have a comment to the effect?",
      "commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "created_at" : "2022-06-21T13:17:40Z",
      "diff_hunk" : "@@ -306,5 +306,86 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testmempoolaccept_result, submitpackage_result):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testmempoolaccept_result:\n+            # Grab this result from the submitpackage_result\n+            submitres_tx = submitpackage_result[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            # No \"allowed\" if the tx was already in the mempool\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents, partial_submit):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+            if partial_submit and random.choice([True, False]):\n+                node.sendrawtransaction(txhex)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testmempoolaccept_result = node.testmempoolaccept(rawtxs=package_hex)\n+        submitpackage_result = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitpackage_result[\"tx-results\"]\n+            tx_result = submitpackage_result[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testmempoolaccept_result, submitpackage_result)\n+\n+        # Package feerate is calculated for the remaining transactions after deduplication and\n+        # individual submission.  If only 0 or 1 transaction is left, e.g. because all transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902607877",
      "id" : 902607877,
      "line" : 370,
      "node_id" : "PRRC_kwDOABII5841zLQF",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 370,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 101,
      "pull_request_review_id" : 1013569261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902607877/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T13:18:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902607877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r904944734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904944734"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think wtxids would be better in general. Txids for replaced txns is basically a legacy thing, it's just using what's returned in `MempoolAcceptResult` which is also used in testmempoolaccept. It would be impossible to have multiple replaced transactions with the same txids since they must have all been in mempool at the start. Perhaps one day we can change this for both RPCs?\r\n\r\nWtxids for indexing into the map because (1) it's more precise and (2) there actually is a possibility of same-txid-different-witness, i.e. see the \"other-wtixd\" result.",
      "commit_id" : "e866f0d0666664885d4c15c79bf59cc59975887a",
      "created_at" : "2022-06-23T12:14:54Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);\n+                if (err != TransactionError::OK) {\n+                    throw JSONRPCTransactionError(err, err_string);\n+                }\n+            }\n+            UniValue rpc_result{UniValue::VOBJ};\n+            UniValue tx_result_map{UniValue::VOBJ};\n+            std::set<uint256> replaced_txids;\n+            for (const auto& tx : txns) {\n+                auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                CHECK_NONFATAL(it != package_result.m_tx_results.end());\n+                UniValue result_inner{UniValue::VOBJ};\n+                result_inner.pushKV(\"txid\", tx->GetHash().GetHex());\n+                if (it->second.m_result_type == MempoolAcceptResult::ResultType::DIFFERENT_WITNESS) {\n+                    result_inner.pushKV(\"other-wtxid\", it->second.m_other_wtxid.value().GetHex());\n+                }\n+                if (it->second.m_result_type == MempoolAcceptResult::ResultType::VALID ||\n+                    it->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY) {\n+                    result_inner.pushKV(\"vsize\", int64_t{it->second.m_vsize.value()});\n+                    UniValue fees(UniValue::VOBJ);\n+                    fees.pushKV(\"base\", ValueFromAmount(it->second.m_base_fees.value()));\n+                    result_inner.pushKV(\"fees\", fees);\n+                    if (it->second.m_replaced_transactions.has_value()) {\n+                        for (const auto& ptx : it->second.m_replaced_transactions.value()) {\n+                            replaced_txids.insert(ptx->GetHash());\n+                        }\n+                    }\n+                }\n+                tx_result_map.pushKV(tx->GetWitnessHash().GetHex(), result_inner);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r904944734",
      "id" : 904944734,
      "in_reply_to_id" : 902599382,
      "line" : 863,
      "node_id" : "PRRC_kwDOABII58418Fxe",
      "original_commit_id" : "421f28661500de1ce38d429d1a93da32350c0296",
      "original_line" : 863,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 142,
      "pull_request_review_id" : 1016894628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904944734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-23T12:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904944734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905036535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905036535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Fixed.",
      "commit_id" : "e866f0d0666664885d4c15c79bf59cc59975887a",
      "created_at" : "2022-06-23T13:40:31Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905036535",
      "id" : 905036535,
      "in_reply_to_id" : 901460956,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58418cL3",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 772,
      "original_position" : 51,
      "original_start_line" : 771,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 1017029927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905036535/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-23T13:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905036535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905037320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905037320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added.",
      "commit_id" : "e866f0d0666664885d4c15c79bf59cc59975887a",
      "created_at" : "2022-06-23T13:41:09Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905037320",
      "id" : 905037320,
      "in_reply_to_id" : 901956070,
      "line" : 833,
      "node_id" : "PRRC_kwDOABII58418cYI",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 833,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 112,
      "pull_request_review_id" : 1017029927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905037320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-23T13:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905037320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905044272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905044272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that we only do this after all the transactions have already been submitted successfully, so the error should be rare (in fact, kind of wondering if I should just put `NONFATAL_UNREACHABLE`). I've added the number of transactions broadcasted to the error string though.",
      "commit_id" : "e866f0d0666664885d4c15c79bf59cc59975887a",
      "created_at" : "2022-06-23T13:47:02Z",
      "diff_hunk" : "@@ -729,6 +730,147 @@ static RPCHelpMan savemempool()\n     };\n }\n \n+static RPCHelpMan submitpackage()\n+{\n+    return RPCHelpMan{\"submitpackage\",\n+        \"Submit a package of raw transactions (serialized, hex-encoded) to local node (-regtest only).\\n\"\n+        \"The package will be validated according to consensus and mempool policy rules. If all transactions pass, they will be accepted to mempool.\\n\"\n+        \"This RPC is experimental and the interface may be unstable. Refer to doc/policy/packages.md for documentation on package policies.\\n\"\n+        \"Warning: until package relay is in use, successful submission does not mean the transaction will propagate to other nodes on the network.\\n\"\n+        \"Currently, each transaction is broadcasted individually after submission, which means they must meet other nodes' feerate requirements alone.\\n\"\n+        ,\n+        {\n+            {\"package\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of raw transactions.\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ_DYN, \"tx-results\", \"transaction results keyed by wtxid\",\n+                {\n+                    {RPCResult::Type::OBJ, \"wtxid\", \"transaction wtxid\", {\n+                        {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\n+                        {RPCResult::Type::STR_HEX, \"other-wtxid\", /*optional=*/true, \"The wtxid of a different transaction with the same txid but different witness found in the mempool. This means the submitted transaction was ignored.\"},\n+                        {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141.\"},\n+                        {RPCResult::Type::OBJ, \"fees\", \"Transaction fees\", {\n+                            {RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n+                        }},\n+                    }}\n+                }},\n+                {RPCResult::Type::STR_AMOUNT, \"package-feerate\", /*optional=*/true, \"package feerate used for feerate checks in \" + CURRENCY_UNIT + \" per KvB. Excludes transactions which were deduplicated or accepted individually.\"},\n+                {RPCResult::Type::ARR, \"replaced-transactions\", /*optional=*/true, \"List of txids of replaced transactions\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\n+                }},\n+            },\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"testmempoolaccept\", \"[rawtx1, rawtx2]\") +\n+            HelpExampleCli(\"sendrawtransaction\", \"[rawtx1, rawtx2]\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            if (!Params().IsMockableChain()) {\n+                throw std::runtime_error(\"submitpackage is for regression testing (-regtest mode) only\");\n+            }\n+            RPCTypeCheck(request.params, {\n+                UniValue::VARR,\n+            });\n+            const UniValue raw_transactions = request.params[0].get_array();\n+            if (raw_transactions.size() < 1 || raw_transactions.size() > MAX_PACKAGE_COUNT) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                                   \"Array must contain between 1 and \" + ToString(MAX_PACKAGE_COUNT) + \" transactions.\");\n+            }\n+\n+            std::vector<CTransactionRef> txns;\n+            txns.reserve(raw_transactions.size());\n+            for (const auto& rawtx : raw_transactions.getValues()) {\n+                CMutableTransaction mtx;\n+                if (!DecodeHexTx(mtx, rawtx.get_str())) {\n+                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR,\n+                                       \"TX decode failed: \" + rawtx.get_str() + \" Make sure the tx has at least one input.\");\n+                }\n+                txns.emplace_back(MakeTransactionRef(std::move(mtx)));\n+            }\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            CTxMemPool& mempool = EnsureMemPool(node);\n+            CChainState& chainstate = EnsureChainman(node).ActiveChainstate();\n+            const auto package_result = WITH_LOCK(::cs_main, return ProcessNewPackage(chainstate, mempool, txns, /*test_accept=*/ false));\n+\n+            // First catch any errors.\n+            switch(package_result.m_state.GetResult()) {\n+                case PackageValidationResult::PCKG_RESULT_UNSET: break;\n+                case PackageValidationResult::PCKG_POLICY:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::INVALID_PACKAGE,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_MEMPOOL_ERROR:\n+                {\n+                    throw JSONRPCTransactionError(TransactionError::MEMPOOL_ERROR,\n+                        package_result.m_state.GetRejectReason());\n+                }\n+                case PackageValidationResult::PCKG_TX:\n+                {\n+                    for (const auto& tx : txns) {\n+                        auto it = package_result.m_tx_results.find(tx->GetWitnessHash());\n+                        if (it != package_result.m_tx_results.end() && it->second.m_state.IsInvalid()) {\n+                            throw JSONRPCTransactionError(TransactionError::MEMPOOL_REJECTED,\n+                                strprintf(\"%s failed: %s\", tx->GetHash().ToString(), it->second.m_state.GetRejectReason()));\n+                        }\n+                    }\n+                    // If a PCKG_TX error was returned, there must have been an invalid transaction.\n+                    NONFATAL_UNREACHABLE();\n+                }\n+            }\n+            for (const auto& tx : txns) {\n+                std::string err_string;\n+                const auto err = BroadcastTransaction(node, tx, err_string, 0, true, true);\n+                if (err != TransactionError::OK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905044272",
      "id" : 905044272,
      "in_reply_to_id" : 902595822,
      "line" : 834,
      "node_id" : "PRRC_kwDOABII58418eEw",
      "original_commit_id" : "421f28661500de1ce38d429d1a93da32350c0296",
      "original_line" : 834,
      "original_position" : 112,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 113,
      "pull_request_review_id" : 1017029927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905044272/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-23T13:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905044272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905047334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905047334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added. Also note that we have more detailed tests for internal logic wrt package feerate in txpackage_tests.cpp",
      "commit_id" : "e866f0d0666664885d4c15c79bf59cc59975887a",
      "created_at" : "2022-06-23T13:49:34Z",
      "diff_hunk" : "@@ -306,5 +306,86 @@ def test_rbf(self):\n         }]\n         self.assert_testres_equal(self.independent_txns_hex + [signed_replacement_tx[\"hex\"]], testres_rbf_package)\n \n+    def assert_equal_package_results(self, node, testmempoolaccept_result, submitpackage_result):\n+        \"\"\"Assert that a successful submitpackage result is consistent with testmempoolaccept\n+        results and getmempoolentry info. Note that the result structs are different and, due to\n+        policy differences between testmempoolaccept and submitpackage (i.e. package feerate),\n+        some information may be different.\n+        \"\"\"\n+        for testres_tx in testmempoolaccept_result:\n+            # Grab this result from the submitpackage_result\n+            submitres_tx = submitpackage_result[\"tx-results\"][testres_tx[\"wtxid\"]]\n+            assert_equal(submitres_tx[\"txid\"], testres_tx[\"txid\"])\n+            # No \"allowed\" if the tx was already in the mempool\n+            if \"allowed\" in testres_tx and testres_tx[\"allowed\"]:\n+                assert_equal(submitres_tx[\"vsize\"], testres_tx[\"vsize\"])\n+                assert_equal(submitres_tx[\"fees\"][\"base\"], testres_tx[\"fees\"][\"base\"])\n+            entry_info = node.getmempoolentry(submitres_tx[\"txid\"])\n+            assert_equal(submitres_tx[\"vsize\"], entry_info[\"vsize\"])\n+            assert_equal(submitres_tx[\"fees\"][\"base\"], entry_info[\"fees\"][\"base\"])\n+\n+    def test_submit_child_with_parents(self, num_parents, partial_submit):\n+        node = self.nodes[0]\n+        # Test a package with num_parents parents and 1 child transaction.\n+        package_hex = []\n+        package_txns = []\n+        values = []\n+        scripts = []\n+        for _ in range(num_parents):\n+            parent_coin = self.coins.pop()\n+            value = parent_coin[\"amount\"]\n+            (tx, txhex, value, spk) = make_chain(node, self.address, self.privkeys, parent_coin[\"txid\"], value)\n+            package_hex.append(txhex)\n+            package_txns.append(tx)\n+            values.append(value)\n+            scripts.append(spk)\n+            if partial_submit and random.choice([True, False]):\n+                node.sendrawtransaction(txhex)\n+        child_hex = create_child_with_parents(node, self.address, self.privkeys, package_txns, values, scripts)\n+        package_hex.append(child_hex)\n+        package_txns.append(tx_from_hex(child_hex))\n+\n+        testmempoolaccept_result = node.testmempoolaccept(rawtxs=package_hex)\n+        submitpackage_result = node.submitpackage(package=package_hex)\n+\n+        # Check that each result is present, with the correct size and fees\n+        for i in range(num_parents + 1):\n+            tx = package_txns[i]\n+            wtxid = tx.getwtxid()\n+            assert wtxid in submitpackage_result[\"tx-results\"]\n+            tx_result = submitpackage_result[\"tx-results\"][wtxid]\n+            expected_fee = Decimal(\"0.0001\")\n+            assert_equal(tx_result, {\n+                \"txid\": tx.rehash(),\n+                \"vsize\": tx.get_vsize(),\n+                \"fees\": {\n+                    \"base\": expected_fee,\n+                }\n+            })\n+\n+        # submitpackage result should be consistent with testmempoolaccept and getmempoolentry\n+        self.assert_equal_package_results(node, testmempoolaccept_result, submitpackage_result)\n+\n+        # Package feerate is calculated for the remaining transactions after deduplication and\n+        # individual submission.  If only 0 or 1 transaction is left, e.g. because all transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#discussion_r905047334",
      "id" : 905047334,
      "in_reply_to_id" : 902607877,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58418e0m",
      "original_commit_id" : "980464989449b3b703c9a11e398b2b246dee163a",
      "original_line" : 370,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : null,
      "pull_request_review_id" : 1017029927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24836",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905047334/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-23T13:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905047334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Last push:\r\n\r\n- s/sendrawtransaction/submitpackage https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901460956\r\n- test that the transactions are broadcast https://github.com/bitcoin/bitcoin/pull/24836#discussion_r901956070\r\n- test package feerate https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902607877\r\n- note some transactions may have been broadcast already if `BroadcastTransaction()` fails https://github.com/bitcoin/bitcoin/pull/24836#discussion_r902595822\r\n\r\nthanks @t-bast @ariard @instagibbs !",
      "created_at" : "2022-06-27T10:00:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24836#issuecomment-1167147432",
      "id" : 1167147432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24836",
      "node_id" : "IC_kwDOABII585FkUGo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1167147432/reactions"
      },
      "updated_at" : "2022-06-27T10:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1167147432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
