[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849750841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849750841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to use check_output here, as we want to pass through the output. Same for stderr.\r\nCould use, say, subprocess.run with `check=True`",
      "commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "created_at" : "2022-04-13T17:54:38Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.check_output(['shellcheck', '--version'])\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, stderr=subprocess.STDOUT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849750841",
      "id" : 849750841,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584ypis5",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 941351304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849750841/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T17:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849750841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849938057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849938057"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n# Copyright (c) 2018-2022 The Bitcoin Core developers\r\n```",
      "commit_id" : "4eacca34d969bae9380bfd993b5d395d3f424f16",
      "created_at" : "2022-04-13T22:11:43Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849938057",
      "id" : 849938057,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yqQaJ",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 3,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 941609066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849938057/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T22:15:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849938057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33084435?v=4",
         "events_url" : "https://api.github.com/users/Eunoia1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunoia1729/followers",
         "following_url" : "https://api.github.com/users/Eunoia1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunoia1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunoia1729",
         "id" : 33084435,
         "login" : "Eunoia1729",
         "node_id" : "MDQ6VXNlcjMzMDg0NDM1",
         "organizations_url" : "https://api.github.com/users/Eunoia1729/orgs",
         "received_events_url" : "https://api.github.com/users/Eunoia1729/received_events",
         "repos_url" : "https://api.github.com/users/Eunoia1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunoia1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunoia1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunoia1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849939421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849939421"
         }
      },
      "author_association" : "NONE",
      "body" : "`subprocess.run` with `check = True` can be used here",
      "commit_id" : "4eacca34d969bae9380bfd993b5d395d3f424f16",
      "created_at" : "2022-04-13T22:14:34Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.check_output(['shellcheck', '--version'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849939421",
      "id" : 849939421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yqQvd",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 941609066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849939421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T22:15:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849939421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33084435?v=4",
         "events_url" : "https://api.github.com/users/Eunoia1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunoia1729/followers",
         "following_url" : "https://api.github.com/users/Eunoia1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunoia1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunoia1729",
         "id" : 33084435,
         "login" : "Eunoia1729",
         "node_id" : "MDQ6VXNlcjMzMDg0NDM1",
         "organizations_url" : "https://api.github.com/users/Eunoia1729/orgs",
         "received_events_url" : "https://api.github.com/users/Eunoia1729/received_events",
         "repos_url" : "https://api.github.com/users/Eunoia1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunoia1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunoia1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunoia1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849964470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849964470"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for the review. :)\r\n\r\nI believe this might introduce slightly different behavior with output from the old script.\r\n\r\nWith the old script there would be no output if the shellcheck tests pass, but while using `subprocess.run(shellcheck_cmd, check=True)`, I see the following if the tests pass:\r\n\r\n```\r\n$ ./test/lint/lint-shell.py \r\nShellCheck - shell script analysis tool\r\nversion: 0.8.0\r\nlicense: GNU General Public License, version 3\r\nwebsite: https://www.shellcheck.net\r\n```\r\n\r\nThe exit codes still work the same, but are there downstream impacts with this standard output change?",
      "commit_id" : "4eacca34d969bae9380bfd993b5d395d3f424f16",
      "created_at" : "2022-04-13T23:10:46Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.check_output(['shellcheck', '--version'])\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, stderr=subprocess.STDOUT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849964470",
      "id" : 849964470,
      "in_reply_to_id" : 849750841,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584yqW22",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 941641998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849964470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-13T23:10:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849964470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r850004501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850004501"
         }
      },
      "author_association" : "NONE",
      "body" : "@whiteh0rse Good point. \r\nOne way to suppress this unnecessary stdout while using `subprocess.run` is to add `stdout = subprocess.DEVNULL` argument.\r\n ",
      "commit_id" : "4eacca34d969bae9380bfd993b5d395d3f424f16",
      "created_at" : "2022-04-14T01:02:27Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.check_output(['shellcheck', '--version'])\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, stderr=subprocess.STDOUT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r850004501",
      "id" : 850004501,
      "in_reply_to_id" : 849750841,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584yqgoV",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 941690457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850004501/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T01:02:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850004501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33084435?v=4",
         "events_url" : "https://api.github.com/users/Eunoia1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunoia1729/followers",
         "following_url" : "https://api.github.com/users/Eunoia1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunoia1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunoia1729",
         "id" : 33084435,
         "login" : "Eunoia1729",
         "node_id" : "MDQ6VXNlcjMzMDg0NDM1",
         "organizations_url" : "https://api.github.com/users/Eunoia1729/orgs",
         "received_events_url" : "https://api.github.com/users/Eunoia1729/received_events",
         "repos_url" : "https://api.github.com/users/Eunoia1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunoia1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunoia1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunoia1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r852231546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852231546"
         }
      },
      "author_association" : "NONE",
      "body" : "I figured out this output from shellcheck wasn't coming from this line. Rather, it was coming from `check_shellcheck_install()` function. I piped the output from that command to `subprocess.DEVNULL`. Thanks for the suggestion, @Eunoia1729.",
      "commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "created_at" : "2022-04-18T16:17:37Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.check_output(['shellcheck', '--version'])\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, stderr=subprocess.STDOUT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r852231546",
      "id" : 852231546,
      "in_reply_to_id" : 849750841,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yzAV6",
      "original_commit_id" : "24ac00b042a3f0343be95d283d90eb5d6579b629",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 944567149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852231546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-18T16:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852231546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I noticed that terminal colors are being removed by the Python script. I did spend a little time trying to figure out how to pass along terminal colors, but wasn't successful. Let me know if I need to spend more time figuring that out. \r\n\r\nAs an example, here's what it looks like with the bash script:\r\n![Screenshot_2022-04-18_11-03-42](https://user-images.githubusercontent.com/95139855/163838744-3c87fa3c-3a12-434e-b879-8a80e650d963.png)\r\n\r\nHere's what the same output looks like with the Python script:\r\n![Screenshot_2022-04-18_11-04-01](https://user-images.githubusercontent.com/95139855/163838781-9fa96ffe-a2fb-45ab-8db8-3cb52ae06f57.png)\r\n\r\nI tried using the `encoding` parameter (setting it to `encoding='utf-8'`, but that didn't work.\r\n\r\n\r\n",
      "created_at" : "2022-04-18T16:22:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#issuecomment-1101540261",
      "id" : 1101540261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24840",
      "node_id" : "IC_kwDOABII585BqCul",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1101540261/reactions"
      },
      "updated_at" : "2022-04-18T16:22:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1101540261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r852698815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852698815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        subprocess.check_output(shellcheck_cmd, universal_newlines=True)\r\n```\r\n\r\nHow is this different from `check_output`? Also, `capture_output` is python 3.7, while our minimum is 3.6.",
      "commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "created_at" : "2022-04-19T07:41:30Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.run(shellcheck_cmd, capture_output=True, check=True, universal_newlines=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r852698815",
      "id" : 852698815,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584y0ya_",
      "original_commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 945209131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852698815/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-19T07:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852698815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r859330895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859330895"
         }
      },
      "author_association" : "NONE",
      "body" : "I was nudged by @laanwj to use `subprocess.run` over `subprocess.check_output` here: https://github.com/bitcoin/bitcoin/pull/24840#discussion_r849750841",
      "commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "created_at" : "2022-04-27T02:55:46Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.run(shellcheck_cmd, capture_output=True, check=True, universal_newlines=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r859330895",
      "id" : 859330895,
      "in_reply_to_id" : 852698815,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584zOFlP",
      "original_commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 954242216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859330895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-27T02:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859330895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think I need a little help squashing my commits in this pull request. Because in commit `e38fc1c816a1e83b943cad2ffc953be5b2cd1fb6` I merged in from `master`, I'm now getting some merge conflicts while I squash.\r\n\r\nHere's what I'm doing:\r\n\r\n- From `HEAD`, my first commit is 59 commits ago: `git rev-list 24ac00b042a3f0343be95d283d90eb5d6579b629..HEAD | wc -l`\r\n- I do `git rebase -i HEAD~59` and change all the `pick`s (except the first one) to `squash`.\r\n- Then I `:wq` (vim) and git begins rebasing.\r\n\r\nAbout halfway thru I get a bunch of merge conflicts. Any help is appreciated. Thanks.",
      "created_at" : "2022-04-27T03:34:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#issuecomment-1110497373",
      "id" : 1110497373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24840",
      "node_id" : "IC_kwDOABII585CMNhd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110497373/reactions"
      },
      "updated_at" : "2022-04-27T03:35:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110497373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "untested:\r\n\r\n\r\n```\r\ngit checkout your_branch\r\ngit fetch origin bd616bc16a3a7f70f60ca5034b5a91e5ac89ac9d  # fetch current master\r\ngit merge        bd616bc16a3a7f70f60ca5034b5a91e5ac89ac9d  # merge current master\r\ngit reset --soft bd616bc16a3a7f70f60ca5034b5a91e5ac89ac9d  # pretend all changes happened on current master\r\ngit commit -m \"your commit message\"  # commit the changes\r\ngit push origin your_branch -f  # Force push\r\n```\r\n\r\n\r\nMaybe we should mention those steps as well in the doc?",
      "created_at" : "2022-04-27T06:25:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#issuecomment-1110592591",
      "id" : 1110592591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24840",
      "node_id" : "IC_kwDOABII585CMkxP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110592591/reactions"
      },
      "updated_at" : "2022-04-27T06:25:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110592591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe we should mention those steps as well in the doc?\r\n\r\nWe could. Though only as a last-ditch option if you've ended up with a mess of merge commits. `git rebase -i` is way more flexible and something people need to be comfortable with to contribute to this project.",
      "created_at" : "2022-04-27T08:53:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#issuecomment-1110739671",
      "id" : 1110739671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24840",
      "node_id" : "IC_kwDOABII585CNIrX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110739671/reactions"
      },
      "updated_at" : "2022-04-27T08:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110739671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I believe I have finished squashing the commits. I will keep learning and practice `git rebase`. I do admit to be a bit of a novice at that git command. Thank you for the help.",
      "created_at" : "2022-04-30T20:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#issuecomment-1114052139",
      "id" : 1114052139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24840",
      "node_id" : "IC_kwDOABII585CZxYr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114052139/reactions"
      },
      "updated_at" : "2022-04-30T20:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1114052139",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862428423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862428423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This still needs to be fixed. See CI failure",
      "commit_id" : "ccf67cf39f4ac1d8297d61297c78eee2b8bd0722",
      "created_at" : "2022-05-01T06:16:25Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.run(shellcheck_cmd, capture_output=True, check=True, universal_newlines=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862428423",
      "id" : 862428423,
      "in_reply_to_id" : 852698815,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584zZ50H",
      "original_commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 958547635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862428423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-01T06:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862428423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862473284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862473284"
         }
      },
      "author_association" : "NONE",
      "body" : "Fixed.",
      "commit_id" : "fcb895ffbdb5f1160821f971856e755b4ace15dc",
      "created_at" : "2022-05-01T13:08:35Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.run(shellcheck_cmd, capture_output=True, check=True, universal_newlines=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862473284",
      "id" : 862473284,
      "in_reply_to_id" : 852698815,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zaExE",
      "original_commit_id" : "d8afdafd67af7d03d5f5d20b4b6b2be2111001fb",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 958588518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862473284/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-01T13:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862473284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862560328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560328"
         }
      },
      "author_association" : "NONE",
      "body" : "imports should be on separate lines to satisfy lint checks",
      "commit_id" : "fcb895ffbdb5f1160821f971856e755b4ace15dc",
      "created_at" : "2022-05-02T02:17:54Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862560328",
      "id" : 862560328,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII584zaaBI",
      "original_commit_id" : "fcb895ffbdb5f1160821f971856e755b4ace15dc",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 11,
      "pull_request_review_id" : 958675963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560328/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-02T02:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32376202?v=4",
         "events_url" : "https://api.github.com/users/jacobpfickes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jacobpfickes/followers",
         "following_url" : "https://api.github.com/users/jacobpfickes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jacobpfickes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jacobpfickes",
         "id" : 32376202,
         "login" : "jacobpfickes",
         "node_id" : "MDQ6VXNlcjMyMzc2MjAy",
         "organizations_url" : "https://api.github.com/users/jacobpfickes/orgs",
         "received_events_url" : "https://api.github.com/users/jacobpfickes/received_events",
         "repos_url" : "https://api.github.com/users/jacobpfickes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jacobpfickes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jacobpfickes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jacobpfickes"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862560555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560555"
         }
      },
      "author_association" : "NONE",
      "body" : "add `encoding=\"utf8\"` to subprocess.check_output to satisfy lint check",
      "commit_id" : "fcb895ffbdb5f1160821f971856e755b4ace15dc",
      "created_at" : "2022-05-02T02:19:20Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess, re, sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, universal_newlines=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r862560555",
      "id" : 862560555,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584zaaEr",
      "original_commit_id" : "fcb895ffbdb5f1160821f971856e755b4ace15dc",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : 86,
      "pull_request_review_id" : 958675963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-02T02:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862560555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32376202?v=4",
         "events_url" : "https://api.github.com/users/jacobpfickes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jacobpfickes/followers",
         "following_url" : "https://api.github.com/users/jacobpfickes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jacobpfickes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jacobpfickes",
         "id" : 32376202,
         "login" : "jacobpfickes",
         "node_id" : "MDQ6VXNlcjMyMzc2MjAy",
         "organizations_url" : "https://api.github.com/users/jacobpfickes/orgs",
         "received_events_url" : "https://api.github.com/users/jacobpfickes/received_events",
         "repos_url" : "https://api.github.com/users/jacobpfickes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jacobpfickes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jacobpfickes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jacobpfickes"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865589748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865589748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        subprocess.check_call(shellcheck_cmd)\r\n    except subprocess.CalledProcessError as e:\r\n        sys.exit(1)\r\n```\r\n\r\nShouldn't this be check_call? This would also fix the terminal color issue, maybe?",
      "commit_id" : "2b35abe141a38aa8b9368d4057dca636a567d00d",
      "created_at" : "2022-05-05T06:32:52Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess\n+import re\n+import sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, universal_newlines=True, encoding='utf8')\n+    except subprocess.CalledProcessError as e:\n+        print(e.output)\n+        sys.exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865589748",
      "id" : 865589748,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII584zl9n0",
      "original_commit_id" : "2b35abe141a38aa8b9368d4057dca636a567d00d",
      "original_line" : 91,
      "original_position" : 91,
      "original_start_line" : 88,
      "path" : "test/lint/lint-shell.py",
      "position" : 91,
      "pull_request_review_id" : 962904472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865589748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 88,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-05T06:32:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865589748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865910826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865910826"
         }
      },
      "author_association" : "NONE",
      "body" : "You're correct, that also works and does fix the terminal color issue. Thanks!\r\n",
      "commit_id" : "bd6ceb4049602aa556a93a0ac8954802dc0bf456",
      "created_at" : "2022-05-05T13:32:57Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess\n+import re\n+import sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_output(shellcheck_cmd, universal_newlines=True, encoding='utf8')\n+    except subprocess.CalledProcessError as e:\n+        print(e.output)\n+        sys.exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865910826",
      "id" : 865910826,
      "in_reply_to_id" : 865589748,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584znMAq",
      "original_commit_id" : "2b35abe141a38aa8b9368d4057dca636a567d00d",
      "original_line" : 90,
      "original_position" : 91,
      "original_start_line" : 88,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 963369739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865910826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-05T13:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865910826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95139855?v=4",
         "events_url" : "https://api.github.com/users/whiteh0rse/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whiteh0rse/followers",
         "following_url" : "https://api.github.com/users/whiteh0rse/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whiteh0rse/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whiteh0rse",
         "id" : 95139855,
         "login" : "whiteh0rse",
         "node_id" : "U_kgDOBau4Dw",
         "organizations_url" : "https://api.github.com/users/whiteh0rse/orgs",
         "received_events_url" : "https://api.github.com/users/whiteh0rse/received_events",
         "repos_url" : "https://api.github.com/users/whiteh0rse/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whiteh0rse/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whiteh0rse/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whiteh0rse"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865918561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865918561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "test/lint/lint-shell.py:89:5: F841 local variable 'e' is assigned to but never used",
      "commit_id" : "bd6ceb4049602aa556a93a0ac8954802dc0bf456",
      "created_at" : "2022-05-05T13:40:24Z",
      "diff_hunk" : "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+Check for shellcheck warnings in shell scripts.\n+\"\"\"\n+\n+import subprocess\n+import re\n+import sys\n+\n+# Disabled warnings:\n+DISABLED = [\n+    'SC2162', # read without -r will mangle backslashes.\n+]\n+\n+def check_shellcheck_install():\n+    try:\n+        subprocess.run(['shellcheck', '--version'], stdout=subprocess.DEVNULL, check=True)\n+    except FileNotFoundError:\n+        print('Skipping shell linting since shellcheck is not installed.')\n+        sys.exit(0)\n+\n+def get_files(command):\n+    output = subprocess.run(command, stdout=subprocess.PIPE, universal_newlines=True)\n+    files = output.stdout.split('\\n')\n+\n+    # remove whitespace element\n+    files = list(filter(None, files))\n+    return files\n+\n+def main():\n+    check_shellcheck_install()\n+\n+    # build the `exclude` flag\n+    exclude = '--exclude=' + ','.join(DISABLED)\n+\n+    # build the `sourced files` list\n+    sourced_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^# shellcheck shell=',\n+    ]\n+    sourced_files = get_files(sourced_files_cmd)\n+\n+    # build the `guix files` list\n+    guix_files_cmd = [\n+        'git',\n+        'grep',\n+        '-El',\n+        r'^#!\\/usr\\/bin\\/env bash',\n+        '--',\n+        'contrib/guix',\n+        'contrib/shell',\n+    ]\n+    guix_files = get_files(guix_files_cmd)\n+\n+    # build the other script files list\n+    files_cmd = [\n+        'git',\n+        'ls-files',\n+        '--',\n+        '*.sh',\n+    ]\n+    files = get_files(files_cmd)\n+    # remove everything that doesn't match this regex\n+    reg = re.compile(r'src/[leveldb,secp256k1,minisketch,univalue]')\n+    files[:] = [file for file in files if not reg.match(file)]\n+\n+    # build the `shellcheck` command\n+    shellcheck_cmd = [\n+        'shellcheck',\n+        '--external-sources',\n+        '--check-sourced',\n+        '--source-path=SCRIPTDIR',\n+    ]\n+    shellcheck_cmd.append(exclude)\n+    shellcheck_cmd.extend(sourced_files)\n+    shellcheck_cmd.extend(guix_files)\n+    shellcheck_cmd.extend(files)\n+\n+    # run the `shellcheck` command\n+    try:\n+        subprocess.check_call(shellcheck_cmd)\n+    except subprocess.CalledProcessError as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24840#discussion_r865918561",
      "id" : 865918561,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584znN5h",
      "original_commit_id" : "7b29dbde1235f783b597866fbb686247fef1aa52",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/lint/lint-shell.py",
      "position" : null,
      "pull_request_review_id" : 963380988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24840",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865918561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T13:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/865918561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
