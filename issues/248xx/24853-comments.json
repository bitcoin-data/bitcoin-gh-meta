[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851611137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851611137"
         }
      },
      "author_association" : "NONE",
      "body" : "I think it will be helpful to the user if we add an usage example for `COMMIT_RANGE` environment variable here, just how the help manual for `test/lint/lint-git-commit-check.sh` does it,  something like: \r\n`COMMIT_RANGE='b69fd5e...2e6cfc7' test/lint/lint-git-commit-check.py`",
      "commit_id" : "2e6cfc73007847b7c51de8f586cb67bd605200ed",
      "created_at" : "2022-04-16T10:04:51Z",
      "diff_hunk" : "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2020-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Linter to check that commit messages have a new line before the body\n+# or no body at all\n+\n+import argparse\n+import os\n+import sys\n+\n+from subprocess import check_output\n+\n+\n+def parse_args():\n+    \"\"\"Parse command line arguments.\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=\"\"\"\n+            Linter to check that commit messages have a new line before\n+            the body or no body at all.\n+        \"\"\",\n+        epilog=\"\"\"\n+            You can manually set the commit-range with the COMMIT_RANGE\n+            environment variable. Defaults to current merge base when\n+            neither prev-commits nor the environment variable is set.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851611137",
      "id" : 851611137,
      "line" : 27,
      "node_id" : "PRRC_kwDOABII584ywo4B",
      "original_commit_id" : "2e6cfc73007847b7c51de8f586cb67bd605200ed",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/lint/lint-git-commit-check.py",
      "position" : 27,
      "pull_request_review_id" : 943843854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851611137/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-16T10:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851611137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44436898?v=4",
         "events_url" : "https://api.github.com/users/anibilthare/events{/privacy}",
         "followers_url" : "https://api.github.com/users/anibilthare/followers",
         "following_url" : "https://api.github.com/users/anibilthare/following{/other_user}",
         "gists_url" : "https://api.github.com/users/anibilthare/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/anibilthare",
         "id" : 44436898,
         "login" : "anibilthare",
         "node_id" : "MDQ6VXNlcjQ0NDM2ODk4",
         "organizations_url" : "https://api.github.com/users/anibilthare/orgs",
         "received_events_url" : "https://api.github.com/users/anibilthare/received_events",
         "repos_url" : "https://api.github.com/users/anibilthare/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/anibilthare/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/anibilthare/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/anibilthare"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851629139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851629139"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, you're right!",
      "commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "created_at" : "2022-04-16T13:41:41Z",
      "diff_hunk" : "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2020-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Linter to check that commit messages have a new line before the body\n+# or no body at all\n+\n+import argparse\n+import os\n+import sys\n+\n+from subprocess import check_output\n+\n+\n+def parse_args():\n+    \"\"\"Parse command line arguments.\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=\"\"\"\n+            Linter to check that commit messages have a new line before\n+            the body or no body at all.\n+        \"\"\",\n+        epilog=\"\"\"\n+            You can manually set the commit-range with the COMMIT_RANGE\n+            environment variable. Defaults to current merge base when\n+            neither prev-commits nor the environment variable is set.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851629139",
      "id" : 851629139,
      "in_reply_to_id" : 851611137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ywtRT",
      "original_commit_id" : "2e6cfc73007847b7c51de8f586cb67bd605200ed",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/lint/lint-git-commit-check.py",
      "position" : null,
      "pull_request_review_id" : 943856560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851629139/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-16T13:41:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851629139",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/864811?v=4",
         "events_url" : "https://api.github.com/users/Kvaciral/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kvaciral/followers",
         "following_url" : "https://api.github.com/users/Kvaciral/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kvaciral/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kvaciral",
         "id" : 864811,
         "login" : "Kvaciral",
         "node_id" : "MDQ6VXNlcjg2NDgxMQ==",
         "organizations_url" : "https://api.github.com/users/Kvaciral/orgs",
         "received_events_url" : "https://api.github.com/users/Kvaciral/received_events",
         "repos_url" : "https://api.github.com/users/Kvaciral/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kvaciral/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kvaciral/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kvaciral"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851774566"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851774566"
         }
      },
      "author_association" : "NONE",
      "body" : "Having an exception placed here would be nice? I was testing the code and figured out that it would crash if we set `COMMIT_RANGE` to something very random, like `5` . If the code generates an exception we can convey something like `Please check the commit range` to the user? ",
      "commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "created_at" : "2022-04-17T15:59:37Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2020-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Linter to check that commit messages have a new line before the body\n+# or no body at all\n+\n+import argparse\n+import os\n+import sys\n+\n+from subprocess import check_output\n+\n+\n+def parse_args():\n+    \"\"\"Parse command line arguments.\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=\"\"\"\n+            Linter to check that commit messages have a new line before\n+            the body or no body at all.\n+        \"\"\",\n+        epilog=f\"\"\"\n+            You can manually set the commit-range with the COMMIT_RANGE\n+            environment variable (e.g. \"COMMIT_RANGE='47ba2c3...ee50c9e'\n+            {sys.argv[0]}\"). Defaults to current merge base when neither\n+            prev-commits nor the environment variable is set.\n+        \"\"\")\n+\n+    parser.add_argument(\"--prev-commits\", \"-p\", required=False, help=\"The previous n commits to check\")\n+\n+    return parser.parse_args()\n+\n+\n+def main():\n+    args = parse_args()\n+    exit_code = 0\n+\n+    if not os.getenv(\"COMMIT_RANGE\"):\n+        if args.prev_commits:\n+            commit_range = \"HEAD~\" + args.prev_commits + \"...HEAD\"\n+        else:\n+            # This assumes that the target branch of the pull request will be master.\n+            merge_base = check_output([\"git\", \"merge-base\", \"HEAD\", \"master\"], universal_newlines=True, encoding=\"utf8\").rstrip(\"\\n\")\n+            commit_range = merge_base + \"..HEAD\"\n+    else:\n+        commit_range = os.getenv(\"COMMIT_RANGE\")\n+\n+    commit_hashes = check_output([\"git\", \"log\", commit_range, \"--format=%H\"], universal_newlines=True, encoding=\"utf8\").splitlines()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r851774566",
      "id" : 851774566,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII584yxQxm",
      "original_commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/lint/lint-git-commit-check.py",
      "position" : 50,
      "pull_request_review_id" : 943963473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851774566/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-17T15:59:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851774566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44436898?v=4",
         "events_url" : "https://api.github.com/users/anibilthare/events{/privacy}",
         "followers_url" : "https://api.github.com/users/anibilthare/followers",
         "following_url" : "https://api.github.com/users/anibilthare/following{/other_user}",
         "gists_url" : "https://api.github.com/users/anibilthare/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/anibilthare",
         "id" : 44436898,
         "login" : "anibilthare",
         "node_id" : "MDQ6VXNlcjQ0NDM2ODk4",
         "organizations_url" : "https://api.github.com/users/anibilthare/orgs",
         "received_events_url" : "https://api.github.com/users/anibilthare/received_events",
         "repos_url" : "https://api.github.com/users/anibilthare/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/anibilthare/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/anibilthare/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/anibilthare"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r852098879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852098879"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I prefer to not do that here, the current output (the `git log`-stuff and the subprocess-error) is clear enough. Besides, commit_range is usually only used by CI .. and furthermore, the lint-scripts are manually only used by devs and not (technical illiterate) end-users..",
      "commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "created_at" : "2022-04-18T12:56:30Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2020-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Linter to check that commit messages have a new line before the body\n+# or no body at all\n+\n+import argparse\n+import os\n+import sys\n+\n+from subprocess import check_output\n+\n+\n+def parse_args():\n+    \"\"\"Parse command line arguments.\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=\"\"\"\n+            Linter to check that commit messages have a new line before\n+            the body or no body at all.\n+        \"\"\",\n+        epilog=f\"\"\"\n+            You can manually set the commit-range with the COMMIT_RANGE\n+            environment variable (e.g. \"COMMIT_RANGE='47ba2c3...ee50c9e'\n+            {sys.argv[0]}\"). Defaults to current merge base when neither\n+            prev-commits nor the environment variable is set.\n+        \"\"\")\n+\n+    parser.add_argument(\"--prev-commits\", \"-p\", required=False, help=\"The previous n commits to check\")\n+\n+    return parser.parse_args()\n+\n+\n+def main():\n+    args = parse_args()\n+    exit_code = 0\n+\n+    if not os.getenv(\"COMMIT_RANGE\"):\n+        if args.prev_commits:\n+            commit_range = \"HEAD~\" + args.prev_commits + \"...HEAD\"\n+        else:\n+            # This assumes that the target branch of the pull request will be master.\n+            merge_base = check_output([\"git\", \"merge-base\", \"HEAD\", \"master\"], universal_newlines=True, encoding=\"utf8\").rstrip(\"\\n\")\n+            commit_range = merge_base + \"..HEAD\"\n+    else:\n+        commit_range = os.getenv(\"COMMIT_RANGE\")\n+\n+    commit_hashes = check_output([\"git\", \"log\", commit_range, \"--format=%H\"], universal_newlines=True, encoding=\"utf8\").splitlines()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r852098879",
      "id" : 852098879,
      "in_reply_to_id" : 851774566,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII584yyf8_",
      "original_commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/lint/lint-git-commit-check.py",
      "position" : 50,
      "pull_request_review_id" : 944377680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852098879/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-18T13:00:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852098879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/864811?v=4",
         "events_url" : "https://api.github.com/users/Kvaciral/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kvaciral/followers",
         "following_url" : "https://api.github.com/users/Kvaciral/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kvaciral/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kvaciral",
         "id" : 864811,
         "login" : "Kvaciral",
         "node_id" : "MDQ6VXNlcjg2NDgxMQ==",
         "organizations_url" : "https://api.github.com/users/Kvaciral/orgs",
         "received_events_url" : "https://api.github.com/users/Kvaciral/received_events",
         "repos_url" : "https://api.github.com/users/Kvaciral/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kvaciral/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kvaciral/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kvaciral"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r852260248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852260248"
         }
      },
      "author_association" : "NONE",
      "body" : "ÙØ¹Ù  Ø§ÙØª Ø¹ÙÙ Ø­Ù",
      "commit_id" : "f27fcd9bf4d667f78055d4b3ee6f426e4c5ffe16",
      "created_at" : "2022-04-18T17:02:02Z",
      "diff_hunk" : "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2020-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Linter to check that commit messages have a new line before the body\n+# or no body at all\n+\n+import argparse\n+import os\n+import sys\n+\n+from subprocess import check_output\n+\n+\n+def parse_args():\n+    \"\"\"Parse command line arguments.\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=\"\"\"\n+            Linter to check that commit messages have a new line before\n+            the body or no body at all.\n+        \"\"\",\n+        epilog=\"\"\"\n+            You can manually set the commit-range with the COMMIT_RANGE\n+            environment variable. Defaults to current merge base when\n+            neither prev-commits nor the environment variable is set.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24853#discussion_r852260248",
      "id" : 852260248,
      "in_reply_to_id" : 851611137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yzHWY",
      "original_commit_id" : "2e6cfc73007847b7c51de8f586cb67bd605200ed",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/lint/lint-git-commit-check.py",
      "position" : null,
      "pull_request_review_id" : 944608042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24853",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852260248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-18T17:02:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852260248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/101409499?v=4",
         "events_url" : "https://api.github.com/users/samahanas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/samahanas/followers",
         "following_url" : "https://api.github.com/users/samahanas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/samahanas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/samahanas",
         "id" : 101409499,
         "login" : "samahanas",
         "node_id" : "U_kgDOBgti2w",
         "organizations_url" : "https://api.github.com/users/samahanas/orgs",
         "received_events_url" : "https://api.github.com/users/samahanas/received_events",
         "repos_url" : "https://api.github.com/users/samahanas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/samahanas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/samahanas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/samahanas"
      }
   }
]
