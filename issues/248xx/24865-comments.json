[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\nfrom test_framework.blocktools import create_coinbase\r\n```",
      "commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "created_at" : "2022-04-15T21:13:32Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.blocktools import (create_coinbase)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517641",
      "id" : 851517641,
      "line" : 13,
      "node_id" : "PRRC_kwDOABII584ywSDJ",
      "original_commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "original_line" : 13,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 13,
      "pull_request_review_id" : 943745563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-15T21:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n\r\n\r\nclass WalletPruningTest(BitcoinTestFramework):\r\n```\r\n\r\nUsualy in python there are two spaces between class and the last import declaration",
      "commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "created_at" : "2022-04-15T21:14:13Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.blocktools import (create_coinbase)\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import (\n+    get_key,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class WalletPruningTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517958",
      "id" : 851517958,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ywSIG",
      "original_commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 24,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 25,
      "pull_request_review_id" : 943745563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 24,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-15T21:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [kouloumos](https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1352743819), [furszy](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-1219783365), [w0xlt](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-1220950758), [achow101](https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1355722323) |\n| Concept ACK | [Xekyo](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-990700101), [theStack](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-1175989744) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-1106185979) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2022-04-16T06:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1100586603",
      "id" : 1100586603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585BmZ5r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100586603/reactions"
      },
      "updated_at" : "2022-12-16T22:19:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100586603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885807339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If we're reusing helper functions, perhaps we should extract them to a single place in a follow-up PR.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-05-31T15:47:11Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import get_key\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Taken from test/functional/feature_pruning.py",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885807339",
      "id" : 885807339,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII5840zFjr",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 24,
      "pull_request_review_id" : 990700101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885820729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This looks good to me, but perhaps it would be more comprehensive to learn the birthheight or first transaction's height from the wallet, and check/assert here that the corresponding block has been pruned.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-05-31T15:59:51Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import get_key\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Taken from test/functional/feature_pruning.py\n+\n+        # Make a large scriptPubKey for the coinbase transaction. This is OP_RETURN\n+        # followed by 950k of OP_NOP. This would be non-standard in a non-coinbase\n+        # transaction but is consensus valid.\n+\n+        # Get the block parameters for the first block\n+        big_script = CScript([OP_RETURN] + [OP_NOP] * 950000)\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            # Build the coinbase transaction (with large scriptPubKey)\n+            coinbase_tx = create_coinbase(height)\n+            coinbase_tx.vin[0].nSequence = 2 ** 32 - 1\n+            coinbase_tx.vout[0].scriptPubKey = big_script\n+            coinbase_tx.rehash()\n+\n+            # Build the block\n+            block = CBlock()\n+            block.nVersion = best_block[\"version\"]\n+            block.hashPrevBlock = previousblockhash\n+            block.nTime = self.nTime\n+            block.nBits = int('207fffff', 16)\n+            block.nNonce = 0\n+            block.vtx = [coinbase_tx]\n+            block.hashMerkleRoot = block.calc_merkle_root()\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)\n+\n+    def wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n+\n+        # Test importmulti\n+        key = get_key(self.nodes[1])\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": 'now'}])\n+\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": timestamp}])\n+\n+        # mine some blocks, pruning should not have removed the block\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all(self.nodes)\n+\n+        # import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # test with importmulti\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": timestamp}])\n+\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def wallet_import_pruned_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_pruned_missing_blocks.dat\"\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # mine large blocks, blocks will be pruned automatically\n+        self.mine_large_blocks(self.nodes[0], 150)\n+        self.sync_all(self.nodes)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885820729",
      "id" : 885820729,
      "line" : 136,
      "node_id" : "PRRC_kwDOABII5840zI05",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 136,
      "original_position" : 136,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 136,
      "pull_request_review_id" : 990700101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r901998188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 46b7f731b1e98b0836c5b97cd99c0887d6173a17 \"rpc: Enable wallet import on pruned nodes and add test\"\r\n\r\nWe don't want to do this for `importmulti`. `importmulti` can have some imports succeed, and others fail. Just because one import has an out of range timestamp does not mean the entire import should fail the RPC. This check would result in a JSONRPCError which is not what we expect from `importmulti` - rather there should be an error per import that has a too old timestamp.\r\n\r\nFurthermore, we already handle the pruned node case. If the rescan reports a time that is more recent than the timestamp for a given import, we will give an error for that import with more details about what happened, maybe why it happened, and how the user can resolve it.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-06-20T21:06:17Z",
      "diff_hunk" : "@@ -1383,6 +1388,8 @@ RPCHelpMan importmulti()\n                 nLowestTimestamp = timestamp;\n             }\n         }\n+\n+        EnsureBlockDataFromTime(pwallet->chain(), nLowestTimestamp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r901998188",
      "id" : 901998188,
      "line" : 1392,
      "node_id" : "PRRC_kwDOABII5841w2Zs",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 1392,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 78,
      "pull_request_review_id" : 1012746916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T21:09:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919171723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919171723"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do you actually need this? The only difference in behaviour that I see from the default https://github.com/bitcoin/bitcoin/blob/1d89fc695a3aeb3e3dcadf371b7667572b38c836/test/functional/test_framework/test_framework.py#L387\r\nis the `0 -> 1` instead of `1 -> 0` nodes' connection which seems to make no difference for the test.\r\n\r\n",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-12T16:22:59Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919171723",
      "id" : 919171723,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842yXKL",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : 51,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919171723/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919171723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919177252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177252"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that if `sync_fun` is not defined you will still have the desired behaviour here",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-12T16:28:33Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919177252",
      "id" : 919177252,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842yYgk",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919177455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177455"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`self.nodes` is the default if `nodes=None`\r\nhttps://github.com/bitcoin/bitcoin/blob/1d89fc695a3aeb3e3dcadf371b7667572b38c836/test/functional/test_framework/test_framework.py#L674",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-12T16:28:47Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919177455",
      "id" : 919177455,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842yYjv",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177455/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919177455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919187882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919187882"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: for how it is used in this test, I think that `sync_all` could be part of the `mine_large_blocks` method",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-12T16:39:13Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)\n+\n+    def wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # mine some blocks, pruning should not have removed the block\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all(self.nodes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919187882",
      "id" : 919187882,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842ybGq",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 77,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919187882/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919187882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919834580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919834580"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe it would be better to include a `test` prefix as in most tests?\r\ne.g `test_wallet_import_on_pruned_node{_with_missing_blocks}`",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-13T09:04:41Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)\n+\n+    def wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # mine some blocks, pruning should not have removed the block\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all(self.nodes)\n+\n+        # import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def wallet_import_pruned_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_pruned_missing_blocks.dat\"\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # get birthheight of wallet\n+        with open(os.path.join(self.nodes[1].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        # mine large blocks, blocks will be pruned automatically\n+        self.mine_large_blocks(self.nodes[0], 650)\n+        self.sync_all(self.nodes)\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # make sure wallet cannot be imported because of missing blocks\n+        assert_raises_rpc_error(-4, \"Pruned blocks required to import keys\", self.nodes[1].importwallet, os.path.join(self.nodes[1].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.5GB of disk space\")\n+\n+        self.create_big_chain()\n+\n+        self.wallet_import_pruned_test()\n+        self.wallet_import_pruned_missing_blocks()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919834580",
      "id" : 919834580,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584204_U",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 112,
      "original_position" : 112,
      "original_start_line" : 111,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919834580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919834580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919893941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919893941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that this test is not testing what you are expecting it to test, or its scope is just not clear to me.\r\n\r\nEven if I revert your changes to `backup.cpp` (`git checkout 9fb2a2bc6768ab03fcada9155d52a16ce6f6a0cc -- src/wallet/rpc/backup.cpp`) this test passes. My understanding is that this never reaches the prune state because no blocks are pruned until we are above PruneAfterHeight\r\nhttps://github.com/bitcoin/bitcoin/blob/1d89fc695a3aeb3e3dcadf371b7667572b38c836/src/chainparams.cpp#L429\r\nThe logic in `feature_pruning.py` also helped me to understand this behaviour.",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-07-13T10:06:20Z",
      "diff_hunk" : "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_large_block\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime)\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)\n+\n+    def wallet_import_pruned_test(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r919893941",
      "id" : 919893941,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58421He1",
      "original_commit_id" : "b45e54bf513c6e33686f4212200f1615dbac8ee4",
      "original_line" : 65,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1036108749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919893941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T14:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/919893941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you for your thorough review @kouloumos !\r\nI believe I have addressed all of your comments.",
      "created_at" : "2022-07-20T07:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1189924780",
      "id" : 1189924780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585G7M-s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189924780/reactions"
      },
      "updated_at" : "2022-07-20T07:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189924780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r960435782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960435782"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that at this point we have the required `height` for which we need blocks. Could this change to a more descriptive error message stating that required weight? And maybe \"[...]. Use RPC call getblockchaininfo to determine your pruned height\" as [here](https://github.com/bitcoin/bitcoin/blob/15692e2641592394bdd4da0a7c2d371de8e576dd/src/wallet/rpc/transactions.cpp#L898)?",
      "commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "created_at" : "2022-09-01T09:37:00Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};\n+\n+    if (found && chainHeight && !chain.hasBlocks(chain.getBlockHash(chainHeight.value()), height)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Pruned blocks required to import keys\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r960435782",
      "id" : 960435782,
      "line" : 106,
      "node_id" : "PRRC_kwDOABII5845PxZG",
      "original_commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "original_line" : 106,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 14,
      "pull_request_review_id" : 1093078818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960435782/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-01T09:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960435782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r962737491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962737491"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks, added it",
      "commit_id" : "ea532ba1d44b218db3d8ea5ee6195160c586a49f",
      "created_at" : "2022-09-05T10:11:51Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};\n+\n+    if (found && chainHeight && !chain.hasBlocks(chain.getBlockHash(chainHeight.value()), height)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Pruned blocks required to import keys\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r962737491",
      "id" : 962737491,
      "in_reply_to_id" : 960435782,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845YjVT",
      "original_commit_id" : "45435bc688387db2fdf0550f48881a8cf60cbe0f",
      "original_line" : 106,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : null,
      "pull_request_review_id" : 1096213340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962737491/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-05T10:11:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962737491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965118592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965118592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (0aedf6f3cb5a513f9e42458362261d4afa2ea17f)\r\n\r\nI think it would be slightly better to pass in `pwallet->m_last_block_processed` instead of `chain.getBlockHash(chainHeight.value())` as the first `hasBlocks` argument. In general to avoid race conditions wallet just tries to query node based on it's own chain tip and not rely on current node tip. To be more race free, could add a `Chain::hasBlocksFromTime(int64_t start_time, uint256 end_block)` method and pass `m_last_block_processed` as the end block. But just passing `m_last_block_processed` to `hasBlocks` here and dropping the `chainHeight` variable should already be an improvement.",
      "commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "created_at" : "2022-09-07T17:42:02Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};\n+\n+    if (found && chainHeight && !chain.hasBlocks(chain.getBlockHash(chainHeight.value()), height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965118592",
      "id" : 965118592,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII5845hoqA",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 105,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 13,
      "pull_request_review_id" : 1099577939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965118592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T18:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965118592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965126704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965126704"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (0aedf6f3cb5a513f9e42458362261d4afa2ea17f)\r\n\r\nSeems like an unrelated change? Would be good to drop this if possible, or maybe comment why overriding timeout is necessary.",
      "commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "created_at" : "2022-09-07T17:52:34Z",
      "diff_hunk" : "@@ -30,10 +30,10 @@ def sync_index(self, height):\n         expected_stats = {\n             'coinstatsindex': {'synced': True, 'best_block_height': height}\n         }\n-        self.wait_until(lambda: self.nodes[1].getindexinfo() == expected_stats)\n+        self.wait_until(lambda: self.nodes[1].getindexinfo() == expected_stats, timeout=120)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965126704",
      "id" : 965126704,
      "line" : 33,
      "node_id" : "PRRC_kwDOABII5845hqow",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 33,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_index_prune.py",
      "position" : 5,
      "pull_request_review_id" : 1099577939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965126704/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T18:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965126704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965132020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965132020"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (0aedf6f3cb5a513f9e42458362261d4afa2ea17f)\r\n\r\nThis `CScript(...)` value should just be generated locally inside the function, not be a python default parameter. Otherwise the cscript object is created and lives in memory even if this function is never called.\r\n\r\nCan just say `scriptPubKey=None` in parameter list and `if scriptPubKey is None: scriptPubKey = CScript(...)` inside the function. Or just make scriptPubKey a local variable since the argument is never specified anyway.\r\n",
      "commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "created_at" : "2022-09-07T17:59:26Z",
      "diff_hunk" : "@@ -87,6 +87,13 @@ def create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl\n     block.calc_sha256()\n     return block\n \n+def create_large_block(hashprev=None, ntime=None, height=None, scriptPubKey=CScript([OP_RETURN] + [OP_TRUE] * 950000)):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965132020",
      "id" : 965132020,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII5845hr70",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 90,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/blocktools.py",
      "position" : 4,
      "pull_request_review_id" : 1099577939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965132020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T18:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965132020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965142787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965142787"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a large object that takes time to construct so I thought making it static would avoid constructing it multiple times, but I had not thought of the fact that this lives in memory even if the function is unused.\r\nWill fix though, thanks.",
      "commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "created_at" : "2022-09-07T18:13:28Z",
      "diff_hunk" : "@@ -87,6 +87,13 @@ def create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl\n     block.calc_sha256()\n     return block\n \n+def create_large_block(hashprev=None, ntime=None, height=None, scriptPubKey=CScript([OP_RETURN] + [OP_TRUE] * 950000)):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965142787",
      "id" : 965142787,
      "in_reply_to_id" : 965132020,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII5845hukD",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 90,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/blocktools.py",
      "position" : 4,
      "pull_request_review_id" : 1099612294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965142787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T18:13:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965142787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965377110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377110"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oops, fixed",
      "commit_id" : "1ff4d5aaba0f08bf444eb0fae61645958d9bad05",
      "created_at" : "2022-09-07T23:23:53Z",
      "diff_hunk" : "@@ -30,10 +30,10 @@ def sync_index(self, height):\n         expected_stats = {\n             'coinstatsindex': {'synced': True, 'best_block_height': height}\n         }\n-        self.wait_until(lambda: self.nodes[1].getindexinfo() == expected_stats)\n+        self.wait_until(lambda: self.nodes[1].getindexinfo() == expected_stats, timeout=120)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965377110",
      "id" : 965377110,
      "in_reply_to_id" : 965126704,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845inxW",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 33,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_index_prune.py",
      "position" : null,
      "pull_request_review_id" : 1099927744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377110/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T23:23:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965377348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review, fixed it!",
      "commit_id" : "1ff4d5aaba0f08bf444eb0fae61645958d9bad05",
      "created_at" : "2022-09-07T23:24:25Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};\n+\n+    if (found && chainHeight && !chain.hasBlocks(chain.getBlockHash(chainHeight.value()), height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r965377348",
      "id" : 965377348,
      "in_reply_to_id" : 965118592,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845in1E",
      "original_commit_id" : "0aedf6f3cb5a513f9e42458362261d4afa2ea17f",
      "original_line" : 105,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : null,
      "pull_request_review_id" : 1099928065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-07T23:24:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965377348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966088757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966088757"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (f42c077a8f948f5c93b68eb1b7fa246b4f6475ef)\r\n\r\nI think there's no need for the chainHeight variable anymore and it would be better to drop it.",
      "commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "created_at" : "2022-09-08T15:06:19Z",
      "diff_hunk" : "@@ -93,6 +93,21 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, const CWallet& wallet, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966088757",
      "id" : 966088757,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII5845lVg1",
      "original_commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "original_line" : 103,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 11,
      "pull_request_review_id" : 1100921878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966088757/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-08T15:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966088757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966092910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966092910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (f42c077a8f948f5c93b68eb1b7fa246b4f6475ef)\r\n\r\nJust IMO, but I think it would be better to keep the existing `big_script` variable below and delete this new variable (smaller diff, more descriptive variable name, more straightforward code avoiding global variables)",
      "commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "created_at" : "2022-09-08T15:10:03Z",
      "diff_hunk" : "@@ -10,25 +10,25 @@\n \"\"\"\n import os\n \n-from test_framework.blocktools import create_coinbase\n-from test_framework.messages import CBlock\n-from test_framework.script import (\n-    CScript,\n-    OP_NOP,\n-    OP_RETURN,\n-)\n+from test_framework.blocktools import create_large_block\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     assert_greater_than,\n     assert_raises_rpc_error,\n )\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n \n # Rescans start at the earliest block up to 2 hours before a key timestamp, so\n # the manual prune RPC avoids pruning blocks in the same window to be\n # compatible with pruning based on key creation time.\n TIMESTAMP_WINDOW = 2 * 60 * 60\n \n+scriptPubKey = CScript([OP_RETURN] + [OP_TRUE] * 950000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966092910",
      "id" : 966092910,
      "line" : 31,
      "node_id" : "PRRC_kwDOABII5845lWhu",
      "original_commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "original_line" : 31,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/feature_pruning.py",
      "position" : 29,
      "pull_request_review_id" : 1100921878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966092910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-08T15:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966092910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966118683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966118683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (f42c077a8f948f5c93b68eb1b7fa246b4f6475ef)\r\n\r\nThis new `create_large_block` seems very inflexible and also has a misleading name. Would drop it and instead just add a new option to `create_coinbase` like:\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_pruning.py b/test/functional/feature_pruning.py\r\nindex 8d72d11baf5..d14970c9463 100755\r\n--- a/test/functional/feature_pruning.py\r\n+++ b/test/functional/feature_pruning.py\r\n@@ -10,7 +10,8 @@ This test takes 30 mins or more (up to 2 hours)\r\n \"\"\"\r\n import os\r\n \r\n-from test_framework.blocktools import create_large_block\r\n+from test_framework.blocktools import create_block\r\n+from test_framework.blocktools import create_coinbase\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_equal,\r\n@@ -47,7 +48,7 @@ def mine_large_blocks(node, n):\r\n     previousblockhash = int(best_block[\"hash\"], 16)\r\n \r\n     for _ in range(n):\r\n-        block = create_large_block(hashprev=previousblockhash, height=height, ntime=mine_large_blocks.nTime, scriptPubKey=scriptPubKey)\r\n+        block = create_block(hashprev=previousblockhash, ntime=mine_large_blocks.nTime, coinbase=create_coinbase(height, script_pubkey=scriptPubKey))\r\n         block.solve()\r\n \r\n         # Submit to the node\r\ndiff --git a/test/functional/test_framework/blocktools.py b/test/functional/test_framework/blocktools.py\r\nindex 5916ffc2b17..77653df96e9 100644\r\n--- a/test/functional/test_framework/blocktools.py\r\n+++ b/test/functional/test_framework/blocktools.py\r\n@@ -87,13 +87,6 @@ def create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl\r\n     block.calc_sha256()\r\n     return block\r\n \r\n-def create_large_block(hashprev, ntime, height, scriptPubKey):\r\n-    coinbase_tx = create_coinbase(height)\r\n-    coinbase_tx.vout[0].scriptPubKey = scriptPubKey\r\n-    coinbase_tx.rehash()\r\n-\r\n-    return create_block(coinbase=coinbase_tx, ntime=ntime, hashprev=hashprev)\r\n-\r\n def get_witness_script(witness_root, witness_nonce):\r\n     witness_commitment = uint256_from_str(hash256(ser_uint256(witness_root) + ser_uint256(witness_nonce)))\r\n     output_data = WITNESS_COMMITMENT_HEADER + ser_uint256(witness_commitment)\r\n@@ -127,7 +120,7 @@ def script_BIP34_coinbase_height(height):\r\n     return CScript([CScriptNum(height)])\r\n \r\n \r\n-def create_coinbase(height, pubkey=None, extra_output_script=None, fees=0, nValue=50):\r\n+def create_coinbase(height, pubkey=None, *, script_pubkey=None, extra_output_script=None, fees=0, nValue=50):\r\n     \"\"\"Create a coinbase transaction.\r\n \r\n     If pubkey is passed in, the coinbase output will be a P2PK output;\r\n@@ -145,6 +138,8 @@ def create_coinbase(height, pubkey=None, extra_output_script=None, fees=0, nValu\r\n         coinbaseoutput.nValue += fees\r\n     if pubkey is not None:\r\n         coinbaseoutput.scriptPubKey = key_to_p2pk_script(pubkey)\r\n+    elif script_pubkey is not None:\r\n+        coinbaseoutput.scriptPubKey = script_pubkey\r\n     else:\r\n         coinbaseoutput.scriptPubKey = CScript([OP_TRUE])\r\n     coinbase.vout = [coinbaseoutput]\r\ndiff --git a/test/functional/wallet_pruning.py b/test/functional/wallet_pruning.py\r\nindex 9b8160a4490..e42994422e0 100755\r\n--- a/test/functional/wallet_pruning.py\r\n+++ b/test/functional/wallet_pruning.py\r\n@@ -7,7 +7,8 @@\r\n import os\r\n \r\n from test_framework.util import assert_raises_rpc_error\r\n-from test_framework.blocktools import create_large_block\r\n+from test_framework.blocktools import create_block\r\n+from test_framework.blocktools import create_coinbase\r\n from test_framework.test_framework import BitcoinTestFramework\r\n \r\n from test_framework.script import (\r\n@@ -26,7 +27,7 @@ class WalletPruningTest(BitcoinTestFramework):\r\n         self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\r\n         previousblockhash = int(best_block[\"hash\"], 16)\r\n         for _ in range(n):\r\n-            block = create_large_block(hashprev=previousblockhash, height=height, ntime=self.nTime, scriptPubKey=self.scriptPubKey)\r\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=self.scriptPubKey))\r\n             block.solve()\r\n \r\n             # Submit to the node\r\n\r\n```",
      "commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "created_at" : "2022-09-08T15:32:49Z",
      "diff_hunk" : "@@ -87,6 +87,13 @@ def create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl\n     block.calc_sha256()\n     return block\n \n+def create_large_block(hashprev, ntime, height, scriptPubKey):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966118683",
      "id" : 966118683,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII5845lc0b",
      "original_commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "original_line" : 90,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/blocktools.py",
      "position" : 4,
      "pull_request_review_id" : 1100921878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966118683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-08T15:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966118683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966124252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966124252"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (f42c077a8f948f5c93b68eb1b7fa246b4f6475ef)\r\n\r\nI don't think we need to keep the wallet locked while running all the code below. Would suggest using a shorter lock:\r\n\r\n```c++\r\nuint256 tip_hash = WITH_LOCK(wallet.cs_wallet, return wallet.GetLastBlockHash());\r\n```",
      "commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "created_at" : "2022-09-08T15:37:58Z",
      "diff_hunk" : "@@ -93,6 +93,21 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, const CWallet& wallet, int64_t timestamp)\n+{\n+    if (!chain.havePruned())\n+        return;\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};\n+    const std::optional<int> chainHeight{chain.getHeight()};\n+\n+    LOCK(wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r966124252",
      "id" : 966124252,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII5845leLc",
      "original_commit_id" : "f42c077a8f948f5c93b68eb1b7fa246b4f6475ef",
      "original_line" : 105,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 13,
      "pull_request_review_id" : 1100921878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966124252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-08T15:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/966124252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review again @ryanofsky, I think I've addressed all your comments.",
      "created_at" : "2022-09-08T18:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1241075255",
      "id" : 1241075255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585J-U43",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1241075255/reactions"
      },
      "updated_at" : "2022-09-08T18:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1241075255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r968783740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968783740"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"rpc: Enable wallet import on pruned nodes and add test\" (05463d4001001213c17672c1607a3a493927ddd7)\r\n\r\nCan just keep existing `big_script` variable, no need to replace it with new `bigScript` variable. This would make the diff small and make the naming convention more convenient",
      "commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "created_at" : "2022-09-12T18:38:32Z",
      "diff_hunk" : "@@ -41,28 +41,14 @@ def mine_large_blocks(node, n):\n         mine_large_blocks.nTime = 0\n \n     # Get the block parameters for the first block\n-    big_script = CScript([OP_RETURN] + [OP_NOP] * 950000)\n     best_block = node.getblock(node.getbestblockhash())\n     height = int(best_block[\"height\"]) + 1\n     mine_large_blocks.nTime = max(mine_large_blocks.nTime, int(best_block[\"time\"])) + 1\n     previousblockhash = int(best_block[\"hash\"], 16)\n+    bigScript = CScript([OP_RETURN] + [OP_TRUE] * 950000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r968783740",
      "id" : 968783740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845vnd8",
      "original_commit_id" : "05463d4001001213c17672c1607a3a493927ddd7",
      "original_line" : 48,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/feature_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1104645206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968783740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-12T18:39:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968783740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r969418942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969418942"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "my bad, fixed",
      "commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "created_at" : "2022-09-13T10:02:20Z",
      "diff_hunk" : "@@ -41,28 +41,14 @@ def mine_large_blocks(node, n):\n         mine_large_blocks.nTime = 0\n \n     # Get the block parameters for the first block\n-    big_script = CScript([OP_RETURN] + [OP_NOP] * 950000)\n     best_block = node.getblock(node.getbestblockhash())\n     height = int(best_block[\"height\"]) + 1\n     mine_large_blocks.nTime = max(mine_large_blocks.nTime, int(best_block[\"time\"])) + 1\n     previousblockhash = int(best_block[\"hash\"], 16)\n+    bigScript = CScript([OP_RETURN] + [OP_TRUE] * 950000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r969418942",
      "id" : 969418942,
      "in_reply_to_id" : 968783740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5845yCi-",
      "original_commit_id" : "05463d4001001213c17672c1607a3a493927ddd7",
      "original_line" : 48,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/feature_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1105499079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969418942/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-13T10:02:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969418942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixes #9409.",
      "created_at" : "2022-09-16T12:58:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1249335831",
      "id" : 1249335831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585Kd1oX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1249335831/reactions"
      },
      "updated_at" : "2022-09-16T12:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1249335831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r984571657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984571657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: maybe add some comments here to explain the rationale behind this mid-test connection? I think it will not be very clear for someone reading this test in the future.",
      "commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "created_at" : "2022-09-30T13:05:19Z",
      "diff_hunk" : "@@ -0,0 +1,132 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        # do not sync\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: None)\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 600)\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # mine some blocks, pruning should not have removed the block\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_pruned_missing_blocks.dat\"\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # get birthheight of wallet\n+        with open(os.path.join(self.nodes[1].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        # mine large blocks, blocks will be pruned automatically\n+        self.mine_large_blocks(self.nodes[0], 600)\n+        self.sync_all()\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # make sure wallet cannot be imported because of missing blocks\n+        assert_raises_rpc_error(-4, \"Pruned blocks from height 876 required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[1].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.5GB of disk space\")\n+\n+        self.create_big_chain()\n+\n+        # connect mid-test node1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r984571657",
      "id" : 984571657,
      "line" : 119,
      "node_id" : "PRRC_kwDOABII5846r18J",
      "original_commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "original_line" : 119,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 119,
      "pull_request_review_id" : 1126791749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984571657/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-30T13:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984571657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r984599053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984599053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This dump&import pattern in the same wallet might be ok for checking against the RPC assertion of the newly introduced logic, but in reality the keys and scripts in the dump file are not imported in the wallet because they already exist. \r\n\r\nI don't consider this as an issue because that behavior is also tested elsewhere(`wallet_dump.py`) but I think changing this part makes for a better usage scenario. ",
      "commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "created_at" : "2022-09-30T13:34:10Z",
      "diff_hunk" : "@@ -0,0 +1,132 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        # do not sync\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: None)\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 600)\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r984599053",
      "id" : 984599053,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII5846r8oN",
      "original_commit_id" : "6dc2e7141de83022f0ca0c48afd5ea7e5c4684d0",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : 78,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 81,
      "pull_request_review_id" : 1126791749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984599053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 78,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-30T13:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984599053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you @kouloumos for your review.\r\nI have reworked the test to take your comments into account and also reduce the time it takes to run.\r\nIt took 1min24 to run and reduced it to 54 seconds (on my machine).\r\nAlso added more comments to explain each step of the test and split the PR into two commits.",
      "created_at" : "2022-10-02T16:22:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1264680594",
      "id" : 1264680594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585LYX6S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264680594/reactions"
      },
      "updated_at" : "2022-10-02T16:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264680594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a test case to check that the wallet balance is correct.  ",
      "created_at" : "2022-10-02T16:51:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1264686399",
      "id" : 1264686399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585LYZU_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264686399/reactions"
      },
      "updated_at" : "2022-10-02T16:51:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264686399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry, I didn't check that https://github.com/bitcoin/bitcoin/pull/26206 will actually conflict with this PR. This needs a rebase on top of it and then revert that commit in this PR.",
      "created_at" : "2022-10-19T13:44:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1284041300",
      "id" : 1284041300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585MiOpU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284041300/reactions"
      },
      "updated_at" : "2022-10-19T13:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284041300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, reverted 4aff7a48a4e0f1075306f181a276b8a74c857022 and added @ryanofsky and @kouloumos as co-authors.",
      "created_at" : "2022-10-19T14:53:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1284145211",
      "id" : 1284145211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585MioA7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284145211/reactions"
      },
      "updated_at" : "2022-10-19T14:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284145211",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1000091466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000091466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why create a function for this? Would this be easier to reason about if it was inline?",
      "commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "created_at" : "2022-10-20T02:46:09Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, const CWallet& wallet, int64_t timestamp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1000091466",
      "id" : 1000091466,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5847nC9K",
      "original_commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "original_line" : 96,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 4,
      "pull_request_review_id" : 1148476520,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000091466/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-20T02:55:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000091466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1000268340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000268340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've seen many instances of `Ensure(.*)` functions and it also helps to reduce the length of the parent function I suppose.",
      "commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "created_at" : "2022-10-20T07:53:29Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, const CWallet& wallet, int64_t timestamp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1000268340",
      "id" : 1000268340,
      "in_reply_to_id" : 1000091466,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5847nuI0",
      "original_commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "original_line" : 96,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 4,
      "pull_request_review_id" : 1148730887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000268340/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-20T07:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000268340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this need a rebase after https://github.com/bitcoin/bitcoin/pull/26380?",
      "created_at" : "2022-10-24T17:20:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1289350453",
      "id" : 1289350453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585M2e01",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289350453/reactions"
      },
      "updated_at" : "2022-10-24T17:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289350453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1004096103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004096103"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (!chain.havePruned()) {\r\n```\r\n\r\nnit (for new code)",
      "commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "created_at" : "2022-10-25T07:20:58Z",
      "diff_hunk" : "@@ -93,6 +93,20 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(interfaces::Chain& chain, const CWallet& wallet, int64_t timestamp)\n+{\n+    if (!chain.havePruned())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1004096103",
      "id" : 1004096103,
      "line" : 98,
      "node_id" : "PRRC_kwDOABII58472Upn",
      "original_commit_id" : "661e45300a754bd32d3558d94f56ae2d3cd87844",
      "original_line" : 98,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 6,
      "pull_request_review_id" : 1154262435,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004096103/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-25T07:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004096103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Dropped e1eadaa72d6831d1d0a53ba97c215dc4cdb64436, rebased for #26380 and addressed MarcoFalke's nit. ",
      "created_at" : "2022-10-25T08:40:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1290197033",
      "id" : 1290197033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585M5tgp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1290197033/reactions"
      },
      "updated_at" : "2022-10-25T08:40:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1290197033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1009747316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009747316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 6abd81b11dd1a45bdffcc85ba90591474a3f48b0 \"test: Wallet imports on pruned nodes\"\r\n\r\nSince this is testing legacy wallet only RPCs, we should not be looking at the `--legacy-wallet`/`--descriptors` options to determine the wallet type to create, for all wallets created in this test.\r\n\r\n```suggestion\r\n        self.nodes[0].createwallet(wallet_name=\"wallet_init\", descriptors=False, load_on_startup=True)\r\n```",
      "commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "created_at" : "2022-10-31T18:42:39Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_init.dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.2GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: None)\n+        # Also generate 128MB worth of large blocks to fill the first blk*.dat file because it cannot be pruned\n+        self.mine_large_blocks(self.nodes[0], 128)\n+\n+        # Generate 50MB worth of large blocks in the second blk*.dat file\n+        self.mine_large_blocks(self.nodes[0], 50)\n+        # Create a wallet and a backup of it which birth's block is in the second blk*.dat file\n+        self.nodes[0].createwallet(wallet_name=\"wallet_init\", descriptors=self.options.descriptors, load_on_startup=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1009747316",
      "id" : 1009747316,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII5848L4V0",
      "original_commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "original_line" : 126,
      "original_position" : 126,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 126,
      "pull_request_review_id" : 1162371128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009747316/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-31T18:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009747316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1009752111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009752111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 6abd81b11dd1a45bdffcc85ba90591474a3f48b0 \"test: Wallet imports on pruned nodes\"\r\n\r\nShould have `--legacy-wallet` to indicate that this test is a legacy wallet only test. Also, the default is `--descriptors`.\r\n\r\n```suggestion\r\n    'wallet_pruning.py --legacy-wallet',\r\n```",
      "commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "created_at" : "2022-10-31T18:48:13Z",
      "diff_hunk" : "@@ -83,6 +83,7 @@\n     'feature_pruning.py',\n     'feature_dbcrash.py',\n     'feature_index_prune.py',\n+    'wallet_pruning.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1009752111",
      "id" : 1009752111,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII5848L5gv",
      "original_commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "original_line" : 86,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 1162371128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009752111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-31T18:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009752111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010070688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010070688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nfrom test_framework.blocktools import (\r\n    create_block,\r\n    create_coinbase,\r\n)\r\n```\r\n```",
      "commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "created_at" : "2022-11-01T04:54:58Z",
      "diff_hunk" : "@@ -10,8 +10,8 @@\n \"\"\"\n import os\n \n+from test_framework.blocktools import create_block\n from test_framework.blocktools import create_coinbase",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010070688",
      "id" : 1010070688,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII5848NHSg",
      "original_commit_id" : "6abd81b11dd1a45bdffcc85ba90591474a3f48b0",
      "original_line" : 14,
      "original_position" : 5,
      "original_start_line" : 13,
      "path" : "test/functional/feature_pruning.py",
      "position" : 5,
      "pull_request_review_id" : 1162828009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010070688/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 13,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-01T04:54:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010070688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed the suggestions, thanks @achow101 @w0xlt.",
      "created_at" : "2022-11-01T11:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1298386723",
      "id" : 1298386723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585NY88j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298386723/reactions"
      },
      "updated_at" : "2022-11-01T11:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1298386723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010821118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In a0762cf6ec0bbc5eb770912a1ab917862f5515ca \"test: Wallet imports on pruned nodes\"\r\n\r\n```suggestion\r\n        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\r\n```",
      "commit_id" : "a0762cf6ec0bbc5eb770912a1ab917862f5515ca",
      "created_at" : "2022-11-01T19:28:19Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010821118",
      "id" : 1010821118,
      "line" : 71,
      "node_id" : "PRRC_kwDOABII5848P-f-",
      "original_commit_id" : "a0762cf6ec0bbc5eb770912a1ab917862f5515ca",
      "original_line" : 71,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 71,
      "pull_request_review_id" : 1163929402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821118/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-01T19:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010821202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In a0762cf6ec0bbc5eb770912a1ab917862f5515ca \"test: Wallet imports on pruned nodes\"\r\n\r\n```suggestion\r\n        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\r\n```",
      "commit_id" : "a0762cf6ec0bbc5eb770912a1ab917862f5515ca",
      "created_at" : "2022-11-01T19:28:25Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1010821202",
      "id" : 1010821202,
      "line" : 79,
      "node_id" : "PRRC_kwDOABII5848P-hS",
      "original_commit_id" : "a0762cf6ec0bbc5eb770912a1ab917862f5515ca",
      "original_line" : 79,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 79,
      "pull_request_review_id" : 1163929402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-01T19:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010821202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1011559755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011559755"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, pushed.",
      "commit_id" : "8f790512fc1e585c56c964fb7983edbf445f1fab",
      "created_at" : "2022-11-02T10:54:05Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=self.options.descriptors, load_on_startup=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1011559755",
      "id" : 1011559755,
      "in_reply_to_id" : 1010821118,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5848Sy1L",
      "original_commit_id" : "a0762cf6ec0bbc5eb770912a1ab917862f5515ca",
      "original_line" : 71,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1164999138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011559755/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-02T10:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011559755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "You should rebase to fix ci test failure for `p2p_sendtxrcncl.py`.",
      "created_at" : "2022-11-02T15:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1300684204",
      "id" : 1300684204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585Nht2s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300684204/reactions"
      },
      "updated_at" : "2022-11-02T15:29:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300684204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You should rebase to fix ci test failure for p2p_sendtxrcncl.\r\n\r\n:heavy_check_mark: ",
      "created_at" : "2022-11-02T15:53:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1300744287",
      "id" : 1300744287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585Nh8hf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300744287/reactions"
      },
      "updated_at" : "2022-11-02T15:53:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1300744287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1014135293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014135293"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In c46f5fe5:\r\n\r\nTiny nit, this could be passed as an argument so we avoid hardcoding file names more than once.",
      "commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "created_at" : "2022-11-04T15:03:53Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_init.dat\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1014135293",
      "id" : 1014135293,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5848cnn9",
      "original_commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "original_line" : 96,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 96,
      "pull_request_review_id" : 1168712278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014135293/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-04T15:04:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014135293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1019275420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019275420"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: not directly related to this PR, but as a follow-up I think it would make sense to introduce the constant [`MIN_BLOCKS_TO_KEEP`](https://github.com/bitcoin/bitcoin/blob/9dce30194bc07463d634072251a8bf83e1b10ff9/src/validation.h#L68-L69) into the functional test framework, in order to the replace this magic number here and in other tests (e.g. feature_pruning.py)",
      "commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "created_at" : "2022-11-10T15:24:34Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_init.dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.2GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1019275420",
      "id" : 1019275420,
      "line" : 119,
      "node_id" : "PRRC_kwDOABII5848wOic",
      "original_commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "original_line" : 119,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 119,
      "pull_request_review_id" : 1175989744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019275420/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-10T15:37:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019275420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1019285076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019285076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should ensure here that the test is only run if legacy wallet support (BDB) is compiled in:\r\n```suggestion\r\n        self.skip_if_no_wallet()\r\n        self.skip_if_no_bdb()\r\n```",
      "commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "created_at" : "2022-11-10T15:32:37Z",
      "diff_hunk" : "@@ -0,0 +1,148 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1019285076",
      "id" : 1019285076,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII5848wQ5U",
      "original_commit_id" : "c46f5fe58e60ad1ff25978604243a90fce6b634c",
      "original_line" : 63,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 63,
      "pull_request_review_id" : 1175989744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019285076/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-10T15:37:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1019285076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed the nits, thanks @furszy @theStack.\r\nhttps://github.com/bitcoin/bitcoin/compare/c46f5fe58e60ad1ff25978604243a90fce6b634c..eb2e54d00e7c03e0ca5238a2fabe078fca08b1c2\r\n\r\nI added eb2e54d00e7c03e0ca5238a2fabe078fca08b1c2.",
      "created_at" : "2022-11-11T10:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1311548897",
      "id" : 1311548897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585OLKXh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311548897/reactions"
      },
      "updated_at" : "2022-11-15T15:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311548897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reduced the number of blocks generated to speed up the test (from 1:40 to 1:24).",
      "created_at" : "2022-11-16T12:09:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1316909151",
      "id" : 1316909151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585OfnBf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1316909151/reactions"
      },
      "updated_at" : "2022-11-16T12:09:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1316909151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1031634352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031634352"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there a reason that you are passing the chain interface as a separate argument instead  of accessing it inside the function with `wallet.chain().*`?",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-24T15:26:21Z",
      "diff_hunk" : "@@ -565,15 +573,18 @@ RPCHelpMan importwallet()\n                         fLabel = true;\n                     }\n                 }\n+                nTimeBegin = std::min(nTimeBegin, nTime);\n                 keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n                 std::vector<unsigned char> vData(ParseHex(vstr[0]));\n                 CScript script = CScript(vData.begin(), vData.end());\n                 int64_t birth_time = ParseISO8601DateTime(vstr[1]);\n+                if (birth_time > 0) nTimeBegin = std::min(nTimeBegin, birth_time);\n                 scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        EnsureBlockDataFromTime(pwallet->chain(), *pwallet, nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1031634352",
      "id" : 1031634352,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849fX2w",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 587,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031634352/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031634352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1031637798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031637798"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this different than \r\n```suggestion\r\n        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=self.no_op)\r\n```\r\nIf not, I think it's better to keep it consistent across tests.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-24T15:30:10Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1031637798",
      "id" : 1031637798,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849fYsm",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 120,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031637798/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031637798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032073285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032073285"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are you sure that the files generated here are part of the second blk*.data file?\r\nUsing an adaptation of this function says otherwise\r\nhttps://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/test/functional/feature_pruning.py#L296-L297\r\n\r\nYour [latest push](https://github.com/bitcoin/bitcoin/compare/eb2e54d00e7c03e0ca5238a2fabe078fca08b1c2..c594dbc7560f18a657bd624983ca58732b0f3183) decreasing the number of generated large blocks invalidate this statement.\r\nI calculated that you need min 142 blocks to be generated here in order for the the `blk00001.dat` file to be created, resulting to the wallet that you create below to actually have a birth height in this file.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T07:29:19Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)\n+\n+        # Generate 50MB worth of large blocks in the second blk*.dat file\n+        self.mine_large_blocks(self.nodes[0], 50)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032073285",
      "id" : 1032073285,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hDBF",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 124,
      "original_position" : 123,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032073285/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032073285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032100918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032100918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The custom setup logic that I implied on [my initial review](https://github.com/bitcoin/bitcoin/pull/24865#pullrequestreview-1036108749) was because you were using the default created wallets. But since then, you are testing on manually created wallets, therefore this is not needed.\r\n\r\nAdditionally, I've later realize that you can skip the creation of the default wallets with `self.wallet_names=[]` which can help to simplify the logic.\r\nhttps://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/test/functional/test_framework/test_framework.py#L108-L113",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T08:08:51Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032100918",
      "id" : 1032100918,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hJw2",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : 55,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032100918/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032100918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032115868"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032115868"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I understand why you need some light blocks in the beginning. What I don't understand is the comment here referring to specifically 288 light blocks. Looking at the c++ code I read this about that number\r\nhttps://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/src/validation.h#L68-L69\r\n\r\nHow is that related to the logic of this test?",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T08:27:40Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032115868",
      "id" : 1032115868,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hNac",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 120,
      "original_position" : 120,
      "original_start_line" : 119,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032115868/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032115868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032127100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032127100"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This comment is not true. That file might be later pruned, but at this point is not and it makes reading the code confusing. ",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T08:42:07Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)\n+\n+        # Generate 50MB worth of large blocks in the second blk*.dat file\n+        self.mine_large_blocks(self.nodes[0], 50)\n+\n+        wallet_name = \"wallet_init\"\n+\n+        # Create a wallet and a backup of it which birth's block is in the second blk*.dat file\n+        self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wallet_name + \".dat\"))\n+        self.nodes[0].unloadwallet(wallet_name)\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        # The first blk*.dat file should be pruned from the node 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032127100",
      "id" : 1032127100,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hQJ8",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 133,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032127100/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032127100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032192824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032192824"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n        # Make sure that prune node's wallet correctly accounts for balances\r\n```",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T09:55:46Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032192824",
      "id" : 1032192824,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hgM4",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032192824/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032192824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032196890"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032196890"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "~You already imported the wallet in the pruned node above. I don't understand why you need to repeat this here. What do those newly mined 5 large blocks achieve?~\r\n\r\nFurther down me messing with the code, I understood that those 5 blocks are needed to actually get into prune state and prune the `blk00000.dat` file. But for someone reading the code this is not clear. And if we are now getting into prune mode, then what's the above importwallet for?",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T09:59:46Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032196890",
      "id" : 1032196890,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849hhMa",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 91,
      "original_position" : 91,
      "original_start_line" : 86,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032196890/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032196890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032363421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032363421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this the right place for this variable? I think that I haven't seen any other tests initializing self variables in such a way.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T11:29:46Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032363421",
      "id" : 1032363421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849iJ2d",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032363421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032363421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032364424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032364424"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "From what I've seen, custom functions are often declared after the setup override functions.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-25T11:31:08Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032364424",
      "id" : 1032364424,
      "line" : 37,
      "node_id" : "PRRC_kwDOABII5849iKGI",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 37,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 37,
      "pull_request_review_id" : 1193334619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032364424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-25T13:56:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032364424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed chain argument, thanks.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:07:54Z",
      "diff_hunk" : "@@ -565,15 +573,18 @@ RPCHelpMan importwallet()\n                         fLabel = true;\n                     }\n                 }\n+                nTimeBegin = std::min(nTimeBegin, nTime);\n                 keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n                 std::vector<unsigned char> vData(ParseHex(vstr[0]));\n                 CScript script = CScript(vData.begin(), vData.end());\n                 int64_t birth_time = ParseISO8601DateTime(vstr[1]);\n+                if (birth_time > 0) nTimeBegin = std::min(nTimeBegin, birth_time);\n                 scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        EnsureBlockDataFromTime(pwallet->chain(), *pwallet, nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902323",
      "id" : 1032902323,
      "in_reply_to_id" : 1031634352,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849kNaz",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 587,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : null,
      "pull_request_review_id" : 1194959537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902323/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-27T10:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated thanks.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:08:03Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902363",
      "id" : 1032902363,
      "in_reply_to_id" : 1031637798,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849kNbb",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 120,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1194959555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-27T10:08:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes the comment was wrong.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:08:23Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)\n+\n+        # Generate 50MB worth of large blocks in the second blk*.dat file\n+        self.mine_large_blocks(self.nodes[0], 50)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902413",
      "id" : 1032902413,
      "in_reply_to_id" : 1032073285,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849kNcN",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 124,
      "original_position" : 123,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1194959598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902413/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-27T10:08:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902413",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this was based on a different version of this test but you are correct 288 is not needed. I changed it to 250.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:09:03Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n+        self.start_node(0)\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def test_wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # Export wallet from node 0\n+        self.nodes[0].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Add mature coins to the wallet\n+        self.generatetoaddress(self.nodes[0], 1, self.nodes[0].getnewaddress(), sync_fun=lambda: None)\n+        self.generate(self.nodes[0], 100)\n+\n+        # Import wallet into node 1\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+\n+        # Make sure the wallets have the same balance\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        # Mine some blocks, pruning should not have removed the blocks required for the wallet\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all()\n+\n+        # Import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wname))\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = wallet_name + \".dat\"\n+\n+        # Get birthheight of wallet\n+        with open(os.path.join(self.nodes[0].datadir, wname), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    break\n+\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wname))\n+\n+    def run_test(self):\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")\n+\n+        self.log.info(\"Generate a long chain of blocks...\")\n+\n+        # A blk*.dat file is 128MB\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], MIN_BLOCKS_TO_KEEP, sync_fun=lambda: None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032902534",
      "id" : 1032902534,
      "in_reply_to_id" : 1032115868,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849kNeG",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 120,
      "original_position" : 120,
      "original_start_line" : 119,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1194959690,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-27T10:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032902534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032903111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, I moved it.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:12:31Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032903111",
      "id" : 1032903111,
      "in_reply_to_id" : 1032364424,
      "line" : 37,
      "node_id" : "PRRC_kwDOABII5849kNnH",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 37,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 37,
      "pull_request_review_id" : 1194960169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-27T10:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032903122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks I moved it.",
      "commit_id" : "8e87433a4460088d15275623f0b6f1893af28d82",
      "created_at" : "2022-11-27T10:12:38Z",
      "diff_hunk" : "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import MIN_BLOCKS_TO_KEEP, create_block\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1032903122",
      "id" : 1032903122,
      "in_reply_to_id" : 1032363421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849kNnS",
      "original_commit_id" : "c594dbc7560f18a657bd624983ca58732b0f3183",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1194960180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903122/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-27T10:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032903122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for your detailed review @kouloumos. I cherry-picked your commit and squashed it. I also addressed some of your additional suggestions.\r\n",
      "created_at" : "2022-11-27T10:16:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1328213712",
      "id" : 1328213712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585PKu7Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328213712/reactions"
      },
      "updated_at" : "2022-11-27T10:16:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328213712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 8e87433a4460088d15275623f0b6f1893af28d82\r\nnit: The `MIN_BLOCKS_TO_KEEP` constant is not used anymore in the test, which makes 8e87433a4460088d15275623f0b6f1893af28d82 out of scope.",
      "created_at" : "2022-11-28T10:54:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1328879005",
      "id" : 1328879005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585PNRWd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328879005/reactions"
      },
      "updated_at" : "2022-11-28T10:54:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328879005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is adding a new test `wallet_pruning.py`, but I can't find it in the CI output at all. Does anyone see what is going on here?",
      "created_at" : "2022-12-07T16:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1341249643",
      "id" : 1341249643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585P8dhr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341249643/reactions"
      },
      "updated_at" : "2022-12-07T16:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341249643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is it becuase it's in EXTENDED_SCRIPTS? That is the job that's failing, and didn't make it to the functional tests: https://github.com/bitcoin/bitcoin/pull/24865/checks?check_run_id=9728080972.",
      "created_at" : "2022-12-07T16:45:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1341260015",
      "id" : 1341260015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585P8gDv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341260015/reactions"
      },
      "updated_at" : "2022-12-07T16:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341260015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\nIt also runs as part of [Win64 native [vs2022]](https://github.com/bitcoin/bitcoin/pull/24865/checks?check_run_id=9728080955). I can see that the extended tests run there and `wallet_pruning.py` runs successfully.",
      "created_at" : "2022-12-07T16:48:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1341263811",
      "id" : 1341263811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585P8g_D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341263811/reactions"
      },
      "updated_at" : "2022-12-07T16:48:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341263811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ah thx. Maybe there should be a `skip_if_not_running_extended` :sweat_smile: ?\r\n\r\n\r\nAlso, I think this needs a rebase, see upcoming CI failure in https://cirrus-ci.com/task/6513158118965248",
      "created_at" : "2022-12-07T16:50:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1341266216",
      "id" : 1341266216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585P8hko",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341266216/reactions"
      },
      "updated_at" : "2022-12-07T16:50:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341266216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased to address silent conflicts.",
      "created_at" : "2022-12-08T12:53:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1342687822",
      "id" : 1342687822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585QB8pO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342687822/reactions"
      },
      "updated_at" : "2022-12-09T10:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342687822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 63493d778f443554059d77bd8c9b1a926685a892",
      "created_at" : "2022-12-14T22:10:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1352286625",
      "id" : 1352286625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585QmkGh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352286625/reactions"
      },
      "updated_at" : "2022-12-14T22:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352286625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1049301131"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049301131"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this is a legacy wallet only test, this should be\r\n```suggestion\r\n        self.add_wallet_options(parser, descriptors=False)\r\n```",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T07:35:40Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import (\n+    COINBASE_MATURITY,\n+    create_block\n+)\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1049301131",
      "id" : 1049301131,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-ixCL",
      "original_commit_id" : "63493d778f443554059d77bd8c9b1a926685a892",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1218710412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049301131/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-15T07:37:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049301131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1049302084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049302084"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit I haven't calculate it properly, but with some quick monitoring during the test run, it seems that this might be closer to 1.3GB",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T07:37:08Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import (\n+    COINBASE_MATURITY,\n+    create_block\n+)\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.wallet_names = []\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:\n+                    n.setmocktime(self.nTime) # Update node's time to accept future blocks\n+        self.sync_all()\n+\n+    def test_wallet_import_pruned(self, wallet_name):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wallet_file = wallet_name + \".dat\"\n+        wallet_birthheight = self.get_birthheight(wallet_file)\n+\n+        # Verify that the block at wallet's birthheight is available at the pruned node\n+        self.nodes[1].getblock(self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Import wallet into pruned node\n+        self.nodes[1].createwallet(wallet_name=\"wallet_pruned\", descriptors=False, load_on_startup=True)\n+        self.nodes[1].importwallet(os.path.join(self.nodes[0].datadir, wallet_file))\n+\n+        # Make sure that prune node's wallet correctly accounts for balances\n+        assert_equal(self.nodes[1].getbalance(), self.nodes[0].getbalance())\n+\n+        self.log.info(\"- Done\")\n+\n+    def test_wallet_import_pruned_with_missing_blocks(self, wallet_name):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wallet_file = wallet_name + \".dat\"\n+        wallet_birthheight = self.get_birthheight(wallet_file)\n+\n+        # Verify that the block at wallet's birthheight is not available at the pruned node\n+        assert_raises_rpc_error(-1, \"Block not available (pruned data)\", self.nodes[1].getblock, self.nodes[1].getblockhash(wallet_birthheight))\n+\n+        # Make sure wallet cannot be imported because of missing blocks\n+        # This will try to rescan blocks `TIMESTAMP_WINDOW` (2h) before the wallet birthheight.\n+        # There are 6 blocks an hour, so 11 blocks (excluding birthheight).\n+        assert_raises_rpc_error(-4, f\"Pruned blocks from height {wallet_birthheight - 11} required to import keys. Use RPC call getblockchaininfo to determine your pruned height.\", self.nodes[1].importwallet, os.path.join(self.nodes[0].datadir, wallet_file))\n+        self.log.info(\"- Done\")\n+\n+    def get_birthheight(self, wallet_file):\n+        \"\"\"Gets birthheight of a wallet on node0\"\"\"\n+        with open(os.path.join(self.nodes[0].datadir, wallet_file), 'r', encoding=\"utf8\") as f:\n+            for line in f:\n+                if line.startswith('# * Best block at time of backup'):\n+                    wallet_birthheight = int(line.split(' ')[9])\n+                    return wallet_birthheight\n+\n+    def has_block(self, block_index):\n+        \"\"\"Checks if the pruned node has the specific blk0000*.dat file\"\"\"\n+        return os.path.isfile(os.path.join(self.nodes[1].datadir, self.chain, \"blocks\", f\"blk{block_index:05}.dat\"))\n+\n+    def create_wallet(self, wallet_name, *, unload=False):\n+        \"\"\"Creates and dumps a wallet on the non-pruned node0 to be later import by the pruned node\"\"\"\n+        self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=False, load_on_startup=True)\n+        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, wallet_name + \".dat\"))\n+        if (unload):\n+            self.nodes[0].unloadwallet(wallet_name)\n+\n+    def run_test(self):\n+        self.nTime = 0\n+        self.log.info(\"Warning! This test requires ~1.1GB of disk space\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1049302084",
      "id" : 1049302084,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-ixRE",
      "original_commit_id" : "63493d778f443554059d77bd8c9b1a926685a892",
      "original_line" : 119,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : null,
      "pull_request_review_id" : 1218710412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049302084/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-15T07:37:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1049302084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @kouloumos I addressed your comments.",
      "created_at" : "2022-12-15T08:54:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1352740062",
      "id" : 1352740062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585QoSze",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352740062/reactions"
      },
      "updated_at" : "2022-12-15T08:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352740062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T08:58:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1352743819",
      "id" : 1352743819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585QoTuL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352743819/reactions"
      },
      "updated_at" : "2022-12-15T08:58:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1352743819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050027918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050027918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e6906fcf:\r\n\r\ntiny nit:\r\n(only if you have to re-touch)\r\n```suggestion\r\n    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, /*min_height=*/ 0, FoundBlock().height(height))};\r\n```",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T18:54:58Z",
      "diff_hunk" : "@@ -93,6 +93,22 @@ static void RescanWallet(CWallet& wallet, const WalletRescanReserver& reserver,\n     }\n }\n \n+static void EnsureBlockDataFromTime(const CWallet& wallet, int64_t timestamp)\n+{\n+    auto& chain{wallet.chain()};\n+    if (!chain.havePruned()) {\n+        return;\n+    }\n+\n+    int height{0};\n+    const bool found{chain.findFirstBlockWithTimeAndHeight(timestamp - TIMESTAMP_WINDOW, 0, FoundBlock().height(height))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050027918",
      "id" : 1050027918,
      "line" : 104,
      "node_id" : "PRRC_kwDOABII584-lieO",
      "original_commit_id" : "e6906fcf9e4d5692ead6c9bf5a2e11673315a1f5",
      "original_line" : 104,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 12,
      "pull_request_review_id" : 1219783365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050027918/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-15T19:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050027918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050037506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050037506"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 71d9a7c0:\r\n\r\natm is just a non-blocking nit:\r\n\r\nit's weird to add this new Â´script_pubkeyÂ´ arg that is only set if the Â´pubkeyÂ´ arg is not provided and not stated anywhere.\r\n\r\nIdeally, should unify both into a single arg. So there is no confusion over which of them take precedence over the other.",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T19:06:45Z",
      "diff_hunk" : "@@ -138,6 +138,8 @@ def create_coinbase(height, pubkey=None, extra_output_script=None, fees=0, nValu\n         coinbaseoutput.nValue += fees\n     if pubkey is not None:\n         coinbaseoutput.scriptPubKey = key_to_p2pk_script(pubkey)\n+    elif script_pubkey is not None:\n+        coinbaseoutput.scriptPubKey = script_pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050037506",
      "id" : 1050037506,
      "line" : 143,
      "node_id" : "PRRC_kwDOABII584-lk0C",
      "original_commit_id" : "71d9a7c03b44236c2fea2b74f92a69234d29f717",
      "original_line" : 142,
      "original_position" : 14,
      "original_start_line" : 139,
      "path" : "test/functional/test_framework/blocktools.py",
      "position" : 14,
      "pull_request_review_id" : 1219783365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050037506/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 140,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-15T19:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050037506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050039237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050039237"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In https://github.com/bitcoin/bitcoin/commit/71d9a7c03b44236c2fea2b74f92a69234d29f717:\r\nwhy the node would not be running?",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-15T19:09:08Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import (\n+    COINBASE_MATURITY,\n+    create_block\n+)\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.wallet_names = []\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050039237",
      "id" : 1050039237,
      "line" : 61,
      "node_id" : "PRRC_kwDOABII584-llPF",
      "original_commit_id" : "71d9a7c03b44236c2fea2b74f92a69234d29f717",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 61,
      "pull_request_review_id" : 1219783365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050039237/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-15T19:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050039237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050542747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050542747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, in a previous version of the test it could crash without this check.",
      "commit_id" : "564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-16T09:35:55Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.blocktools import (\n+    COINBASE_MATURITY,\n+    create_block\n+)\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN,\n+    OP_TRUE,\n+)\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.wallet_names = []\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+\n+    def mine_large_blocks(self, node, n):\n+        # Get the block parameters for the first block\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+        big_script = CScript([OP_RETURN] + [OP_TRUE] * 950000)\n+        for _ in range(n):\n+            block = create_block(hashprev=previousblockhash, ntime=self.nTime, coinbase=create_coinbase(height, script_pubkey=big_script))\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                if n.running:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r1050542747",
      "id" : 1050542747,
      "in_reply_to_id" : 1050039237,
      "line" : 61,
      "node_id" : "PRRC_kwDOABII584-ngKb",
      "original_commit_id" : "71d9a7c03b44236c2fea2b74f92a69234d29f717",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 61,
      "pull_request_review_id" : 1220539664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050542747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-16T09:35:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1050542747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK 564b580bf07742483a140c7c095b896a6d5d6cad",
      "created_at" : "2022-12-16T22:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1355722323",
      "id" : 1355722323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585Qzq5T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1355722323/reactions"
      },
      "updated_at" : "2022-12-16T22:19:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1355722323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
