[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848324441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848324441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to change this.",
      "commit_id" : "294a8454e4e179ec011b612a2d29a99a659390a9",
      "created_at" : "2022-04-12T11:26:03Z",
      "diff_hunk" : "@@ -59,9 +59,11 @@ GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_fi\n     }\n     m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_params.m_M);\n \n+    if (filter_checked) return;\n+\n     // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n     // data, a std::ios_base::failure exception will be raised.\n-    BitStreamReader<SpanReader> bitreader{stream};\n+    BitStreamReader<SpanReader> bitreader(stream);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848324441",
      "id" : 848324441,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII584ykGdZ",
      "original_commit_id" : "294a8454e4e179ec011b612a2d29a99a659390a9",
      "original_line" : 66,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/blockfilter.cpp",
      "position" : 18,
      "pull_request_review_id" : 939386764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848324441/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T11:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848324441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848374073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848374073"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Reverted",
      "commit_id" : "2e878de3ff1384d45b41bface6e04082b3a19e18",
      "created_at" : "2022-04-12T12:24:51Z",
      "diff_hunk" : "@@ -59,9 +59,11 @@ GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_fi\n     }\n     m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_params.m_M);\n \n+    if (filter_checked) return;\n+\n     // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n     // data, a std::ios_base::failure exception will be raised.\n-    BitStreamReader<SpanReader> bitreader{stream};\n+    BitStreamReader<SpanReader> bitreader(stream);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848374073",
      "id" : 848374073,
      "in_reply_to_id" : 848324441,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ykSk5",
      "original_commit_id" : "294a8454e4e179ec011b612a2d29a99a659390a9",
      "original_line" : 66,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/blockfilter.cpp",
      "position" : null,
      "pull_request_review_id" : 939456819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848374073/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T12:24:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848374073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> A few suggestions regarding filter_checked\r\n\r\nI've applied all the suggested changes :)",
      "created_at" : "2022-04-12T12:27:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1096661499",
      "id" : 1096661499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585BXbn7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096661499/reactions"
      },
      "updated_at" : "2022-04-12T12:27:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1096661499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848583244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848583244"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It might be nice to order the ReadFilterFromDisk() arguments with in-params first, then the out-param. There are only four lines to change of the ones touched in this pull.\r\n```suggestion\r\n    bool ReadFilterFromDisk(const FlatFilePos& pos, const uint256& hash, BlockFilter& filter) const;\r\n```",
      "commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "created_at" : "2022-04-12T15:36:52Z",
      "diff_hunk" : "@@ -31,7 +31,7 @@ class BlockFilterIndex final : public BaseIndex\n     FlatFilePos m_next_filter_pos;\n     std::unique_ptr<FlatFileSeq> m_filter_fileseq;\n \n-    bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n+    bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter, const uint256& hash) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848583244",
      "id" : 848583244,
      "line" : 34,
      "node_id" : "PRRC_kwDOABII584ylFpM",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 34,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/index/blockfilterindex.h",
      "position" : 5,
      "pull_request_review_id" : 939759636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848583244/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T16:44:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848583244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848647240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848647240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would be handy to name all of these benchmarks with a common prefix to group them together in the output and that is easy to filter for, i.e. `./src/bench/bench_bitcoin -filter=EvictionProtection*.*`",
      "commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "created_at" : "2022-04-12T16:39:56Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848647240",
      "id" : 848647240,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII584ylVRI",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 59,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 38,
      "pull_request_review_id" : 939759636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848647240/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T16:44:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848647240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848648411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848648411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Optional: it looks like there is a fair amount of duplicate boilerplate in each of these benchmarks that you could extract out to a common setup helper in a separate commit, if you like. See  `EvictionProtectionCommon()` in `src/bench/peer_eviction.cpp` for an example. \r\n",
      "commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "created_at" : "2022-04-12T16:41:18Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848648411",
      "id" : 848648411,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII584ylVjb",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 66,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 45,
      "pull_request_review_id" : 939759636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848648411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T16:53:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848648411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848649454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848649454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clang format for each of these defaults\r\n```suggestion\r\n    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked = false);\r\n```",
      "commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "created_at" : "2022-04-12T16:42:34Z",
      "diff_hunk" : "@@ -59,7 +59,7 @@ class GCSFilter\n     explicit GCSFilter(const Params& params = Params());\n \n     /** Reconstructs an already-created filter from an encoding. */\n-    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter);\n+    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked=false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848649454",
      "id" : 848649454,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII584ylVzu",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 62,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/blockfilter.h",
      "position" : 5,
      "pull_request_review_id" : 939759636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848649454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T16:44:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848649454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848658548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848658548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, /*filter_checked=*/true);\r\n```",
      "commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "created_at" : "2022-04-12T16:53:00Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded());\n+\n+    bench.unit(\"elem\").run([&] {\n+        block_filter.GetHash();\n+    });\n+}\n+\n+static void DecodeCheckedGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r848658548",
      "id" : 848658548,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII584ylYB0",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 89,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 68,
      "pull_request_review_id" : 939865436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848658548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-12T16:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/848658548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@mzumsande good point, and I think it also highlights that it may alternatively be better to drop the default false value for `filter_checked` here as follows to make that more explicit. Then (here or in a follow-up), if `BlockFilter::Unserialize()` is removed or moved to the test code, the sanity check here could be removed.\r\n\r\n<details><summary>drop default false filter_checked value</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/bench/gcs_filter.cpp b/src/bench/gcs_filter.cpp\r\nindex 89fa07f602..56f3cff0c1 100644\r\n--- a/src/bench/gcs_filter.cpp\r\n+++ b/src/bench/gcs_filter.cpp\r\n@@ -52,7 +52,7 @@ static void DecodeGCSFilter(benchmark::Bench& bench)\r\n     auto encoded = filter.GetEncoded();\r\n \r\n     bench.unit(\"elem\").run([&] {\r\n-        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\r\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, /*filter_checked=*/false);\r\n     });\r\n }\r\n \r\n@@ -66,7 +66,7 @@ static void BlockFilterGetHash(benchmark::Bench& bench)\r\n         elements.insert(std::move(element));\r\n     }\r\n     GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n-    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded());\r\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*filter_checked=*/false);\r\n \r\n     bench.unit(\"elem\").run([&] {\r\n         block_filter.GetHash();\r\n@@ -86,7 +86,7 @@ static void DecodeCheckedGCSFilter(benchmark::Bench& bench)\r\n     auto encoded = filter.GetEncoded();\r\n \r\n     bench.unit(\"elem\").run([&] {\r\n-        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, true);\r\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, /*filter_checked=*/true);\r\n     });\r\n }\r\n BENCHMARK(BlockFilterGetHash);\r\ndiff --git a/src/blockfilter.h b/src/blockfilter.h\r\nindex 21d6a295a2..f823354989 100644\r\n--- a/src/blockfilter.h\r\n+++ b/src/blockfilter.h\r\n@@ -59,7 +59,7 @@ public:\r\n     explicit GCSFilter(const Params& params = Params());\r\n \r\n     /** Reconstructs an already-created filter from an encoding. */\r\n-    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked=false);\r\n+    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked);\r\n \r\n     /** Builds a new filter from the params and set of elements. */\r\n     GCSFilter(const Params& params, const ElementSet& elements);\r\n@@ -122,7 +122,7 @@ public:\r\n \r\n     //! Reconstruct a BlockFilter from parts.\r\n     BlockFilter(BlockFilterType filter_type, const uint256& block_hash,\r\n-                std::vector<unsigned char> filter, bool filter_checked=false);\r\n+                std::vector<unsigned char> filter, bool filter_checked);\r\n \r\n     //! Construct a new BlockFilter of the specified type from a block.\r\n     BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo);\r\n@@ -164,7 +164,7 @@ public:\r\n         if (!BuildParams(params)) {\r\n             throw std::ios_base::failure(\"unknown filter_type\");\r\n         }\r\n-        m_filter = GCSFilter(params, std::move(encoded_filter));\r\n+        m_filter = GCSFilter(params, std::move(encoded_filter), /*filter_checked=*/false);\r\n     }\r\n };\r\n```\r\n</p></details>\r\n",
      "created_at" : "2022-04-13T14:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1098094928",
      "id" : 1098094928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585Bc5lQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098094928/reactions"
      },
      "updated_at" : "2022-04-14T13:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098094928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sure I can just get rid of the option. I'll move `BlockFilter::Unserialize()` to the test files in a follow-up.\r\n\r\nQuick side-question: my initial thought was that it'd be helpful to leave an option in there in case anyone is using the code as a library. In general, does Bitcoin Core development think about potential use cases of the code being used as a library somewhere else?",
      "created_at" : "2022-04-13T15:42:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1098206739",
      "id" : 1098206739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585BdU4T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098206739/reactions"
      },
      "updated_at" : "2022-04-13T15:42:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098206739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r849663386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849663386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since most of the duplicate code is just generating  the elements, how's separating that out to a function like so:\r\n\r\n```\r\nstatic const GCSFilter::ElementSet GenerateGCSTestElements()\r\n{\r\n    GCSFilter::ElementSet elements;\r\n    for (int i = 0; i < 10000; ++i) {\r\n        GCSFilter::Element element(32);\r\n        element[0] = static_cast<unsigned char>(i);\r\n        element[1] = static_cast<unsigned char>(i >> 8);\r\n        elements.insert(std::move(element));\r\n    }\r\n\r\n    return elements;\r\n}\r\n```\r\n\r\nAnd having each of the benchmarks call that function?",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-13T16:12:09Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r849663386",
      "id" : 849663386,
      "in_reply_to_id" : 848648411,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ypNWa",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 66,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 941231100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849663386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:43:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849663386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kcalvinalvin maybe decided case-by-case; I don't recall a recent specific example of leave-it-in-for-reuse-as-a-library being invoked as a rationale for not moving code used only for tests out to the test code.\r\n\r\nVerified that removing `BlockFilter::Unserialize()` compiles with the following test-only deletions:\r\n\r\n<details><summary>code that depends on BlockFilter::Unserialize()</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/blockfilter.h b/src/blockfilter.h\r\nindex 21d6a295a2..764395c370 100644\r\n--- a/src/blockfilter.h\r\n+++ b/src/blockfilter.h\r\n@@ -148,24 +148,6 @@ public:\r\n           << m_block_hash\r\n           << m_filter.GetEncoded();\r\n     }\r\n-\r\n-    template <typename Stream>\r\n-    void Unserialize(Stream& s) {\r\n-        std::vector<unsigned char> encoded_filter;\r\n-        uint8_t filter_type;\r\n-\r\n-        s >> filter_type\r\n-          >> m_block_hash\r\n-          >> encoded_filter;\r\n-\r\n-        m_filter_type = static_cast<BlockFilterType>(filter_type);\r\n-\r\n-        GCSFilter::Params params;\r\n-        if (!BuildParams(params)) {\r\n-            throw std::ios_base::failure(\"unknown filter_type\");\r\n-        }\r\n-        m_filter = GCSFilter(params, std::move(encoded_filter));\r\n-    }\r\n };\r\n \r\n #endif // BITCOIN_BLOCKFILTER_H\r\ndiff --git a/src/test/blockfilter_tests.cpp b/src/test/blockfilter_tests.cpp\r\nindex 8eb4dbc592..b99d9a32c3 100644\r\n--- a/src/test/blockfilter_tests.cpp\r\n+++ b/src/test/blockfilter_tests.cpp\r\n@@ -106,23 +106,6 @@ BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\r\n     for (const CScript& script : excluded_scripts) {\r\n         BOOST_CHECK(!filter.Match(GCSFilter::Element(script.begin(), script.end())));\r\n     }\r\n-\r\n-    // Test serialization/unserialization.\r\n-    BlockFilter block_filter2;\r\n-\r\n-    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\r\n-    stream << block_filter;\r\n-    stream >> block_filter2;\r\n-\r\n-    BOOST_CHECK_EQUAL(block_filter.GetFilterType(), block_filter2.GetFilterType());\r\n-    BOOST_CHECK_EQUAL(block_filter.GetBlockHash(), block_filter2.GetBlockHash());\r\n-    BOOST_CHECK(block_filter.GetEncodedFilter() == block_filter2.GetEncodedFilter());\r\n-\r\n-    BlockFilter default_ctor_block_filter_1;\r\n-    BlockFilter default_ctor_block_filter_2;\r\n-    BOOST_CHECK_EQUAL(default_ctor_block_filter_1.GetFilterType(), default_ctor_block_filter_2.GetFilterType());\r\n-    BOOST_CHECK_EQUAL(default_ctor_block_filter_1.GetBlockHash(), default_ctor_block_filter_2.GetBlockHash());\r\n-    BOOST_CHECK(default_ctor_block_filter_1.GetEncodedFilter() == default_ctor_block_filter_2.GetEncodedFilter());\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(blockfilters_json_test)\r\ndiff --git a/src/test/fuzz/deserialize.cpp b/src/test/fuzz/deserialize.cpp\r\nindex ed6f172a2a..3793921e86 100644\r\n--- a/src/test/fuzz/deserialize.cpp\r\n+++ b/src/test/fuzz/deserialize.cpp\r\n@@ -95,12 +95,6 @@ void DeserializeFromFuzzingInput(FuzzBufferType buffer, T& obj, const std::optio\r\n             throw invalid_fuzzing_input_exception();\r\n         }\r\n     }\r\n-    try {\r\n-        ds >> obj;\r\n-    } catch (const std::ios_base::failure&) {\r\n-        throw invalid_fuzzing_input_exception();\r\n-    }\r\n-    assert(buffer.empty() || !Serialize(obj).empty());\r\n }\r\n \r\n template <typename T>\r\ndiff --git a/src/test/fuzz/util.h b/src/test/fuzz/util.h\r\nindex 6c91844633..e8e8e57394 100644\r\n--- a/src/test/fuzz/util.h\r\n+++ b/src/test/fuzz/util.h\r\n@@ -145,11 +145,6 @@ template <typename T>\r\n     const std::vector<uint8_t> buffer = ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length);\r\n     CDataStream ds{buffer, SER_NETWORK, INIT_PROTO_VERSION};\r\n     T obj;\r\n-    try {\r\n-        ds >> obj;\r\n-    } catch (const std::ios_base::failure&) {\r\n-        return std::nullopt;\r\n-    }\r\n     return obj;\r\n }\r\n```\r\n</p></details>\r\n",
      "created_at" : "2022-04-13T19:38:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1098412641",
      "id" : 1098412641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585BeHJh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098412641/reactions"
      },
      "updated_at" : "2022-04-13T19:38:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098412641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850205253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850205253"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "All the GCSFIlter benchmarks are now changed to have the prefix `GCSFilter`.",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-14T08:23:56Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850205253",
      "id" : 850205253,
      "in_reply_to_id" : 848647240,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII584yrRpF",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 55,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 62,
      "pull_request_review_id" : 941951491,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850205253/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:23:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850205253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850220714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850220714"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-14T08:42:04Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded());\n+\n+    bench.unit(\"elem\").run([&] {\n+        block_filter.GetHash();\n+    });\n+}\n+\n+static void DecodeCheckedGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850220714",
      "id" : 850220714,
      "in_reply_to_id" : 848658548,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yrVaq",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 89,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 941972901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850220714/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:42:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850220714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221337"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221337"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No longer needed as the default value was removed",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-14T08:42:42Z",
      "diff_hunk" : "@@ -59,7 +59,7 @@ class GCSFilter\n     explicit GCSFilter(const Params& params = Params());\n \n     /** Reconstructs an already-created filter from an encoding. */\n-    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter);\n+    GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked=false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221337",
      "id" : 850221337,
      "in_reply_to_id" : 848649454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yrVkZ",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 62,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/blockfilter.h",
      "position" : null,
      "pull_request_review_id" : 941973745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221337/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:42:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221652"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've applied the above change I suggested above.",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-14T08:43:05Z",
      "diff_hunk" : "@@ -32,12 +32,65 @@ static void MatchGCSFilter(benchmark::Bench& bench)\n         element[1] = static_cast<unsigned char>(i >> 8);\n         elements.insert(std::move(element));\n     }\n-    GCSFilter filter({0, 0, 20, 1 << 20}, elements);\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n \n     bench.unit(\"elem\").run([&] {\n         filter.Match(GCSFilter::Element());\n     });\n }\n \n+static void DecodeGCSFilter(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    auto encoded = filter.GetEncoded();\n+\n+    bench.unit(\"elem\").run([&] {\n+        GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded);\n+    });\n+}\n+\n+static void BlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221652",
      "id" : 850221652,
      "in_reply_to_id" : 848648411,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yrVpU",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 66,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 941974188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221652/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:43:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221848"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed",
      "commit_id" : "3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71",
      "created_at" : "2022-04-14T08:43:19Z",
      "diff_hunk" : "@@ -31,7 +31,7 @@ class BlockFilterIndex final : public BaseIndex\n     FlatFilePos m_next_filter_pos;\n     std::unique_ptr<FlatFileSeq> m_filter_fileseq;\n \n-    bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n+    bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter, const uint256& hash) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r850221848",
      "id" : 850221848,
      "in_reply_to_id" : 848583244,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yrVsY",
      "original_commit_id" : "1faac19651e3e8bd731ef2c114c9305c1a68ad96",
      "original_line" : 34,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/index/blockfilterindex.h",
      "position" : null,
      "pull_request_review_id" : 941974489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221848/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T08:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850221848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed all of the changes requested except for removing `BlockFilter::Unserialize()` and getting rid of the option to sanity check. I'll do those in a follow up.",
      "created_at" : "2022-04-14T08:45:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1098867627",
      "id" : 1098867627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585Bf2Or",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098867627/reactions"
      },
      "updated_at" : "2022-04-14T08:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098867627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 3e6d98e2dc98a4305a5bbdf4b6bea10bcf4aca71\r\n\r\nmodulo:\r\n- ordering the `gcs_filter` benchmark methods in the same order as the benchmarks in that file\r\n- maybe naming the `BlockFilterGetHash` bench as `GCSBlockFilterGetHash` so that `./src/bench/bench_bitcoin -filter=GCS*.*` can invoke it with the others in that file\r\n\r\nHere is a patch on top of your last push, if helpful, that removes `BlockFilter::Unserialize`: https://github.com/jonatack/bitcoin/commits/remove-BlockFilter-Unserialize. Though it may be more prudent to move it to the test code and leave the tests in place.\r\n",
      "created_at" : "2022-04-14T13:42:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1099200439",
      "id" : 1099200439,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585BhHe3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099200439/reactions"
      },
      "updated_at" : "2022-04-14T13:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099200439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0b976a6dc0003898abaef14254f572b58f83926a\r\n\r\nSanity check:\r\n\r\nRunning `./src/bench/bench_bitcoin -filter=GCS*.*` on this branch (debug build and not tuned for benchmarking)\r\n```\r\n|             ns/elem |              elem/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          179,394.67 |            5,574.30 |    0.5% |      0.01 | `GCSBlockFilterGetHash`\r\n|            3,376.66 |          296,150.75 |    2.1% |      0.38 | `GCSFilterConstruct`\r\n|        5,163,985.00 |              193.65 |    2.5% |      0.06 | `GCSFilterDecode`\r\n|            1,926.40 |          519,102.50 |    1.9% |      0.01 | `GCSFilterDecodeChecked`\r\n|          577,446.00 |            1,731.76 |    1.0% |      0.01 | `GCSFilterMatch`\r\n```\r\n\r\n<details><summary>and with the operative codebase changes reverted (diff)</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/blockfilter.cpp b/src/blockfilter.cpp\r\nindex 08e2e6f72e..9d76d2b60e 100644\r\n--- a/src/blockfilter.cpp\r\n+++ b/src/blockfilter.cpp\r\n@@ -59,7 +59,7 @@ GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_fi\r\n     }\r\n     m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_params.m_M);\r\n \r\n-    if (filter_checked) return;\r\n+    // if (filter_checked) return;\r\n \r\n     // Verify that the encoded filter contains exactly N elements. If it has too much or too little\r\n     // data, a std::ios_base::failure exception will be raised.\r\ndiff --git a/src/index/blockfilterindex.cpp b/src/index/blockfilterindex.cpp\r\nindex 1471c29a85..f83b883c8f 100644\r\n--- a/src/index/blockfilterindex.cpp\r\n+++ b/src/index/blockfilterindex.cpp\r\n@@ -156,9 +156,6 @@ bool BlockFilterIndex::ReadFilterFromDisk(const FlatFilePos& pos, const uint256&\r\n     std::vector<uint8_t> encoded_filter;\r\n     try {\r\n         filein >> block_hash >> encoded_filter;\r\n-        uint256 result;\r\n-        CHash256().Write(encoded_filter).Finalize(result);\r\n-        if (result != hash) return error(\"Checksum mismatch in filter decode.\");\r\n         filter = BlockFilter(GetFilterType(), block_hash, std::move(encoded_filter), /*filter_checked=*/true);\r\n```\r\n</p></details>\r\n\r\n...GCSFilterDecodeChecked is far slower and equivalent to GCSFilterDecode as expected\r\n\r\n```\r\n|             ns/elem |              elem/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          165,774.17 |            6,032.30 |    0.5% |      0.01 | `GCSBlockFilterGetHash`\r\n|            3,775.71 |          264,850.84 |    0.5% |      0.42 | `GCSFilterConstruct`\r\n|        4,960,766.00 |              201.58 |    0.9% |      0.05 | `GCSFilterDecode`\r\n|        4,968,437.00 |              201.27 |    1.4% |      0.06 | `GCSFilterDecodeChecked`\r\n|          584,923.00 |            1,709.63 |    3.7% |      0.01 | `GCSFilterMatch`\r\n```\r\n",
      "created_at" : "2022-04-19T15:51:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1102816767",
      "id" : 1102816767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585Bu6X_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1102816767/reactions"
      },
      "updated_at" : "2022-04-19T16:29:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1102816767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ACK [0b976a6](https://github.com/bitcoin/bitcoin/commit/0b976a6dc0003898abaef14254f572b58f83926a)\r\n\r\nThank you for the speedy review!\r\n\r\nI pushed 04008e2df6e2bac0cc92a2be05fec257a0fe7d7f on top of 0b976a6dc0003898abaef14254f572b58f83926a which does mostly what you did in https://github.com/jonatack/bitcoin/commits/remove-BlockFilter-Unserialize but it keeps the serialize/unserialize test in `src/test/blockfilter_tests.cpp` with the function\r\n\r\n```\r\ntemplate <typename Stream>\r\nstatic BlockFilter UnserializeBlockFilter(Stream& s) {\r\n    std::vector<unsigned char> encoded_filter;\r\n    uint8_t filter_type_uint8;\r\n    uint256 block_hash;\r\n\r\n    s >> filter_type_uint8\r\n      >> block_hash\r\n      >> encoded_filter;\r\n\r\n    BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_uint8);\r\n    BlockFilter block_filter(filter_type, block_hash, std::move(encoded_filter), /*filter_checked=*/false);\r\n    return block_filter;\r\n}\r\n```\r\n\r\nI think this is a good tradeoff between keeping the serialization in the unit tests but still keeping the maintenance overhead low.",
      "created_at" : "2022-04-20T06:48:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1103531582",
      "id" : 1103531582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585Bxo4-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103531582/reactions"
      },
      "updated_at" : "2022-04-20T07:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103531582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Looks like you are removing the fuzz test as well?\r\n\r\n@MarcoFalke Ah my first instinct was to get rid of the entire test as `ConsumeDeserializable` would no longer be usable. I'll push a change with the fuzz tests kept in.",
      "created_at" : "2022-04-20T07:38:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1103570289",
      "id" : 1103570289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585BxyVx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103570289/reactions"
      },
      "updated_at" : "2022-04-20T07:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103570289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kcalvinalvin if you move BlockFilter::Unserialize() to the test code in this pull, it will be a smaller change as the first commit rather than last one, WDYT? Edit: maybe a first commit that adds the check in ReadFilterFromDisk() and rename the commit, then the one that moves Unserialize() to the test code.",
      "created_at" : "2022-04-21T18:00:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1105547384",
      "id" : 1105547384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585B5VB4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105547384/reactions"
      },
      "updated_at" : "2022-04-21T18:05:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105547384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @kcalvinalvin if you move BlockFilter::Unserialize() to the test code in this pull, it will be a smaller change as the first commit rather than last one, WDYT? Edit: maybe a first commit that adds the check in ReadFilterFromDisk() and rename the commit, then the one that moves Unserialize() to the test code.\r\n\r\nI'm ok with that if it'd lower the cost of reviewing. However, I'm thinking if the cost of reviewing would be even lower if I have commit 447174d208bc3fdd32874656344a736edf949e63 be in a separate PR. I'm sorta thinking maybe getting rid of `Unserialize()` and replacing `GolombRiceDecode()` check are two separate things. Let me know what you'd think would lower the cost of reviewing :)",
      "created_at" : "2022-04-22T07:33:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1106109321",
      "id" : 1106109321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585B7eOJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106109321/reactions"
      },
      "updated_at" : "2022-04-22T07:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106109321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kcalvinalvin SGTM.",
      "created_at" : "2022-04-22T08:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1106147783",
      "id" : 1106147783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585B7nnH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106147783/reactions"
      },
      "updated_at" : "2022-04-22T08:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106147783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Reverted remove the last commit. Latest commit is now back to 0b976a6dc0003898abaef14254f572b58f83926a. Will make a follow up PR after this one.",
      "created_at" : "2022-04-22T16:03:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1106655107",
      "id" : 1106655107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585B9jeD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106655107/reactions"
      },
      "updated_at" : "2022-04-22T16:03:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106655107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r861079849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Make sanity check in GCSFilter constructor optional\" (c35df324b19b94aaecfbcd26111b7d00c5bed4e0)\r\n\r\nRequesting change: Can we rename `filter_checked` to `skip_checks` or `skip_decode_check`. I spent an embarrassing amount of time being confused by the changes in this PR because I interpreted `filter_checked` to mean \"filter should be checked\" not \"filter should not be checked\" which is what it seems to actually mean.",
      "commit_id" : "0b976a6dc0003898abaef14254f572b58f83926a",
      "created_at" : "2022-04-28T16:13:46Z",
      "diff_hunk" : "@@ -47,7 +47,7 @@ GCSFilter::GCSFilter(const Params& params)\n     : m_params(params), m_N(0), m_F(0), m_encoded{0}\n {}\n \n-GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter)\n+GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r861079849",
      "id" : 861079849,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII584zUwkp",
      "original_commit_id" : "c35df324b19b94aaecfbcd26111b7d00c5bed4e0",
      "original_line" : 50,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/blockfilter.cpp",
      "position" : 5,
      "pull_request_review_id" : 956713527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-28T16:15:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r862631769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862631769"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed `filter_checked` to `skip_decode_check`",
      "commit_id" : "b97685965c6646b3a8521eb49d1f79b03a1b473f",
      "created_at" : "2022-05-02T07:10:48Z",
      "diff_hunk" : "@@ -47,7 +47,7 @@ GCSFilter::GCSFilter(const Params& params)\n     : m_params(params), m_N(0), m_F(0), m_encoded{0}\n {}\n \n-GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter)\n+GCSFilter::GCSFilter(const Params& params, std::vector<unsigned char> encoded_filter, bool filter_checked)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r862631769",
      "id" : 862631769,
      "in_reply_to_id" : 861079849,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zardZ",
      "original_commit_id" : "c35df324b19b94aaecfbcd26111b7d00c5bed4e0",
      "original_line" : 50,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/blockfilter.cpp",
      "position" : null,
      "pull_request_review_id" : 958771514,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862631769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-02T07:10:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862631769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r864109223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864109223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and in the other added benchmarks. I don't think \"elem\" as a custom unit is correct. My understanding is that it was used in `GCSFilterConstruct` together with `.batch(elements.size())` in order to list the time per element because we expect the operation to scale with the number of elements (10k).\r\n\r\nBut using it without `.batch()` in something like `GCSBlockFilterGetHash` that doesn't really scale linearly with the number of elements doesn't seem correct, the default \"op\" seems like a better fit.",
      "commit_id" : "b97685965c6646b3a8521eb49d1f79b03a1b473f",
      "created_at" : "2022-05-03T19:12:53Z",
      "diff_hunk" : "@@ -15,29 +15,56 @@ static void ConstructGCSFilter(benchmark::Bench& bench)\n         elements.insert(std::move(element));\n     }\n \n+    return elements;\n+}\n+\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    auto elements = GenerateGCSTestElements();\n+\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\n+\n+    bench.unit(\"elem\").run([&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r864109223",
      "id" : 864109223,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII584zgUKn",
      "original_commit_id" : "a06ecf3579c1a531d6ad674d1e4295d45714fec5",
      "original_line" : 28,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 23,
      "pull_request_review_id" : 960887901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864109223/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864109223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r864182635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864182635"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could name it GCSFilterGetHash instead of GCSBlockFilterGetHash for consistency with the other benchmarks.",
      "commit_id" : "b97685965c6646b3a8521eb49d1f79b03a1b473f",
      "created_at" : "2022-05-03T20:13:49Z",
      "diff_hunk" : "@@ -15,29 +15,56 @@ static void ConstructGCSFilter(benchmark::Bench& bench)\n         elements.insert(std::move(element));\n     }\n \n+    return elements;\n+}\n+\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r864182635",
      "id" : 864182635,
      "line" : 21,
      "node_id" : "PRRC_kwDOABII584zgmFr",
      "original_commit_id" : "a06ecf3579c1a531d6ad674d1e4295d45714fec5",
      "original_line" : 21,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 16,
      "pull_request_review_id" : 960887901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864182635/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-03T20:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864182635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867448934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867448934"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will change all the units to `op` except for `GCSFilterConstruct` as that benchmark still is done with the 10k batch.",
      "commit_id" : "b97685965c6646b3a8521eb49d1f79b03a1b473f",
      "created_at" : "2022-05-08T07:35:25Z",
      "diff_hunk" : "@@ -15,29 +15,56 @@ static void ConstructGCSFilter(benchmark::Bench& bench)\n         elements.insert(std::move(element));\n     }\n \n+    return elements;\n+}\n+\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    auto elements = GenerateGCSTestElements();\n+\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\n+\n+    bench.unit(\"elem\").run([&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867448934",
      "id" : 867448934,
      "in_reply_to_id" : 864109223,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII584ztDhm",
      "original_commit_id" : "a06ecf3579c1a531d6ad674d1e4295d45714fec5",
      "original_line" : 28,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : 23,
      "pull_request_review_id" : 965405194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867448934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-08T07:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867448934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867469544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867469544"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "no need to type \"op\" (it's the default), could just remove the `.unit(...)` as in most other benchmarks.",
      "commit_id" : "b32e96578182b9af3283c12829d080fc4bba2be4",
      "created_at" : "2022-05-08T10:31:29Z",
      "diff_hunk" : "@@ -15,29 +15,56 @@ static void ConstructGCSFilter(benchmark::Bench& bench)\n         elements.insert(std::move(element));\n     }\n \n+    return elements;\n+}\n+\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    auto elements = GenerateGCSTestElements();\n+\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\n+\n+    bench.unit(\"elem\").run([&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867469544",
      "id" : 867469544,
      "in_reply_to_id" : 864109223,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ztIjo",
      "original_commit_id" : "a06ecf3579c1a531d6ad674d1e4295d45714fec5",
      "original_line" : 28,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 965422246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867469544/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-08T10:31:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867469544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867475268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867475268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also fixed to just be `bench.run`",
      "commit_id" : "b32e96578182b9af3283c12829d080fc4bba2be4",
      "created_at" : "2022-05-08T11:19:55Z",
      "diff_hunk" : "@@ -15,29 +15,56 @@ static void ConstructGCSFilter(benchmark::Bench& bench)\n         elements.insert(std::move(element));\n     }\n \n+    return elements;\n+}\n+\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)\n+{\n+    auto elements = GenerateGCSTestElements();\n+\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\n+\n+    bench.unit(\"elem\").run([&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#discussion_r867475268",
      "id" : 867475268,
      "in_reply_to_id" : 864109223,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ztJ9E",
      "original_commit_id" : "a06ecf3579c1a531d6ad674d1e4295d45714fec5",
      "original_line" : 28,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/gcs_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 965427283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24832",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867475268/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-08T11:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867475268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK b32e96578182b9af3283c12829d080fc4bba2be4",
      "created_at" : "2022-05-08T16:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1120451428",
      "id" : 1120451428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585CyLtk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120451428/reactions"
      },
      "updated_at" : "2022-05-08T16:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120451428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<details><summary>I'd like to propose this diff. Rationale: compare all operations on the same basis (per operation).</summary><p>\r\n\r\n```diff\r\n--- a/src/bench/gcs_filter.cpp\r\n+++ b/src/bench/gcs_filter.cpp\r\n@@ -5,10 +5,12 @@\r\n #include <bench/bench.h>\r\n #include <blockfilter.h>\r\n \r\n+static constexpr int NUM_ELEMENTS = 10'000;\r\n+\r\n static const GCSFilter::ElementSet GenerateGCSTestElements()\r\n {\r\n     GCSFilter::ElementSet elements;\r\n-    for (int i = 0; i < 10000; ++i) {\r\n+    for (int i = 0; i < NUM_ELEMENTS; ++i) {\r\n         GCSFilter::Element element(32);\r\n         element[0] = static_cast<unsigned char>(i);\r\n         element[1] = static_cast<unsigned char>(i >> 8);\r\n@@ -18,15 +20,27 @@ static const GCSFilter::ElementSet GenerateGCSTestElements()\r\n     return elements;\r\n }\r\n \r\n+static void GCSBlockFilterGetHash(benchmark::Bench& bench)\r\n+{\r\n+    auto elements = GenerateGCSTestElements();\r\n+\r\n+    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n+    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\r\n+\r\n+    bench.batch(NUM_ELEMENTS).run([&] {\r\n+        block_filter.GetHash();\r\n+    });\r\n+}\r\n+\r\n static void GCSFilterConstruct(benchmark::Bench& bench)\r\n {\r\n     auto elements = GenerateGCSTestElements();\r\n \r\n     uint64_t siphash_k0 = 0;\r\n-    bench.batch(elements.size()).unit(\"elem\").run([&] {\r\n+    bench.batch(NUM_ELEMENTS).run([&] {\r\n         GCSFilter filter({siphash_k0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n \r\n-        siphash_k0++;\r\n+        ++siphash_k0;\r\n     });\r\n }\r\n \r\n@@ -37,7 +51,7 @@ static void GCSFilterDecode(benchmark::Bench& bench)\r\n     GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n     auto encoded = filter.GetEncoded();\r\n \r\n-    bench.run([&] {\r\n+    bench.batch(NUM_ELEMENTS).run([&] {\r\n         GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, /*skip_decode_check=*/false);\r\n     });\r\n }\r\n@@ -49,35 +63,24 @@ static void GCSFilterDecodeChecked(benchmark::Bench& bench)\r\n     GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n     auto encoded = filter.GetEncoded();\r\n \r\n-    bench.run([&] {\r\n+    bench.batch(NUM_ELEMENTS).run([&] {\r\n         GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, encoded, /*skip_decode_check=*/true);\r\n     });\r\n }\r\n \r\n-static void GCSFilterGetHash(benchmark::Bench& bench)\r\n-{\r\n-    auto elements = GenerateGCSTestElements();\r\n-\r\n-    GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n-    BlockFilter block_filter(BlockFilterType::BASIC, {}, filter.GetEncoded(), /*skip_decode_check=*/false);\r\n-\r\n-    bench.run([&] {\r\n-        block_filter.GetHash();\r\n-    });\r\n-}\r\n-\r\n static void GCSFilterMatch(benchmark::Bench& bench)\r\n {\r\n     auto elements = GenerateGCSTestElements();\r\n \r\n     GCSFilter filter({0, 0, BASIC_FILTER_P, BASIC_FILTER_M}, elements);\r\n \r\n-    bench.run([&] {\r\n+    bench.batch(NUM_ELEMENTS).run([&] {\r\n         filter.Match(GCSFilter::Element());\r\n     });\r\n }\r\n+\r\n+BENCHMARK(GCSBlockFilterGetHash);\r\n BENCHMARK(GCSFilterConstruct);\r\n BENCHMARK(GCSFilterDecode);\r\n BENCHMARK(GCSFilterDecodeChecked);\r\n-BENCHMARK(GCSFilterGetHash);\r\n BENCHMARK(GCSFilterMatch);\r\n```\r\n</p></details>\r\n\r\nOutput of last push\r\n\r\n```\r\n|             ns/elem |              elem/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            2,257.12 |          443,042.46 |    3.1% |      0.25 | `GCSFilterConstruct`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,800,765.00 |              357.05 |    3.1% |      0.03 | `GCSFilterDecode`\r\n|            1,218.41 |          820,739.84 |   11.4% |      0.01 | `GCSFilterDecodeChecked`\r\n|           93,894.33 |           10,650.27 |    4.1% |      0.01 | `GCSFilterGetHash`\r\n|          315,092.00 |            3,173.68 |    2.7% |      0.01 | `GCSFilterMatch`\r\n```\r\n\r\nOutput with proposed diff\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                9.02 |      110,833,467.68 |    0.0% |      0.01 | `GCSBlockFilterGetHash`\r\n|            2,183.44 |          457,992.58 |    1.3% |      0.24 | `GCSFilterConstruct`\r\n|              264.56 |        3,779,922.34 |    1.7% |      0.03 | `GCSFilterDecode`\r\n|                0.11 |    9,386,117,464.60 |    1.6% |      0.01 | `GCSFilterDecodeChecked`\r\n|               30.60 |       32,684,901.21 |    1.6% |      0.01 | `GCSFilterMatch`\r\n```\r\n\r\nOther notes:\r\n\r\n- Could be wrong but it seems to me the `GCSBlockFilterGetHash` name is preferable, as that describes the particularity of that bench.\r\n- I'm indifferent to \"op\" or \"elem\"; \"op\" for all the benchmarks here is fine. ",
      "created_at" : "2022-05-09T20:11:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1121529552",
      "id" : 1121529552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585C2S7Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121529552/reactions"
      },
      "updated_at" : "2022-05-09T20:11:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121529552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Could be wrong but it seems to me the GCSBlockFilterGetHash name is preferable, as that describes the particularity of that bench.\r\n\r\nNo, you are right, I missed before that this benchmark is on the level of `BlockFilter`, whereas the others are on the level of `GCSFilter`, so I agree.\r\n\r\n> Rationale: compare all operations on the same basis (per operation).\r\n\r\n> I'm indifferent to \"op\" or \"elem\"; \"op\" for all the benchmarks here is fine.\r\n\r\nMy understanding of the bench framework (correct me if I'm wrong!) is that  `ns/op=10000` should be read such that one operation (whatever is inside of `run()`) takes 10000 ns on average.\r\nIf we then choose `.batch(NUM_ELEMENTS)`, we'd expect this number to be divided by NUM_ELEMENTS and thus go down to `ns/elem=1` on average. So this means that it takes 1ns to process 1 filter element (so using the default ns/op would be kind of misleading in combination with `.batch()`). \r\nFor this to make sense, there should be a linear relation between the custom unit (\"elements\") and the time, so if we used `.batch(NUM_ELEMENTS)` and set NUM_ELEMENTS=100,000 instead of 10,000  the benchmark results shouldn't change - which seems not really the case for some of the benchmarks here, at least locally for me.\r\nSo maybe using the default `ns/op` and no `.batch()` for each benchmark would be the best here? Does that make sense?\r\n\r\n",
      "created_at" : "2022-05-09T21:58:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1121625746",
      "id" : 1121625746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585C2qaS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121625746/reactions"
      },
      "updated_at" : "2022-05-09T21:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121625746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I need to verify after tuning for benchmarking. My hypothesis (to be confirmed or not) is that `batch` appears to behave like a linear scale factor. I agree that it seems good to use `batch` for all of them (result per op) or for none (result per batched op) to make comparing intra-bench results more intuitive.",
      "created_at" : "2022-05-09T22:21:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1121640854",
      "id" : 1121640854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585C2uGW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121640854/reactions"
      },
      "updated_at" : "2022-05-09T22:21:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121640854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Also to reverify: lower err% with `batch`?)",
      "created_at" : "2022-05-09T22:48:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1121658072",
      "id" : 1121658072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585C2yTY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121658072/reactions"
      },
      "updated_at" : "2022-05-09T22:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121658072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Changing `NUM_ELEMENTS` to 100,000 from 10,000 results in different ns/elem with my untuned system. I'll try running the benchmark with a tuned system.",
      "created_at" : "2022-05-10T08:39:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1122101493",
      "id" : 1122101493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585C4ej1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122101493/reactions"
      },
      "updated_at" : "2022-05-10T08:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122101493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "# My system\r\n\r\nI got around to doing the benchmarks with a (sorta) tuned system. I wasn't able to achieve a completely stable benchmark system but the error rates are much lower now than before.\r\n\r\noutput of `sudo pyperf system`:\r\n```\r\n[I] calvin@bitcoin ~/b/c/l/bitcoin (2020-06-14-blockfilterindex-checksums) [1]> sudo pyperf system\r\nShow the system configuration\r\n\r\nSystem state\r\n============\r\n\r\nCPU: use 6 logical CPUs: 0-5\r\nPerf event: Maximum sample rate: 1 per second\r\nASLR: Full randomization\r\nLinux scheduler: Isolated CPUs (6/12): 0-5\r\nLinux scheduler: RCU disabled on CPUs (6/12): 0-5\r\nCPU Frequency: 0-5=min=max=3600 MHz; 6-11=min=2200 MHz, max=3600 MHz\r\nIRQ affinity: irqbalance service: inactive\r\nIRQ affinity: Default IRQ affinity: CPU 6-11\r\nIRQ affinity: IRQ affinity: IRQ 0,2=CPU 0-11; IRQ 1,3-15,25,40-41,73,75,77-78,80-89,91,93=CPU 6-11; IRQ 42,57=CPU 0; IRQ 43,58=CPU 1; IRQ 44,59=CPU 2; IRQ 45,60=CPU 3; IRQ 46,61=CPU 4; IRQ 47,62=CPU 5; IRQ 48,63=CPU 6; IRQ 49,64=CPU 7; IRQ 50,65=CPU 8; IRQ 51,66=CPU 9; IRQ 52,67=CPU 10; IRQ 53,68=CPU 11; IRQ 54-56,69-72=CPU None\r\n\r\nWarnings\r\n========\r\n\r\nTurbo Boost (MSR): Failed to read MSR 0x1a0 from /dev/cpu/0/msr: [Errno 5] Input/output error\r\n\r\nOK! System ready for benchmarking\r\n```\r\n\r\nFor some reason pyperf doesn't seem to recognize amd cpus with boost turned off. Boost is manually turned off by writing 0 to /sys/devices/system/cpu/cpufreq/boost.\r\n\r\n`cat /sys/devices/system/cpu/cpufreq/boost` output:\r\n```\r\n[N] calvin@bitcoin ~/b/c/l/bitcoin (2020-06-14-blockfilterindex-checksums)> cat /sys/devices/system/cpu/cpufreq/boost\r\n0\r\n```\r\n\r\nI get this output when running the benchmarks:\r\n```\r\nWarning, results might be unstable:\r\n* CPU frequency scaling enabled: CPU 6 between 2,200.0 and 3,600.0 MHz\r\n* Turbo is enabled, CPU frequency will fluctuate\r\n\r\nRecommendations\r\n* Use 'pyperf system tune' before benchmarking. See https://github.com/psf/pyperf\r\n```\r\nBut I believe pyperf only uses the cpus that are isolated from the kernel scheduler so I believe the warning will not affect the benchmarks. I double checked and also isolated CPU 6 and pyperf repeated the same warning with CPU 7 so I think it's ok. Pyperf also doesn't support turning off boost for [amd cpus](https://github.com/psf/pyperf/issues/120) so I believe that warning is an error by pyperf.\r\n\r\n# Benchmarks\r\n\r\nI tested to see if the results would be linear across many different `NUM_ELEMENT`s. Since the original benchmarks were done with 10,000, I took powers of 10 for the `NUM_ELEMENT`s for my test, ranging from 1-100,000,000.\r\n\r\nThe benchmarks were done with batching and without batching. The batched test resulted in a graph like so:\r\n\r\n![results_from_benchmarks_ns-elem](https://user-images.githubusercontent.com/37185887/169595920-c68b1373-0f7d-4799-8c5f-c421fc1467ff.png)\r\n\r\nThe tests done without batching resulted in a graph like so:\r\n\r\n![results_from_benchmarks_ns-op](https://user-images.githubusercontent.com/37185887/169595980-a78ae29a-93e0-4909-933e-0d43f152b8f4.png)\r\n\r\nFrom these benchmarks, you can see that there is a linear relation between the custom unit (\"elements\") and the time once you have 100,000 elements. Anything below 100,000 doesn't result in a linear relation.\r\n\r\n`ns/elem` is easier to read than `ns/op` since 9.7million is kinda hard to read. However, you can also take a look at `op/s` which is just as easy to read as `ns/elem`. Here's a graph without batch with `op/s` instead of `ns/op`.\r\n\r\n![results_from_benchmarks_op-s](https://user-images.githubusercontent.com/37185887/169598934-e31d957d-9901-48e5-9867-5b49674843ec.png)\r\n\r\n# Error rates with and without batch\r\n\r\nI also graphed how the error rates compare between calling batch and not calling batch.\r\n\r\n![error_rates_for_benchmarks](https://user-images.githubusercontent.com/37185887/169596271-df172ec1-83c9-42a1-9b66-0da8ee6157ec.png)\r\n\r\nAverage error rate in % with batch:       `0.38888888888888884`\r\nAverage error rate in % without batch: `0.4`\r\n\r\nCalling batch doesn't seem to effect the error rates in my testing.\r\n\r\n# My takeaway\r\n\r\n- Lower `NUM_ELEMENT` count seem to result in ns/elem that's same for different `NUM_ELEMENT` values. Needs a minimum of 100,000 elements.\r\n- It'd be better to unify everything under `ns/op` as batch doesn't provide any less error rates.\r\n\r\n[txt file for the raw benchmark results](https://github.com/bitcoin/bitcoin/files/8743561/raw-benchmark-num.txt)",
      "created_at" : "2022-05-20T19:46:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1133270444",
      "id" : 1133270444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585DjFWs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133270444/reactions"
      },
      "updated_at" : "2022-05-20T19:46:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133270444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "4 things changed in the latest push:\r\n\r\n1. Renamed the `GCSFilterGetHash` benchmark back to `GCSBlockFilterGetHash`.\r\n2. Renamed `GCSFilterDecodeChecked` to `GCSFilterDecodeSkipCheck` as `filter_checked` argument was renamed to `skip_decode_check`. Changing the name of the benchmark as well seemed fitting.\r\n3. Added a commit where `GenerateGCSTestElements` generates 100,000 elements instead of 10,000. The reasoning was based off of my findings in testing the benchmarks. I've included an explanation in the code as a comment and in the commit message.\r\n4. In the same added commit, I've changed the `GCSFilterConstruct` to be called without batch and the custom unit. This was done as it makes comparing intra-bench results more intuitive. Calling with batch didn't result in lower error rates either so there were no tradeoffs made.",
      "created_at" : "2022-05-22T05:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1133823145",
      "id" : 1133823145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585DlMSp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133823145/reactions"
      },
      "updated_at" : "2022-05-22T05:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133823145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-07-04T13:33:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1173829072",
      "id" : 1173829072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585F9zXQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1173829072/reactions"
      },
      "updated_at" : "2022-07-04T13:33:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1173829072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@stickies-v maybe you'd like to follow up here?",
      "created_at" : "2022-07-07T16:59:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1177933643",
      "id" : 1177933643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585GNddL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177933643/reactions"
      },
      "updated_at" : "2022-07-07T16:59:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177933643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If someone follows up, this comment and patch might be useful: https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1099200439",
      "created_at" : "2022-07-07T17:02:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1177938468",
      "id" : 1177938468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585GNeok",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177938468/reactions"
      },
      "updated_at" : "2022-07-07T17:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177938468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have working code here: https://github.com/kcalvinalvin/bitcoin/commits/2020-06-14-blockfilterindex-checksums-2. I'll make a follow up PR",
      "created_at" : "2022-07-07T17:08:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1177946125",
      "id" : 1177946125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585GNggN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177946125/reactions"
      },
      "updated_at" : "2022-07-07T17:08:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177946125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37185887?v=4",
         "events_url" : "https://api.github.com/users/kcalvinalvin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcalvinalvin/followers",
         "following_url" : "https://api.github.com/users/kcalvinalvin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcalvinalvin",
         "id" : 37185887,
         "login" : "kcalvinalvin",
         "node_id" : "MDQ6VXNlcjM3MTg1ODg3",
         "organizations_url" : "https://api.github.com/users/kcalvinalvin/orgs",
         "received_events_url" : "https://api.github.com/users/kcalvinalvin/received_events",
         "repos_url" : "https://api.github.com/users/kcalvinalvin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcalvinalvin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcalvinalvin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post-merge re-ACK e734228d8585c0870c71ce8ba8c037f8cf8b249a, thanks for updating.",
      "created_at" : "2022-07-27T13:56:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24832#issuecomment-1196795989",
      "id" : 1196795989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24832",
      "node_id" : "IC_kwDOABII585HVahV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1196795989/reactions"
      },
      "updated_at" : "2022-07-27T13:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1196795989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
