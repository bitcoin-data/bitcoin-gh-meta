[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209438389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209438389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All of our arguments are options, so our name of this method can be left untouched.",
      "commit_id" : "5654efb187d24eb29a343c720e3937b01457c8b7",
      "created_at" : "2018-08-11T21:54:41Z",
      "diff_hunk" : "@@ -70,7 +70,7 @@ def custom_function():\n class ExampleTest(BitcoinTestFramework):\n     # Each functional test is a subclass of the BitcoinTestFramework class.\n \n-    # Override the set_test_params(), add_options(), setup_chain(), setup_network()\n+    # Override the set_test_params(), add_arguments(), setup_chain(), setup_network()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209438389",
      "id" : 209438389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzODM4OQ==",
      "original_commit_id" : "24ae7d08b47ef9d149c8d52522245d51dba8fd92",
      "original_position" : 5,
      "path" : "test/functional/example_test.py",
      "position" : null,
      "pull_request_review_id" : 145458018,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944",
      "updated_at" : "2018-08-11T22:24:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209438389",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 5654efb187d24eb29a343c720e3937b01457c8b7",
      "created_at" : "2018-08-11T22:23:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#issuecomment-412305195",
      "id" : 412305195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13944",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMjMwNTE5NQ==",
      "updated_at" : "2018-08-11T22:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412305195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 5654efb.",
      "created_at" : "2018-08-12T00:04:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#issuecomment-412309325",
      "id" : 412309325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13944",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMjMwOTMyNQ==",
      "updated_at" : "2018-08-12T00:04:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412309325",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK https://github.com/bitcoin/bitcoin/commit/5654efb187d24eb29a343c720e3937b01457c8b7",
      "created_at" : "2018-08-12T09:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#issuecomment-412329860",
      "id" : 412329860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13944",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMjMyOTg2MA==",
      "updated_at" : "2018-08-12T09:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412329860",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6394033?v=4",
         "events_url" : "https://api.github.com/users/donaloconnor/events{/privacy}",
         "followers_url" : "https://api.github.com/users/donaloconnor/followers",
         "following_url" : "https://api.github.com/users/donaloconnor/following{/other_user}",
         "gists_url" : "https://api.github.com/users/donaloconnor/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/donaloconnor",
         "id" : 6394033,
         "login" : "donaloconnor",
         "node_id" : "MDQ6VXNlcjYzOTQwMzM=",
         "organizations_url" : "https://api.github.com/users/donaloconnor/orgs",
         "received_events_url" : "https://api.github.com/users/donaloconnor/received_events",
         "repos_url" : "https://api.github.com/users/donaloconnor/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/donaloconnor/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/donaloconnor"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209449177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209449177"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I assume that no existing code relies on `self.args` (as otherwise you would see test failures)?",
      "commit_id" : "5654efb187d24eb29a343c720e3937b01457c8b7",
      "created_at" : "2018-08-12T09:34:28Z",
      "diff_hunk" : "@@ -96,31 +96,31 @@ def __init__(self):\n     def main(self):\n         \"\"\"Main function. This should not be overridden by the subclass test scripts.\"\"\"\n \n-        parser = optparse.OptionParser(usage=\"%prog [options]\")\n-        parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-        parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n-        parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n-                          help=\"Directory for caching pregenerated datadirs (default: %default)\")\n-        parser.add_option(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n-        parser.add_option(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n-                          help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n-        parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n-                          help=\"Print out all RPC calls as they are made\")\n-        parser.add_option(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type='int',\n-                          help=\"The seed to use for assigning port numbers (default: current process id)\")\n-        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n-                          help=\"Write tested RPC commands into this directory\")\n-        parser.add_option(\"--configfile\", dest=\"configfile\",\n-                          default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n-                          help=\"Location of the test framework config file (default: %default)\")\n-        parser.add_option(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n-                          help=\"Attach a python debugger if test fails\")\n-        parser.add_option(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n-                          help=\"use bitcoin-cli instead of RPC for all commands\")\n+        parser = argparse.ArgumentParser(usage=\"%(prog)s [options]\")\n+        parser.add_argument(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                            help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+        parser.add_argument(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n+                            help=\"Don't stop bitcoinds after the test execution\")\n+        parser.add_argument(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n+                            help=\"Directory for caching pregenerated datadirs (default: %(default)s)\")\n+        parser.add_argument(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n+        parser.add_argument(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n+                            help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n+        parser.add_argument(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n+                            help=\"Print out all RPC calls as they are made\")\n+        parser.add_argument(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type=int,\n+                            help=\"The seed to use for assigning port numbers (default: current process id)\")\n+        parser.add_argument(\"--coveragedir\", dest=\"coveragedir\",\n+                            help=\"Write tested RPC commands into this directory\")\n+        parser.add_argument(\"--configfile\", dest=\"configfile\",\n+                            default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n+                            help=\"Location of the test framework config file (default: %(default)s)\")\n+        parser.add_argument(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n+                            help=\"Attach a python debugger if test fails\")\n+        parser.add_argument(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n+                            help=\"use bitcoin-cli instead of RPC for all commands\")\n         self.add_options(parser)\n-        (self.options, self.args) = parser.parse_args()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209449177",
      "id" : 209449177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0OTE3Nw==",
      "original_commit_id" : "5654efb187d24eb29a343c720e3937b01457c8b7",
      "original_position" : 60,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 60,
      "pull_request_review_id" : 145468592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944",
      "updated_at" : "2018-08-12T09:34:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209449177",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209449354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209449354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "indeed, none of the code uses that\r\nas @MarcoFalke mentioned above, all the command-line arguments are options",
      "commit_id" : "5654efb187d24eb29a343c720e3937b01457c8b7",
      "created_at" : "2018-08-12T09:43:50Z",
      "diff_hunk" : "@@ -96,31 +96,31 @@ def __init__(self):\n     def main(self):\n         \"\"\"Main function. This should not be overridden by the subclass test scripts.\"\"\"\n \n-        parser = optparse.OptionParser(usage=\"%prog [options]\")\n-        parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-        parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n-        parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n-                          help=\"Directory for caching pregenerated datadirs (default: %default)\")\n-        parser.add_option(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n-        parser.add_option(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n-                          help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n-        parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n-                          help=\"Print out all RPC calls as they are made\")\n-        parser.add_option(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type='int',\n-                          help=\"The seed to use for assigning port numbers (default: current process id)\")\n-        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n-                          help=\"Write tested RPC commands into this directory\")\n-        parser.add_option(\"--configfile\", dest=\"configfile\",\n-                          default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n-                          help=\"Location of the test framework config file (default: %default)\")\n-        parser.add_option(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n-                          help=\"Attach a python debugger if test fails\")\n-        parser.add_option(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n-                          help=\"use bitcoin-cli instead of RPC for all commands\")\n+        parser = argparse.ArgumentParser(usage=\"%(prog)s [options]\")\n+        parser.add_argument(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                            help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+        parser.add_argument(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n+                            help=\"Don't stop bitcoinds after the test execution\")\n+        parser.add_argument(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n+                            help=\"Directory for caching pregenerated datadirs (default: %(default)s)\")\n+        parser.add_argument(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n+        parser.add_argument(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n+                            help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n+        parser.add_argument(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n+                            help=\"Print out all RPC calls as they are made\")\n+        parser.add_argument(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type=int,\n+                            help=\"The seed to use for assigning port numbers (default: current process id)\")\n+        parser.add_argument(\"--coveragedir\", dest=\"coveragedir\",\n+                            help=\"Write tested RPC commands into this directory\")\n+        parser.add_argument(\"--configfile\", dest=\"configfile\",\n+                            default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n+                            help=\"Location of the test framework config file (default: %(default)s)\")\n+        parser.add_argument(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n+                            help=\"Attach a python debugger if test fails\")\n+        parser.add_argument(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n+                            help=\"use bitcoin-cli instead of RPC for all commands\")\n         self.add_options(parser)\n-        (self.options, self.args) = parser.parse_args()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#discussion_r209449354",
      "id" : 209449354,
      "in_reply_to_id" : 209449177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0OTM1NA==",
      "original_commit_id" : "5654efb187d24eb29a343c720e3937b01457c8b7",
      "original_position" : 60,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 60,
      "pull_request_review_id" : 145468780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13944",
      "updated_at" : "2018-08-12T09:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/209449354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 5654efb",
      "created_at" : "2018-08-12T09:45:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13944#issuecomment-412330990",
      "id" : 412330990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13944",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMjMzMDk5MA==",
      "updated_at" : "2018-08-12T09:45:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412330990",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
