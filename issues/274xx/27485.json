{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Use `-isystem` & `-nostd*` flags, which is the preferred way to use a custom libc++ (ours is libc++ build with MSAN) with Clang, as opposed to our current ad-hoc flags.\r\n\r\nSee: https://releases.llvm.org/16.0.0/projects/libcxx/docs/UsingLibcxx.html#using-a-custom-built-libc for more info:\r\n> Most compilers provide a way to disable the default behavior for finding the standard library and to override it with custom paths. With Clang, this can be done with:\r\n```bash\r\nclang++ -nostdinc++ -nostdlib++             \\\r\n          -isystem <install>/include/c++/v1 \\\r\n          -L <install>/lib                  \\\r\n          -Wl,-rpath,<install>/lib          \\\r\n          -lc++                             \\\r\n          test.cpp\r\n```\r\n\r\nThis is a WIP, as the `native_fuzz_with_msan` job is still broken, which is related to using system compiler-rt, see\r\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1005341 for more info. I think standardising how we use our libc++ is a first step towards fixing. Although this may ultimately require building a clang and compiler-rt ourselves.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485/comments",
   "created_at" : "2023-04-18T13:26:57Z",
   "draft" : true,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/27485",
   "id" : 1673136449,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585OlIHA",
   "number" : 27485,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/27485.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27485",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/27485.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27485"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485/timeline",
   "title" : "[WIP] ci: standardize custom libc++ usage in MSAN jobs",
   "updated_at" : "2023-04-18T13:27:00Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27485",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
