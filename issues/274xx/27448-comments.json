[
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1514991825) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-04-11T15:28:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1503614599",
      "id" : 1503614599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27448",
      "node_id" : "IC_kwDOABII585Zn1aH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1503614599/reactions"
      },
      "updated_at" : "2023-04-19T16:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1503614599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased post #27447.",
      "created_at" : "2023-04-19T10:55:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1514531348",
      "id" : 1514531348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27448",
      "node_id" : "IC_kwDOABII585aReoU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514531348/reactions"
      },
      "updated_at" : "2023-04-19T10:55:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514531348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "is DEBUG=1 enabled for them as well in depends?\r\n\r\nEdit: I guess that would make them unusably slow?",
      "created_at" : "2023-04-19T11:19:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1514559389",
      "id" : 1514559389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27448",
      "node_id" : "IC_kwDOABII585aRled",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514559389/reactions"
      },
      "updated_at" : "2023-04-19T13:31:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514559389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> is DEBUG=1 enabled for them as well in depends?\r\n> Edit: I guess that would make them unusably slow?\r\n\r\nThey don't run too slow, but they seem to find bugs. #27222 reproduces on `x86_64`:\r\n```bash\r\nwallet/test/feebumper_tests.cpp(18): Entering test suite \"feebumper_tests\"\r\nwallet/test/feebumper_tests.cpp(42): Entering test case \"external_max_weight_test\"\r\n2023-04-19T14:50:06Z Seed: Setting random seed for current tests to RANDOM_CTX_SEED=bcbaed399ecb4b53cf5998534b1cb7a9bdddd1c1755a5766212f5af3ac9745c2\r\n2023-04-19T14:50:06.208691Z [test] [init/common.cpp:150] [LogPackageVersion] Bitcoin Core version v24.99.0-df230b476635 (release build)\r\n2023-04-19T14:50:06.209990Z [test] [kernel/context.cpp:21] [Context] Using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation\r\n2023-04-19T14:50:06.210154Z [test] [random.cpp:99] [ReportHardwareRand] Using RdSeed as an additional entropy source\r\n2023-04-19T14:50:06.210296Z [test] [random.cpp:102] [ReportHardwareRand] Using RdRand as an additional entropy source\r\n2023-04-19T14:50:06.240134Z [test] [script/sigcache.cpp:103] [InitSignatureCache] Using 16 MiB out of 16 MiB requested for signature cache, able to store 524288 elements\r\n2023-04-19T14:50:06.268452Z [test] [validation.cpp:1747] [InitScriptExecutionCache] Using 16 MiB out of 16 MiB requested for script execution cache, able to store 524288 elements\r\n2023-04-19T14:50:06.269089Z [scheduler] [util/thread.cpp:20] [TraceThread] scheduler thread start\r\n2023-04-19T14:50:06.272308Z [test] [policy/fees.cpp:551] [CBlockPolicyEstimator] Failed to read fee estimates from /tmp/test_common_Bitcoin Core/6e563b3d9911b27f87e09262af2afa0b6d61b8f9d475923100191822474c5cee/fee_estimates.dat. Continue anyway.\r\n2023-04-19T14:50:06.273678Z [test] [dbwrapper.cpp:158] [CDBWrapper] Opened LevelDB successfully\r\n2023-04-19T14:50:06.273925Z [test] [dbwrapper.cpp:183] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/6e563b3d9911b27f87e09262af2afa0b6d61b8f9d475923100191822474c5cee/blocks/index: 0000000000000000\r\n2023-04-19T14:50:06.396567Z [test] [node/chainstate.cpp:165] [LoadChainstate] Assuming ancestors of block 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd have valid signatures.\r\n2023-04-19T14:50:06.396768Z [test] [node/chainstate.cpp:169] [LoadChainstate] Setting nMinimumChainWork=00000000000000000000000000000000000000003404ba0801921119f903495e\r\n2023-04-19T14:50:06.397711Z [test] [dbwrapper.cpp:158] [CDBWrapper] Opened LevelDB successfully\r\n2023-04-19T14:50:06.397958Z [test] [dbwrapper.cpp:183] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/6e563b3d9911b27f87e09262af2afa0b6d61b8f9d475923100191822474c5cee/blocks/index: 0000000000000000\r\n2023-04-19T14:50:06.398296Z [test] [node/blockstorage.cpp:329] [LoadBlockIndexDB] LoadBlockIndexDB: last block file = 0\r\n2023-04-19T14:50:06.398584Z [test] [node/blockstorage.cpp:333] [LoadBlockIndexDB] LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=0, size=0, heights=0...0, time=1970-01-01...1970-01-01)\r\n2023-04-19T14:50:06.398774Z [test] [node/blockstorage.cpp:344] [LoadBlockIndexDB] Checking all blk files are present...\r\n2023-04-19T14:50:06.399089Z [test] [validation.cpp:4494] [LoadBlockIndex] Initializing databases...\r\n2023-04-19T14:50:06.399493Z [test] [flatfile.cpp:69] [Allocate] [validation] Pre-allocating up to position 0x1000000 in blk00000.dat\r\n2023-04-19T14:50:06.399937Z [test] [node/chainstate.cpp:107] [CompleteChainstateInitialization] Initializing chainstate Chainstate [ibd] @ height -1 (null)\r\n2023-04-19T14:50:06.400680Z [test] [dbwrapper.cpp:158] [CDBWrapper] Opened LevelDB successfully\r\n2023-04-19T14:50:06.401046Z [test] [dbwrapper.cpp:180] [CDBWrapper] Wrote new obfuscate key for /tmp/test_common_Bitcoin Core/6e563b3d9911b27f87e09262af2afa0b6d61b8f9d475923100191822474c5cee/chainstate: f99c9db210c2a968\r\n2023-04-19T14:50:06.401256Z [test] [dbwrapper.cpp:183] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/6e563b3d9911b27f87e09262af2afa0b6d61b8f9d475923100191822474c5cee/chainstate: f99c9db210c2a968\r\n2023-04-19T14:50:06.401590Z [test] [validation.cpp:5539] [MaybeRebalanceCaches] [snapshot] allocating all cache to the IBD chainstate\r\n2023-04-19T14:50:06.401792Z [test] [validation.cpp:4921] [ResizeCoinsCaches] [Chainstate [ibd] @ height -1 (null)] resized coinsdb cache to 8.0 MiB\r\n2023-04-19T14:50:06.401985Z [test] [validation.cpp:4923] [ResizeCoinsCaches] [Chainstate [ibd] @Uninitialized bytes in __interceptor_strlen at offset 9 inside [0x72e00000b9a8, 10)\r\n==38655==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x555f25637ceb in sqlite3Strlen30 /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:32670:28\r\n    #1 0x555f25685834 in sqlite3VdbeExec /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:88638:13\r\n    #2 0x555f256422a8 in sqlite3Step /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:85780:10\r\n    #3 0x555f2563a761 in sqlite3_step /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:85837:16\r\n    #4 0x555f25648a57 in sqlite3_exec /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:128170:12\r\n    #5 0x555f2443a03d in wallet::SetPragma(sqlite3*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) src/wallet/sqlite.cpp:77:15\r\n    #6 0x555f24437ffd in wallet::SQLiteDatabase::Open() src/wallet/sqlite.cpp:245:5\r\n    #7 0x555f24431aed in wallet::SQLiteDatabase::SQLiteDatabase(fs::path const&, fs::path const&, wallet::DatabaseOptions const&, bool) src/wallet/sqlite.cpp:113:9\r\n    #8 0x555f243d3558 in std::__1::__unique_if<wallet::SQLiteDatabase>::__unique_single std::__1::make_unique[abi:v160001]<wallet::SQLiteDatabase, char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool>(char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool&&) /home/ubuntu/bitcoin/ci/scratch/msan/build/include/c++/v1/__memory/unique_ptr.h:686:30\r\n    #9 0x555f243cbba4 in wallet::CreateMockWalletDatabase(wallet::DatabaseOptions&) src/wallet/walletdb.cpp:1264:16\r\n    #10 0x555f243cbba4 in wallet::CreateMockWalletDatabase() src/wallet/walletdb.cpp:1278:12\r\n    #11 0x555f22b58a8e in wallet::WalletTestingSetup::WalletTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) src/wallet/test/wallet_test_fixture.cpp:13:40\r\n    #12 0x555f23e53db3 in wallet::feebumper::feebumper_tests::external_max_weight_test::external_max_weight_test() src/wallet/test/feebumper_tests.cpp:42:1\r\n    #13 0x555f23e53db3 in wallet::feebumper::feebumper_tests::external_max_weight_test_invoker() src/wallet/test/feebumper_tests.cpp:42:1\r\n    #14 0x555f22c4ab35 in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:117:11\r\n    #15 0x555f22b47bbe in boost::function0<void>::operator()() const /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #16 0x555f22b47bbe in boost::detail::forward::operator()() /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32\r\n    #17 0x555f22b47bbe in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:137:18\r\n    #18 0x555f22a1b302 in boost::function0<int>::operator()() const /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #19 0x555f22a1b302 in int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30\r\n    #20 0x555f22a1b302 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16\r\n    #21 0x555f22a1b98a in boost::execution_monitor::execute(boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16\r\n    #22 0x555f22a12d7a in boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5\r\n    #23 0x555f22a12d7a in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9\r\n    #24 0x555f22a8e1bb in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:815:44\r\n    #25 0x555f22a8eecb in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:784:58\r\n    #26 0x555f22a8eecb in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:784:58\r\n    #27 0x555f22a0fa1e in boost::unit_test::framework::run(unsigned long, bool) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:1722:29\r\n    #28 0x555f22a490ec in boost::unit_test::unit_test_main(boost::unit_test::test_suite* (*)(int, char**), int, char**) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/unit_test_main.ipp:250:9\r\n    #29 0x555f22a4a1d4 in main /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/unit_test_main.ipp:306:12\r\n    #30 0x7f0ae3d58a8f  (/lib/x86_64-linux-gnu/libc.so.6+0x23a8f) (BuildId: bdb8aa3b1b60f9d43e1c70ba98158e05f765efdc)\r\n    #31 0x7f0ae3d58b48 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x23b48) (BuildId: bdb8aa3b1b60f9d43e1c70ba98158e05f765efdc)\r\n    #32 0x555f22956fe4 in _start (/home/ubuntu/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/test_bitcoin+0x177fe4) (BuildId: 633af1da154757ae52d66bed70e34016956c7d12)\r\n\r\n  Uninitialized value was created by a heap allocation\r\n    #0 0x555f2298a532 in malloc (/home/ubuntu/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/test_bitcoin+0x1ab532) (BuildId: 633af1da154757ae52d66bed70e34016956c7d12)\r\n    #1 0x555f2575f109 in sqlite3MemMalloc /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:25163:7\r\n    #2 0x555f2565545c in mallocWithAlarm /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:28846:7\r\n    #3 0x555f25633f59 in sqlite3Malloc /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:28876:5\r\n    #4 0x555f2564d744 in setupLookaside /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:169302:14\r\n    #5 0x555f25650615 in openDatabase /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:171986:3\r\n    #6 0x555f2565076a in sqlite3_open_v2 /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:172034:10\r\n    #7 0x555f24437e87 in wallet::SQLiteDatabase::Open() src/wallet/sqlite.cpp:229:19\r\n    #8 0x555f24431aed in wallet::SQLiteDatabase::SQLiteDatabase(fs::path const&, fs::path const&, wallet::DatabaseOptions const&, bool) src/wallet/sqlite.cpp:113:9\r\n    #9 0x555f243d3558 in std::__1::__unique_if<wallet::SQLiteDatabase>::__unique_single std::__1::make_unique[abi:v160001]<wallet::SQLiteDatabase, char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool>(char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool&&) /home/ubuntu/bitcoin/ci/scratch/msan/build/include/c++/v1/__memory/unique_ptr.h:686:30\r\n    #10 0x555f243cbba4 in wallet::CreateMockWalletDatabase(wallet::DatabaseOptions&) src/wallet/walletdb.cpp:1264:16\r\n    #11 0x555f243cbba4 in wallet::CreateMockWalletDatabase() src/wallet/walletdb.cpp:1278:12\r\n    #12 0x555f22b58a8e in wallet::WalletTestingSetup::WalletTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) src/wallet/test/wallet_test_fixture.cpp:13:40\r\n    #13 0x555f23e53db3 in wallet::feebumper::feebumper_tests::external_max_weight_test::external_max_weight_test() src/wallet/test/feebumper_tests.cpp:42:1\r\n    #14 0x555f23e53db3 in wallet::feebumper::feebumper_tests::external_max_weight_test_invoker() src/wallet/test/feebumper_tests.cpp:42:1\r\n    #15 0x555f22c4ab35 in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:117:11\r\n    #16 0x555f22b47bbe in boost::function0<void>::operator()() const /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #17 0x555f22b47bbe in boost::detail::forward::operator()() /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32\r\n    #18 0x555f22b47bbe in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:137:18\r\n    #19 0x555f22a1b302 in boost::function0<int>::operator()() const /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #20 0x555f22a1b302 in int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30\r\n    #21 0x555f22a1b302 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16\r\n    #22 0x555f22a1b98a in boost::execution_monitor::execute(boost::function<int ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16\r\n    #23 0x555f22a12d7a in boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5\r\n    #24 0x555f22a12d7a in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9\r\n    #25 0x555f22a8e1bb in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:815:44\r\n    #26 0x555f22a8eecb in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/include/boost/test/impl/framework.ipp:784:58\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /home/ubuntu/bitcoin/depends/work/build/x86_64-pc-linux-gnu/sqlite/3380500-7fe5d5b9fee/sqlite3.c:32670:28 in sqlite3Strlen30\r\nExiting\r\n```\r\n\r\nDifferent on aarch64:\r\n```bash\r\n2023-04-19T14:57:40.859244Z [test] [validation.cpp:2834] [ConnectTip] [bench]   - Load block from disk: 0.33ms [0.00s (infms/blk)]\r\n2023-04-19T14:57:40.859773Z [test] [validationinterface.cpp:25Uninitialized bytes in __interceptor_strcmp at offset 0 inside [0xe01000000e0c, 1)\r\n==37748==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0xaaaab8a82008 in sqlite3BtreeOpen /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:68556:37\r\n    #1 0xaaaab8a71ddc in openDatabase /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:171911:8\r\n    #2 0xaaaab8a721e4 in sqlite3_open_v2 /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:172034:10\r\n    #3 0xaaaab7c216c8 in wallet::SQLiteDatabase::Open() src/wallet/sqlite.cpp:229:19\r\n    #4 0xaaaab7c1c39c in wallet::SQLiteDatabase::SQLiteDatabase(fs::path const&, fs::path const&, wallet::DatabaseOptions const&, bool) src/wallet/sqlite.cpp:113:9\r\n    #5 0xaaaab7bd1304 in std::__1::__unique_if<wallet::SQLiteDatabase>::__unique_single std::__1::make_unique[abi:v160001]<wallet::SQLiteDatabase, char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool>(char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool&&) /home/fedora/ci_scratch/ci/scratch/msan/build/include/c++/v1/__memory/unique_ptr.h:686:30\r\n    #6 0xaaaab7bcaab4 in wallet::CreateMockWalletDatabase(wallet::DatabaseOptions&) src/wallet/walletdb.cpp:1264:16\r\n    #7 0xaaaab7bcaab4 in wallet::CreateMockWalletDatabase() src/wallet/walletdb.cpp:1278:12\r\n    #8 0xaaaab6789c44 in wallet::WalletTestingSetup::WalletTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) src/wallet/test/wallet_test_fixture.cpp:13:40\r\n    #9 0xaaaab77ba048 in wallet::wallet_tests::ComputeTimeSmart::ComputeTimeSmart() src/wallet/test/wallet_tests.cpp:407:1\r\n    #10 0xaaaab77ba048 in wallet::wallet_tests::ComputeTimeSmart_invoker() src/wallet/test/wallet_tests.cpp:407:1\r\n    #11 0xaaaab6852558 in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:117:11\r\n    #12 0xaaaab677be68 in boost::function0<void>::operator()() const /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #13 0xaaaab677be68 in boost::detail::forward::operator()() /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32\r\n    #14 0xaaaab677be68 in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:137:18\r\n    #15 0xaaaab6685144 in boost::function0<int>::operator()() const /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #16 0xaaaab6685144 in int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30\r\n    #17 0xaaaab6685144 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16\r\n    #18 0xaaaab66856c8 in boost::execution_monitor::execute(boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16\r\n    #19 0xaaaab667dcc0 in boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5\r\n    #20 0xaaaab667dcc0 in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9\r\n    #21 0xaaaab66e2808 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:815:44\r\n    #22 0xaaaab66e2218 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58\r\n    #23 0xaaaab66e2218 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58\r\n    #24 0xaaaab667ae10 in boost::unit_test::framework::run(unsigned long, bool) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:1722:29\r\n    #25 0xaaaab66aadb4 in boost::unit_test::unit_test_main(boost::unit_test::test_suite* (*)(int, char**), int, char**) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:250:9\r\n    #26 0xaaaab66abb98 in main /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:306:12\r\n    #27 0xffff91066dbc  (/lib/aarch64-linux-gnu/libc.so.6+0x26dbc) (BuildId: 9efe43e32e614cad22a180ef036eea6154eafdc2)\r\n    #28 0xffff91066e94 in __libc_start_main (/lib/aarch64-linux-gnu/libc.so.6+0x26e94) (BuildId: 9efe43e32e614cad22a180ef036eea6154eafdc2)\r\n    #29 0xaaaab65cd6ec in _start (/home/fedora/ci_scratch/ci/scratch/build/bitcoin-aarch64-unknown-linux-gnu/src/test/test_bitcoin+0x15d6ec) (BuildId: 78bb98243eb0da25c31e795ae10bd1ff4597c7e4)\r\n\r\n  Uninitialized value was created by a heap allocation\r\n    #0 0xaaaab65ffd14 in malloc (/home/fedora/ci_scratch/ci/scratch/build/bitcoin-aarch64-unknown-linux-gnu/src/test/test_bitcoin+0x18fd14) (BuildId: 78bb98243eb0da25c31e795ae10bd1ff4597c7e4)\r\n    #1 0xaaaab8bb18d4 in sqlite3MemMalloc /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:25163:7\r\n    #2 0xaaaab8a77948 in mallocWithAlarm /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:28846:7\r\n    #3 0xaaaab8a508bc in sqlite3Malloc /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:28876:5\r\n    #4 0xaaaab8a5096c in sqlite3_malloc64 /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:28900:10\r\n    #5 0xaaaab8b9aca4 in sqlite3ParseUri /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:171638:13\r\n    #6 0xaaaab8a71d34 in openDatabase /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:171901:10\r\n    #7 0xaaaab8a721e4 in sqlite3_open_v2 /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:172034:10\r\n    #8 0xaaaab7c216c8 in wallet::SQLiteDatabase::Open() src/wallet/sqlite.cpp:229:19\r\n    #9 0xaaaab7c1c39c in wallet::SQLiteDatabase::SQLiteDatabase(fs::path const&, fs::path const&, wallet::DatabaseOptions const&, bool) src/wallet/sqlite.cpp:113:9\r\n    #10 0xaaaab7bd1304 in std::__1::__unique_if<wallet::SQLiteDatabase>::__unique_single std::__1::make_unique[abi:v160001]<wallet::SQLiteDatabase, char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool>(char const (&) [9], char const (&) [1], wallet::DatabaseOptions&, bool&&) /home/fedora/ci_scratch/ci/scratch/msan/build/include/c++/v1/__memory/unique_ptr.h:686:30\r\n    #11 0xaaaab7bcaab4 in wallet::CreateMockWalletDatabase(wallet::DatabaseOptions&) src/wallet/walletdb.cpp:1264:16\r\n    #12 0xaaaab7bcaab4 in wallet::CreateMockWalletDatabase() src/wallet/walletdb.cpp:1278:12\r\n    #13 0xaaaab6789c44 in wallet::WalletTestingSetup::WalletTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) src/wallet/test/wallet_test_fixture.cpp:13:40\r\n    #14 0xaaaab77ba048 in wallet::wallet_tests::ComputeTimeSmart::ComputeTimeSmart() src/wallet/test/wallet_tests.cpp:407:1\r\n    #15 0xaaaab77ba048 in wallet::wallet_tests::ComputeTimeSmart_invoker() src/wallet/test/wallet_tests.cpp:407:1\r\n    #16 0xaaaab6852558 in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:117:11\r\n    #17 0xaaaab677be68 in boost::function0<void>::operator()() const /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #18 0xaaaab677be68 in boost::detail::forward::operator()() /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32\r\n    #19 0xaaaab677be68 in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:137:18\r\n    #20 0xaaaab6685144 in boost::function0<int>::operator()() const /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14\r\n    #21 0xaaaab6685144 in int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30\r\n    #22 0xaaaab6685144 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16\r\n    #23 0xaaaab66856c8 in boost::execution_monitor::execute(boost::function<int ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16\r\n    #24 0xaaaab667dcc0 in boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5\r\n    #25 0xaaaab667dcc0 in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9\r\n    #26 0xaaaab66e2808 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/ci_scratch/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:815:44\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /home/fedora/ci_scratch/depends/work/build/aarch64-unknown-linux-gnu/sqlite/3380500-b73e7dadeab/sqlite3.c:68556:37 in sqlite3BtreeOpen\r\nExiting\r\n```\r\n\r\nPushed `DEBUG=1` up here to see if it also recreates in the native_msan CI. (cancelled all other tasks).",
      "created_at" : "2023-04-19T15:05:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1514902450",
      "id" : 1514902450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27448",
      "node_id" : "IC_kwDOABII585aS5Oy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514902450/reactions"
      },
      "updated_at" : "2023-04-19T15:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514902450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171528095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171528095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Forgot to set this for the fuzz msan task?",
      "commit_id" : "4de9c2a65f6770405f167c7392cd8371111bc4e8",
      "created_at" : "2023-04-19T15:39:31Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-16 llvm-16 libclang-rt-16-dev cmake\"\n # BDB generates false-positives and will be removed in future\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171528095",
      "id" : 1171528095,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585F1Bmf",
      "original_commit_id" : "1a666d7f61a53acee234d68162bf79a5f741b672",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "ci/test/00_setup_env_native_msan.sh",
      "position" : null,
      "pull_request_review_id" : 1392367724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171528095/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-19T15:39:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171528095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171530477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171530477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And given that the CI fails here (c.f. https://cirrus-ci.com/task/5681913176784896?logs=ci#L2667), maybe add it to the msan task in a follow-up and only set it on the fuzz msan task?",
      "commit_id" : "4de9c2a65f6770405f167c7392cd8371111bc4e8",
      "created_at" : "2023-04-19T15:41:19Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-16 llvm-16 libclang-rt-16-dev cmake\"\n # BDB generates false-positives and will be removed in future\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171530477",
      "id" : 1171530477,
      "in_reply_to_id" : 1171528095,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585F1CLt",
      "original_commit_id" : "1a666d7f61a53acee234d68162bf79a5f741b672",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "ci/test/00_setup_env_native_msan.sh",
      "position" : null,
      "pull_request_review_id" : 1392371035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171530477/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-19T15:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171530477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171548431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171548431"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Forgot to set this for the fuzz msan task?\r\n\r\nI didn't bother as that isn't run here, and wouldn't compile rn (master) in any case.\r\n\r\n> maybe add it to the msan task in a follow-up and only set it on the fuzz msan task?\r\n\r\nI think I'd rather defer to adding both, at the same time, in a follow up, if you're alright with that. Can drop the test commit from this PR.",
      "commit_id" : "4de9c2a65f6770405f167c7392cd8371111bc4e8",
      "created_at" : "2023-04-19T15:55:51Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-16 llvm-16 libclang-rt-16-dev cmake\"\n # BDB generates false-positives and will be removed in future\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171548431",
      "id" : 1171548431,
      "in_reply_to_id" : 1171528095,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585F1GkP",
      "original_commit_id" : "1a666d7f61a53acee234d68162bf79a5f741b672",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "ci/test/00_setup_env_native_msan.sh",
      "position" : null,
      "pull_request_review_id" : 1392397654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171548431/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-19T15:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171548431",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "lgtm ACK 4de9c2a65f6770405f167c7392cd8371111bc4e8",
      "created_at" : "2023-04-19T16:04:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#issuecomment-1514991825",
      "id" : 1514991825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27448",
      "node_id" : "IC_kwDOABII585aTPDR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514991825/reactions"
      },
      "updated_at" : "2023-04-19T16:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514991825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171669217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171669217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Followed up in #27495.",
      "commit_id" : "4de9c2a65f6770405f167c7392cd8371111bc4e8",
      "created_at" : "2023-04-19T17:41:57Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@ export MSAN_AND_LIBCXX_FLAGS=\"${MSAN_FLAGS} ${LIBCXX_FLAGS}\"\n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-16 llvm-16 libclang-rt-16-dev cmake\"\n # BDB generates false-positives and will be removed in future\n-export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27448#discussion_r1171669217",
      "id" : 1171669217,
      "in_reply_to_id" : 1171528095,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585F1kDh",
      "original_commit_id" : "1a666d7f61a53acee234d68162bf79a5f741b672",
      "original_line" : 18,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "ci/test/00_setup_env_native_msan.sh",
      "position" : null,
      "pull_request_review_id" : 1392587273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27448",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171669217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-19T17:41:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171669217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
