[
   {
      "author_association" : "MEMBER",
      "body" : "So to be clear: this fixes *reporting* of lock orders (with `DEBUG_LOCKORDER`), not the lock orders themselves?",
      "created_at" : "2020-06-22T17:19:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-647663196",
      "id" : 647663196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzY2MzE5Ng==",
      "updated_at" : "2020-06-22T17:20:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647663196",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n> So to be clear: this fixes _reporting_ of lock orders (with `DEBUG_LOCKORDER`), not the lock orders themselves?\r\n\r\nYes. You are correct.",
      "created_at" : "2020-06-22T17:22:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-647665892",
      "id" : 647665892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzY2NTg5Mg==",
      "updated_at" : "2020-06-22T17:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647665892",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-06-22T18:57:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-647712737",
      "id" : 647712737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzcxMjczNw==",
      "updated_at" : "2020-06-25T22:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647712737",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK fdd1d7718\r\n\r\nI tested it with the following changes, then ran `./src/test/test_bitcoin --run_test=\"*/potential_deadlock_detected\"` and read its output.\r\n\r\n<details>\r\n<summary>lock mutexes on separate lines to make the output less ambiguous; print to console</summary>\r\n\r\n```diff\r\ndiff --git i/src/test/sync_tests.cpp w/src/test/sync_tests.cpp\r\nindex 3ea8714f3..4d6b81c3e 100644\r\n--- i/src/test/sync_tests.cpp\r\n+++ w/src/test/sync_tests.cpp\r\n@@ -9,17 +9,19 @@\r\n \r\n namespace {\r\n template <typename MutexType>\r\n void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\r\n {\r\n     {\r\n-        LOCK2(mutex1, mutex2);\r\n+        LOCK(mutex1);\r\n+        LOCK(mutex2);\r\n     }\r\n     bool error_thrown = false;\r\n     try {\r\n-        LOCK2(mutex2, mutex1);\r\n+        LOCK(mutex2);\r\n+        LOCK(mutex1);\r\n     } catch (const std::logic_error& e) {\r\n         BOOST_CHECK_EQUAL(e.what(), \"potential deadlock detected: mutex1 -> mutex2 -> mutex1\");\r\n         error_thrown = true;\r\n     }\r\n     #ifdef DEBUG_LOCKORDER\r\n     BOOST_CHECK(error_thrown);\r\n@@ -32,13 +34,13 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\r\n BOOST_FIXTURE_TEST_SUITE(sync_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(potential_deadlock_detected)\r\n {\r\n     #ifdef DEBUG_LOCKORDER\r\n     bool prev = g_debug_lockorder_abort;\r\n-    g_debug_lockorder_abort = false;\r\n+    g_debug_lockorder_abort = true;\r\n     #endif\r\n \r\n     RecursiveMutex rmutex1, rmutex2;\r\n     TestPotentialDeadLockDetected(rmutex1, rmutex2);\r\n \r\n     Mutex mutex1, mutex2;\r\ndiff --git i/src/test/util/setup_common.cpp w/src/test/util/setup_common.cpp\r\nindex 3b7a7c8d1..e80597d40 100644\r\n--- i/src/test/util/setup_common.cpp\r\n+++ w/src/test/util/setup_common.cpp\r\n@@ -69,13 +69,13 @@ std::ostream& operator<<(std::ostream& os, const uint256& num)\r\n BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::vector<const char*>& extra_args)\r\n     : m_path_root{fs::temp_directory_path() / \"test_common_\" PACKAGE_NAME / g_insecure_rand_ctx_temp_path.rand256().ToString()}\r\n {\r\n     const std::vector<const char*> arguments = Cat(\r\n         {\r\n             \"dummy\",\r\n-            \"-printtoconsole=0\",\r\n+            \"-printtoconsole=1\",\r\n             \"-logtimemicros\",\r\n             \"-debug\",\r\n             \"-debugexclude=libevent\",\r\n             \"-debugexclude=leveldb\",\r\n         },\r\n         extra_args);\r\n```\r\n</details>\r\n\r\nFeel free to simplify as follows, there is no need to pass the lock location as an additional argument to `potential_deadlock_detected()` because it is always the last element in the second stack `s2`:\r\n\r\n<details>\r\n<summary>simplify</summary>\r\n\r\n```diff\r\ndiff --git i/src/sync.cpp w/src/sync.cpp\r\nindex 260e9994d..b2a48fb0f 100644\r\n--- i/src/sync.cpp\r\n+++ w/src/sync.cpp\r\n@@ -99,13 +99,13 @@ LockData& GetLockData() {\r\n     // its subclasses must have implicitly-defined destructors.\r\n     static LockData& lock_data = *new LockData();\r\n     return lock_data;\r\n }\r\n \r\n namespace {\r\n-void potential_deadlock_detected(const LockPair& mismatch, const LockStack& s1, const LockStack& s2, const CLockLocation& lock_location)\r\n+void potential_deadlock_detected(const LockPair& mismatch, const LockStack& s1, const LockStack& s2)\r\n {\r\n     LogPrintf(\"POTENTIAL DEADLOCK DETECTED\\n\");\r\n     LogPrintf(\"Previous lock order was:\\n\");\r\n     for (const LockStackItem& i : s1) {\r\n         if (i.first == mismatch.first) {\r\n             LogPrintf(\" (1)\"); /* Continued */\r\n@@ -127,13 +127,13 @@ void potential_deadlock_detected(const LockPair& mismatch, const LockStack& s1,\r\n             LogPrintf(\" (2)\"); /* Continued */\r\n             mutex_b = i.second.Name();\r\n         }\r\n         LogPrintf(\" %s\\n\", i.second.ToString());\r\n     }\r\n     if (g_debug_lockorder_abort) {\r\n-        tfm::format(std::cerr, \"Assertion failed: detected inconsistent lock order for %s, details in debug log.\\n\", lock_location.ToString());\r\n+        tfm::format(std::cerr, \"Assertion failed: detected inconsistent lock order for %s, details in debug log.\\n\", s2.back().second.ToString());\r\n         abort();\r\n     }\r\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\r\n }\r\n \r\n void push_lock(void* c, const CLockLocation& locklocation)\r\n@@ -152,13 +152,13 @@ void push_lock(void* c, const CLockLocation& locklocation)\r\n             continue;\r\n         lockdata.lockorders.emplace(p1, lock_stack);\r\n \r\n         const LockPair p2 = std::make_pair(c, i.first);\r\n         lockdata.invlockorders.insert(p2);\r\n         if (lockdata.lockorders.count(p2))\r\n-            potential_deadlock_detected(p1, lockdata.lockorders[p2], lockdata.lockorders[p1], locklocation);\r\n+            potential_deadlock_detected(p1, lockdata.lockorders[p2], lockdata.lockorders[p1]);\r\n     }\r\n }\r\n \r\n void pop_lock()\r\n {\r\n     LockData& lockdata = GetLockData();\r\n```\r\n</details>",
      "created_at" : "2020-06-25T09:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-649407194",
      "id" : 649407194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTQwNzE5NA==",
      "updated_at" : "2020-06-25T09:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649407194",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated fdd1d7718596d1dbbb5fddf254151be84ed1c8dd -> 0ecff9dd3418e8c18fa423ba53e9cab1df8be553 ([pr19353.01](https://github.com/hebasto/bitcoin/commits/pr19353.01) -> [pr19353.02](https://github.com/hebasto/bitcoin/commits/pr19353.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19353.01..pr19353.02)):\r\n\r\n- addressed @vasild's [comment](https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-649407194):\r\n> Feel free to simplify as follows, there is no need to pass the lock location as an additional argument to `potential_deadlock_detected()` because it is always the last element in the second stack `s2`\r\n",
      "created_at" : "2020-06-25T18:39:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-649751147",
      "id" : 649751147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTc1MTE0Nw==",
      "updated_at" : "2020-06-25T18:39:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649751147",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake Mind looking into this PR?",
      "created_at" : "2020-07-05T20:13:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-653933674",
      "id" : 653933674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzkzMzY3NA==",
      "updated_at" : "2020-07-05T20:13:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653933674",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0ecff9dd3418e8c18fa423ba53e9cab1df8be553",
      "created_at" : "2020-07-15T18:53:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19353#issuecomment-658942027",
      "id" : 658942027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODk0MjAyNw==",
      "updated_at" : "2020-07-15T18:53:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658942027",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
