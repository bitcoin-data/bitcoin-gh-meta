[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445898004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445898004"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems to fail on gcc 4.8:\r\n\r\n```\r\nlibtool: compile:  /usr/bin/ccache g++ -m32 -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I./obj -I./secp256k1/include -DBUILD_BITCOIN_INTERNAL -I/home/travis/build/bitcoin/bitcoin/depends/i686-pc-linux-gnu/share/../include/ -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_FILE_OFFSET_BITS=64 -fstack-reuse=none -Wstack-protector -fstack-protector-all -pipe -O2 -fno-extended-identifiers -fvisibility=hidden -c consensus/merkle.cpp  -fPIC -DPIC -o consensus/.libs/libbitcoinconsensus_la-merkle.o\r\n\r\nIn file included from ./serialize.h:25:0,\r\n\r\n                 from ./script/script.h:11,\r\n\r\n                 from ./primitives/transaction.h:11,\r\n\r\n                 from ./primitives/block.h:9,\r\n\r\n                 from ./consensus/merkle.h:10,\r\n\r\n                 from consensus/merkle.cpp:5:\r\n\r\n./span.h:21:42: error: missing binary operator before token \"(\"\r\n\r\n #if defined(__clang__) && __has_attribute(lifetimebound)\r\n\r\n                                          ^",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-25T23:49:53Z",
      "diff_hunk" : "@@ -18,6 +18,12 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__) && __has_attribute(lifetimebound)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445898004",
      "id" : 445898004,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODAwNA==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 21,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 4,
      "pull_request_review_id" : 437931851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-25T23:49:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445898004",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445902464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445902464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 397e5eda38144147330163e7a51413ac01d1d6f5\r\n\r\nIt looks like std::span has no move constructor (https://en.cppreference.com/w/cpp/container/span/span), so shouldn't we do the same?",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-26T00:06:06Z",
      "diff_hunk" : "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445902464",
      "id" : 445902464,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjQ2NA==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 68,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 21,
      "pull_request_review_id" : 437936987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-26T00:07:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445902464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445926227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445926227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, will break this up into nested if's.",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-26T01:46:42Z",
      "diff_hunk" : "@@ -18,6 +18,12 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__) && __has_attribute(lifetimebound)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445926227",
      "id" : 445926227,
      "in_reply_to_id" : 445898004,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyNjIyNw==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 21,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 4,
      "pull_request_review_id" : 437964963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-26T01:46:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445926227",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445928813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445928813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm. I'm seeing conflicting info on this.\r\n\r\nAccording to the (official?) revision 7 draft, the move constructor was removed in r6. See here: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0122r7.pdf\r\n\r\n If we were to follow that, I believe we would drop our fun rvalue ctor.\r\n\r\nI'm not sure what draft version cppreference is referencing, but I believe it must be an old one.\r\n\r\nlibc++ for example has implemented r7: https://reviews.llvm.org/D49338.\r\n\r\nWill explore more.",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-26T01:57:38Z",
      "diff_hunk" : "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445928813",
      "id" : 445928813,
      "in_reply_to_id" : 445902464,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyODgxMw==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 68,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 21,
      "pull_request_review_id" : 437967991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-26T01:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445928813",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The compile time warning will go away (just like the ASSERT_IF_DEBUG) if we upgrade to std::span, but it seems fine to have additional safeguards in place in the meantime.\r\n\r\nSince clang has already has it implemented, presumably libc++ will ship with this attribute (or keyword) wired up once the standard is finished.",
      "created_at" : "2020-06-26T02:02:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-649906809",
      "id" : 649906809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19382",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTkwNjgwOQ==",
      "updated_at" : "2020-06-26T02:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649906809",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-06-26T07:18:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-650020632",
      "id" : 650020632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19382",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDAyMDYzMg==",
      "updated_at" : "2020-06-26T07:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650020632",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446131251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446131251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> libc++ for example has implemented r7: https://reviews.llvm.org/D49338.\r\n\r\nlooking at the source code, it shows they are using `= default`, no?\r\n\r\nhttps://github.com/llvm/llvm-project/blame/6fafde0387229d6656faee41100b73615343819a/libcxx/include/span#L70",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-26T11:38:01Z",
      "diff_hunk" : "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446131251",
      "id" : 446131251,
      "in_reply_to_id" : 445902464,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzMTI1MQ==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 68,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 21,
      "pull_request_review_id" : 438224855,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-26T11:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446131251",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446332852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446332852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Yes, but they also don't have a universal reference constructor like we do.\r\n\r\nThe problem is that return values are passed through a move constructor if they exist, before copy constructors. See [here](https://en.cppreference.com/w/cpp/language/return) under \"Automatic move from local variables and parameters\".\r\n\r\nBecause the default move constructor is removed by adding the default constructor/assignment operator, our return values are passed through our universal constructor as rvalues. That's really not a problem except that we want to minimize what's going through that constructor so that we can apply the lifetimebound attribute to it.\r\n\r\n( Bonus TIL: apparently c++17 does away with this return value path altogether when possible: \"_If expression is a prvalue, the result object is initialized directly by that expression. This does not involve a copy or move constructor when the types match_\" )\r\n\r\nSo there are 2 possible solutions for us (if you're willing to accept that there's something to be solved)\r\n\r\n1. remove the default ctor/assignment operator as I've done here, thus enabling a trivial move constructor for return values to pass through\r\n2. remove our universal reference constructor and replace it with something less greedy\r\n\r\nYour question made me look up the current c++20 draft spec, where I noticed that the universal reference constructor has been removed in a newish revision. So what's on cppreference is actually stale.\r\n\r\nBut that gives us an easy answer to the question above, we should just update our implementation to match the latest draft spec. I'm going to close this and open a new PR with that approach, since it's sufficiently different from what's here.",
      "commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "created_at" : "2020-06-26T18:03:18Z",
      "diff_hunk" : "@@ -61,12 +67,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446332852",
      "id" : 446332852,
      "in_reply_to_id" : 445902464,
      "line" : 68,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMzMjg1Mg==",
      "original_commit_id" : "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "original_line" : 68,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 21,
      "pull_request_review_id" : 438494052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19382",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-26T18:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446332852",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
