{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "MyPy was added in #18210, allowing for static type checking of type hints in our testing framework.  However, there is still some work to be done before we can take advantage of these new capabilities. ð \r\n\r\nRight now, `lint-python.sh` runs MyPy with the `--ignore-imports` flag.  This is done primarily to ignore the lack of type hinting for `zmq`, but it hides many errors in our own code too.\r\n\r\nTo begin to see what's needed, first run `mypy test/functional`.  You'll see two sets of errors.  One complains about `Skipping analyzing 'zmq'`.  This one can be ignored for now by changing the identified `import zmq` lines to `import zmq # type: ignore`.  \r\n\r\nThe other states that it `Cannot find implementation or library stub for module named 'data'`.  Remember that for a second.\r\n\r\nNow **go into** `test/functional/test_framework` and run `mypy mininode.py`.  Observe two more `Cannot find implementation or library stub for module` errors, now for `test_framework.messages` and `test_framework.util`.\r\n\r\nWhat's happening here is that MyPy is failing to handle importing our `test_framework` package.  We'll need to do a few things to fix this.\r\n\r\n- [ ] MYPYPATH and/or mypy_path\r\n    - Using either the environment variable MYPYPATH or the config file option `mypy_path` we need to tell MyPy where to find our `test_framework` package.\r\n  * <https://mypy.readthedocs.io/en/stable/running_mypy.html#finding-imports>\r\n- [ ] Stub Files\r\n  * We need to create stub files (ending in `.pyi`) for the modules in `test_framework`\r\n  * <https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-type-hints-for-third-party-library>\r\n  * <https://mypy.readthedocs.io/en/stable/stubs.html#stub-files>\r\n  * This can be made much easier with [stubgen](https://mypy.readthedocs.io/en/stable/stubgen.html), and possibly [MonkeyType](https://monkeytype.readthedocs.io/en/latest/index.html) or [PyAnnotate](https://github.com/dropbox/pyannotate)\r\n- [ ] Remove --ignore-missing-imports and add `# type: ignore` to `import zmq`\r\n  * `--ignore-missing-imports` simply hides too many errors.\r\n\r\n#### Resources \r\n\r\n* <https://github.com/python/mypy/issues/4542>\r\n* <https://mypy.readthedocs.io/en/stable/existing_code.html>\r\n\r\n#### Important Notes\r\n\r\nOur minimum supported python version is 3.5, so any changes must be compatible.  In particular this means that we must use type comments, as opposed to type hinting, in variables that aren't function parameters. (i.e. `foo # type: int` as opposed to `foo: int`). This will complicate the use of MonkeyType, as it doesn't support type comments. It may be useful to make a scripted diff between type comments and type hints.\r\n\r\n#### Useful skills:\r\n\r\nMyPy experience\r\n\r\n#### Want to work on this issue?\r\n\r\nFor guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request.\r\n",
   "closed_at" : "2021-11-03T11:42:43Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 16,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389/comments",
   "created_at" : "2020-06-26T20:09:50Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19389",
   "id" : 646486341,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "c2e0c6",
         "default" : true,
         "description" : null,
         "id" : 349312277,
         "name" : "good first issue",
         "node_id" : "MDU6TGFiZWwzNDkzMTIyNzc=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/good%20first%20issue"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2NDY0ODYzNDE=",
   "number" : 19389,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389/timeline",
   "title" : "MyPy, Next Steps",
   "updated_at" : "2021-11-03T11:42:43Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19389",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/5553787?v=4",
      "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
      "followers_url" : "https://api.github.com/users/troygiorshev/followers",
      "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/troygiorshev",
      "id" : 5553787,
      "login" : "troygiorshev",
      "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
      "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
      "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
      "repos_url" : "https://api.github.com/users/troygiorshev/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/troygiorshev"
   }
}
