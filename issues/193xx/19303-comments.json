[
   {
      "author_association" : "MEMBER",
      "body" : "From IRC [discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-18.html) on 2020-06-18:\r\n> \\<sipa\\> recursive mutexes are evil\r\n> \\<sipa\\> there is probably a place for them, like goto\r\n> \\<sipa\\> but almost always, they just lead to badly designed abstractions\r\n> \\<sipa\\> a clear design should have code that operates outside the critical section, and code that operates inside\r\n> \\<sipa\\> but not code that works in both\r\n> \\<gwillen\\> my impression is that the usual better approach is to have Foo() which calls Foo_locked(), and callers who already hold the mutex can call the latter directly\r\n> \\<sipa\\> indeed",
      "created_at" : "2020-06-18T08:42:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-645872981",
      "id" : 645872981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTg3Mjk4MQ==",
      "updated_at" : "2020-06-18T08:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645872981",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @JeremyRubin @sipa @gwillen @luke-jr @ajtowns ",
      "created_at" : "2020-06-18T08:59:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-645882772",
      "id" : 645882772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTg4Mjc3Mg==",
      "updated_at" : "2020-06-18T08:59:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645882772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "+0.5 concept ACK for this as a low-priority janitorial project, since it can make code easier to reason about. I wouldn't prioritize working on this over working on user-visible bugfixes and improvements. I wouldn't even prioritize this over similar cleanups like removing cases of gui blocking https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-631334738. But it is better to do this than not to do this.",
      "created_at" : "2020-06-18T13:26:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646015996",
      "id" : 646015996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjAxNTk5Ng==",
      "updated_at" : "2020-06-18T13:26:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646015996",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't mind trivial to review changes that are obviously correct and only replace `RecursiveMutex` with `Mutex` like commit 1a9ef1d398dd14728b6bc67a89139cdf827c9753. More invasive refactors are hard to prioritize due to the conflicts they cause with non-refactoring changes.",
      "created_at" : "2020-06-18T14:43:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646065223",
      "id" : 646065223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjA2NTIyMw==",
      "updated_at" : "2020-06-18T14:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646065223",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't mind trivial to review changes that are obviously correct and only replace `RecursiveMutex` with `Mutex` like commit [1a9ef1d](https://github.com/bitcoin/bitcoin/commit/1a9ef1d398dd14728b6bc67a89139cdf827c9753). More invasive refactors are hard to prioritize due to the conflicts they cause with non-refactoring changes.\r\n\r\nIt is assumed that there will be no non-refactoring changes (e.g., #19306).",
      "created_at" : "2020-06-18T14:50:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646069723",
      "id" : 646069723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjA2OTcyMw==",
      "updated_at" : "2020-06-18T14:50:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646069723",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense, provided the actual goal is \"make locking logic easier to follow\" rather than \"remove RecurviseMutex\" -- if removing RecursiveMutex makes the code/reasoning more complex, it's not a good idea. (The `if (mempool_locked)` stuff in #19306 seems more complex, for instance)",
      "created_at" : "2020-06-20T07:21:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646956780",
      "id" : 646956780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Njk1Njc4MA==",
      "updated_at" : "2020-06-20T07:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646956780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns \r\n> Makes sense, provided the actual goal is \"make locking logic easier to follow\" rather than \"remove RecurviseMutex\"...\r\n\r\nSure! The final goal _is_ to \"make locking logic easier to follow\". Btw, I've started this work while reasoning about issues like #17397.\r\n\r\n> ... if removing RecursiveMutex makes the code/reasoning more complex, it's not a good idea.\r\n\r\nI think the opposite. Adding simple wrappers to differentiate functions by mutex locking condition does _not_ make the code/reasoning more complex. This refactoring just _reveals_ the actual code comlexity.\r\n\r\n> The `if (mempool_locked)` stuff in #19306 seems more complex, for instance\r\n\r\nYes, I've used this stuff in 72f7486b5ebe96762c5d5a68849c61e58c812ffd and 21787abedd7a0808c0175a0b1d795df97fd3b970 as a quick-and-dirty solution to fix broken tests.\r\n\r\n",
      "created_at" : "2020-06-20T12:21:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-646987750",
      "id" : 646987750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Njk4Nzc1MA==",
      "updated_at" : "2020-06-20T12:21:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646987750",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A shortlist of remaining class members recursive mutexes at 2fa7344aa9bbce8069ebd6bef5f6a22f0b7c5c56:\r\n\r\n- [ ] `BanMan::m_cs_banned` in `banman.h` -- #24097\r\n\r\n- [ ] `CConnman::m_nodes_mutex` in `net.h`\r\n\r\n- [ ] `TxRelay::m_bloom_filter_mutex` in `net_processing.cpp`\r\n\r\n- [ ] `TxRelay::m_tx_inventory_mutex` in `net_processing.cpp` -- #24125\r\n\r\n- [ ] `BlockManager::cs_LastBlockFile` in `node/blockstorage.h`\r\n\r\n- [ ] `FillableSigningProvider::cs_KeyStore` in `script/signingprovider.h`\r\n\r\n- [ ] `ArgsManager::cs_args` in `util/system.h`\r\n\r\n- [ ] `DescriptorScriptPubKeyMan::cs_desc_man` in `wallet/scriptpubkeyman.h`",
      "created_at" : "2023-04-18T15:13:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1513337566",
      "id" : 1513337566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aM7Le",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513337566/reactions"
      },
      "updated_at" : "2023-04-18T15:13:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513337566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This may also fix the false-positive https://github.com/bitcoin/bitcoin/blob/2fa7344aa9bbce8069ebd6bef5f6a22f0b7c5c56/test/sanitizer_suppressions/tsan#L15-L16",
      "created_at" : "2023-04-18T15:35:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1513375299",
      "id" : 1513375299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aNEZD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513375299/reactions"
      },
      "updated_at" : "2023-04-18T15:35:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513375299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This may also fix the false-positive\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/2fa7344aa9bbce8069ebd6bef5f6a22f0b7c5c56/test/sanitizer_suppressions/tsan#L15-L16\r\n\r\nFWIW, I'm not able to reproduce \"deadlock\" TSan warning using clang-14 starting from 9996b1806a189a9632c9f5023489eb47bf87ca05 when depends can be compiled. Last time the warning was observed for clang-10.",
      "created_at" : "2023-04-19T00:27:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1513950602",
      "id" : 1513950602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aPQ2K",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513950602/reactions"
      },
      "updated_at" : "2023-04-19T00:27:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1513950602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You should be able to see it in the tsan CI task or with libc++ locally?",
      "created_at" : "2023-04-19T07:27:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1514259259",
      "id" : 1514259259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aQcM7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514259259/reactions"
      },
      "updated_at" : "2023-04-19T07:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514259259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You should be able to see it in the tsan CI task or with libc++ locally?\r\n\r\nI don't currently reproduce on x86_64 with master +:\r\n```diff\r\n--- a/test/sanitizer_suppressions/tsan\r\n+++ b/test/sanitizer_suppressions/tsan\r\n@@ -12,9 +12,6 @@ race:DatabaseBatch\r\n race:zmq::*\r\n race:bitcoin-qt\r\n \r\n-# deadlock (TODO fix)\r\n-deadlock:Chainstate::ConnectTip\r\n-\r\n # Intentional deadlock in tests\r\n deadlock:sync_tests::potential_deadlock_detected\r\n```\r\n\r\nand\r\n\r\n```bash\r\ntime FILE_ENV=\"./ci/test/00_setup_env_native_tsan.sh\" ./ci/test_run_all.sh\r\n...\r\nwallet_upgradewallet.py --legacy-wallet                | â Skipped | 0 s\r\n\r\nALL                                                    | â Passed  | 3484 s (accumulated) \r\nRuntime: 990 s\r\n\r\nStop and remove CI container by ID\r\nd726f7b16435da0d5d35171cc39363cd85be5b22d6fbbfffc28983691d99854b\r\n\r\nreal\t46m40.485s\r\n```",
      "created_at" : "2023-04-19T08:54:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1514372323",
      "id" : 1514372323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aQ3zj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514372323/reactions"
      },
      "updated_at" : "2023-04-19T08:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514372323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You should be able to see it in the tsan CI task or with libc++ locally?\r\n\r\nThe TSan CI job is pretty stable @ 760651214cd205b91804bc1c40a31c614d3aa26c, and removing the `deadlock:Chainstate::ConnectTip` suppression does not cause any failure.\r\n\r\nMy guess is that this is a byproduct of clang upgrade.",
      "created_at" : "2023-04-19T13:34:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1514746298",
      "id" : 1514746298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aSTG6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514746298/reactions"
      },
      "updated_at" : "2023-04-19T13:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514746298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Steps to reproduce on a fresh install of Fedora 38:\r\n\r\n* `dnf install gcc-c++ libtool make autoconf automake python3 clang llvm lbzip2 patch xz cmake     curl wget htop git vim ccache libevent-devel boost-devel   -y && git clone https://github.com/bitcoin/bitcoin.git  --depth=1 ./bitcoin-core && cd bitcoin-core`\r\n* `./autogen.sh &&  ./configure CC=clang CXX=clang++ --with-sanitizers=thread  && make -j $(nproc)`\r\n* `TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\" ./test/functional/p2p_segwit.py`\r\n\r\nWith diff:\r\n\r\n```diff\r\ndiff --git a/test/sanitizer_suppressions/tsan b/test/sanitizer_suppressions/tsan\r\nindex d331991..dec1ca5 100644\r\n--- a/test/sanitizer_suppressions/tsan\r\n+++ b/test/sanitizer_suppressions/tsan\r\n@@ -13,7 +13,6 @@ race:zmq::*\r\n race:bitcoin-qt\r\n \r\n # deadlock (TODO fix)\r\n-deadlock:Chainstate::ConnectTip\r\n \r\n # Intentional deadlock in tests\r\n deadlock:sync_tests::potential_deadlock_detected\r\n",
      "created_at" : "2023-04-19T15:20:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1514926359",
      "id" : 1514926359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aS_EX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514926359/reactions"
      },
      "updated_at" : "2023-04-19T15:20:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514926359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<details><summary>tsan</summary>\r\n\r\n```\r\n node0 stderr ==================\r\nWARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=13857)\r\n  Cycle in lock order graph: M0 (0x7b6400005068) => M1 (0x7b440001ffa8) => M2 (0x7b5400003ee0) => M0\r\n\r\n  Mutex M1 acquired here while holding mutex M0 in thread T10:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x2ded49) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:811:10 (bitcoind+0x2ded49)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/mutex:120:17 (bitcoind+0x2ded49)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x2ded49)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x2ded49)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) src/./sync.h:183:13 (bitcoind+0x2ded49)\r\n    #7 (anonymous namespace)::PeerManagerImpl::RelayTransaction(uint256 const&, uint256 const&) src/net_processing.cpp:2044:9 (bitcoind+0x2ded49)\r\n    #8 (anonymous namespace)::PeerManagerImpl::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l>>, std::atomic<bool> const&) src/net_processing.cpp:4050:13 (bitcoind+0x2e85b1) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp:4917:9 (bitcoind+0x2f2159) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp (bitcoind+0x2fcbcf) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #11 CConnman::ThreadMessageHandler() src/net.cpp:2066:49 (bitcoind+0x2afaad) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #12 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #13 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #14 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #15 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #16 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #17 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #18 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #19 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #20 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #21 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #22 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #23 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Mutex M0 previously acquired by the same thread here:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x2dec75) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 std::mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_mutex.h:113:17 (bitcoind+0x2dec75)\r\n    #3 std::unique_lock<std::mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x2dec75)\r\n    #4 UniqueLock<AnnotatedMixin<std::mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x2dec75)\r\n    #5 UniqueLock<AnnotatedMixin<std::mutex>>::UniqueLock(AnnotatedMixin<std::mutex>&, char const*, char const*, int, bool) src/./sync.h:183:13 (bitcoind+0x2dec75)\r\n    #6 (anonymous namespace)::PeerManagerImpl::RelayTransaction(uint256 const&, uint256 const&) src/net_processing.cpp:2038:5 (bitcoind+0x2dec75)\r\n    #7 (anonymous namespace)::PeerManagerImpl::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l>>, std::atomic<bool> const&) src/net_processing.cpp:4050:13 (bitcoind+0x2e85b1) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #8 (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp:4917:9 (bitcoind+0x2f2159) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp (bitcoind+0x2fcbcf) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 CConnman::ThreadMessageHandler() src/net.cpp:2066:49 (bitcoind+0x2afaad) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #11 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #12 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #13 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #14 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #15 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #16 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #17 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #18 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #19 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #20 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #21 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #22 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Mutex M2 acquired here while holding mutex M1 in thread T10:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x648bfe) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:811:10 (bitcoind+0x648bfe)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/mutex:120:17 (bitcoind+0x648bfe)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x648bfe)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x648bfe)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) src/./sync.h:183:13 (bitcoind+0x648bfe)\r\n    #7 CTxMemPool::info(GenTxid const&) const src/txmempool.cpp:842:5 (bitcoind+0x648bfe)\r\n    #8 (anonymous namespace)::PeerManagerImpl::SendMessages(CNode*) src/net_processing.cpp:5677:49 (bitcoind+0x2f8a30) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::SendMessages(CNode*) src/net_processing.cpp (bitcoind+0x2fcc53) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 CConnman::ThreadMessageHandler() src/net.cpp:2071:28 (bitcoind+0x2afb26) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #11 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #12 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #13 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #14 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #15 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #16 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #17 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #18 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #19 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #20 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #21 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #22 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Mutex M1 previously acquired by the same thread here:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x26349f) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:811:10 (bitcoind+0x26349f)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/mutex:120:17 (bitcoind+0x26349f)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x26349f)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x26349f)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::UniqueLock(AnnotatedMixin<std::recursive_mutex>&, char const*, char const*, int, bool) src/./sync.h:183:13 (bitcoind+0x26349f)\r\n    #7 (anonymous namespace)::PeerManagerImpl::SendMessages(CNode*) src/net_processing.cpp:5598:17 (bitcoind+0x2f7f7a) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #8 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::SendMessages(CNode*) src/net_processing.cpp (bitcoind+0x2fcc53) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 CConnman::ThreadMessageHandler() src/net.cpp:2071:28 (bitcoind+0x2afb26) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #11 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #12 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #13 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #14 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #15 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #16 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #17 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #18 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #19 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #21 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Mutex M0 acquired here while holding mutex M2 in thread T10:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x2fd6fb) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 std::mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_mutex.h:113:17 (bitcoind+0x2fd6fb)\r\n    #3 std::unique_lock<std::mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x2fd6fb)\r\n    #4 UniqueLock<AnnotatedMixin<std::mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x2fd6fb)\r\n    #5 UniqueLock<AnnotatedMixin<std::mutex>>::UniqueLock(AnnotatedMixin<std::mutex>&, char const*, char const*, int, bool) src/./sync.h:183:13 (bitcoind+0x2fd6fb)\r\n    #6 (anonymous namespace)::PeerManagerImpl::GetPeerRef(long) const src/net_processing.cpp:1549:5 (bitcoind+0x2fd6fb)\r\n    #7 (anonymous namespace)::PeerManagerImpl::MaybePunishNodeForBlock(long, BlockValidationState const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) src/net_processing.cpp:1653:18 (bitcoind+0x2fd6fb)\r\n    #8 (anonymous namespace)::PeerManagerImpl::BlockChecked(CBlock const&, BlockValidationState const&) src/net_processing.cpp:1977:13 (bitcoind+0x2dbe68) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 CMainSignals::BlockChecked(CBlock const&, BlockValidationState const&)::$_0::operator()(CValidationInterface&) const src/validationinterface.cpp:256:75 (bitcoind+0x6e4cda) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 void MainSignalsImpl::Iterate<CMainSignals::BlockChecked(CBlock const&, BlockValidationState const&)::$_0>(CMainSignals::BlockChecked(CBlock const&, BlockValidationState const&)::$_0&&) src/validationinterface.cpp:88:17 (bitcoind+0x6e4cda)\r\n    #11 CMainSignals::BlockChecked(CBlock const&, BlockValidationState const&) src/validationinterface.cpp:256:18 (bitcoind+0x6e4cda)\r\n    #12 Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) src/validation.cpp:2838:26 (bitcoind+0x6888fb) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #13 Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) src/validation.cpp:3028:18 (bitcoind+0x68c310) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #14 Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) src/validation.cpp:3163:22 (bitcoind+0x68cf7d) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #15 ChainstateManager::ProcessNewBlock(std::shared_ptr<CBlock const> const&, bool, bool, bool*) src/validation.cpp:4041:29 (bitcoind+0x69b758) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #16 (anonymous namespace)::PeerManagerImpl::ProcessBlock(CNode&, std::shared_ptr<CBlock const> const&, bool, bool) src/net_processing.cpp:3154:16 (bitcoind+0x319cf3) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #17 (anonymous namespace)::PeerManagerImpl::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l>>, std::atomic<bool> const&) src/net_processing.cpp:4558:9 (bitcoind+0x2ea5f7) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #18 (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp:4917:9 (bitcoind+0x2f2159) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #19 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp (bitcoind+0x2fcbcf) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #20 CConnman::ThreadMessageHandler() src/net.cpp:2066:49 (bitcoind+0x2afaad) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #21 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #22 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #23 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #24 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #25 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #26 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #27 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #28 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #29 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #30 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #31 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #32 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Mutex M2 previously acquired by the same thread here:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:749:12 (bitcoind+0x68cdc3) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/x86_64-redhat-linux/bits/gthr-default.h:811:10 (bitcoind+0x68cdc3)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/mutex:120:17 (bitcoind+0x68cdc3)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/unique_lock.h:141:17 (bitcoind+0x68cdc3)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::Enter(char const*, char const*, int) src/./sync.h:164:15 (bitcoind+0x68cdc3)\r\n    #6 UniqueLock<AnnotatedMixin<std::recursive_mutex>>::UniqueLock(AnnotatedMixin<std::recursive_mutex>*, char const*, char const*, int, bool) src/./sync.h:194:13 (bitcoind+0x68cdc3)\r\n    #7 Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) src/validation.cpp:3144:13 (bitcoind+0x68cdc3)\r\n    #8 ChainstateManager::ProcessNewBlock(std::shared_ptr<CBlock const> const&, bool, bool, bool*) src/validation.cpp:4041:29 (bitcoind+0x69b758) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #9 (anonymous namespace)::PeerManagerImpl::ProcessBlock(CNode&, std::shared_ptr<CBlock const> const&, bool, bool) src/net_processing.cpp:3154:16 (bitcoind+0x319cf3) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #10 (anonymous namespace)::PeerManagerImpl::ProcessMessage(CNode&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, CDataStream&, std::chrono::duration<long, std::ratio<1l, 1000000l>>, std::atomic<bool> const&) src/net_processing.cpp:4558:9 (bitcoind+0x2ea5f7) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #11 (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp:4917:9 (bitcoind+0x2f2159) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #12 non-virtual thunk to (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::atomic<bool>&) src/net_processing.cpp (bitcoind+0x2fcbcf) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #13 CConnman::ThreadMessageHandler() src/net.cpp:2066:49 (bitcoind+0x2afaad) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #14 CConnman::Start(CScheduler&, CConnman::Options const&)::$_5::operator()() const src/net.cpp:2408:80 (bitcoind+0x2bfb63) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #15 void std::__invoke_impl<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(std::__invoke_other, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfb63)\r\n    #16 std::enable_if<is_invocable_r_v<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>, void>::type std::__invoke_r<void, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&>(CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:111:2 (bitcoind+0x2bfb63)\r\n    #17 std::_Function_handler<void (), CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2bfb63)\r\n    #18 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x9559d9) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #19 util::TraceThread(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>) src/util/thread.cpp:21:9 (bitcoind+0x9559d9)\r\n    #20 void std::__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(std::__invoke_other, void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2bfa82) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #21 std::__invoke_result<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>::type std::__invoke<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>(void (*&&)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*&&, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5&&) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x2bfa82)\r\n    #22 void std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x2bfa82)\r\n    #23 std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>::operator()() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x2bfa82)\r\n    #24 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char>>, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5>>>::_M_run() /usr/bin/../lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x2bfa82)\r\n    #25 <null> <null> (libstdc++.so.6+0xe31e2) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n\r\n  Thread T10 'b-msghand' (tid=13884, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x1a74cf) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State>>, void (*)()) <null> (libstdc++.so.6+0xe32b8) (BuildId: 2d0c1f85de7705003be97eedfc8dde2c8826e5c7)\r\n    #2 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1850:24 (bitcoind+0x2594da) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #3 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:222:43 (bitcoind+0x231fb0) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be)\r\n    #4 main src/bitcoind.cpp:266:13 (bitcoind+0x231fb0)\r\n\r\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/bitcoin-core/src/bitcoind+0x1a91af) (BuildId: 1db3d87bed913bc0e4da6baf5872efb9abf647be) in pthread_mutex_lock\r\n================== \r\n```\r\n\r\n</details>",
      "created_at" : "2023-04-19T15:22:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1514928912",
      "id" : 1514928912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585aS_sQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514928912/reactions"
      },
      "updated_at" : "2023-04-19T15:22:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514928912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Steps to reproduce on a fresh install of Fedora 38:\r\n\r\n[Can](https://github.com/bitcoin/bitcoin/pull/18963#issuecomment-1550945493) be fixed by https://github.com/bitcoin/bitcoin/pull/18963.",
      "created_at" : "2023-05-17T08:08:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303#issuecomment-1550947349",
      "id" : 1550947349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
      "node_id" : "IC_kwDOABII585ccZQV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550947349/reactions"
      },
      "updated_at" : "2023-05-17T08:08:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550947349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
