{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This is a tracking issue for the long-term goal to replace all of the `RecursiveMutex` instances with the `Mutex` ones throughout the code base.\r\n\r\nAnthony Williams (_C++ Concurrency in Action_, 2019, 3.3.3 Recursive locking):\r\n> Most of the time, if you think you want a recursive mutex, you probably need to change your design instead.\r\n\r\nShould be noted, to insure that mutex locking policy has not been changed by accident in non-trivial cases, all of the related code branches must be covered by appropriate lock assertions: `AssertLockHeld()` or `AssertLockNotHeld()`.\r\n\r\nAlso Clang Thread Safety Analysis annotations with [Negative Capabilities](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#negative) are very useful (see #19249) but are not a panacea, of course :)\r\n\r\n---\r\n\r\n- [x] `RecursiveMutex cs_Shutdown` (#19180)\r\n- [x] `RecursiveMutex cs_nTimeOffset` (#19189)\r\n- [x] `RecursiveMutex cs_proxyInfos` (#19190)\r\n- [ ] `RecursiveMutex csPathCached` (#19213)\r\n- [x] `RecursiveMutex cs_warnings` (#19220)\r\n- [ ] `RecursiveMutex CAddrMan::cs` (#19238)\r\n- [ ] `RecursiveMutex BanMan::m_cs_banned`\r\n- [ ] `RecursiveMutex cs_mapLocalHost`\r\n- [ ] `RecursiveMutex CConnman::cs_totalBytesRecv`\r\n- [ ] `RecursiveMutex CConnman::cs_totalBytesSent`\r\n- [ ] `RecursiveMutex CConnman::cs_vOneShots`\r\n- [ ] `RecursiveMutex CConnman::cs_vAddedNodes`\r\n- [ ] `RecursiveMutex CConnman::cs_vNodes`\r\n- [ ] `RecursiveMutex CNode::cs_vSend`\r\n- [ ] `RecursiveMutex CNode::cs_hSocket`\r\n- [ ] `RecursiveMutex CNode::cs_vRecv`\r\n- [ ] `RecursiveMutex CNode::cs_vProcessMsg`\r\n- [ ] `RecursiveMutex CNode::cs_sendProcessing`\r\n- [ ] `RecursiveMutex CNode::cs_SubVer`\r\n- [ ] `RecursiveMutex CNode::cs_inventory`\r\n- [ ] `RecursiveMutex CNode::cs_addrName`\r\n- [ ] `RecursiveMutex CNode::cs_addrLocal`\r\n- [ ] `RecursiveMutex CNode::TxRelay::cs_filter`\r\n- [ ] `RecursiveMutex CNode::TxRelay::cs_tx_inventory`\r\n- [ ] `RecursiveMutex CNode::TxRelay::cs_feeFilter`\r\n- [ ] `RecursiveMutex g_cs_orphans`\r\n- [ ] `RecursiveMutex g_cs_recent_confirmed_transactions`\r\n- [ ] `RecursiveMutex cs_most_recent_block`\r\n- [ ] `RecursiveMutex CBlockPolicyEstimator::m_cs_fee_estimator`\r\n- [ ] `RecursiveMutex cs_rpcWarmup`\r\n- [ ] `RecursiveMutex SingleThreadedSchedulerClient::m_cs_callbacks_pending`\r\n- [ ] `RecursiveMutex FillableSigningProvider::cs_KeyStore`\r\n- [ ] `RecursiveMutex ArgsManager::cs_args`\r\n- [ ] `RecursiveMutex cs_LastBlockFile`\r\n- [ ] `RecursiveMutex CChainState::cs_nBlockSequenceId`\r\n- [ ] `RecursiveMutex CChainState::m_cs_chainstate`\r\n- [ ] `RecursiveMutex cs_db`\r\n- [ ] `RecursiveMutex DescriptorScriptPubKeyMan::cs_desc_man`\r\n- [ ] `RecursiveMutex cs_wallets`\r\n- [ ] `RecursiveMutex CWallet::cs_wallet`\r\n\r\nand\r\n\r\n- [ ] `RecursiveMutex CTxMemPool::cs`\r\n- [ ] `RecursiveMutex cs_main`\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/comments",
   "created_at" : "2020-06-17T13:45:18Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19303",
   "id" : 640455898,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2NDA0NTU4OTg=",
   "number" : 19303,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Replace all of the RecursiveMutex instances with the Mutex ones",
   "updated_at" : "2020-06-17T13:45:18Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19303",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
      "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
      "followers_url" : "https://api.github.com/users/hebasto/followers",
      "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/hebasto",
      "id" : 32963518,
      "login" : "hebasto",
      "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
      "organizations_url" : "https://api.github.com/users/hebasto/orgs",
      "received_events_url" : "https://api.github.com/users/hebasto/received_events",
      "repos_url" : "https://api.github.com/users/hebasto/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/hebasto"
   }
}
