[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19397#discussion_r446542156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446542156"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line is a leftover remnant, will remove.",
      "commit_id" : "45bf9e3ebc0c6aaef9b708bc8975619d09464ce4",
      "created_at" : "2020-06-27T16:21:28Z",
      "diff_hunk" : "@@ -0,0 +1,96 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that nodes resync to the main chain after running invalidateblock,\n+up to the limit of validation.h::MAX_BLOCKS_IN_TRANSIT_PER_PEER.\n+\n+1) Generate N+1 blocks on node0.\n+2) Invalidate a block on both nodes using invalidateblock.\n+3) Generate N blocks on node0.\n+3) Verify if both nodes resync to the shorter chain.\n+\n+This test is performed twice:\n+N = MAX_BLOCKS_IN_TRANSIT_PER_PEER     -> succeeds for both nodes\n+N = MAX_BLOCKS_IN_TRANSIT_PER_PEER + 1 -> node0 succeeds, node1 severely degraded\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.mininode import P2PInterface",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#discussion_r446542156",
      "id" : 446542156,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0MjE1Ng==",
      "original_commit_id" : "8d27e73bc7f3365f5f51eba592d291d3ba37205a",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalidateblock.py",
      "position" : null,
      "pull_request_review_id" : 438708695,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19397",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-27T16:49:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446542156",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Thanks for picking this up, Jon!",
      "created_at" : "2020-06-27T18:11:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#issuecomment-650594428",
      "id" : 650594428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDU5NDQyOA==",
      "updated_at" : "2020-06-27T18:11:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650594428",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept ACK. Thanks for picking this up, Jon!\r\n\r\nThanks, John. The interesting thing is, unlike the PR17335 description, the original issue reported by @sdaftuar still appears to be unresolved.",
      "created_at" : "2020-06-28T08:40:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#issuecomment-650718770",
      "id" : 650718770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDcxODc3MA==",
      "updated_at" : "2020-06-28T08:40:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650718770",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased to add more tests to verify that the non-mining node does catch up to the chain tip on the next coinbase transactions after the first one.",
      "created_at" : "2020-06-29T03:15:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#issuecomment-650880434",
      "id" : 650880434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDg4MDQzNA==",
      "updated_at" : "2020-06-29T03:15:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650880434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for digging into this more, @jonatack . I've run the test with the assert catching removed to reproduce the error. I've attached a combined log (best viewed with `less -r`). Here's what's happening:\r\n\r\nIf we invalidate `MAX_BLOCKS_IN_TRANSIT_PER_PEER + 2` blocks and then regenerate `MAX_BLOCKS_IN_TRANSIT_PER_PEER + 1` blocks on node0, node0 doesn't announce those new blocks to the peer using compact blocks because of this logic in `NewPoWValidBlock()`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1269cab21a9ac32f9ee8adfb9041950756eff3e4/src/net_processing.cpp#L1270-L1272\r\n\r\n(ie the new block isn't as high as a block node0 has previously announced via compact blocks)\r\n\r\nInstead, node0 relies on block inventory sending in `SendMessages()`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1269cab21a9ac32f9ee8adfb9041950756eff3e4/src/net_processing.cpp#L3956-L3971\r\n\r\nWe're generating the blocks on the RPC thread (httpworker.x), but this block inventory relay happens on the MessageHandler thread. The timing windows for those two threads is the reason for the intermittency of this test failing.\r\n\r\nIn my failing case, all 17 blocks are generated while the message handler thread is sleeping. Here's the sleep on the message handler thread:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1269cab21a9ac32f9ee8adfb9041950756eff3e4/src/net.cpp#L2118\r\n\r\nHere it is waking up to send the blocks:\r\n\r\n```\r\nnode0 2020-06-29T14:27:10.231122Z [msghand] SendMessages: sending inv peer=0 hash=3dafa6054777a53fd32abcb6f6eefe67591e93c275d23d07696313efed464ebe \r\nnode0 2020-06-29T14:27:10.231172Z [msghand] sending inv (37 bytes) peer=0 \r\n```\r\nand here is the first of the 17 blocks being generated:\r\n\r\n```\r\ntest  2020-06-29T14:27:10.213000Z TestFramework (INFO):  Generate an alternate chain of 17 blocks on node0 \r\n node0 2020-06-29T14:27:10.214362Z [http] Received a POST request for / from 127.0.0.1:42502 \r\n node0 2020-06-29T14:27:10.214565Z [httpworker.3] ThreadRPCServer method=generatetoaddress user=__cookie__ \r\n node0 2020-06-29T14:27:10.214736Z [httpworker.3] CreateNewBlock(): block weight: 904 txs: 0 fees: 0 sigops 400 \r\n```\r\n\r\n(ie all block generation happens in the 0.1s message handler sleep)\r\n\r\nWhen node0 gets to the logic in `SendMessages()`, it reverts to sending the first `MAX_BLOCKS_IN_TRANSIT_PER_PEER`  by INV instead of by HEADERS:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1269cab21a9ac32f9ee8adfb9041950756eff3e4/src/net_processing.cpp#L3956-L3971\r\n\r\nHere it is in the log:\r\n\r\n```\r\nnode0 2020-06-29T14:27:10.231122Z [msghand] SendMessages: sending inv peer=0 hash=3dafa6054777a53fd32abcb6f6eefe67591e93c275d23d07696313efed464ebe \r\n node0 2020-06-29T14:27:10.231172Z [msghand] sending inv (37 bytes) peer=0 \r\n node1 2020-06-29T14:27:10.231360Z [msghand] received: inv (37 bytes) peer=0 \r\n node1 2020-06-29T14:27:10.231392Z [msghand] got inv: block 3dafa6054777a53fd32abcb6f6eefe67591e93c275d23d07696313efed464ebe  new peer=0 \r\n node1 2020-06-29T14:27:10.231411Z [msghand] sending getheaders (645 bytes) peer=0 \r\n```\r\n\r\nThe next time node0 goes through `SendMessages()`, it sends the final block to announce as a compact block:\r\n\r\n```\r\n node0 2020-06-29T14:27:10.232052Z [msghand] SendMessages sending header-and-ids 7dd48d289ad0eaaae4d0912686d4af94ebf7de371af02adfa78d2b7538ad9615 to peer=0 \r\n node0 2020-06-29T14:27:10.232227Z [msghand] sending cmpctblock (264 bytes) peer=0 \r\n```\r\n\r\nwhich node1 receives:\r\n\r\n```\r\n node1 2020-06-29T14:27:10.233481Z [msghand] received: cmpctblock (264 bytes) peer=0 \r\n```\r\n\r\nI'd expect that to trigger node1 to send a getheaders for that block:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1269cab21a9ac32f9ee8adfb9041950756eff3e4/src/net_processing.cpp#L2956-L2961\r\n\r\nBut it doesn't. node1 doesn't do any processing or requesting for the final block, which is why it never syncs to the same tip as node0. I haven't dug into which logic path node1 takes through the CMPCTBLOCK processing.\r\n\r\nAs the test demonstrates, if node0 then generates and announces another block, then node1 will be able to sync to it.\r\n\r\nI'm not sure what to do with this. It seems like a very limited edge-case, so maybe we can just document it and move on. Perhaps @sdaftuar or @TheBlueMatt have an opinion?\r\n\r\n[pr19397.log](https://github.com/bitcoin/bitcoin/files/4846273/pr19397.log)",
      "created_at" : "2020-06-29T15:39:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#issuecomment-651200239",
      "id" : 651200239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTIwMDIzOQ==",
      "updated_at" : "2020-06-29T15:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651200239",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No ACKs. Closing.",
      "created_at" : "2020-07-23T17:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19397#issuecomment-663128137",
      "id" : 663128137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzEyODEzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T17:15:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663128137",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
