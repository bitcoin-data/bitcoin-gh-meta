{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This does not currently work properly, and will cause GCC to terminate while compiling for Windows. This affects `x86_64-w64-mingw32-g++` 8 through 10. Related upstream issue: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458. \r\n\r\nI've PR'd this separate to #18921, as this doesn't have to wait for us to decide if we want to opt-in to using those flags on other platforms, and is causing build failures.\r\n\r\nWhile doing more testing for #18921, I (and the bot) saw build issues that would terminate GCC:\r\n```bash\r\n  CXX      bitcoind-bitcoind.o\r\nduring RTL pass: final\r\nIn file included from ./logging.h:10,\r\n                 from ./util/system.h:21,\r\n                 from ./init.h:11,\r\n                 from bitcoind.cpp:13:\r\n./tinyformat.h: In static member function 'static int tinyformat::detail::FormatArg::toIntImpl(const void*) [with T = std::__cxx11::basic_string<char>]':\r\n./tinyformat.h:550:9: internal compiler error: in seh_emit_stackalloc, at config/i386/winnt.c:1043\r\n         }\r\n         ^\r\n0x7fa20389609a __libc_start_main\r\n\t../csu/libc-start.c:308\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n{standard input}: Assembler messages:\r\n{standard input}: Error: open SEH entry at end of file (missing .seh_endproc)\r\n```\r\n\r\nHere's a fairly minimal test case, that will cause the issue using `-fstack-clash-protection -O1`:\r\n```cpp\r\n#include <stdexcept>\r\n\r\n// tested with\r\n// x86_64-w64-mingw32-g++ (GCC) 8.3-posix 20190406 (Debian)\r\n// x86_64-w64-mingw32-g++ (GCC) 9.3.0 (macOS)\r\n// x86_64-w64-mingw32-g++ (GCC) 10-posix 20200525 (Debian)\r\n\r\nclass _error: public std::runtime_error {\r\npublic:\r\n    _error(const std::string &what): std::runtime_error(what) {}\r\n};\r\n\r\nvoid crash() {\r\n    throw _error(\"Some crash!\");\r\n}\r\n\r\nint main() {\r\n    crash();\r\n    return 0;\r\n}\r\n```\r\n\r\n```bash\r\nx86_64-w64-mingw32-g++ test.cpp -fstack-clash-protection -O1\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=x86_64-w64-mingw32-g++\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-w64-mingw32/10-posix/lto-wrapper\r\nTarget: x86_64-w64-mingw32\r\nConfigured with: ../../src/configure --build=x86_64-linux-gnu --prefix=/usr --includedir='/usr/include' --mandir='/usr/share/man' --infodir='/usr/share/info' --sysconfdir=/etc --localstatedir=/var --disable-option-checking --disable-silent-rules --libdir='/usr/lib/x86_64-linux-gnu' --libexecdir='/usr/lib/x86_64-linux-gnu' --disable-maintainer-mode --disable-dependency-tracking --prefix=/usr --enable-shared --enable-static --disable-multilib --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --libdir=/usr/lib --enable-libstdcxx-time=yes --with-tune=generic --with-headers=/usr/x86_64-w64-mingw32/include --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libgomp --enable-languages=c,c++,fortran,objc,obj-c++,ada --enable-lto --enable-threads=posix --program-suffix=-posix --program-prefix=x86_64-w64-mingw32- --target=x86_64-w64-mingw32 --with-as=/usr/bin/x86_64-w64-mingw32-as --with-ld=/usr/bin/x86_64-w64-mingw32-ld --enable-libatomic --enable-libstdcxx-filesystem-ts=yes --enable-dependency-tracking\r\nThread model: posix\r\nSupported LTO compression algorithms: zlib\r\ngcc version 10-posix 20200525 (GCC) \r\nCOLLECT_GCC_OPTIONS='-fstack-clash-protection' '-O1' '-v' '-shared-libgcc' '-mtune=generic' '-march=x86-64'\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/cc1plus -quiet -v -D_REENTRANT test.cpp -quiet -dumpbase test.cpp -mtune=generic -march=x86-64 -auxbase test -O1 -version -fstack-clash-protection -o /tmp/ccer6MYu.s\r\nGNU C++14 (GCC) version 10-posix 20200525 (x86_64-w64-mingw32)\r\n\tcompiled by GNU C version 10.1.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP\r\n\r\nGGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072\r\nignoring nonexistent directory \"/usr/lib/gcc/x86_64-w64-mingw32/10-posix/../../../../x86_64-w64-mingw32/sys-include\"\r\n#include \"...\" search starts here:\r\n#include <...> search starts here:\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/include/c++\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/include/c++/x86_64-w64-mingw32\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/include/c++/backward\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/include\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/include-fixed\r\n /usr/lib/gcc/x86_64-w64-mingw32/10-posix/../../../../x86_64-w64-mingw32/include\r\nEnd of search list.\r\nGNU C++14 (GCC) version 10-posix 20200525 (x86_64-w64-mingw32)\r\n\tcompiled by GNU C version 10.1.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP\r\n\r\nGGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072\r\nCompiler executable checksum: c42c71f75c7bf48c403bd1b5d143d4a1\r\nduring RTL pass: final\r\ntest.cpp: In function 'int main()':\r\ntest.cpp:17:1: internal compiler error: in seh_emit_stackalloc, at config/i386/winnt.c:1043\r\n   17 | }\r\n      | ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n```",
   "closed_at" : "2020-06-19T10:11:41Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19318/comments",
   "created_at" : "2020-06-18T13:41:39Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19318/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19318",
   "id" : 641218055,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19318/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDM2NDgxOTc3",
   "number" : 19318,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19318.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19318",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19318.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19318"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "build: disable -stack-clash-protection on Windows",
   "updated_at" : "2020-06-19T10:11:41Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19318",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
