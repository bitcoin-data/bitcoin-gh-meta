[
   {
      "author_association" : "MEMBER",
      "body" : "This change is not correct.\nVC is correct that the vector subscript is out of range, but in this case that is what we want, because we're trying to serialize the entire array.\n",
      "created_at" : "2014-05-28T07:41:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44374685",
      "id" : 44374685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzc0Njg1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44374685/reactions"
      },
      "updated_at" : "2014-05-28T08:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44374685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/34cb1fc5d6c7293b5c135b85c3dd3668e05ac2b8 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n4. The test suite fails on either Linux i386 or Win32\n5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n\nIf you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-05-28T07:57:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44375878",
      "id" : 44375878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzc1ODc4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44375878/reactions"
      },
      "updated_at" : "2014-05-28T07:57:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44375878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Shouldn't the correct fix be to still use &compr[compr.size()-1] while change CFlatData to use inclusive upper bound?\n\nBy definition compr[compr.size()] is a out of bound read even though it may not cause noticeable errors in certain implementations.\n",
      "created_at" : "2014-05-28T09:35:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44384055",
      "id" : 44384055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzg0MDU1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44384055/reactions"
      },
      "updated_at" : "2014-05-28T09:35:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44384055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7006155?v=4",
         "events_url" : "https://api.github.com/users/haowang1013/events{/privacy}",
         "followers_url" : "https://api.github.com/users/haowang1013/followers",
         "following_url" : "https://api.github.com/users/haowang1013/following{/other_user}",
         "gists_url" : "https://api.github.com/users/haowang1013/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/haowang1013",
         "id" : 7006155,
         "login" : "haowang1013",
         "node_id" : "MDQ6VXNlcjcwMDYxNTU=",
         "organizations_url" : "https://api.github.com/users/haowang1013/orgs",
         "received_events_url" : "https://api.github.com/users/haowang1013/received_events",
         "repos_url" : "https://api.github.com/users/haowang1013/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/haowang1013/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/haowang1013/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/haowang1013"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Inclusive upper bound is incredibly rare in computer science. Would be extremely confusing. It could be considered to pass a pointer and a size though.\n\nNote that _taking the address of_ compr[compr.size()] is not an out-of-bounds access in itself. The memory is never accessed.\n",
      "created_at" : "2014-05-28T09:49:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44385318",
      "id" : 44385318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzg1MzE4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44385318/reactions"
      },
      "updated_at" : "2014-05-28T09:49:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44385318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would using compr.end() work? It returns an iterator pointing to the same address as &compr[compr.size()].\n",
      "created_at" : "2014-05-28T09:52:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44385536",
      "id" : 44385536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzg1NTM2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44385536/reactions"
      },
      "updated_at" : "2014-05-28T09:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44385536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Good point, I think compr.end() works the best in terms of satisfying the runtime as well as increasing readability.\n\nI personally don't have preference between inclusive and exclusive upper bounds, none of them is more confusing than the other :)\n",
      "created_at" : "2014-05-28T10:02:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44386372",
      "id" : 44386372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzg2Mzcy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44386372/reactions"
      },
      "updated_at" : "2014-05-28T10:02:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44386372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7006155?v=4",
         "events_url" : "https://api.github.com/users/haowang1013/events{/privacy}",
         "followers_url" : "https://api.github.com/users/haowang1013/followers",
         "following_url" : "https://api.github.com/users/haowang1013/following{/other_user}",
         "gists_url" : "https://api.github.com/users/haowang1013/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/haowang1013",
         "id" : 7006155,
         "login" : "haowang1013",
         "node_id" : "MDQ6VXNlcjcwMDYxNTU=",
         "organizations_url" : "https://api.github.com/users/haowang1013/orgs",
         "received_events_url" : "https://api.github.com/users/haowang1013/received_events",
         "repos_url" : "https://api.github.com/users/haowang1013/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/haowang1013/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/haowang1013/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/haowang1013"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The foremost problem with inclusive upper bounds is that they also require a record/type size. An exclusive upper bound is unambiguously the top of the address range encompassing the objects.\n",
      "created_at" : "2014-05-28T10:26:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44388298",
      "id" : 44388298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0Mzg4Mjk4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44388298/reactions"
      },
      "updated_at" : "2014-05-28T10:27:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44388298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Using .end() makes sense here. But you'd still need something like `&(*compr.begin())` and `&(*compr.end())` to go from a vector random access iterator to a pointer. That may trigger yet another warning or may even fail in some cases if extra debug checking is compiled in.\n\nSeemingly, getting the beginning and end pointer of a vector is not trivial to do in a way that is guaranteed to be portable and guaranteed to be working for empty vectors.\n\nSee also http://stackoverflow.com/a/1339767/216357 which introduces `begin_ptr` and `end_ptr` functions.\n",
      "created_at" : "2014-05-29T07:03:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44500568",
      "id" : 44500568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTAwNTY4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44500568/reactions"
      },
      "updated_at" : "2014-05-29T10:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44500568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ok, i will try!\n",
      "created_at" : "2014-05-29T10:12:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44517699",
      "id" : 44517699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTE3Njk5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44517699/reactions"
      },
      "updated_at" : "2014-05-29T10:12:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44517699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7669610?v=4",
         "events_url" : "https://api.github.com/users/LongShao007/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LongShao007/followers",
         "following_url" : "https://api.github.com/users/LongShao007/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LongShao007/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LongShao007",
         "id" : 7669610,
         "login" : "LongShao007",
         "node_id" : "MDQ6VXNlcjc2Njk2MTA=",
         "organizations_url" : "https://api.github.com/users/LongShao007/orgs",
         "received_events_url" : "https://api.github.com/users/LongShao007/received_events",
         "repos_url" : "https://api.github.com/users/LongShao007/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LongShao007/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LongShao007/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LongShao007"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not use pointer arithmetic?  This would prevent all warning messages, produce the same results as it currently is, and look purposeful (since it is).\n\n```\ns << CFlatData(&compr[0], (&compr[0]) + compr.size());\n```\n",
      "created_at" : "2014-05-30T02:45:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44609588",
      "id" : 44609588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NjA5NTg4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44609588/reactions"
      },
      "updated_at" : "2014-05-30T02:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44609588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1155895?v=4",
         "events_url" : "https://api.github.com/users/brandondahler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brandondahler/followers",
         "following_url" : "https://api.github.com/users/brandondahler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brandondahler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brandondahler",
         "id" : 1155895,
         "login" : "brandondahler",
         "node_id" : "MDQ6VXNlcjExNTU4OTU=",
         "organizations_url" : "https://api.github.com/users/brandondahler/orgs",
         "received_events_url" : "https://api.github.com/users/brandondahler/received_events",
         "repos_url" : "https://api.github.com/users/brandondahler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brandondahler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brandondahler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brandondahler"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brandondahler Did you check the link I gave? `&compr[0]` won't work portably for empty vectors (you're _still_ referencing out of bounds in that case). That's why I referred to the stackoverflow topic which defines the following, which I think makes sense:\n\n``` c++\ntemplate <class T, class TAl>\ninline T* begin_ptr(std::vector<T,TAl>& v)\n{return  v.empty() ? NULL : &v[0];}\n\ntemplate <class T, class TAl>\ninline const T* begin_ptr(const std::vector<T,TAl>& v)\n{return  v.empty() ? NULL : &v[0];}\n\ntemplate <class T, class TAl>\ninline T* end_ptr(std::vector<T,TAl>& v)\n{return v.empty() ? NULL : (begin_ptr(v) + v.size());} \n\ntemplate <class T, class TAl>\ninline const T* end_ptr(const std::vector<T,TAl>& v)\n{return v.empty() ? NULL : (begin_ptr(v) + v.size());}\n```\n",
      "created_at" : "2014-05-30T06:36:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4239#issuecomment-44619412",
      "id" : 44619412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4239",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NjE5NDEy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44619412/reactions"
      },
      "updated_at" : "2014-05-30T06:36:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44619412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
