[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "![github4133](https://cloud.githubusercontent.com/assets/549484/3070325/1f30688c-e2a8-11e3-8781-d0b54764991e.png)\n",
      "created_at" : "2014-05-23T18:29:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44044817",
      "id" : 44044817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDQ0ODE3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44044817/reactions"
      },
      "updated_at" : "2014-05-23T18:29:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44044817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Relates to issue #4133 \n",
      "created_at" : "2014-05-23T18:31:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44045185",
      "id" : 44045185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDQ1MTg1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44045185/reactions"
      },
      "updated_at" : "2014-05-23T18:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44045185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Would it be complicated to add a 'Disconnect' and 'Ban' option?  Either buttons or right-click menu?\n",
      "created_at" : "2014-05-24T05:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078483",
      "id" : 44078483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDc4NDgz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078483/reactions"
      },
      "updated_at" : "2014-05-24T05:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/93665?v=4",
         "events_url" : "https://api.github.com/users/wtogami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wtogami/followers",
         "following_url" : "https://api.github.com/users/wtogami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wtogami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wtogami",
         "id" : 93665,
         "login" : "wtogami",
         "node_id" : "MDQ6VXNlcjkzNjY1",
         "organizations_url" : "https://api.github.com/users/wtogami/orgs",
         "received_events_url" : "https://api.github.com/users/wtogami/received_events",
         "repos_url" : "https://api.github.com/users/wtogami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wtogami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wtogami"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@wtogami I think I'd be able to do that.  I imagine that such a function should be also added as an RPC call to keep the CLI and GUI capabilities the same?\n",
      "created_at" : "2014-05-24T06:07:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078933",
      "id" : 44078933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDc4OTMz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078933/reactions"
      },
      "updated_at" : "2014-05-24T06:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44078933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RPC too sounds like a great idea.  Would be helpful in debugging certain things.\n\nbannode, unbannode, disconnectnode?\n\nThe parameter could be a domain name but in the case of banning it's resolved and only the IP address is stored.\n\nFor Tor nodes I'm not sure how to handle it.  You can't ban but disconnect would be possible.\n",
      "created_at" : "2014-05-24T06:24:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44079189",
      "id" : 44079189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDc5MTg5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44079189/reactions"
      },
      "updated_at" : "2014-05-24T06:24:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44079189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/93665?v=4",
         "events_url" : "https://api.github.com/users/wtogami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/wtogami/followers",
         "following_url" : "https://api.github.com/users/wtogami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/wtogami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/wtogami",
         "id" : 93665,
         "login" : "wtogami",
         "node_id" : "MDQ6VXNlcjkzNjY1",
         "organizations_url" : "https://api.github.com/users/wtogami/orgs",
         "received_events_url" : "https://api.github.com/users/wtogami/received_events",
         "repos_url" : "https://api.github.com/users/wtogami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/wtogami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/wtogami"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025379"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: Can you keep alphabetical ordering (where possible) of includes, classes etc. throughout your pull please :). Talking about just the file headers (header of .h and .cpp)...\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:32:42Z",
      "diff_hunk" : "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025379",
      "id" : 13025379,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzc5",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025385"
         }
      },
      "author_association" : "NONE",
      "body" : "Isn't there such a function somewhere already or could we use this in other places? Seems like a common task.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:35:07Z",
      "diff_hunk" : "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025385",
      "id" : 13025385,
      "line" : 754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzg1",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/guiutil.cpp",
      "position" : 12,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025385/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025390"
         }
      },
      "author_association" : "NONE",
      "body" : "Can you remove the space after the unit, this often causes trouble during translation, if there is a space at the end.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:37:50Z",
      "diff_hunk" : "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)\n+{\n+    QString str;\n+    int days = secs / 86400;\n+    int hours = (secs % 86400) / 3600;\n+    int mins = (secs % 3600) / 60;\n+    int seconds = secs % 60;\n+\n+    if (days)\n+        str.append(QString(QObject::tr(\"%1 d \")).arg(days));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025390",
      "id" : 13025390,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Mzkw",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/qt/guiutil.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025390/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025421"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: Add a newline after guiutil.h as main and util are core headers.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:51:14Z",
      "diff_hunk" : "@@ -6,7 +6,10 @@\n #include \"ui_rpcconsole.h\"\n \n #include \"clientmodel.h\"\n+#include \"peertablemodel.h\"\n #include \"guiutil.h\"\n+#include \"main.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025421",
      "id" : 13025421,
      "line" : 12,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDIx",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025424"
         }
      },
      "author_association" : "NONE",
      "body" : "Ping time is not seconds IMHO, or?\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:53:15Z",
      "diff_hunk" : "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025424",
      "id" : 13025424,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDI0",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 184,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025427"
         }
      },
      "author_association" : "NONE",
      "body" : "Nit: Can you exclude HTML tags from translations please.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T08:53:51Z",
      "diff_hunk" : "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025427",
      "id" : 13025427,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NDI3",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Pretty cool addition :), nice job!\n",
      "created_at" : "2014-05-24T08:55:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44081742",
      "id" : 44081742,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgxNzQy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44081742/reactions"
      },
      "updated_at" : "2014-05-24T08:55:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44081742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks very good!\n\nI think adding Disconnect/Ban functionality would be useful, but let's not do it in this pull request. That functionality would indeed also have to be available on RPC (and the core) first, and that's orthogonal to this nice GUI improvement. Let's aim to merge this first.\n",
      "created_at" : "2014-05-24T09:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082300",
      "id" : 44082300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgyMzAw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082300/reactions"
      },
      "updated_at" : "2014-05-24T09:30:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is the part about alphabetical ordering mentioned anywhere in the coding style guides? If not, it should be, as otherwise it's not realistic to expect people to do it.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T09:28:31Z",
      "diff_hunk" : "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025539",
      "id" : 13025539,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NTM5",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025539/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025633"
         }
      },
      "author_association" : "NONE",
      "body" : "Most likely it's not, but I remeber a big cleanup pull by someone and we liked it :).\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T09:30:26Z",
      "diff_hunk" : "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025633",
      "id" : 13025633,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NjMz",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025633/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the process on pushing additional patches in response to feedback?  If I push an amended commit, it's hard for you to see what changed.  But if I commit new patches on top, the history will be a bit ugly when merged.\n\nI guess I could make new commits on top for now, and then squash it later once it's ready for merge?\n",
      "created_at" : "2014-05-24T09:36:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082461",
      "id" : 44082461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgyNDYx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082461/reactions"
      },
      "updated_at" : "2014-05-24T09:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@ashleyholman For such a \"big\" patch it's nice to add commits until you got core dev ACKs and can then squash into one.\n",
      "created_at" : "2014-05-24T09:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082492",
      "id" : 44082492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgyNDky",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082492/reactions"
      },
      "updated_at" : "2014-05-24T09:38:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44082492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025728"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This should hopefully be fixed in my new commit.  Note that I have followed the format of some of the other .cpp files where they include their own .h first on a separate line, then group the others alphabetically.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T10:01:53Z",
      "diff_hunk" : "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"peertablemodel.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025728",
      "id" : 13025728,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzI4",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/clientmodel.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025728/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "RPCConsole::setTrafficGraphRange() had similar code which I replaced with this new util function.  There is similar code in BitcoinGUI::setNumBlocks() but it formats the string differently and uses less precision.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T10:04:26Z",
      "diff_hunk" : "@@ -750,4 +750,24 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025734",
      "id" : 13025734,
      "line" : 754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzM0",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/qt/guiutil.cpp",
      "position" : 12,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025756"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wasn't able to test this because I'm yet to come across a peer that has a non-zero dPingTime.  I'm not sure why this is, as I thought most nodes should support that by now.  It gets calculated like this: (((double)nPingUsecTime) / 1e6), so I interpreted that to mean its the number of seconds as a floating point.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T10:11:59Z",
      "diff_hunk" : "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025756",
      "id" : 13025756,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1NzU2",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 184,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025756/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pings aren't sent automatically (yet), so the pingtime will be zero unless you explicitly request pings (using the `ping` RPC command).\n\nIf you run together with #2784, you'll pretty much always see ping times.\n\nBy the way, I think ping times (in that case) are more useful to show on the main screen table than startingheight (as that can be very outdated information).\n",
      "created_at" : "2014-05-24T10:16:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44083193",
      "id" : 44083193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzMTkz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083193/reactions"
      },
      "updated_at" : "2014-05-24T10:16:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "dPingTime is in seconds, indeed.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-24T10:19:16Z",
      "diff_hunk" : "@@ -492,3 +508,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(tr(\"<b>Node Detail</b>\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(QString(\"%1\").arg(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(stats->dPingTime));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025775",
      "id" : 13025775,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDI1Nzc1",
      "original_commit_id" : "9a1da58eda0a14aa9853ba19e6eb78c360f14dbc",
      "original_line" : null,
      "original_position" : 184,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025775/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13025775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is what it's like with #2784 merged and the Height column replaced with Ping.\n\n![guipeersping](https://cloud.githubusercontent.com/assets/549484/3074563/694ee9f0-e345-11e3-8fba-1793df99b5e9.png)\n\nI've pushed this to my gui_peers_ping branch, but won't include it in this pull unless #2784 is getting merged.\n",
      "created_at" : "2014-05-24T13:16:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44086808",
      "id" : 44086808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDg2ODA4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44086808/reactions"
      },
      "updated_at" : "2014-05-24T13:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44086808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I did a bit of testing with this applied, works well for me; a few nits:\n- 'Ban Score' shows as 'Unavailable' for many peers. This seems confusing. It may be better to just report '0' here if the data structure for this isn't created yet.\n- When enlarging the debug window vertically, the line distance between the information entries increases. This looks a bit weird, but I suppose it's a matter of taste. I usually prefer adding a stretch at the end to avoid this.\n- Services: Maybe show the flags expanded as text here, so [NODE_]NETWORK instead of '1'. Although this leaves the question of how to show unknown service bits, maybe UNKNOWN[bit].\n- I think translators will have problems translating the word 'Subversion'. Maybe 'Sub-version'? Or just 'Version'?\n",
      "created_at" : "2014-05-25T16:23:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44138813",
      "id" : 44138813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTM4ODEz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44138813/reactions"
      },
      "updated_at" : "2014-05-25T16:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44138813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "BIP14 repurposed strSubVer as \"user agent\".\n",
      "created_at" : "2014-05-25T16:29:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44139038",
      "id" : 44139038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTM5MDM4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44139038/reactions"
      },
      "updated_at" : "2014-05-25T16:29:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44139038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The ban score being \"Unavailable\" is because there's an extra lock required to get that info.  The rest of the stats require cs_vNodes, but getting the nMisbehaviour requires cs_main.  When TRY_LOCK on cs_main fails, I show \"Unavailable\".  I could show it as 0, but then when it eventually succeeds on the lock, the value will change.  If you click on another peer and then click back on the same peer, it would say 0 again until it can refetch the nMisbehaviour, because I'm only caching nMisbehaviour for the currently selected node.\n\nAs for how to make this meaningful to the user, perhaps I could just leave it blank if it can't be accessed.  Or, it could say \"fetching...\" or something like that until it gets the value?\n",
      "created_at" : "2014-05-26T00:52:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150459",
      "id" : 44150459,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTUwNDU5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150459/reactions"
      },
      "updated_at" : "2014-05-26T00:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "displaying \"fetching...\" and periodically trying to get the information sounds like a good solution.\n",
      "created_at" : "2014-05-26T01:08:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150837",
      "id" : 44150837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTUwODM3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150837/reactions"
      },
      "updated_at" : "2014-05-26T01:08:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44150837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushed an update:\n- Change \"Unavailable\" to \"Fetching...\" when nMisbehaviour can't be read.  If you wait some seconds, you should eventually see the ban score.  It's worse when the lock is busy, such as when synchronising your chain.\n- Added a stretch element to fix up the vertical resize behaviour\n- The \"Services\" field is now formatted verbosely, eg. \"NETWORK & UNKNOWN[2] & ...\" (only scans the last 8 bits for now, as its probably overkill to check all 64 when they're not standardised yet).\n- Renamed \"Subversion\" to \"User Agent\"\n",
      "created_at" : "2014-05-26T02:05:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44152389",
      "id" : 44152389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTUyMzg5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44152389/reactions"
      },
      "updated_at" : "2014-05-26T02:05:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44152389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ashleyholman seems like good choices to me\n",
      "created_at" : "2014-05-26T07:07:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44162747",
      "id" : 44162747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTYyNzQ3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44162747/reactions"
      },
      "updated_at" : "2014-05-26T07:07:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44162747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13119124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13119124"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there a specific reason to collect the ban score here, instead of in PeerTableModel's refreshPeers()? To me it seems like this would be the responsibility of the model, not the view.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-28T07:51:56Z",
      "diff_hunk" : "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13119124",
      "id" : 13119124,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTE5MTI0",
      "original_commit_id" : "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "original_line" : null,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13119124/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13119124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176329"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently the state stats, which contains the ban score, is only being retrieved for the one peer thats selected (if one is selected).  The model is not aware of which one is selected, so refreshPeers() would have to get the CStateStats for every peer and store them as it does with the CNodeStats records, which I will happily do if that's cleaner.  The return type of PeerTableModel::getNodeStats() would need to change in that case, so that it returns both the CNodeStats and CNodeStateStats.  How would I best define a type for that?\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-29T11:03:01Z",
      "diff_hunk" : "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176329",
      "id" : 13176329,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTc2MzI5",
      "original_commit_id" : "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "original_line" : null,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176329/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176387"
         }
      },
      "author_association" : "NONE",
      "body" : "You could pass two references instead of using the one return type?\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-29T11:06:00Z",
      "diff_hunk" : "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176387",
      "id" : 13176387,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTc2Mzg3",
      "original_commit_id" : "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "original_line" : null,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176387/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13176387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13227585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13227585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think retrieving all the data is refreshPeers is cleanest. You could define a data structure for the model that contains both a CNodeStats and a CNodeStateStats or use a std::pair if lazy :) \n\nUnless you think this has a large impact on performance, but I don't think so, it is only a little bit extra data that gets copied.\n\nAlternatively: add a function getNodeStateStats(id) to the PeerTableModel that retrieves this data and returns a CNodeStateStats, then just move the code and call it from here. All the code to access core data structures happens from the model then, and that's good enough for me.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-30T13:10:26Z",
      "diff_hunk" : "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13227585",
      "id" : 13227585,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjI3NTg1",
      "original_commit_id" : "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "original_line" : null,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13227585/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13227585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13259591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13259591"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj: my latest patch moves it into refreshPeers()\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-05-31T05:58:10Z",
      "diff_hunk" : "@@ -492,3 +509,159 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStateStats.nMisbehavior = -1;\n+\n+    const CNodeStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodeid = stats->nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nLastSend);\n+        if (detailNodeStats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nLastRecv);\n+        if (detailNodeStats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeStats *stats)\n+{\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nLastSend = stats->nLastSend;\n+    detailNodeStats.nLastRecv = stats->nLastRecv;\n+    detailNodeStats.nTimeConnected = stats->nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats->addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nServices));\n+    ui->peerLastSend->setText(stats->nLastSend ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nLastRecv ?  GUIUtil::formatDurationStr(GetTime() - stats->nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nTimeConnected));\n+    ui->peerPingTime->setText(stats->dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats->dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nVersion));\n+    ui->peerSubversion->setText(QString(stats->cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats->fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nStartingHeight));\n+    ui->peerSyncNode->setText(stats->fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13259591",
      "id" : 13259591,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjU5NTkx",
      "original_commit_id" : "19359911930dc9ec1fc3b4c5468065a9cbc27723",
      "original_line" : null,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13259591/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13259591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This must be a debugging leftover? :)\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-01T08:05:07Z",
      "diff_hunk" : "@@ -492,3 +508,158 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeCombinedStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodestats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodestats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n+        if (detailNodeStats.nodestats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n+        if (detailNodeStats.nodestats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+{\n+    CNodeStats stats = combinedStats->nodestats;\n+\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n+    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n+    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n+    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n+    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n+    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score\n+    CNodeStateStats statestats = combinedStats->statestats;\n+    if (statestats.nMisbehavior >= 0)\n+    {\n+        LogPrintf(\"UPDATING CACHE COS WE GOT A NEW BAN SCORE\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265616",
      "id" : 13265616,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjY1NjE2",
      "original_commit_id" : "cf4196479371f7df9eb1f6924502a02c08eabb0d",
      "original_line" : null,
      "original_position" : 196,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Haha, oops.  Pushed a new commit to remove that.  I will squash all these patches into one commit and sign it once it's ready for merge.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-01T08:11:25Z",
      "diff_hunk" : "@@ -492,3 +508,158 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeCombinedStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodestats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodestats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n+        if (detailNodeStats.nodestats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n+        if (detailNodeStats.nodestats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+{\n+    CNodeStats stats = combinedStats->nodestats;\n+\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n+    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n+    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n+    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n+    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n+    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score\n+    CNodeStateStats statestats = combinedStats->statestats;\n+    if (statestats.nMisbehavior >= 0)\n+    {\n+        LogPrintf(\"UPDATING CACHE COS WE GOT A NEW BAN SCORE\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265632",
      "id" : 13265632,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjY1NjMy",
      "original_commit_id" : "cf4196479371f7df9eb1f6924502a02c08eabb0d",
      "original_line" : null,
      "original_position" : 196,
      "original_start_line" : null,
      "path" : "src/qt/rpcconsole.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265632/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T08:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13265632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK. will merge after squash\n",
      "created_at" : "2014-06-02T14:20:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44842493",
      "id" : 44842493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODQyNDkz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44842493/reactions"
      },
      "updated_at" : "2014-06-02T14:20:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44842493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj There you go.  I avoided rebasing so that my squash can be easily diff'd against the last reviewed commit.  It merges cleanly to master though.\n\nIn regards to signing, should I be doing that, or is that only needed for mainline commits (ie. your merge commit)?  I don't have a PGP identity on any key servers at the moment, but it's something I've been wanting to get set up with.\n",
      "created_at" : "2014-06-02T15:17:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44850115",
      "id" : 44850115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODUwMTE1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44850115/reactions"
      },
      "updated_at" : "2014-06-02T15:17:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44850115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ashleyholman Thanks\n\nRe: signing, I always sign the merge commits, but I think it's useful if contributors sign their uppermost commit as well, so that people can check that it's really the contributor's code that was merged and not something manipulated by a compromised github (for example). Once you have a key set up, you can sign your last commit with:\n\n``` bash\ngit commit --amend --gpg-sign[=<keyid>]\n```\n\nThen just push to github as normal.\n",
      "created_at" : "2014-06-02T16:05:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44856729",
      "id" : 44856729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODU2NzI5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44856729/reactions"
      },
      "updated_at" : "2014-06-02T16:05:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44856729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tested with ipv6?\n",
      "created_at" : "2014-06-02T16:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44858541",
      "id" : 44858541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODU4NTQx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44858541/reactions"
      },
      "updated_at" : "2014-06-02T16:20:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44858541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/895029?v=4",
         "events_url" : "https://api.github.com/users/Azulan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Azulan/followers",
         "following_url" : "https://api.github.com/users/Azulan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Azulan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Azulan",
         "id" : 895029,
         "login" : "Azulan",
         "node_id" : "MDQ6VXNlcjg5NTAyOQ==",
         "organizations_url" : "https://api.github.com/users/Azulan/orgs",
         "received_events_url" : "https://api.github.com/users/Azulan/received_events",
         "repos_url" : "https://api.github.com/users/Azulan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Azulan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Azulan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Azulan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Azulan Yes, if you could test with ipv6 that'd be helpful\n",
      "created_at" : "2014-06-02T20:07:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44884405",
      "id" : 44884405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODg0NDA1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44884405/reactions"
      },
      "updated_at" : "2014-06-02T20:07:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44884405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65f78a111ff52c2212cc0a423662e7a41d1206dd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-06-03T08:44:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44938883",
      "id" : 44938883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0OTM4ODgz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44938883/reactions"
      },
      "updated_at" : "2014-06-03T08:44:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44938883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13329189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13329189"
         }
      },
      "author_association" : "NONE",
      "body" : "What are these?\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T11:25:11Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13329189",
      "id" : 13329189,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzI5MTg5",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13329189/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T11:25:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13329189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330027"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@Diapolo Which lines specifically?  Github is highlighting a lot there so I can't tell which parts you mean.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T11:52:10Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330027",
      "id" : 13330027,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwMDI3",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T11:52:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330112"
         }
      },
      "author_association" : "NONE",
      "body" : "Exactly that line `/*@}*/` and at the beginning of the comment :).\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T11:55:19Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330112",
      "id" : 13330112,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwMTEy",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T11:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330414"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@diapolo A doxygen grouping comment\nEdit: see http://www.stack.nl/~dimitri/doxygen/manual/grouping.html\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T12:04:00Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330414",
      "id" : 13330414,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwNDE0",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330414/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T12:04:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330423"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, I'm not sure what the deal is with those, but they are in the other model code that I based this on.\n\n<pre>$ git grep -F '/*@}*/'\nsrc/qt/addresstablemodel.h:    /*@}*/\nsrc/qt/peertablemodel.h:    /*@}*/\nsrc/qt/recentrequeststablemodel.h:    /*@}*/</pre>\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T12:04:18Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330423",
      "id" : 13330423,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzMwNDIz",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T12:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13330423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13339669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13339669"
         }
      },
      "author_association" : "NONE",
      "body" : "the `@name` puts a descriptive name to all the code enclosed between `@{` and `@}` in the doxygen documentation. But I think it has to be `/**@}*/` to be correctly recognized.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T15:13:49Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13339669",
      "id" : 13339669,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzM5NjY5",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13339669/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T15:13:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13339669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13341590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13341590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@leofidus  It appears to work see https://dev.visucore.com/bitcoin/doxygen/class_peer_table_model.html, under Public Member Functions.\n",
      "commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "created_at" : "2014-06-03T15:44:08Z",
      "diff_hunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class PeerTablePriv;\n+class ClientModel;\n+\n+class QTimer;\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13341590",
      "id" : 13341590,
      "line" : 66,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzQxNTkw",
      "original_commit_id" : "65f78a111ff52c2212cc0a423662e7a41d1206dd",
      "original_line" : null,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/qt/peertablemodel.h",
      "position" : 66,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4225",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13341590/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-03T15:44:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13341590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
