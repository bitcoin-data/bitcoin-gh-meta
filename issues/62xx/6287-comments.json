[
   {
      "body" : "This looks very nice and it's great to be able to use such static analyzers with our codebase. Looking forward to see what issues can be uncovered with this.",
      "created_at" : "2015-06-16T10:18:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112374837",
      "id" : 112374837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-16T10:18:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112374837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-06-16T13:46:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112435238",
      "id" : 112435238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-16T13:46:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112435238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Tested building with -Wthread-safety. Warning is generated as expected when commenting out the LOCK() in FinalizeNode()\r\n```\r\nmain.cpp:293:5: warning: calling function 'EraseOrphansFor' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n    EraseOrphansFor(nodeid);\r\n    ^\r\n1 warning generated.\r\n```",
      "created_at" : "2015-06-16T15:12:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112465472",
      "id" : 112465472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-16T15:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112465472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "The other warnings fixed by 2b890dd424b32320be6fc0333e67e2d7c9616065\r\n```\r\n  CXX      libbitcoin_server_a-net.o\r\nnet.cpp:2059:1: warning: mutex 'cs_vSend' is not held on every path through here\r\n      [-Wthread-safety-analysis]\r\n}\r\n^\r\nnet.cpp:2020:26: note: mutex acquired here\r\nvoid CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\r\n                         ^\r\n./threadsafety.h:28:45: note: expanded from macro 'UNLOCK_FUNCTION'\r\n#define UNLOCK_FUNCTION(...) __attribute__((unlock_function(__VA_ARGS__)))\r\n                                            ^\r\n1 warning generated.\r\n```\r\n\r\n```\r\n  CXX      libbitcoin_server_a-rpcmining.o\r\nrpcmining.cpp:463:9: warning: releasing mutex 'cs_main' that was not held\r\n      [-Wthread-safety-analysis]\r\n        LEAVE_CRITICAL_SECTION(cs_main);\r\n        ^\r\n./sync.h:177:9: note: expanded from macro 'LEAVE_CRITICAL_SECTION'\r\n        (cs).unlock();             \\\r\n        ^\r\nrpcmining.cpp:487:5: warning: mutex 'cs_main' is not held on every path through\r\n      here [-Wthread-safety-analysis]\r\n    static CBlockIndex* pindexPrev;\r\n    ^\r\nrpcmining.cpp:479:9: note: mutex acquired here\r\n        ENTER_CRITICAL_SECTION(cs_main);\r\n        ^\r\n./sync.h:172:9: note: expanded from macro 'ENTER_CRITICAL_SECTION'\r\n        (cs).lock();                                          \\\r\n        ^\r\n2 warnings generated.\r\n```\r\n\r\n```\r\n  CXX      libbitcoin_util_a-util.o\r\nutil.cpp:121:9: warning: releasing mutex 'ppmutexOpenSSL[i]' that was not held [-Wthread-safety-analysis]\r\n        LEAVE_CRITICAL_SECTION(*ppmutexOpenSSL[i]);\r\n        ^\r\n./sync.h:177:9: note: expanded from macro 'LEAVE_CRITICAL_SECTION'\r\n        (cs).unlock();             \\\r\n        ^\r\nutil.cpp:123:1: warning: mutex 'ppmutexOpenSSL[i]' is not held on every path through here\r\n      [-Wthread-safety-analysis]\r\n}\r\n^\r\nutil.cpp:119:9: note: mutex acquired here\r\n        ENTER_CRITICAL_SECTION(*ppmutexOpenSSL[i]);\r\n        ^\r\n./sync.h:172:9: note: expanded from macro 'ENTER_CRITICAL_SECTION'\r\n        (cs).lock();                                          \\\r\n        ^\r\n2 warnings generated.\r\n```",
      "created_at" : "2015-06-16T19:00:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112529241",
      "id" : 112529241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-16T19:00:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112529241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "Concept ACK, still need to review in detail.\r\nVery nice to see the static analysis annotations finally used.",
      "created_at" : "2015-06-17T07:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112682441",
      "id" : 112682441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-17T07:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112682441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj There are a few details that aren't quite right, but I didn't want to change too much in this PR until there was some interest. I can take a stab at fixing them up before/after pull, whichever you'd prefer:\r\n\r\n- during analysis, TRY_LOCKs are interpreted as always gaining the lock. I don't think that's much of an issue in practice, since from a static point-of-view there's not much difference. Just need to remember that it won't point out cases where you TRY_LOCK and forget to test the result.\r\n- There's no distinction between a mutex/recursive mutex. I think that's not really an issue either, since clang points out when we're locking a mutex that's already locked (see rpcwallet in 2b890dd)\r\n\r\nFor examples of real usage, see my play tree here: https://github.com/theuni/bitcoin/commits/clang-lock-debug-more. It fleshed out several missing locks already.",
      "created_at" : "2015-06-17T15:47:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-112856793",
      "id" : 112856793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-17T15:47:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112856793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> I think that's not really an issue either, since clang points out when we're locking a mutex that's already locked (see rpcwallet in 2b890dd)\r\n\r\nCould this be an issue if a lock is held multiple times along one code path, but only once along another code path? If you then remove the locking (according to clang's warning) in one place it may result in the lock not held anymore at all in one of the cases.\r\n",
      "created_at" : "2015-06-19T14:56:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-113537880",
      "id" : 113537880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-19T14:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113537880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I've looked deeper into this, here's a good sample of some snags we hit:\r\n```c++\r\nstatic RecursiveMutex cs_main;\r\nstatic int myint = 3;\r\nstatic std::vector<int*> GUARDED_BY(cs_main) vec(1,&myint);\r\nint* func2()\r\n{\r\n  LOCK(cs_main);\r\n  return vec[0];\r\n}\r\n\r\nvoid func1() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\r\n{\r\n  func2();\r\n  vec.clear();\r\n}\r\n\r\nint main()\r\n{\r\n    int* unguarded = func2();\r\n    *unguarded = 0;\r\n    LOCK(cs_main);\r\n    func1();\r\n    unguarded = func2();\r\n    return unguarded;\r\n}\r\n```\r\n\r\nThings clang doesn't complain about:\r\n- ```*unguarded = 0``` works without locking cs_main. Unfortunately, we return pointers like that pretty often.\r\n- cs_main is locked twice in the second call to func2().\r\n\r\nIts analysis seems to be entirely within the scope of each function. If you don't lock in func2, it complains about accessing vec, because it doesn't know that it should already be locked. You can tell it that it should assume cs_main is locked by specifying EXCLUSIVE_LOCKS_REQUIRED(cs_main), but then it complains about locking twice.\r\n\r\nAfter going through and marking a few functions/variables, it becomes very clear how it all fits together. Since our mutexes are recursive anyway, the ignored double-locks aren't a problem anyway. If you really want to prevent double-locks (treat as a non-recursive mutex) you can notate the function with EXCLUSIVE_LOCKS_REQUIRED(!cs_main).\r\n\r\nHowever, it does point out functions where we needlessly lock twice. rpcwallet in https://github.com/bitcoin/bitcoin/commit/a794284e61988a226ea39327449be9906a1b5abd is a good example of that. If you have 2 scoped locks in the same function, or if you specify that a lock is required then lock again, it'll warn.\r\n\r\nSo to answer your question: if you remove a lock because it's locked twice in one path, and that leaves another path exposed, it'll warn about the new exposed path.\r\n\r\nThe basic work-flow is:\r\n- add GUARDED_BY(cs_foo) to a variable.\r\n- build. You'll get a slew of new warnings because functions aren't marked.\r\n- go through each warning and add EXCLUSIVE_LOCKS_REQUIRED(cs_foo) to each function where it needs to be locked before entering if that function does not lock first.\r\n- build again. if you have new warnings, it means that we do unlocked calls into the functions that you just notated. Potential bug squashed! Now you need to either lock inside of the called function and remove the _REQUIRED, or leave it and lock first.\r\n\r\nSo the big question is: For this to be useful, tons of functions need to be notated. Would you be ok with that? I'm happy to do the work (i've already done much of it locally), but I'm afraid that it will get pretty noisy. For what it's worth, once the current issues are cleaned up, travis could be set to fail when new problems are detected.",
      "created_at" : "2015-06-23T20:14:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-114629688",
      "id" : 114629688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-23T20:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114629688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I vote for noisy annotations-- locking bugs are NASTY.\r\n",
      "created_at" : "2015-06-23T20:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-114631003",
      "id" : 114631003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-23T20:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114631003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "For anyone wanting to try out the semantics, here's an easy test that simulates our environment and conventions: https://gist.github.com/theuni/f5d6d3db9434ca546422.\r\nCompile with: ```clang++ -std=c++11 -fsyntax-only -Wthread-safety locks.cpp```",
      "created_at" : "2015-06-23T20:41:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-114635652",
      "id" : 114635652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-06-23T20:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114635652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Is this ready for merging? If not, can we get a useful subset in?",
      "created_at" : "2015-07-20T17:26:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-122960774",
      "id" : 122960774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-07-20T17:26:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122960774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yes, this is useful as a starting point.",
      "created_at" : "2015-07-22T22:33:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6287#issuecomment-123891673",
      "id" : 123891673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6287",
      "updated_at" : "2015-07-22T22:33:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/123891673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
