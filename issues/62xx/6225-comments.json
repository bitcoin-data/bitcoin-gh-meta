[
   {
      "body" : "This is actually not thread-safe in theory.\n",
      "created_at" : "2015-06-03T04:29:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108187120",
      "id" : 108187120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T04:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108187120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Is CTransaction thread-safe? :o",
      "created_at" : "2015-06-03T05:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108198377",
      "id" : 108198377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T05:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108198377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Yes. Its hash it computed at creation time, and afterwards it is entirely\nimmutable, so it is trivially safe to use in a multithreaded way. Delaying\nthe computation of the hash may in theory cause problems when two threads\nask the hash simultaneously for the first time, but in practice it is\nlikely fine. I'm surprised it makes a difference for a practical\napplication, though.\n",
      "created_at" : "2015-06-03T05:55:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108202534",
      "id" : 108202534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T05:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108202534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> Delaying the computation of the hash may in theory cause problems when two threads ask the hash simultaneously for the first time, but in practice it is likely fine\r\n\r\nI don't want to gamble on this. Stability, even against obscure race conditions, is much more important than performance.\r\n\r\nIsn't there a way you can rewrite your \"custom RPC\" in a more efficient way without changing CTransaction (eg using MutableTransaction as long as the hash is not needed)?\r\n",
      "created_at" : "2015-06-03T10:31:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108291663",
      "id" : 108291663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T10:36:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108291663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Is there a way to parse a block without using CTransaction for the contents? I'm not aware of any. If thread safety is a concern (do we actually rely on it?), locking some shared mutex in UpdateHash should be sufficient and probably harmless to performance?",
      "created_at" : "2015-06-03T18:32:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108565201",
      "id" : 108565201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T18:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108565201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Not currently. But if there's a use-case for high-speed iteration through blocks without hashing the transactions, maybe that could be added in a way that doesn't conflict with consensus usages.\r\n\r\nThere's something to be said for separating the primitive/consensus data types from what is used in other processing. It is unacceptably risky to change the functioning of a primitive data type to speed up non-consensus data processing. That should be separate.\r\n\r\nLocking/unlocking a mutex can have significant overhead, possibly worse than hashing a few bytes.\r\n",
      "created_at" : "2015-06-03T18:39:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-108568491",
      "id" : 108568491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-03T18:39:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108568491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing this, too risky.",
      "created_at" : "2015-06-05T16:44:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6225#issuecomment-109358765",
      "id" : 109358765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6225",
      "updated_at" : "2015-06-05T16:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109358765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
