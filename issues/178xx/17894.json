{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Avoid accumulating allocated memory in a global state if `LogPrintf` is called when fuzzing.\r\n\r\nThe accumulation takes place via the `m_msgs_before_open` buffering.\r\n\r\nResolved by enabling logging and writing log messages to standard output.\r\n\r\nThis has the added benefit of making the fuzzing operator aware of any log printing caused by fuzzing which is likely to be an anomaly in itself (in the general case).\r\n\r\nThe only fuzzing harness in `master` that I've seen calling `LogPrintf` is `messageheader_deserialize` via the call to `CMessageHeader::IsValid()` which somewhat surprisingly does a `LogPrintf` in the case of `nMessageSize > MAX_SIZE` :)\r\n\r\nBefore:\r\n\r\n```\r\n$ src/test/fuzz/messageheader_deserialize corpus/\r\nâ¦\r\nINFO: libFuzzer disabled leak detection after every mutation.\r\n      Most likely the target function accumulates allocated\r\n      memory in a global state w/o actually leaking it.\r\n      You may try running this binary with -trace_malloc=[12]\r\n      to get a trace of mallocs and frees.\r\n      If LeakSanitizer is enabled in this process it will still\r\n      run on the process shutdown.\r\nâ¦\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n$ src/test/fuzz/messageheader_deserialize corpus/\r\nâ¦\r\n2020-01-07T23:20:34Z CMessageHeader::IsValid(): (@, 4278190080 bytes) nMessageSize > MAX_SIZE\r\nâ¦\r\n```\r\n\r\n**How to test this PR**\r\n\r\n```\r\n$ make distclean\r\n$ ./autogen.sh\r\n$ CC=clang CXX=clang++ ./configure --enable-fuzz \\\r\n      --with-sanitizers=address,fuzzer,undefined\r\n$ make\r\n$ src/test/fuzz/messageheader_deserialize\r\nâ¦\r\n```\r\n",
   "closed_at" : "2020-03-10T08:12:56Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 7,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17894/comments",
   "created_at" : "2020-01-07T23:38:52Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17894/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17894",
   "id" : 546565339,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17894/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzYwMjIwMjAx",
   "number" : 17894,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17894.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17894",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17894.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17894"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "tests: Avoid accumulating allocated memory in a global state if LogPrintf is called when fuzzing",
   "updated_at" : "2020-03-10T08:12:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17894",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
