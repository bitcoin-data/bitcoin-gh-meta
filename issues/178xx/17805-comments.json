[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, use `.format(method)`. Same above.",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-27T23:03:21Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for nrpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    get_datadir_path,\n+    assert_equal,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{\"method\": \"' + method + '\"}', headers)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759336",
      "id" : 361759336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc1OTMzNg==",
      "original_commit_id" : "5450f6fb1def2864af3071f6991955c3cc36e7e1",
      "original_position" : 25,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336886176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759336",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo.",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-27T23:05:48Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for nrpcwhitelistdefault states.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759518",
      "id" : 361759518,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc1OTUxOA==",
      "original_commit_id" : "5450f6fb1def2864af3071f6991955c3cc36e7e1",
      "original_position" : 7,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336886176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759518",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759537"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, sort",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-27T23:05:54Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for nrpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    get_datadir_path,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361759537",
      "id" : 361759537,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc1OTUzNw==",
      "original_commit_id" : "5450f6fb1def2864af3071f6991955c3cc36e7e1",
      "original_position" : 13,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336886176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361759537",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-12-28T01:02:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-569371468",
      "id" : 569371468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2OTM3MTQ2OA==",
      "updated_at" : "2019-12-28T01:02:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569371468",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: os, http and urllib imports above project-level imports with a line between them (look at the other functional tests)",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T18:46:45Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808509",
      "id" : 361808509,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODUwOQ==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 11,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808509",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: comma at EOL so it doesn't need to be touched if adding a method below it",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T18:47:33Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808530",
      "id" : 361808530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODUzMA==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 15,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 14,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"specified\" -- typo here and lines 91 and 94 below",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T18:49:13Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        \"\"\"\n+        node0 specs:\n+        * rpcwhitelistdefault=0\n+        * No Permissions defined\n+        Expected result: Any command for any user should work\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+        \"\"\"\n+        node1 specs:\n+        * rpcwhitelistdefault=0\n+        * Permissions (user1): getbestblockhash\n+        Expected result: Only getbestblockhash for user1 should work, user2 should execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+        \"\"\"\n+        node2 specs:\n+        * rpcwhitelistdefault=1\n+        * No Permissions defined\n+        Expected result: No user should be able to execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 2), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+        \"\"\"\n+        node3 specs:\n+        * rpcwhitelistdefault=1\n+        * Permissions (user1): getbestblockhash\n+        Expected result: user1 should do getbestblockhash and user2 nothing\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 3), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with no specififed permissions\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808599",
      "id" : 361808599,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODU5OQ==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 84,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "remove the extra line at EOF, and insert a line between lines 96 and 98",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T18:50:36Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        \"\"\"\n+        node0 specs:\n+        * rpcwhitelistdefault=0\n+        * No Permissions defined\n+        Expected result: Any command for any user should work\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+        \"\"\"\n+        node1 specs:\n+        * rpcwhitelistdefault=0\n+        * Permissions (user1): getbestblockhash\n+        Expected result: Only getbestblockhash for user1 should work, user2 should execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+        \"\"\"\n+        node2 specs:\n+        * rpcwhitelistdefault=1\n+        * No Permissions defined\n+        Expected result: No user should be able to execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 2), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+        \"\"\"\n+        node3 specs:\n+        * rpcwhitelistdefault=1\n+        * Permissions (user1): getbestblockhash\n+        Expected result: user1 should do getbestblockhash and user2 nothing\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 3), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with no specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[0], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(200, rpccall(self.nodes[0], \"user2\", \"12345\", \"getbestblockhash\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with specified permissions\")\n+        assert_equal(200, rpccall(self.nodes[1], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(403, rpccall(self.nodes[1], \"user1\", \"12345\", \"getblockcount\"))\n+        assert_equal(200, rpccall(self.nodes[1], \"user2\", \"12345\", \"getblockcount\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=1 with no specififed permissions\")\n+        assert_equal(403, rpccall(self.nodes[2], \"user1\", \"12345\", \"getblockcount\"))\n+        assert_equal(403, rpccall(self.nodes[2], \"user2\", \"12345\", \"getblockcount\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=1 with specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[3], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(403, rpccall(self.nodes[3], \"user2\", \"12345\", \"getbestblockhash\"))\n+\n+if __name__ == \"__main__\":\n+    RPCWhitelistDefaultTest().main()\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808648",
      "id" : 361808648,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODY0OA==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 100,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 101,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808648",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808883"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps hoist 200 and 403 to constants like HTTP_OK and HTTP_FORBIDDEN",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T18:57:50Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        \"\"\"\n+        node0 specs:\n+        * rpcwhitelistdefault=0\n+        * No Permissions defined\n+        Expected result: Any command for any user should work\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+        \"\"\"\n+        node1 specs:\n+        * rpcwhitelistdefault=0\n+        * Permissions (user1): getbestblockhash\n+        Expected result: Only getbestblockhash for user1 should work, user2 should execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+        \"\"\"\n+        node2 specs:\n+        * rpcwhitelistdefault=1\n+        * No Permissions defined\n+        Expected result: No user should be able to execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 2), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+        \"\"\"\n+        node3 specs:\n+        * rpcwhitelistdefault=1\n+        * Permissions (user1): getbestblockhash\n+        Expected result: user1 should do getbestblockhash and user2 nothing\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 3), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with no specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[0], \"user1\", \"12345\", \"getbestblockhash\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808883",
      "id" : 361808883,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODg4Mw==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 85,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 86,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps add: `self.setup_clean_chain = False` for clarity",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:00:46Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361808985",
      "id" : 361808985,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwODk4NQ==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 32,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 33,
      "pull_request_review_id" : 336926596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361808985",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think this test should be added to the existing rpc_whitelist.py test with which this test shares the same imports and rpccall code.\r\n\r\nThey are two different options. The test would be to big to test both.",
      "created_at" : "2019-12-28T19:19:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-569444195",
      "id" : 569444195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2OTQ0NDE5NQ==",
      "updated_at" : "2019-12-28T19:19:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569444195",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:20:31Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809720",
      "id" : 361809720,
      "in_reply_to_id" : 361808509,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOTcyMA==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 11,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : null,
      "pull_request_review_id" : 336927524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809720",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809748"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The comma is at the end of every line or am I getting it wrong?",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:21:12Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809748",
      "id" : 361809748,
      "in_reply_to_id" : 361808530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOTc0OA==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 15,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 14,
      "pull_request_review_id" : 336927548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809748",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809806"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The linter cries if there is no new line ant the end of the file. See PEP 8",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:22:48Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        \"\"\"\n+        node0 specs:\n+        * rpcwhitelistdefault=0\n+        * No Permissions defined\n+        Expected result: Any command for any user should work\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+        \"\"\"\n+        node1 specs:\n+        * rpcwhitelistdefault=0\n+        * Permissions (user1): getbestblockhash\n+        Expected result: Only getbestblockhash for user1 should work, user2 should execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+        \"\"\"\n+        node2 specs:\n+        * rpcwhitelistdefault=1\n+        * No Permissions defined\n+        Expected result: No user should be able to execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 2), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+        \"\"\"\n+        node3 specs:\n+        * rpcwhitelistdefault=1\n+        * Permissions (user1): getbestblockhash\n+        Expected result: user1 should do getbestblockhash and user2 nothing\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 3), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with no specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[0], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(200, rpccall(self.nodes[0], \"user2\", \"12345\", \"getbestblockhash\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with specified permissions\")\n+        assert_equal(200, rpccall(self.nodes[1], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(403, rpccall(self.nodes[1], \"user1\", \"12345\", \"getblockcount\"))\n+        assert_equal(200, rpccall(self.nodes[1], \"user2\", \"12345\", \"getblockcount\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=1 with no specififed permissions\")\n+        assert_equal(403, rpccall(self.nodes[2], \"user1\", \"12345\", \"getblockcount\"))\n+        assert_equal(403, rpccall(self.nodes[2], \"user2\", \"12345\", \"getblockcount\"))\n+        self.log.info(\"Testing rpcwhitelistdefault=1 with specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[3], \"user1\", \"12345\", \"getbestblockhash\"))\n+        assert_equal(403, rpccall(self.nodes[3], \"user2\", \"12345\", \"getbestblockhash\"))\n+\n+if __name__ == \"__main__\":\n+    RPCWhitelistDefaultTest().main()\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809806",
      "id" : 361809806,
      "in_reply_to_id" : 361808648,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOTgwNg==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 100,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 101,
      "pull_request_review_id" : 336927589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809806",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809845"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a featrue for another PR. Other tests use the plain codes as well",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:23:38Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+    def setup_chain(self):\n+        super().setup_chain()\n+        \"\"\"\n+        node0 specs:\n+        * rpcwhitelistdefault=0\n+        * No Permissions defined\n+        Expected result: Any command for any user should work\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+        \"\"\"\n+        node1 specs:\n+        * rpcwhitelistdefault=0\n+        * Permissions (user1): getbestblockhash\n+        Expected result: Only getbestblockhash for user1 should work, user2 should execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=0\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+        \"\"\"\n+        node2 specs:\n+        * rpcwhitelistdefault=1\n+        * No Permissions defined\n+        Expected result: No user should be able to execute anything\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 2), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+        \"\"\"\n+        node3 specs:\n+        * rpcwhitelistdefault=1\n+        * Permissions (user1): getbestblockhash\n+        Expected result: user1 should do getbestblockhash and user2 nothing\n+        \"\"\"\n+        with open(os.path.join(get_datadir_path(self.options.tmpdir, 3), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+            f.write(\"rpcwhitelistdefault=1\\n\")\n+            f.write(\"rpcauth=user1:50358aa884c841648e0700b073c32b2e$b73e95fff0748cc0b517859d2ca47d9bac1aa78231f3e48fa9222b612bd2083e\\n\")\n+            f.write(\"rpcauth=user2:6e0499f40b6420da2d6a3baaec1a1268$4c03b56943444ad141e3a2d8389aa22b2ade5b09d6710d5299ade7b2902086f1\\n\")\n+            f.write(\"rpcwhitelist=user1:getbestblockhash\\n\")\n+            # We need to permit the __cookie__ user for the Bitcoin Test Framework\n+            f.write(\"rpcwhitelist=__cookie__:getblockcount,getwalletinfo,importprivkey,getblockchaininfo,submitblock,addnode,getpeerinfo,getbestblockhash,getrawmempool,syncwithvalidationinterfacequeue,stop\\n\")\n+\n+    def run_test(self):\n+        self.log.info(\"Testing rpcwhitelistdefault=0 with no specififed permissions\")\n+        assert_equal(200, rpccall(self.nodes[0], \"user1\", \"12345\", \"getbestblockhash\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809845",
      "id" : 361809845,
      "in_reply_to_id" : 361808883,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOTg0NQ==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 85,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 86,
      "pull_request_review_id" : 336927621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809845",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809871"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It doesn't matter anyway as this isn't a chain related test",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:24:01Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361809871",
      "id" : 361809871,
      "in_reply_to_id" : 361808985,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgwOTg3MQ==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 32,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 33,
      "pull_request_review_id" : 336927637,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361809871",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361810612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361810612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is false by default (see test_framework.py::L96), but most tests set it explicitly even when false. It matters a bit for test speed as it controls whether or not to use the cached data directories for the test setup.",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:42:02Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str\n+)\n+import http.client\n+import urllib.parse\n+\n+def rpccall(node, user, password, method):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{{\"method\": \"{}\"}}'.format(method), headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp.code\n+\n+class RPCWhitelistDefaultTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361810612",
      "id" : 361810612,
      "in_reply_to_id" : 361808985,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgxMDYxMg==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 32,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 33,
      "pull_request_review_id" : 336928179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:42:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361810612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361810642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361810642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Have a look at example_test.py",
      "commit_id" : "a478f6d6cbce3dc37efb38e4146ddfc56e79b18c",
      "created_at" : "2019-12-28T19:42:54Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+A test for rpcwhitelistdefault states.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+import os\n+from test_framework.util import (\n+    assert_equal,\n+    get_datadir_path,\n+    str_to_b64str",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#discussion_r361810642",
      "id" : 361810642,
      "in_reply_to_id" : 361808530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTgxMDY0Mg==",
      "original_commit_id" : "d76a516f30fdb197dfb5e756a9209960e973c6e5",
      "original_position" : 15,
      "path" : "test/functional/rpc_whitelistdefault.py",
      "position" : 14,
      "pull_request_review_id" : 336928200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17805",
      "updated_at" : "2019-12-28T19:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361810642",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I think this test should be added to the existing rpc_whitelist.py test with which this test shares the same imports and rpccall code.\r\n> \r\n> They are two different options. The test would be to big to test both.\r\n\r\nThe tests can be organised into different methods within the same test class and file. Many functional test files are much larger than this one would become. Have a look at the size at p2p_segwit.py, feature_block.py, etc. It may be a bit faster in test run time to group similar tests into the same testfile setup where possible. And otherwise, rpccall could be extracted to a common helper method (if one does not already exist). I could be wrong but this is what I'd try to do. It's up to you.",
      "created_at" : "2019-12-28T19:52:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-569446334",
      "id" : 569446334,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2OTQ0NjMzNA==",
      "updated_at" : "2019-12-28T19:52:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569446334",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Even if the featrue is very similar, they test both two different things. `rpc_whitelist.py` tests permissions, invalid syntaxes, etc.\r\nThis test tests if users can even do something but is not limited to specific permissions",
      "created_at" : "2019-12-28T20:18:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-569448072",
      "id" : 569448072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2OTQ0ODA3Mg==",
      "updated_at" : "2019-12-28T20:18:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569448072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However have you considered to use just one node? Like\r\n\r\nYes but after all I believe this would make the code much messier because I would need to re-implement some functions. This is probably the most cleanest way on how to do it",
      "created_at" : "2019-12-29T23:32:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-569552088",
      "id" : 569552088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2OTU1MjA4OA==",
      "updated_at" : "2019-12-29T23:32:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569552088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16698](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16698.html) (Mempool: rework rebroadcast logic to improve privacy by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-04T00:02:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17805#issuecomment-570734448",
      "id" : 570734448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17805",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDczNDQ0OA==",
      "updated_at" : "2020-01-04T00:02:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570734448",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
