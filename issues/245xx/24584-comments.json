[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828016527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This assumes that `OUTPUT_TYPES` is sorted by age? Maybe add a comment there to ensure this doesn't break?\r\n\r\nAlso, this is the wrong indentation? Maybe run clang-format?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T13:35:04Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+\tfor (const OutputType& type : OUTPUT_TYPES) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828016527",
      "id" : 828016527,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xWoeP",
      "original_commit_id" : "312d9347b3e5e611ab28c1307d73345576dc4d7d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 911639998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T13:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828016527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think an argument against this change is that any privacy leaking tx could very well be a coin-join between two wallets that use different output types. Though, I don't think any such coin-join software exists today, so until then it probably makes sense to use inputs of a single type. \r\n\r\nI agree, until mixed inputs in transactions are more common, this change should improve user privacy.\r\n\r\n> https://github.com/bitcoin/bitcoin/pull/24362#pullrequestreview-909069657 mentions that legacy inputs could preferably be used during low-fee periods to reduce the fees paid by the user. Though, if https://github.com/bitcoin/bitcoin/pull/24362 is merged, then it would probably not be worth it to optimize for fees.\r\n\r\nI prefer this approach over #24362 in order to keep the privacy benefits of matching change output addresses for all address types. I also see this as a small first step, where we can optimize for fees in a later PR if it is deemed useful/worth it. ",
      "created_at" : "2022-03-16T13:59:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069161907",
      "id" : 1069161907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_uh2z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069161907/reactions"
      },
      "updated_at" : "2022-03-16T13:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069161907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828065439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good catch, fixed the formatting! also added a comment re: output_types",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T14:19:48Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+\tfor (const OutputType& type : OUTPUT_TYPES) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828065439",
      "id" : 828065439,
      "in_reply_to_id" : 828016527,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xW0af",
      "original_commit_id" : "312d9347b3e5e611ab28c1307d73345576dc4d7d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 911711048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T14:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828065439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Very exciting, I'm glad you're working on this. I was just discussing this idea with people yesterday.\r\n\r\nA couple comments on the approach described in the OP:\r\n- I noticed that you suggest preferring the spending of older types and compare it to spending newer types preferentially. While I do agree that the old types are the ones we'd want to get rid off rather, I am not sure this would lead to the optimal outcome. I would suggest running coin selection for each of the OutputGroup sets in parallel and then choosing the input set per the waste metric. Due to how the waste metric works, I'd expect this to lead to the older larger output types getting preferentially spent at lower feerates (and in the current feerate environment, usually first). What are your thoughts on that?\r\n- Regarding splitting the OutputGroups: since each OutputGroup will only have one type, you could just get the available set once and subdivide it from there to run the coin selection in parallel. Would that perhaps be easier?\r\n- CoinSelection is pretty fast, with the exception of Knapsack, so running it on subsets of the UTXO pool shouldn't be a huge issue, running it on all subsets in parallel may be even faster than running it on the whole UTXO pool once since the complexity of each subset would be much smaller.\r\n\r\nCeterum censeo Knapsackinem esse delendam.",
      "created_at" : "2022-03-16T14:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069182464",
      "id" : 1069182464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_um4A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069182464/reactions"
      },
      "updated_at" : "2022-03-16T14:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069182464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force pushed to fix clang-formatting and add comments per @MarcoFalke 's suggestion. can be verified with `git range-diff master f900010 fdf1fa5`",
      "created_at" : "2022-03-16T14:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069183242",
      "id" : 1069183242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_unEK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069183242/reactions"
      },
      "updated_at" : "2022-03-16T14:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069183242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828078777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe also mention the places that require it (CreateTransactionInternal), so that when those go away, the comment can go away, too?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T14:31:27Z",
      "diff_hunk" : "@@ -22,6 +22,7 @@ enum class OutputType {\n     BECH32M,\n };\n \n+// Keep output types sorted by age, with older types first",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828078777",
      "id" : 828078777,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584xW3q5",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 25,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/outputtype.h",
      "position" : 4,
      "pull_request_review_id" : 911730230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T18:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828078777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828302619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In b32b52c3e7360ecb30e1a46dfa06669bc4fcd4b3 \"wallet: avoid mixing ouput types in coin selection\"\r\n\r\nThis is not guaranteed to be true. We could have a P2SH multisig and that would be `LEGACY`.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:00:35Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828302619",
      "id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xXuUb",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912059789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:07:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828302619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828330729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "is there a cleaner way to go map a `COutput` to an `OutputType`? adding lots of if/else checks to go from a `TxoutType` to an `OutputType` seems clunky to me",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:36:10Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828330729",
      "id" : 828330729,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX1Lp",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912098744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:36:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828330729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828335217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there any need to map to output type? Why not use `TxoutType` directly?",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:41:36Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828335217",
      "id" : 828335217,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX2Rx",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 911730230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828335217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828337242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is there any need to map to output type? Why not use `TxoutType` directly?\r\n\r\nYes, `P2SH_SEGWIT` is distinct from other P2SH which would be legacy.\r\n\r\n> is there a cleaner way to go map a `COutput` to an `OutputType`? adding lots of if/else checks to go from a `TxoutType` to an `OutputType` seems clunky to me\r\n\r\nI don't think there exists one yet.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:44:03Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828337242",
      "id" : 828337242,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX2xa",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912107577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:44:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828337242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828343513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean multisig P2SH should not be mixed with legacy either? Mapping to `OutputType` can't fix this. In fact it will probably break anyway when the wallet can spend segwit v2 outputs.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T18:51:46Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828343513",
      "id" : 828343513,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xX4TZ",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912116249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T18:51:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828343513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would suggest running coin selection for each of the OutputGroup sets in parallel and then choosing the input set per the waste metric. Due to how the waste metric works, I'd expect this to lead to the older larger output types getting preferentially spent at lower feerates (and in the current feerate environment, usually first). What are your thoughts on that?\r\n\r\nThis makes a lot of sense. By running coin selection on each OutputGroup set you are preserving privacy by avoiding mixing the inputs, but also still choosing the best spend w.r.t to fees. Running them in parallel (as opposed to sequentially) also helps speed things up (which you also mentioned).\r\n\r\nI'll work on refactoring to implement this.\r\n\r\n",
      "created_at" : "2022-03-16T18:52:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1069474564",
      "id" : 1069474564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_vuME",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069474564/reactions"
      },
      "updated_at" : "2022-03-16T18:52:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069474564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828357408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We could perhaps amend `availableCoins` to just return the outputs grouped by type already. E.g. `availableCoins` could be a struct with a vector for each an output type, and a member `all` that returns the four vectors concatenated.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T19:08:56Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;\n+            } else if (type == TxoutType::PUBKEYHASH) {\n+                output_type = OutputType::LEGACY;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828357408",
      "id" : 828357408,
      "line" : 200,
      "node_id" : "PRRC_kwDOABII584xX7sg",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 200,
      "original_position" : 24,
      "original_start_line" : 189,
      "path" : "src/wallet/spend.cpp",
      "position" : 24,
      "pull_request_review_id" : 912136611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 189,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T20:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828357408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828409065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's unlikely that multisig things would actually be mixed with single key things, but I think it would be incorrect to group P2SH with p2sh-segwit. Conceivably, the same multisig could have been p2sh, then upgraded to p2sh-segwit, and then to bech32. In that case, it would still be legacy, p2sh-segwit, and bech32.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-16T20:16:34Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r828409065",
      "id" : 828409065,
      "in_reply_to_id" : 828302619,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII584xYITp",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : 21,
      "pull_request_review_id" : 912209235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 196,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-16T20:16:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/828409065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25685](https://github.com/bitcoin/bitcoin/pull/25685) (wallet: Faster transaction creation by removing pre-set-inputs fetching responsibility from Coin Selection by furszy)\n* [#25659](https://github.com/bitcoin/bitcoin/pull/25659) (wallet: simplify ListCoins implementation by furszy)\n* [#25647](https://github.com/bitcoin/bitcoin/pull/25647) (wallet: return change from SelectionResult by S3RK)\n* [#24814](https://github.com/bitcoin/bitcoin/pull/24814) (refactor: improve complexity of removing preselected coins by rag-hav)\n* [#24699](https://github.com/bitcoin/bitcoin/pull/24699) (wallet: Improve AvailableCoins performance by reducing duplicated operations by achow101)\n* [#23829](https://github.com/bitcoin/bitcoin/pull/23829) (refactor: use braced init for integer literals instead of c style casts by PastaPastaPasta)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-17T19:22:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1071243869",
      "id" : 1071243869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII584_2eJd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071243869/reactions"
      },
      "updated_at" : "2022-07-23T19:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071243869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r830424080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This assumes there is a strict preference for newer UTXO types. Rather, it should try to prefer using UTXOs that are not the user's preferred address type(s).",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-19T01:44:05Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r830424080",
      "id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xf0QQ",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 914956407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-19T01:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830424080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-22T07:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1074807912",
      "id" : 1074807912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585AEERo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074807912/reactions"
      },
      "updated_at" : "2022-03-22T07:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074807912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832436604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the amended approach is now that it would pick the input set with the best waste metric score from all SelectionResults of running coin selection on the separate output types.",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-22T17:22:43Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832436604",
      "id" : 832436604,
      "in_reply_to_id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xnfl8",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 917608420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-22T17:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832436604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832440386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "sorry, forgot to respond to this! yes, rather than rely on a forced ordering of old to new, I'm implementing @Xekyo 's suggestion of running coin selection on each output group and then picking the solution with the best waste metric. If no solution is found, then run coin selection over all coins (current behavior).",
      "commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "created_at" : "2022-03-22T17:26:32Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r832440386",
      "id" : 832440386,
      "in_reply_to_id" : 830424080,
      "line" : 790,
      "node_id" : "PRRC_kwDOABII584xnghC",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 917613804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-22T17:26:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832440386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836366695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done! ",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:20:24Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;\n+            } else if (type == TxoutType::PUBKEYHASH) {\n+                output_type = OutputType::LEGACY;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836366695",
      "id" : 836366695,
      "in_reply_to_id" : 828357408,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2fFn",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 200,
      "original_position" : 24,
      "original_start_line" : 189,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923057173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T12:20:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836366695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836367260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've updated it now to not force an ordering on OutputType.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:21:08Z",
      "diff_hunk" : "@@ -767,10 +783,32 @@ static bool CreateTransactionInternal(\n \n     // Get available coins\n     std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // First, do coin selection on a filtered subset of coins, filtered by OutputType\n+    // Attempt with older output types first (LEGACY > P2SH > BECH32 > BECH32M)\n+    std::optional<SelectionResult> result = [&] {\n+        // This takes advantange of the fact that OUTPUT_TYPES is already sorted by age (LEGACY, P2SH, BECH32, BECH32M)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836367260",
      "id" : 836367260,
      "in_reply_to_id" : 830424080,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2fOc",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 790,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923058023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T12:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836367260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836371561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "removed, now that it is not dependent on ordering",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:25:59Z",
      "diff_hunk" : "@@ -22,6 +22,7 @@ enum class OutputType {\n     BECH32M,\n };\n \n+// Keep output types sorted by age, with older types first",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836371561",
      "id" : 836371561,
      "in_reply_to_id" : 828078777,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2gRp",
      "original_commit_id" : "fdf1fa5e6c35564f33d874b86a45b7b0731f434d",
      "original_line" : 25,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/outputtype.h",
      "position" : null,
      "pull_request_review_id" : 923064239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T12:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836371561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836394171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is not guaranteed to be true. We could have a P2SH multisig and that would be `LEGACY`.\r\n\r\nso if a `P2SH_SEWGIT` and a `P2SH` multisig were spent together, when the UTXO is later spent it would reveal that some inputs were legacy multisig and others p2sh-segwit? \r\n\r\nAs an alternative, would it be better to map `WITNESS_V0_SCRIPTHASH` to `P2SH` and map `SCRIPTHASH` and `PUBKEYHASH` to `LEGACY`?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T12:50:53Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836394171",
      "id" : 836394171,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x2ly7",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923096287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T12:50:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836394171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836525661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "By the time we get determining the output type, we already know that the output either belongs to the wallet, or is watch only. Thus we can do additional solver invocations for scripthash with the redeemScript in order to figure out the true type.\r\n\r\nFor watch only outputs, we may not be able to do that because not all of the scripts will necessarily be available. However we could still use solving data provided in `coinControl` to try to determine that.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T14:55:26Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836525661",
      "id" : 836525661,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x3F5d",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923287227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T14:55:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836525661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836535681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for pointing me in the right direction! I'll take a stab at implementing this",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T15:04:39Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836535681",
      "id" : 836535681,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x3IWB",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 923301676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T15:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836535681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Review note: I first thought that the `self.generate(self.nodes[1], 1)` here would of course confirm all of the above transactions, but this obviously only happens after all three transactions get built, which means that unconfirmed change UTXOs could have been used in construction of the latter.\r\n\r\nNote to author: This may point to an underlying problem. Since the UTXO pools divided by type are much smaller, the backoff steps allowing for unconfirmed change to be used may come into play much more often. Then, since the waste metric does not yet account for the unconfirmed inputs, we may spend unconfirmed UTXOs more often. This in turn may cause a problem especially if the follow-up transaction is aiming for a higher feerate than the transaction that created the unconfirmed input, at least while https://github.com/bitcoin/bitcoin/issues/15553 remains unsolved. ",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T16:07:45Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796",
      "id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x3YfE",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836601796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836686905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's not clear to me why this change is being made. There don't seem to be any checks or asserts referring to the UTXO pool of `nodes[0]`, and wouldn't all the coinbase outputs and change outputs be of the same type?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:41:07Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836686905",
      "id" : 836686905,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII584x3tQ5",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 296,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 4,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836686905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836690832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why does this `reserve(â¦)` not include `Other.size()`?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:44:05Z",
      "diff_hunk" : "@@ -81,11 +81,34 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount)\n+uint64_t AvailableCoins::size() {\n+    return Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size();\n+}\n+\n+std::vector<COutput> AvailableCoins::all() {\n+    std::vector<COutput> all;\n+    all.reserve(Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836690832",
      "id" : 836690832,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584x3uOQ",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 90,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836690832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836696846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe call this `return_value_unused`.\r\n\r\nIt's not obvious what this `dummy` is and why it's needed. I take it that it's a return value for the script solver to put the actual solution components in, and we don't care about it here because we only want to learn the type. Perhaps you could add a comment here to elucidate that for future reviewers.\r\n",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:51:32Z",
      "diff_hunk" : "@@ -189,7 +212,26 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836696846",
      "id" : 836696846,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII584x3vsO",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 216,
      "original_position" : 43,
      "original_start_line" : 215,
      "path" : "src/wallet/spend.cpp",
      "position" : 43,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 215,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836696846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836700177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Commit message in \"wallet: run coin selection by OutputType\" 49d802f25cac9390fb715b0bd4051c5e592365e3 is missing a word in the first sentence of the body.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T17:55:46Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836700177",
      "id" : 836700177,
      "line" : 816,
      "node_id" : "PRRC_kwDOABII584x3wgR",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 816,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 1,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836700177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836705322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't the `best_result` necessarily already have a waste score since we do that above already?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:02:14Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result2->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result2);\n+    };\n+    if (auto result3{SelectCoins(wallet, availableCoins.Bech32, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result3->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result3);\n+    };\n+    if (auto result4{SelectCoins(wallet, availableCoins.Bech32m, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result4->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result4);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (auto result5{SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+                result5->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+                return result5;\n+            }\n+            return std::optional<SelectionResult>();\n+        };\n+        std::optional<SelectionResult> best_result = *std::min_element(results.begin(), results.end());\n+        best_result->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836705322",
      "id" : 836705322,
      "line" : 850,
      "node_id" : "PRRC_kwDOABII584x3xwq",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 850,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 38,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836705322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836706638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why `resultâ` instead of `result_legacy`, `result_p2sh`, â¦?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:03:55Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836706638",
      "id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x3yFO",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836706638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836709314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm a bit surprised that we need to post-process all the `SelectionResults` when they get returned with `ComputeAndSetWaste(â¦)`. It would feel more natural, that each coin selection algorithm automatically calculates the waste and returns it in the `SelectionResults` if the feerate is known (which is obvious from `coin_control`, I think. \r\n\r\nAlso, if we do need it, you could just collect all the results and then run it once for each result at the end of this block.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:07:37Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836709314",
      "id" : 836709314,
      "line" : 823,
      "node_id" : "PRRC_kwDOABII584x3yvC",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 823,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836709314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836711238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't this `return std::nullopt;` if there is no solution?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:10:10Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result2->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result2);\n+    };\n+    if (auto result3{SelectCoins(wallet, availableCoins.Bech32, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result3->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result3);\n+    };\n+    if (auto result4{SelectCoins(wallet, availableCoins.Bech32m, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result4->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result4);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (auto result5{SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+                result5->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+                return result5;\n+            }\n+            return std::optional<SelectionResult>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836711238",
      "id" : 836711238,
      "line" : 847,
      "node_id" : "PRRC_kwDOABII584x3zNG",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 847,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 35,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836711238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836712042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why even number them at all, they could all just be `result` since it's a local variable?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:11:11Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836712042",
      "id" : 836712042,
      "in_reply_to_id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x3zZq",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836712042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836719593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps call these `is_â¦`, i.e. `is_bech32_address(â¦)`, because you're testing the input object for a property and returning a boolean.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:19:01Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836719593",
      "id" : 836719593,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII584x31Pp",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 57,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836719593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836726166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm wondering whether there is a misunderstanding here. It's not that certain types are strictly preferred at the corresponding feerate categories, but that larger input scripts will simply affect the waste score more due to their size in either direction due to their larger transaction weight. This in turn leads to a higher waste score for _the same count of_ legacy inputs at high feerates vs more efficient types, and a more negative waste score at low feerates. Obviously, this would cause one specific type to always win if you always have the same count of inputs among the options, but wouldn't necessarily hold true if the input sets could have varying input counts.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:27:37Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, creating a P2SH change UTXO for Alice\"\n+        )\n+        p2sh_addr = B.getnewaddress()\n+        tx1 = A.sendtoaddress(p2sh_addr, 5)\n+        change = get_change_output(A.getrawtransaction(tx1, True), p2sh_addr)\n+        assert p2sh_address(A, change)\n+\n+        self.generate(B, 1)\n+\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, verify P2SH UTXO from previous Tx is used\"\n+        )\n+        tx2 = A.sendtoaddress(address=B.getnewaddress(), amount=5, fee_rate=1)\n+        input_addrs = get_input_addresses(A, tx2)\n+        assert_equal(len(input_addrs), 1)\n+        assert_equal(change, input_addrs[0])\n+\n+        self.generate(B, 1)\n+        self.log.debug(\n+            \"Make the same payment again, with a higher feerate. \"\n+            \"Check that Alice's wallet prefers bech32 UTXOs.\"\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836726166",
      "id" : 836726166,
      "line" : 125,
      "node_id" : "PRRC_kwDOABII584x322W",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 125,
      "original_position" : 125,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 125,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 122,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836726166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836733063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the starting situation of the nodes. Are they both empty? Is Alice or Bob the default node that has the previous block rewards? Do they both have funds? Are the funds all of one type, or mixed?",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:36:46Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836733063",
      "id" : 836733063,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII584x34iH",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 102,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836733063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836736105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It feels that these tests are more focused on the cost efficiency of the input sets than validating that input sets of only one type are produced.\r\n\r\nâ¢ Could you perhaps provide a bit more information on the initial setup of the wallets' UTXO pools?\r\nâ¢ From what I gather, most of these tests end up using a single input to fund their transactions. A single input transaction will always have the same type for all inputs. :grin: Given that I understood that right, it would be more convincing if the wallets had to select from a number of UTXOs of various values and types, and needed to pick multiple UTXOs to create the input set, while you then showed that we consistently pick input sets with multiple inputs of the same type. I also feel that the inputs being of the same type would be the more important aspect of this PR rather than which type of inputs gets chosen exactly, although showing that the solution with the lower waste was picked would certainly be an appreciated secondary test scenario.\r\nâ¢ The way these tests are implemented right now, they may be a bit too tightly coupled to the exact behavior of the coin selection algorithms we currently use, but I am hoping to change the composition of coin selection algorithms in the near term. This would be another reason why I'd prefer if the test were implemented more generically \"all input have the same type\" vs \"exactly this type of inputs gets chosen\". :)",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-28T18:39:21Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836736105",
      "id" : 836736105,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584x35Rp",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 17,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 25,
      "pull_request_review_id" : 923394293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 17,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-28T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836736105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r837326312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "interesting, is it by design that the waste metric does not consider unconfirmed change? a few ideas to address this:\r\n\r\n1) have the waste metric also consider unconfirmed change\r\n2) consider things like unconfirmed inputs when comparing solutions\r\n\r\nfor example, if solution A is to spend all confirmed inputs with a waste metric of X and solution B spends unconfirmed change with a waste metric of Y, prefer solution A even if X > Y.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-29T10:41:07Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r837326312",
      "id" : 837326312,
      "in_reply_to_id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x6JXo",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 924406228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T10:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837326312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this is related to your earlier comment (https://github.com/bitcoin/bitcoin/pull/24584#discussion_r836601796) regarding unconfirmed UTXOs being spent more often. In this test, after the first tx is sent, the next 100 txs build a chain where the unconfirmed change is being spent, eventually hitting the mempool chain limit of 25 and causing an error. By explicitly setting `fee_rate=1`, `nodes[0]` starts spending its confirmed coinbase UTXOs instead.\r\n\r\nThis also demonstrates your earlier point that this change is causing unconfirmed outputs to be spent more often",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:53:18Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507157",
      "id" : 838507157,
      "in_reply_to_id" : 836686905,
      "line" : 296,
      "node_id" : "PRRC_kwDOABII584x-pqV",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 296,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : 4,
      "pull_request_review_id" : 926067154,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:53:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good catch, it should include `Other.size()`",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:53:53Z",
      "diff_hunk" : "@@ -81,11 +81,34 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount)\n+uint64_t AvailableCoins::size() {\n+    return Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size();\n+}\n+\n+std::vector<COutput> AvailableCoins::all() {\n+    std::vector<COutput> all;\n+    all.reserve(Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838507751",
      "id" : 838507751,
      "in_reply_to_id" : 836690832,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584x-pzn",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 90,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 11,
      "pull_request_review_id" : 926067979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838507751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838509498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you're right, they can all be named `result` and I think that's better than having individual names for each run (`result_legacy`, `result_p2sh`, etc)",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:55:30Z",
      "diff_hunk" : "@@ -816,9 +816,40 @@ static bool CreateTransactionInternal(\n     // Get available coins\n     AvailableCoins availableCoins;\n     GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n- \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, availableCoins.all(), /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838509498",
      "id" : 838509498,
      "in_reply_to_id" : 836706638,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII584x-qO6",
      "original_commit_id" : "49d802f25cac9390fb715b0bd4051c5e592365e3",
      "original_line" : 822,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 10,
      "pull_request_review_id" : 926070412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838509498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838512077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we are on the same page, it's just my wording in the comments isn't correct. Initially, I wrote the comments for when I was strictly preferring older types to newer types. I'll update these comments to be more accurate.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:57:40Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, creating a P2SH change UTXO for Alice\"\n+        )\n+        p2sh_addr = B.getnewaddress()\n+        tx1 = A.sendtoaddress(p2sh_addr, 5)\n+        change = get_change_output(A.getrawtransaction(tx1, True), p2sh_addr)\n+        assert p2sh_address(A, change)\n+\n+        self.generate(B, 1)\n+\n+        self.log.debug(\n+            \"Pay Bob's P2SH address, verify P2SH UTXO from previous Tx is used\"\n+        )\n+        tx2 = A.sendtoaddress(address=B.getnewaddress(), amount=5, fee_rate=1)\n+        input_addrs = get_input_addresses(A, tx2)\n+        assert_equal(len(input_addrs), 1)\n+        assert_equal(change, input_addrs[0])\n+\n+        self.generate(B, 1)\n+        self.log.debug(\n+            \"Make the same payment again, with a higher feerate. \"\n+            \"Check that Alice's wallet prefers bech32 UTXOs.\"\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838512077",
      "id" : 838512077,
      "in_reply_to_id" : 836726166,
      "line" : 125,
      "node_id" : "PRRC_kwDOABII584x-q3N",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 125,
      "original_position" : 125,
      "original_start_line" : 122,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 125,
      "pull_request_review_id" : 926073903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 122,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-30T12:57:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838512077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838514332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, both nodes are starting with a clean chain (`setup_clean_chain = True`), and then node A mines 100 blocks in `run_test`.\r\n\r\nMuch better would be to explain this at the beginning of the test so it's clear what the respective UTXO sets for each node are.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T12:59:53Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838514332",
      "id" : 838514332,
      "in_reply_to_id" : 836733063,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII584x-rac",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 102,
      "pull_request_review_id" : 926077187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T12:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838514332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838518664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Great points. I'll refactor the test to:\r\n\r\n* Document the initial setup for each node\r\n* Start with a larger, mixed UTXO set\r\n* Be less brittle w.r.t to coin selection\r\n\r\nLooking at the test again, I think I am trying to test for some things that would be better to test for in a unit test. Ideally, this test should create large UTXO sets for each node, spend back and forth at different fee rates and to different address types. The assertions should check that all inputs are of the same OutputType and finally test a scenario where the wallet can fund from any single OutputType and is forced to mix OutputTypes to fund the transaction",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T13:04:12Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838518664",
      "id" : 838518664,
      "in_reply_to_id" : 836736105,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584x-seI",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 17,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 25,
      "pull_request_review_id" : 926083579,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 17,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-30T13:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838518664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for the review, @glozow !\r\n\r\n> Approach-wise, did you consider adding output type to `CoinEligibilityFilter` instead, and trying selection for each output type within `AttemptSelection()`? This way you try to do selection for every output type for confirmed UTXOs only, before you try unconfirmed.\r\n\r\nThis is how I wrote the code initially (by adding `OutputType` to `CoinEligibilityFilter`) but abandoned it in favor of separating the `OutputTypes` into different vectors during `GetAvailableCoins` and then running coin selection on each vector separately and comparing the results.\r\n\r\n> Another possibility is adding the logic for preferring confirmed over unconfirmed UTXOs to `SelectionResult` and editing the `operator<` to account for it.\r\n\r\nI like this idea. I think it keeps the logic a little cleaner.\r\n",
      "created_at" : "2022-03-30T13:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083129149",
      "id" : 1083129149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Ajz09",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083129149/reactions"
      },
      "updated_at" : "2022-03-30T13:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083129149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "based on feedback so far (thanks, everyone!), I think next steps are:\r\n\r\n* Better break out `P2SH`, vs lumping all `P2SH` with `P2SH_SEGWIT`\r\n* Account for unconfirmed txs being preferred when picking the \"best\" solution\r\n* Refactor functional tests to be less tightly coupled to coin selection and better documented\r\n* Potentially move some tests out of functional into unit tests",
      "created_at" : "2022-03-30T13:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083136704",
      "id" : 1083136704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Aj1rA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083136704/reactions"
      },
      "updated_at" : "2022-03-30T13:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083136704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838666794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, Bitcoin Core ignoring the feerate of parent transactions when using unconfirmed inputs is a bug, but one that turned out more difficult to fix than anticipated. I have started a branch (https://github.com/Xekyo/bitcoin/tree/ancestor-aware-funding) which I intend to push forward in collaboration with @glozow. We were stuck by not being able to get information on unconfirmed parent transactions in the wallet yet, and this should now be resolved by a node:wallet interface that provides mining scores which @glozow came up with.\r\n\r\nThen, the intended goal is that we'd automatically add sufficient fees to elevate the mining score for both the new and the ancestor transactions to the target feerate and account for these additional fees in the waste metric.",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-03-30T15:14:23Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r838666794",
      "id" : 838666794,
      "in_reply_to_id" : 836601796,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584x_Qoq",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 11,
      "pull_request_review_id" : 926297888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T15:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838666794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> based on feedback so far (thanks, everyone!), I think next steps are:\r\n> \r\n>     * Better break out `P2SH`, vs lumping all `P2SH` with `P2SH_SEGWIT`\r\n>     * Account for unconfirmed txs being preferred when picking the \"best\" solution\r\n>     * Refactor functional tests to be less tightly coupled to coin selection and better documented\r\n>     * Potentially move some tests out of functional into unit tests\r\n\r\nSounds good, assuming that you mean to prefer confirmed inputs rather than unconfirmed.",
      "created_at" : "2022-03-30T15:17:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1083270926",
      "id" : 1083270926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585AkWcO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083270926/reactions"
      },
      "updated_at" : "2022-03-30T15:17:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1083270926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-04T09:37:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1087333778",
      "id" : 1087333778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Az2WS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087333778/reactions"
      },
      "updated_at" : "2022-04-04T09:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087333778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r844973583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /*nTargetValue=*/selection_target, coin_control, coin_selection_params)}) {\r\n```\r\n\r\nAnywhere you are adding /touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "created_at" : "2022-04-07T10:25:58Z",
      "diff_hunk" : "@@ -773,11 +814,42 @@ static bool CreateTransactionInternal(\n     CAmount selection_target = recipients_sum + not_input_fees;\n \n     // Get available coins\n-    std::vector<COutput> vAvailableCoins;\n-    AvailableCoins(wallet, vAvailableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n+    AvailableCoins availableCoins;\n+    GetAvailableCoins(wallet, availableCoins, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n \n-    // Choose coins to use\n-    std::optional<SelectionResult> result = SelectCoins(wallet, vAvailableCoins, /* nTargetValue */ selection_target, coin_control, coin_selection_params);\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result1{SelectCoins(wallet, availableCoins.Legacy, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {\n+        result1->ComputeAndSetWaste(coin_selection_params.m_cost_of_change);\n+        results.push_back(*result1);\n+    };\n+    if (auto result2{SelectCoins(wallet, availableCoins.P2SH, /* nTargetValue */ selection_target, coin_control, coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r844973583",
      "id" : 844973583,
      "line" : 826,
      "node_id" : "PRRC_kwDOABII584yXUYP",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 826,
      "original_position" : 123,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 123,
      "pull_request_review_id" : 934837483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T10:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844973583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856956306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956306"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this should be addressed now. I re-worked the test to make it less dependent on specific UTXOs and transactions and added a more detailed explanation.",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:16:05Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856956306",
      "id" : 856956306,
      "in_reply_to_id" : 836736105,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFB2S",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 17,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : null,
      "pull_request_review_id" : 951035173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956306/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-23T18:16:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856956453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956453"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:16:18Z",
      "diff_hunk" : "@@ -0,0 +1,214 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. It does so by covering the following cases:\n+\n+    CASE 1: Alice mixed UTXOs (bech32, P2SH). She makes multiple payments\n+            to Bob, where bech32 UTXOs are preferred at higher fee rates\n+            and P2SH are preffered at lower fee rates.\n+    CASE 2: Alice has mixed UTXOs (P2SH, bech32, legacy) and makes multiple\n+            payments to Bob's bech32 address, where legacy is preferred at\n+            low fee rates, P2SH at medium fee rates, and bech32 at high rates.\n+    CASE 3: Alice has mixed UTXOs (legacy, P2SH, bech32) and makes multiple\n+            payments to Bob, where legacy and P2SH are mixed at lower fee rates\n+            and finally all UTXOs are mixed for the final payment.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import assert_equal\n+\n+\n+def get_change_output(tx, addr):\n+    \"\"\"Get change address from transaction.\"\"\"\n+    return [\n+        vout['scriptPubKey']['address']\n+        for vout in tx['vout']\n+        if vout['scriptPubKey']['address'] != addr\n+    ][0]\n+\n+\n+def get_input_addresses(node, tx):\n+    \"\"\"Get all input addresses for a given transaction.\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    addresses = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        addresses.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    return addresses\n+\n+\n+def bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        not addr_info['isscript'] and\n+        addr_info['iswitness'] and addr_info['witness_version'] == 0\n+    )\n+\n+\n+def p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness'] and\n+        addr_info['script'] == 'witness_v0_keyhash'\n+    )\n+\n+\n+def legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_case_one(self, A, B):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856956453",
      "id" : 856956453,
      "in_reply_to_id" : 836733063,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFB4l",
      "original_commit_id" : "072e755e553d3502572d7db1cbe04d73e31b6b2e",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : null,
      "pull_request_review_id" : 951035388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956453/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-23T18:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856956453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856958735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856958735"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:18:09Z",
      "diff_hunk" : "@@ -189,7 +212,26 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856958735",
      "id" : 856958735,
      "in_reply_to_id" : 836696846,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFCcP",
      "original_commit_id" : "4c634ea19220d6d1f4647e553909b5e0dfd1910e",
      "original_line" : 216,
      "original_position" : 43,
      "original_start_line" : 215,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 951037971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856958735/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-23T18:18:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856958735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856961631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856961631"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I re-worked this to run coin selection by `OutputType` at each back-off, which fixed the preference for spending unconfirmed UTXOs. as such, I was able to leave the tests as is and removed the test changes from the PR. ",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:19:52Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856961631",
      "id" : 856961631,
      "in_reply_to_id" : 836686905,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFDJf",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 951041865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856961631/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-23T18:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856961631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856963565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856963565"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is better handled now by running by OutputType at each stage of back-off",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:20:34Z",
      "diff_hunk" : "@@ -36,9 +36,9 @@ def run_test(self):\n \n         self.generate(self.nodes[1], COINBASE_MATURITY)\n         balance = alice.getbalance()\n-        txA = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txB = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n-        txC = alice.sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txA = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[1].sendtoaddress(alice.getnewaddress(), Decimal(\"10\"))\n         self.sync_mempools()\n         self.generate(self.nodes[1], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856963565",
      "id" : 856963565,
      "in_reply_to_id" : 836601796,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFDnt",
      "original_commit_id" : "e556ee628e97b10bc4f4d82036c9758d4e14d298",
      "original_line" : 43,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : null,
      "pull_request_review_id" : 951044193,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856963565/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-23T18:20:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856963565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856967235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856967235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now also considering the reedem script when a UTXO is `P2SH`",
      "commit_id" : "af0057c79a6ef8c14c6b935d8418e750b2289ff7",
      "created_at" : "2022-04-23T18:21:36Z",
      "diff_hunk" : "@@ -186,6 +186,23 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n                 continue;\n             }\n \n+            OutputType output_type{wallet.m_default_address_type};\n+            std::vector<std::vector<uint8_t>> dummy;\n+            TxoutType type{Solver(wtx.tx->vout[i].scriptPubKey, dummy)};\n+            if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+                output_type = OutputType::BECH32M;\n+            } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+                output_type = OutputType::BECH32;\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                output_type = OutputType::P2SH_SEGWIT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r856967235",
      "id" : 856967235,
      "in_reply_to_id" : 828302619,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zFEhD",
      "original_commit_id" : "e27943dd91afbad679212d61b7b891f9f53818a0",
      "original_line" : 197,
      "original_position" : 21,
      "original_start_line" : 196,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 951048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856967235/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-23T18:21:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856967235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-worked this based on feedback and overall much happier with the approach:\r\n\r\n* When output is P2SH, run the solver on the `redeemScript` to determine the true `OutputType`. This puts P2SH outputs which are multisig into the legacy bucket @achow101 \r\n* Instead of running `SelectCoins` multiple times over each `OutputType`, I moved the logic into `AttemptSelection`. This ensures that all of the existing back-offs are respected, which addressed the issue regarding unconfirmed change @Xekyo @glozow \r\n* Refactored the test to be better documented and less brittle w.r.t coin selection\r\n* Removed changes to existing functional tests as they are no longer failing after fixing the unconfirmed change issue. I do believe there is room for improvement if a test relies on specific behavior from coin selection, but that is out of the scope of this PR",
      "created_at" : "2022-04-23T18:36:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1107604826",
      "id" : 1107604826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CBLVa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107604826/reactions"
      },
      "updated_at" : "2022-04-23T18:36:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107604826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force pushed a few minor code style edits. also noticed the branch is failing to build after rebasing on master. <strike>seems related to the fuzzer, will troubleshoot in the morning.</strike> fixed",
      "created_at" : "2022-04-23T18:57:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1107615725",
      "id" : 1107615725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CBN_t",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107615725/reactions"
      },
      "updated_at" : "2022-04-24T11:10:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107615725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nThe second commit (68d96078714c1ed1804c293a2f05c3fb33092efa) doesn't compile due to the `allow_mixed_output_types` optional argument to `AttemptSelection()`. Fixed in the third commit, but it's good if each commit compiles.\r\n\r\nI would favor making `allow_mixed_output_types` non-optional.",
      "created_at" : "2022-05-04T16:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1117544016",
      "id" : 1117544016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CnF5Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117544016/reactions"
      },
      "updated_at" : "2022-05-04T16:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117544016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Concept ACK\r\n> \r\n> The second commit ([68d9607](https://github.com/bitcoin/bitcoin/commit/68d96078714c1ed1804c293a2f05c3fb33092efa)) doesn't compile due to the `allow_mixed_output_types` optional argument to `AttemptSelection()`. Fixed in the third commit, but it's good if each commit compiles.\r\n\r\nah, good catch! i must have broken it when trying to break up the commits more cleanly. \r\n\r\n> I would favor making `allow_mixed_output_types` non-optional.\r\n\r\ncan you explain a bit more what you mean by this?",
      "created_at" : "2022-05-04T16:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1117547775",
      "id" : 1117547775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CnGz_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117547775/reactions"
      },
      "updated_at" : "2022-05-04T16:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117547775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> can you explain a bit more what you mean by this?\r\n\r\nIt's just that I prefer code to be more explicit rather than hidden. Optional arguments are good if an existing function has many callers, and it would be disruptive to change all of them. In this case, all the calls (except one in src/bench) are in the same file (spend.cpp), so it wouldn't be much to update the callers. But this is just a suggestion.",
      "created_at" : "2022-05-04T16:34:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1117564294",
      "id" : 1117564294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CnK2G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117564294/reactions"
      },
      "updated_at" : "2022-05-04T16:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117564294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It's just that I prefer code to be more explicit rather than hidden\r\n\r\nthis is a great point. ill update when fixing the compile issue",
      "created_at" : "2022-05-04T16:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1117580305",
      "id" : 1117580305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CnOwR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117580305/reactions"
      },
      "updated_at" : "2022-05-04T16:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117580305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed the compilation issue by my moving the `allow_mixed_output_types` bool to the correct commit and made the boolean non-optional (thanks @LarryRuane). having the bool non-optional helps the readability of the logic in coin selection.\r\n\r\nalso put the function comment changes for `AttemptSelection` in the correct commit.\r\n\r\n`git range-diff master 31895fb 12bb64f`",
      "created_at" : "2022-05-05T12:50:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1118508095",
      "id" : 1118508095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CqxQ_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118508095/reactions"
      },
      "updated_at" : "2022-05-05T12:50:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118508095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866091586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866091586"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    all.reserve(this->size());\r\n```\r\nYou don't need the `this->` but I think it's more readable.",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T16:19:54Z",
      "diff_hunk" : "@@ -84,11 +84,37 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount)\n+uint64_t AvailableCoins::size() const\n+{\n+    return Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size();\n+}\n+\n+std::vector<COutput> AvailableCoins::all() const\n+{\n+    std::vector<COutput> all;\n+    all.reserve(Bech32m.size() + Bech32.size() + P2SH.size() + Legacy.size() + Other.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866091586",
      "id" : 866091586,
      "line" : 95,
      "node_id" : "PRRC_kwDOABII584zn4JC",
      "original_commit_id" : "e81372b22eede0fab6ab95596cf4aa2ed9e0ffc9",
      "original_line" : 95,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 13,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866091586/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866091586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866106858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866106858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n                const CScript redeemScript{GetScriptForDestination(destination)};\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T16:32:28Z",
      "diff_hunk" : "@@ -192,7 +218,37 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            COutput coin(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                CScript redeemScript = GetScriptForDestination(destination);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866106858",
      "id" : 866106858,
      "line" : 230,
      "node_id" : "PRRC_kwDOABII584zn73q",
      "original_commit_id" : "e81372b22eede0fab6ab95596cf4aa2ed9e0ffc9",
      "original_line" : 230,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 54,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866106858/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866106858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866109458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866109458"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, perhaps move this down to just before the `switch` below (just so it's declared close to where it's used).",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T16:35:45Z",
      "diff_hunk" : "@@ -192,7 +218,37 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            COutput coin(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866109458",
      "id" : 866109458,
      "line" : 225,
      "node_id" : "PRRC_kwDOABII584zn8gS",
      "original_commit_id" : "e81372b22eede0fab6ab95596cf4aa2ed9e0ffc9",
      "original_line" : 225,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 49,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866109458/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866109458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866133201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866133201"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The scope of these return temporaries is limited to the if statement, so you could simplify slightly by eliminating the numbers, for example:\r\n```suggestion\r\n        if (auto r{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r;\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:04:44Z",
      "diff_hunk" : "@@ -525,34 +618,36 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, const std::vec\n \n         // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n         // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), vCoins, coin_selection_params)}) return r1;\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), vCoins, coin_selection_params)}) return r2;\n+        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866133201",
      "id" : 866133201,
      "line" : 621,
      "node_id" : "PRRC_kwDOABII584zoCTR",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 621,
      "original_position" : 231,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 231,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866133201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866133201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866138905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866138905"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nabsolutely necessary. Both wallets start with zero funds. Alice mines\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:12:13Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866138905",
      "id" : 866138905,
      "line" : 15,
      "node_id" : "PRRC_kwDOABII584zoDsZ",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 15,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 15,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866138905/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866138905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866140162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140162"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nenough blocks to have spendable coinbase outputs. Alice sends 10\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:13:53Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866140162",
      "id" : 866140162,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII584zoEAC",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 16,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140162/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866140784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140784"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nThe payment values are random, but chosen such that they sum up to a specified\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:14:43Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+They payment values are random, but chosen such that they sum up to a specified",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866140784",
      "id" : 866140784,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII584zoEJw",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 24,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140784/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866140784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866147871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866147871"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    \"\"\"Return a randomly chosen list of n positive integers summing to m.\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:23:53Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+They payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True\n+\n+    return (sum([has_legacy, has_p2sh, has_bech32]) == 1)\n+\n+\n+def generate_payment_values(n, m):\n+    \"\"\"Return a randomly chosen list of n positive integers summing to total.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866147871",
      "id" : 866147871,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII584zoF4f",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 89,
      "pull_request_review_id" : 963640800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866147871/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T18:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866147871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866166171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866166171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: I think our style guide suggests this formatting.\r\n```suggestion\r\n/**\r\n * COutputs available for spending, stored by OutputType.\r\n * This struct is really just a wrapper around OutputType vectors with a convenient\r\n * method for concatenating and returning all COutputs as one vector.\r\n *\r\n * clear(), size() methods are implemented so that one can interact with\r\n * the AvailableCoins struct as if it were a vector\r\n */\r\n```",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T17:47:08Z",
      "diff_hunk" : "@@ -32,10 +32,35 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/** COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866166171",
      "id" : 866166171,
      "line" : 40,
      "node_id" : "PRRC_kwDOABII584zoKWb",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 40,
      "original_position" : 9,
      "original_start_line" : 35,
      "path" : "src/wallet/spend.h",
      "position" : 9,
      "pull_request_review_id" : 963741120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866166171/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-05T20:14:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866166171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866181338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866181338"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Naming nit: this function does not \"choose a selection algorithm\", but rather it picks one out of several coin selection algorithms' results. How about `ChooseSelectionResult` or similar?",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T18:06:37Z",
      "diff_hunk" : "@@ -85,12 +85,28 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n  * param@[in]  wallet                 The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue           The target value\n  * param@[in]  eligilibity_filter     A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  coins                  The vector of coins available for selection prior to filtering\n+ * param@[in]  availableCoins         The struct of coins, organized by OutputType, available for selection prior to filtering\n  * param@[in]  coin_selection_params  Parameters for the coin selection\n  * returns                            If successful, a SelectionResult containing the input set\n  *                                    If failed, a nullopt\n  */\n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const AvailableCoins& availableCoins,\n+                        const CoinSelectionParams& coin_selection_params);\n+\n+/**\n+ * Attempt to find a valid input set that meets the provided eligibility filter and target.\n+ * Multiple coin selection algorithms will be run and the input set that produces the least waste\n+ * (according to the waste metric) will be chosen.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  coins                     The vector of coins available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n+ */\n+std::optional<SelectionResult> ChooseSelectionAlgorithm(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& coins,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866181338",
      "id" : 866181338,
      "line" : 110,
      "node_id" : "PRRC_kwDOABII584zoODa",
      "original_commit_id" : "66db9bff47dca2303f431f1d8907917afea6329a",
      "original_line" : 109,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 27,
      "pull_request_review_id" : 963741120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866181338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T20:14:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866181338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The description has a typo (**Aproach**). Also, for future reference, my understanding is that the description (initial comment) should be fairly concise and mostly plaintext, because it ends up in the git commit history. It's probably better to make the detailed description a separate comment. It's probably too late here, because if you added a comment with details, it would end up at the bottom.",
      "created_at" : "2022-05-05T18:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1118926345",
      "id" : 1118926345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CsXYJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118926345/reactions"
      },
      "updated_at" : "2022-05-05T18:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118926345",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866267311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866267311"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The allow mixed outputs should be on an earlier backoff. Given the issues the Bitcoin Core wallet still has around not accounting for lower feerates in parent transactions of unconfirmed UTXOs, I would prefer to allow mixed inputs before allowing unconfirmed UTXOs. If I'm alone in that, I would most certainly prefer mixed inputs over having more than twelve unconfirmed ancestor transactions.",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T19:56:23Z",
      "diff_hunk" : "@@ -626,11 +657,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n             if (!fRejectLongChains) {\n                 if (auto r8{AttemptSelection(wallet, value_to_select,\n                                       CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max(), std::numeric_limits<uint64_t>::max(), true /* include_partial_groups */),\n-                                      coins, coin_selection_params)}) {\n+                                      coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n                     return r8;\n                 }\n             }\n         }\n+        // If our wallet does not allow us to spend unconfirmed change, attempt to fund the transaction with mixed OutputTypes\n+        if (auto r9{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r9;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866267311",
      "id" : 866267311,
      "line" : 666,
      "node_id" : "PRRC_kwDOABII584zojCv",
      "original_commit_id" : "4b0a67bfa71b8074c8eabe5b21a44eb23ce30dab",
      "original_line" : 666,
      "original_position" : 96,
      "original_start_line" : 665,
      "path" : "src/wallet/spend.cpp",
      "position" : 96,
      "pull_request_review_id" : 963741120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866267311/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 665,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-05T20:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866267311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866269613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866269613"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    \"\"\"Check if an address contains a bech32 output.\"\"\"\r\n```\r\nAlso below",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T19:59:38Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+They payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866269613",
      "id" : 866269613,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII584zojmt",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 36,
      "pull_request_review_id" : 963741120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866269613/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-05T20:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866269613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866277087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866277087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would have expected to count all five types (incl. bech32m and others), even if you don't explicitly create them here. This test would currently not fail if I Alice additionally sent Bob a P2TR output.",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-05T20:10:32Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+They payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r866277087",
      "id" : 866277087,
      "line" : 83,
      "node_id" : "PRRC_kwDOABII584zolbf",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : 77,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 83,
      "pull_request_review_id" : 963741120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866277087/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 77,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-05T20:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/866277087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867330774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867330774"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree but decided to leave them alone since it's not really in scope for this PR and would have involved touching extra lines just to remove the number",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-07T09:34:14Z",
      "diff_hunk" : "@@ -525,34 +618,36 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, const std::vec\n \n         // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n         // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), vCoins, coin_selection_params)}) return r1;\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), vCoins, coin_selection_params)}) return r2;\n+        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867330774",
      "id" : 867330774,
      "in_reply_to_id" : 866133201,
      "line" : 621,
      "node_id" : "PRRC_kwDOABII584zsmrW",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 621,
      "original_position" : 231,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 231,
      "pull_request_review_id" : 965314060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867330774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-07T09:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867330774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867333282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "my reasoning for starting it at the `r6` back-off is because that is also the first back-off where we allow partial spending of `OutputGroups`. so the status quo in the wallet is \"spend unconfirmed change before relaxing privacy-preserving constraints.\"\r\n\r\nyou could argue that mixed outputs are not as bad as partially spending an output group w.r.t privacy, but i would still advocate for it being considered along with unconfirmed change, meaning if spending unconfirmed change is more efficient in terms of the waste metric, do that instead of mixing.",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-07T09:59:38Z",
      "diff_hunk" : "@@ -626,11 +657,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n             if (!fRejectLongChains) {\n                 if (auto r8{AttemptSelection(wallet, value_to_select,\n                                       CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max(), std::numeric_limits<uint64_t>::max(), true /* include_partial_groups */),\n-                                      coins, coin_selection_params)}) {\n+                                      coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n                     return r8;\n                 }\n             }\n         }\n+        // If our wallet does not allow us to spend unconfirmed change, attempt to fund the transaction with mixed OutputTypes\n+        if (auto r9{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r9;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867333282",
      "id" : 867333282,
      "in_reply_to_id" : 866267311,
      "line" : 666,
      "node_id" : "PRRC_kwDOABII584zsnSi",
      "original_commit_id" : "4b0a67bfa71b8074c8eabe5b21a44eb23ce30dab",
      "original_line" : 666,
      "original_position" : 96,
      "original_start_line" : 665,
      "path" : "src/wallet/spend.cpp",
      "position" : 96,
      "pull_request_review_id" : 965316219,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 665,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-07T09:59:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867333367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333367"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, ill update this",
      "commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "created_at" : "2022-05-07T10:00:31Z",
      "diff_hunk" : "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds and Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends a series of 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+They payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address cointains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_p2sh_address(node, addr):\n+    \"\"\"Check if an address cointains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address cointains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867333367",
      "id" : 867333367,
      "in_reply_to_id" : 866277087,
      "line" : 83,
      "node_id" : "PRRC_kwDOABII584zsnT3",
      "original_commit_id" : "12bb64f9fcd11207e5996e41204ab2ea822379c1",
      "original_line" : 83,
      "original_position" : 83,
      "original_start_line" : 77,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 83,
      "pull_request_review_id" : 965316288,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 77,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-07T10:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867333367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for the review, @Xekyo !\r\n\r\n> it seems to me that there should be some tests for the new AvailableCoins struct that ensures that all types get sorted into the right buckets\r\n\r\nI am working on a unit test for `GetAvailableCoins` which covers this. I think a unit test is more appropriate than a functional test in this case. I was planning to add the unit test in a follow-up PR, but also happy to add it here, so long as this PR isn't getting too big\r\n\r\n> Also, I would prefer if all four types were tested instead of just two.\r\n\r\nI'll update the functional test, because agreed, no reason not to ",
      "created_at" : "2022-05-07T10:04:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1120179874",
      "id" : 1120179874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CxJai",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120179874/reactions"
      },
      "updated_at" : "2022-05-07T10:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120179874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for the review @LarryRuane and suggestions on code style!\r\n\r\n> be fairly concise and mostly plaintext, because it ends up in the git commit history.\r\n\r\ncompletely forgot about this, thanks for the reminder! ",
      "created_at" : "2022-05-07T10:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1120180360",
      "id" : 1120180360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CxJiI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120180360/reactions"
      },
      "updated_at" : "2022-05-07T10:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120180360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force pushed to address feedback from @Xekyo and @LarryRuane \r\n\r\n`git range-diff master 12bb64f f73e545`",
      "created_at" : "2022-05-07T12:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1120201987",
      "id" : 1120201987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585CxO0D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120201987/reactions"
      },
      "updated_at" : "2022-05-07T12:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120201987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867369998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867369998"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure that's an apt comparison. Address reuse is generally discouraged and hopefully happens seldom for most wallets, especially those that care about privacy. In addition, we already run opportunistic avoid-partial-spend in parallel for every single coin selection attempt and prefer its result as long as it is not more expensive even when not explicitly required.\r\n\r\nThis PR however follows a change in the wallet behavior that will generally match the output type of the recipient on every spend. We must expect wallets to frequently have outputs of different types as a result. This PR does not introduce avoidance of mixing as parallel coin selection results but rather requires it for almost all selection attempts. Splitting the UTXO pool into two or more sets doesn't half the size of the possible input set candidates, but reduces the combination space to tiny fractions.\r\n\r\nI expect this already to cause a reduction in changeless transactions, but worse, I expect the change as proposed to considerably increase the use of unconfirmed inputs and thusly reduce the resulting transactions' reliability. Given the existing feerate estimation issue with unconfirmed inputs, this would more frequently cause the wallet to undershoot the target feerate, especially if we allow up to 12 unconfirmed inputs before considering mixing.\r\n\r\nI'd prefer that mixing be allowed with r2, I'd be okay with r3. I might be convinced to introduce mixing on r4 via simulation results showing that coin selection results and reliability do not get significantly worse. My stance on this would generally be improved by us having finished ancestor aware fee estimation and the waste metric having been updated to account for automatic bumping of low feerate parent transactions.\r\n\r\nI'd also be curious what others think about this.",
      "commit_id" : "85443255abe294ebdd67e92274cca21f10678f2c",
      "created_at" : "2022-05-07T16:27:53Z",
      "diff_hunk" : "@@ -626,11 +657,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n             if (!fRejectLongChains) {\n                 if (auto r8{AttemptSelection(wallet, value_to_select,\n                                       CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max(), std::numeric_limits<uint64_t>::max(), true /* include_partial_groups */),\n-                                      coins, coin_selection_params)}) {\n+                                      coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n                     return r8;\n                 }\n             }\n         }\n+        // If our wallet does not allow us to spend unconfirmed change, attempt to fund the transaction with mixed OutputTypes\n+        if (auto r9{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r9;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867369998",
      "id" : 867369998,
      "in_reply_to_id" : 866267311,
      "line" : 666,
      "node_id" : "PRRC_kwDOABII584zswQO",
      "original_commit_id" : "4b0a67bfa71b8074c8eabe5b21a44eb23ce30dab",
      "original_line" : 666,
      "original_position" : 96,
      "original_start_line" : 665,
      "path" : "src/wallet/spend.cpp",
      "position" : 280,
      "pull_request_review_id" : 965345832,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867369998/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 665,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-07T16:28:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867369998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867371195"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867371195"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Let me add an example to illustrate my point.\r\n\r\nFive UTXOs produce 31 non-empty combinations:\r\n![image](https://user-images.githubusercontent.com/4060799/167263471-ebac8d8b-7699-411d-9128-422b626fabdb.png)\r\n\r\nTwo sets of three and two UTXOs only yield 7+3 combinations:\r\n![image](https://user-images.githubusercontent.com/4060799/167263547-4929efa7-c83c-49ed-8ccb-53842f7e9d5c.png)\r\n![image](https://user-images.githubusercontent.com/4060799/167263566-2255c81e-84a5-45a6-9242-b3ccfd708cf7.png)\r\n",
      "commit_id" : "85443255abe294ebdd67e92274cca21f10678f2c",
      "created_at" : "2022-05-07T16:40:30Z",
      "diff_hunk" : "@@ -626,11 +657,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n             if (!fRejectLongChains) {\n                 if (auto r8{AttemptSelection(wallet, value_to_select,\n                                       CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max(), std::numeric_limits<uint64_t>::max(), true /* include_partial_groups */),\n-                                      coins, coin_selection_params)}) {\n+                                      coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n                     return r8;\n                 }\n             }\n         }\n+        // If our wallet does not allow us to spend unconfirmed change, attempt to fund the transaction with mixed OutputTypes\n+        if (auto r9{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r9;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r867371195",
      "id" : 867371195,
      "in_reply_to_id" : 866267311,
      "line" : 666,
      "node_id" : "PRRC_kwDOABII584zswi7",
      "original_commit_id" : "4b0a67bfa71b8074c8eabe5b21a44eb23ce30dab",
      "original_line" : 666,
      "original_position" : 96,
      "original_start_line" : 665,
      "path" : "src/wallet/spend.cpp",
      "position" : 280,
      "pull_request_review_id" : 965346754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867371195/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 665,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-07T16:40:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867371195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r872591348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872591348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks for the detailed explanation and example. very good points about splitting the UTXO set. \r\n\r\nI've changed the logic and added a new back-off that allows mixing _before_ considering unconfirmed change. as such, you will still get the privacy improvement when spending from confirmed UTXOs. \r\n\r\nwhat's nice about how this is implemented is that we can easily move the logic up or down by changing the boolean so if we are able to fix the fee estimation issue and convince ourselves via simulations that there are not undesirable effects, we can easily move the restriction down at a later date by changing a boolean.",
      "commit_id" : "59966ad7dbb036dd0065ee31781f22114eca3dc2",
      "created_at" : "2022-05-13T16:41:30Z",
      "diff_hunk" : "@@ -626,11 +657,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n             if (!fRejectLongChains) {\n                 if (auto r8{AttemptSelection(wallet, value_to_select,\n                                       CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max(), std::numeric_limits<uint64_t>::max(), true /* include_partial_groups */),\n-                                      coins, coin_selection_params)}) {\n+                                      coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n                     return r8;\n                 }\n             }\n         }\n+        // If our wallet does not allow us to spend unconfirmed change, attempt to fund the transaction with mixed OutputTypes\n+        if (auto r9{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r9;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r872591348",
      "id" : 872591348,
      "in_reply_to_id" : 866267311,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840Aq_0",
      "original_commit_id" : "4b0a67bfa71b8074c8eabe5b21a44eb23ce30dab",
      "original_line" : 668,
      "original_position" : 96,
      "original_start_line" : 665,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 972528622,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872591348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-13T16:41:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872591348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "updated with a unit test for `GetAvailableCoins` and changed the logic to allow mixing `OutputTypes` before spending unconfirmed change (thanks @Xekyo for the detailed explanation on this), along with a few other stylistic changes.",
      "created_at" : "2022-05-13T17:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1126272535",
      "id" : 1126272535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585DIY4X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1126272535/reactions"
      },
      "updated_at" : "2022-05-13T17:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1126272535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874145334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874145334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870 \"refactor: add AvailableCoins struct\"\r\n\r\nThis looks wrong. `ExtractDestination` will give the P2SH address for this scriptPubKey, and then we get that same script again and run the `Solver` on it. It's just going to return `TxoutType::SCRIPTHASH` which we already knew.\r\n\r\nWhat this should be doing is looking up the redeemScript in the wallet (by ScriptID) and then running `Solver` with that redeemScript. We also need to remember that this was inside of a P2SH so that when checking `TxoutType::WITNESS_V0_*` later, we can know whether it is bech32 or p2sh-segwit.",
      "commit_id" : "59966ad7dbb036dd0065ee31781f22114eca3dc2",
      "created_at" : "2022-05-16T20:49:54Z",
      "diff_hunk" : "@@ -192,7 +218,37 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScript redeemScript{GetScriptForDestination(destination)};\n+                type = Solver(redeemScript, return_values_unused);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874145334",
      "id" : 874145334,
      "line" : 230,
      "node_id" : "PRRC_kwDOABII5840GmY2",
      "original_commit_id" : "7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870",
      "original_line" : 230,
      "original_position" : 54,
      "original_start_line" : 227,
      "path" : "src/wallet/spend.cpp",
      "position" : 54,
      "pull_request_review_id" : 974551199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874145334/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 227,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-16T21:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874145334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874146823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874146823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870 \"refactor: add AvailableCoins struct\"\r\n\r\nThis should also include `TxoutType::WITNESS_V0_SCRIPTHASH`.",
      "commit_id" : "59966ad7dbb036dd0065ee31781f22114eca3dc2",
      "created_at" : "2022-05-16T20:51:45Z",
      "diff_hunk" : "@@ -192,7 +218,37 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScript redeemScript{GetScriptForDestination(destination)};\n+                type = Solver(redeemScript, return_values_unused);\n+            } else {\n+                type = Solver(wtx.tx->vout[i].scriptPubKey, return_values_unused);\n+            };\n+\n+            COutput coin(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            switch (type) {\n+            case TxoutType::WITNESS_V1_TAPROOT:\n+                availableCoins.Bech32m.push_back(coin);\n+                break;\n+            case TxoutType::WITNESS_V0_KEYHASH:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874146823",
      "id" : 874146823,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII5840GmwH",
      "original_commit_id" : "7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870",
      "original_line" : 240,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 64,
      "pull_request_review_id" : 974551199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874146823/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T21:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874146823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874149536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874149536"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870 \"refactor: add AvailableCoins struct\"\r\n\r\nIf something is just `SCRIPTHASH`, it should be `Legacy`.",
      "commit_id" : "59966ad7dbb036dd0065ee31781f22114eca3dc2",
      "created_at" : "2022-05-16T20:55:30Z",
      "diff_hunk" : "@@ -192,7 +218,37 @@ void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const C\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n \n-            vCoins.emplace_back(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScript redeemScript{GetScriptForDestination(destination)};\n+                type = Solver(redeemScript, return_values_unused);\n+            } else {\n+                type = Solver(wtx.tx->vout[i].scriptPubKey, return_values_unused);\n+            };\n+\n+            COutput coin(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me);\n+            switch (type) {\n+            case TxoutType::WITNESS_V1_TAPROOT:\n+                availableCoins.Bech32m.push_back(coin);\n+                break;\n+            case TxoutType::WITNESS_V0_KEYHASH:\n+                availableCoins.Bech32.push_back(coin);\n+                break;\n+            case TxoutType::SCRIPTHASH:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874149536",
      "id" : 874149536,
      "line" : 243,
      "node_id" : "PRRC_kwDOABII5840Gnag",
      "original_commit_id" : "7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870",
      "original_line" : 243,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 67,
      "pull_request_review_id" : 974551199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874149536/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T21:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874149536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874150063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874150063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870 \"refactor: add AvailableCoins struct\"\r\n\r\n```suggestion\r\n    std::vector<COutput> P2SH_Segwit;\r\n```",
      "commit_id" : "59966ad7dbb036dd0065ee31781f22114eca3dc2",
      "created_at" : "2022-05-16T20:56:09Z",
      "diff_hunk" : "@@ -33,9 +33,36 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* walle\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n /**\n- * populate vCoins with vector of available COutputs.\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n+struct AvailableCoins {\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> Legacy;\n+    std::vector<COutput> P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r874150063",
      "id" : 874150063,
      "line" : 46,
      "node_id" : "PRRC_kwDOABII5840Gniv",
      "original_commit_id" : "7f0ef4163e5dcde1487a7c4b09efa4b1d6b9f870",
      "original_line" : 46,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 15,
      "pull_request_review_id" : 974551199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874150063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-16T21:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874150063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-23T18:52:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1135026170",
      "id" : 1135026170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Dpx_6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1135026170/reactions"
      },
      "updated_at" : "2022-05-23T18:52:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1135026170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased and responded to feedback from @achow101, specifically, fixing the logic for how P2SH is handled when running available coins. \r\n\r\nI am confident this logic is correct for the standard output types (bech32m, bech32, p2sh-segwit, legacy), which covers > 95% of UTXOs (per https://transactionfee.info/charts/inputs-types-by-count/). I'd like to add more test cases for P2SH, but not considering that a blocker for right now",
      "created_at" : "2022-06-09T13:30:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1151122713",
      "id" : 1151122713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585EnL0Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1151122713/reactions"
      },
      "updated_at" : "2022-06-09T13:30:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1151122713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897247048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897247048"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Especially for new code and newly introduced symbols, please use snake_case for variable names and  PascalCase for function names. See symbol naming conventions in https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-14T19:32:07Z",
      "diff_hunk" : "@@ -35,15 +35,42 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* walle\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n /**\n- * populate vCoins with vector of available COutputs.\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n+struct AvailableCoins {\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> Legacy;\n+    std::vector<COutput> P2SH_Segwit;\n+    std::vector<COutput> Bech32;\n+    std::vector<COutput> Bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */\n+    std::vector<COutput> Other;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897247048",
      "id" : 897247048,
      "line" : 53,
      "node_id" : "PRRC_kwDOABII5841eudI",
      "original_commit_id" : "36ccbbc48a80116eb8e979667abd5f44cf36b030",
      "original_line" : 53,
      "original_position" : 20,
      "original_start_line" : 47,
      "path" : "src/wallet/spend.h",
      "position" : 20,
      "pull_request_review_id" : 1006463492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897247048/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 47,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-14T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897247048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897260535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897260535"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 36ccbbc48a80116eb8e979667abd5f44cf36b030 \"refactor: add AvailableCoins struct\"\r\n\r\nConsistency nit: I noticed that `vCoins` was renamed to `availableCoins` throughout this commit, except here it's renamed to `coins`, then in the test it is `available`. In the next commit, the instances of `AvailableCoins` seem to all be named `coins`. Perhaps it should be either `coins` or `available_coins` throughout.",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-14T19:50:05Z",
      "diff_hunk" : "@@ -35,15 +35,42 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* walle\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n /**\n- * populate vCoins with vector of available COutputs.\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n+struct AvailableCoins {\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> Legacy;\n+    std::vector<COutput> P2SH_Segwit;\n+    std::vector<COutput> Bech32;\n+    std::vector<COutput> Bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */\n+    std::vector<COutput> Other;\n+\n+    /** Concatenate and return all COutputs as one vector */\n+    std::vector<COutput> all() const;\n+\n+    /** The following methods are provided so that AvailableCoins can mimic a vector,\n+     * i.e methods can work with invidivudal OutputType vectors or on the entire object */\n+    uint64_t size() const;\n+    void clear();\n+};\n+\n+/**\n+ * populate the AvailableCoins struct with vectors of available COutputs, organized by OutputType.\n  */\n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl = nullptr, std::optional<CFeeRate> feerate = std::nullopt, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+void GetAvailableCoins(const CWallet& wallet, AvailableCoins& availableCoins, const CCoinControl* coinControl = nullptr, std::optional<CFeeRate> feerate = std::nullopt, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n /**\n  * Wrapper function for AvailableCoins which skips the `feerate` parameter. Use this function\n  * to list all available coins (e.g. listunspent RPC) while not intending to fund a transaction.\n  */\n-void AvailableCoinsListUnspent(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+void AvailableCoinsListUnspent(const CWallet& wallet, AvailableCoins& coins, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897260535",
      "id" : 897260535,
      "line" : 73,
      "node_id" : "PRRC_kwDOABII5841exv3",
      "original_commit_id" : "36ccbbc48a80116eb8e979667abd5f44cf36b030",
      "original_line" : 73,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 42,
      "pull_request_review_id" : 1006463492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897260535/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897260535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897286928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897286928"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In f42db05a0ea8a4acfaf8e0117824cfd0f1d0547b \"refactor: use AvailableCoins struct in SelectCoins\"\r\n\r\nThe commit message mentions a newly introuduced method `ChooseSelectionAlgorithm`, but the code introduces `ChooseSelectionResult`.",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-14T20:23:11Z",
      "diff_hunk" : "@@ -444,8 +444,14 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const AvailableCoins& availableCoins,\n                                const CoinSelectionParams& coin_selection_params)\n+{\n+    std::optional<SelectionResult> result = ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, availableCoins.all(), coin_selection_params);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897286928",
      "id" : 897286928,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841e4MQ",
      "original_commit_id" : "f42db05a0ea8a4acfaf8e0117824cfd0f1d0547b",
      "original_line" : 450,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 8,
      "pull_request_review_id" : 1006463492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897286928/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897286928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897297242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897297242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In df6aa1d597b4de1f4707719b3ad5518a94645ee1 \"wallet: run coin selection by `OutputType`\"\r\n\r\nAFAICT, this duplicates the selection attempts with segregated types for `CoinEligibilityFilter(1, 1, 0)`.\r\n\r\nEither way, the selection with segregated types is attempted first and mixing only happens as a last resort. So, directly setting `allow_mixed_output_types=true` should result in equivalent back-off steps without repeating the segregated output attempts before allowing mixing. \r\n\r\nNot adding this line also obsoletes the following commit to fix the duplicate appearance of `r3`,  321a13e177dc79581ec896568ab8e7633d95b17f \"refactor: update variable names\".\r\n \r\n ```suggestion\r\n        // If we can't fund the tx from confirmed UTXOs of a single OutputType, allow mixed output types\r\n        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r2;\r\n ```",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-14T20:36:56Z",
      "diff_hunk" : "@@ -601,34 +630,38 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n \n         // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n         // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params)}) return r1;\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params)}) return r2;\n+        // Also avoid mixing different UTXO OutputTypes to preserve privacy\n+        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n+        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r2;\n+\n+        // If we can't fund the tx from confirmed UTXOs of a single OutputType, allow mixed output types\n+        if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897297242",
      "id" : 897297242,
      "line" : 638,
      "node_id" : "PRRC_kwDOABII5841e6ta",
      "original_commit_id" : "df6aa1d597b4de1f4707719b3ad5518a94645ee1",
      "original_line" : 638,
      "original_position" : 52,
      "original_start_line" : 635,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 1006463492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897297242/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-14T21:01:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897297242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897302747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897302747"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 784b03888e70a4744e7b387576f874ac18339dbb \"test: functional test for new coin selection logic \"\r\n\r\nNot sure if this is relevant, but I think this may be inconsistent with the categorization pointed out by @achow101 previously, which IIUC prescribes that non-segwit P2SH addresses should be labeled as \"legacy\".",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-14T20:43:57Z",
      "diff_hunk" : "@@ -0,0 +1,195 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r897302747",
      "id" : 897302747,
      "line" : 76,
      "node_id" : "PRRC_kwDOABII5841e8Db",
      "original_commit_id" : "784b03888e70a4744e7b387576f874ac18339dbb",
      "original_line" : 76,
      "original_position" : 76,
      "original_start_line" : 64,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 76,
      "pull_request_review_id" : 1006463492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897302747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 64,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-14T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897302747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-17T22:57:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1159291541",
      "id" : 1159291541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FGWKV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1159291541/reactions"
      },
      "updated_at" : "2022-06-17T22:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1159291541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901090114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901090114"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "originally, i tried to match whatever name was being used to minimize the diff, but looking at this again i think having a consistent naming of `available_coins` throughout is much better (despite a slightly larger diff)",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-19T11:26:02Z",
      "diff_hunk" : "@@ -35,15 +35,42 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* walle\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n /**\n- * populate vCoins with vector of available COutputs.\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n+struct AvailableCoins {\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> Legacy;\n+    std::vector<COutput> P2SH_Segwit;\n+    std::vector<COutput> Bech32;\n+    std::vector<COutput> Bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */\n+    std::vector<COutput> Other;\n+\n+    /** Concatenate and return all COutputs as one vector */\n+    std::vector<COutput> all() const;\n+\n+    /** The following methods are provided so that AvailableCoins can mimic a vector,\n+     * i.e methods can work with invidivudal OutputType vectors or on the entire object */\n+    uint64_t size() const;\n+    void clear();\n+};\n+\n+/**\n+ * populate the AvailableCoins struct with vectors of available COutputs, organized by OutputType.\n  */\n-void AvailableCoins(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl = nullptr, std::optional<CFeeRate> feerate = std::nullopt, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+void GetAvailableCoins(const CWallet& wallet, AvailableCoins& availableCoins, const CCoinControl* coinControl = nullptr, std::optional<CFeeRate> feerate = std::nullopt, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n /**\n  * Wrapper function for AvailableCoins which skips the `feerate` parameter. Use this function\n  * to list all available coins (e.g. listunspent RPC) while not intending to fund a transaction.\n  */\n-void AvailableCoinsListUnspent(const CWallet& wallet, std::vector<COutput>& vCoins, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+void AvailableCoinsListUnspent(const CWallet& wallet, AvailableCoins& coins, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901090114",
      "id" : 901090114,
      "in_reply_to_id" : 897260535,
      "line" : 73,
      "node_id" : "PRRC_kwDOABII5841tYtC",
      "original_commit_id" : "36ccbbc48a80116eb8e979667abd5f44cf36b030",
      "original_line" : 73,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 42,
      "pull_request_review_id" : 1011509602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901090114/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-19T11:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901090114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901093917"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901093917"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah, good catch! `AttemptSelection` will only try with mixed inputs if it is unable to find at least one solution from segregated inputs and if mixing is allowed. So yes, running `r2` with `allow_mixed_inputs=true` achieves want we want without needing the duplicated r3",
      "commit_id" : "c73671a41d4fc2c3258de1dbd33c0dbf3a6f326c",
      "created_at" : "2022-06-19T11:55:21Z",
      "diff_hunk" : "@@ -601,34 +630,38 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, AvailableCoins\n \n         // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n         // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params)}) return r1;\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params)}) return r2;\n+        // Also avoid mixing different UTXO OutputTypes to preserve privacy\n+        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n+        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r2;\n+\n+        // If we can't fund the tx from confirmed UTXOs of a single OutputType, allow mixed output types\n+        if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901093917",
      "id" : 901093917,
      "in_reply_to_id" : 897297242,
      "line" : 638,
      "node_id" : "PRRC_kwDOABII5841tZod",
      "original_commit_id" : "df6aa1d597b4de1f4707719b3ad5518a94645ee1",
      "original_line" : 638,
      "original_position" : 52,
      "original_start_line" : 635,
      "path" : "src/wallet/spend.cpp",
      "position" : 52,
      "pull_request_review_id" : 1011513049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901093917/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-19T11:55:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901093917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901101886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901101886"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "it is inconsistent in the general sense, but for the test it is correct in that we are only generating `p2sh-segwit` outputs. i'll update the comment in the function, tho, to avoid any confusion",
      "commit_id" : "eca95887a541314e45c296a09faca2f22d154934",
      "created_at" : "2022-06-19T12:50:07Z",
      "diff_hunk" : "@@ -0,0 +1,195 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901101886",
      "id" : 901101886,
      "in_reply_to_id" : 897302747,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841tbk-",
      "original_commit_id" : "784b03888e70a4744e7b387576f874ac18339dbb",
      "original_line" : 80,
      "original_position" : 76,
      "original_start_line" : 64,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : null,
      "pull_request_review_id" : 1011520935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901101886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-19T12:50:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901101886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force-pushed for rebase (pretty big rebase following #25005) and also to address feedback from @Xekyo \r\n\r\na few notes:\r\n- after #25005 , it made more sense to leave the function named `AvailableCoins` (as opposed to changing it to `GetAvailableCoins`)\r\n- `available_coins` is the preferred variable name throughout (vs `coin`, `available`, `availableCoins`, `vCoins`, etc)\r\n- dropped a refactor commit after removing the extraneous step in the back-offs \r\n- fixed the functional test to be more clear and removed the unconfirmed tx test as mixing is allowed before spending unconfirmed change\r\n- fixed an error in `bench/coin_selection.cpp` after making `allow_mixed_output_types` boolean required for the function call",
      "created_at" : "2022-06-19T13:53:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1159732813",
      "id" : 1159732813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FIB5N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1159732813/reactions"
      },
      "updated_at" : "2022-06-19T13:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1159732813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901679242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901679242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Regression here due the rebase; use `outpoint` and `output` variables.\r\n\r\n```suggestion\r\n            COutput coin(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\r\n```",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T13:45:24Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);\n+                type = Solver(redeemScript, return_values_unused);\n+                is_from_p2sh = true;\n+            } else {\n+                type = Solver(wtx.tx->vout[i].scriptPubKey, return_values_unused);\n+            };\n+\n+            COutput coin(COutPoint(wtx.GetHash(), i), wtx.tx->vout.at(i), nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901679242",
      "id" : 901679242,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841voiK",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 251,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901679242/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901679242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901812673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`provider` could be null and `GetCScript` could return false.",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T15:50:00Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901812673",
      "id" : 901812673,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841wJHB",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 244,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901812861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`ExtractDestination` could fail.\r\nPlus, same as above, no need to lookup the output. Can use the `output` variable directly.",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T15:50:15Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901812861",
      "id" : 901812861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841wJJ9",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 242,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901812861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901814185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901814185"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No need to lookup the output:\r\n\r\n```suggestion\r\n            if (output.scriptPubKey.IsPayToScriptHash()) {\r\n```",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T15:51:56Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901814185",
      "id" : 901814185,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841wJep",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 239,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901814185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901814185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901858677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858677"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No need to lookup the output:\r\n```suggestion\r\n                type = Solver(output.scriptPubKey, return_values_unused);\r\n```",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T16:54:56Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);\n+                type = Solver(redeemScript, return_values_unused);\n+                is_from_p2sh = true;\n+            } else {\n+                type = Solver(wtx.tx->vout[i].scriptPubKey, return_values_unused);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901858677",
      "id" : 901858677,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841wUV1",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 248,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858677/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901858837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858837"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "extra \";\"",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-20T16:55:11Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);\n+                type = Solver(redeemScript, return_values_unused);\n+                is_from_p2sh = true;\n+            } else {\n+                type = Solver(wtx.tx->vout[i].scriptPubKey, return_values_unused);\n+            };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r901858837",
      "id" : 901858837,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841wUYV",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 249,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1012298271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858837/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T17:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901858837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-20T19:54:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1160797682",
      "id" : 1160797682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FMF3y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160797682/reactions"
      },
      "updated_at" : "2022-06-20T19:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160797682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Then another point is that the bench binary isnât compiling:\r\n> Need to add the new flag allow_mixed_output_types to src/bench/coin_selection.cpp, line 78.\r\n\r\nhey @furszy ! thanks for the review. still looking through your suggestions, but in the meantime, it looks like you might have an outdated branch. the flag for `bench/coin_selection.cpp` was added in https://github.com/bitcoin/bitcoin/pull/24584/commits/27195339c202d280e2c148b39c7ebaf1afbd24dd and i also just confirmed each commit compiles locally\r\n",
      "created_at" : "2022-06-21T12:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1161697801",
      "id" : 1161697801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FPhoJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161697801/reactions"
      },
      "updated_at" : "2022-06-21T12:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161697801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r902932129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932129"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "we check that the provider exists a few lines up with `bool solvable = provider ? IsSolvable(*provider, output.scriptPubKey) : false;` so no need to check it again here.\r\n\r\ngood point with `GetCScript`; i'm thinking we should print something to the logs and continue if we can't get the script? also open to other suggestions\r\n\r\n",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-21T18:18:46Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r902932129",
      "id" : 902932129,
      "in_reply_to_id" : 901812673,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58410aah",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 244,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1014051602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932129/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T18:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r902932881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932881"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "im thinking just print a log and continue if we can't extract a destination?",
      "commit_id" : "167504f9d64147deeb2d1478bb25a3ff34a7df3d",
      "created_at" : "2022-06-21T18:19:36Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r902932881",
      "id" : 902932881,
      "in_reply_to_id" : 901812861,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58410amR",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 242,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1014052578,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932881/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T18:19:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902932881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased off master and took suggestions from @furszy (thanks for the review!); `git range-diff master eca9588 e04037c`\r\n\r\n> What about using a single map<OutputType, std::vector> instead of have one vector definition per output type and encapsulate the vector push, shuffle and erase inside the CoinsResult::push_back, CoinsResult::shuffle and CoinsResult::erase methods?\r\n\r\nthis is how i originally started prototyping this, but i realized there are quite a few places outside of coin selection that use the `OutputTypes` enum and decided against adding an \"OTHER\" `OutputType`. i do think your suggested approach  is better, but merits its own discussion in a follow-up PR. i also think we could improve the mapping from `TxoutType -> OutputType` in the same follow up (or a separate one)",
      "created_at" : "2022-06-22T09:46:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1162886423",
      "id" : 1162886423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FUD0X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162886423/reactions"
      },
      "updated_at" : "2022-06-22T09:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162886423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r903541047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903541047"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "added a check on `spendable` before looking up the CScript (since it doesn't make sense to try and find the script if it's not spendable by us) and handled the case where ExtractDest fails or GetScript fails with a `continue`. ",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-22T10:02:09Z",
      "diff_hunk" : "@@ -204,9 +230,47 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            if (wtx.tx->vout[i].scriptPubKey.IsPayToScriptHash()) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                ExtractDestination(wtx.tx->vout[i].scriptPubKey, destination);\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                provider->GetCScript(hash, redeemScript);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r903541047",
      "id" : 903541047,
      "in_reply_to_id" : 901812673,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58412vE3",
      "original_commit_id" : "d8cd07ec678bcf9c6df1fbca89110538ce35a8b8",
      "original_line" : 244,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1014887511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903541047/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T10:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903541047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "small fix-up on the functional test removing some unneeded lines; `git range-diff master e04037c 7dfac26`",
      "created_at" : "2022-06-22T10:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1162911662",
      "id" : 1162911662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585FUJ-u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162911662/reactions"
      },
      "updated_at" : "2022-06-22T11:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162911662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased master and force pushed to fix a ci issue",
      "created_at" : "2022-06-24T10:43:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1165448264",
      "id" : 1165448264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Fd1RI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165448264/reactions"
      },
      "updated_at" : "2022-06-24T10:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165448264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906692097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there a reason this is a lambda? I removed the lambda (just left its content to run directly), and the tests pass",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T14:50:29Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906692097",
      "id" : 906692097,
      "line" : 476,
      "node_id" : "PRRC_kwDOABII5842CwYB",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 476,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 133,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906692135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692135"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`result` is shadowing?",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T14:51:03Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (allow_mixed_output_types) {\n+                if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906692135",
      "id" : 906692135,
      "line" : 479,
      "node_id" : "PRRC_kwDOABII5842CwYn",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 479,
      "original_position" : 136,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 136,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692135/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906692135",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906693004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906693004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`result` is shadowing? Also,\r\n```suggestion\r\n        std::optional<SelectionResult> result{*std::min_element(results.begin(), results.end())};\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T15:01:11Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (allow_mixed_output_types) {\n+                if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                    return result;\n+                }\n+            }\n+            return std::optional<SelectionResult>();\n+        };\n+        std::optional<SelectionResult> result = *std::min_element(results.begin(), results.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906693004",
      "id" : 906693004,
      "line" : 485,
      "node_id" : "PRRC_kwDOABII5842CwmM",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 485,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 142,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906693004/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906693004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906725861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906725861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, readability; I had a little trouble reading which arguments were to which functions. (I'm unsure if `remove_preset` should be snake_case or camelCase; it's both a function and a variable):\r\n```suggestion\r\n    if (coin_control.HasSelected()) {\r\n        auto remove_preset = [&preset_coins](std::vector<COutput>& ov) {\r\n            ov.erase(\r\n                remove_if(\r\n                    ov.begin(), ov.end(),\r\n                    [&preset_coins](const COutput& c) { return preset_coins.count(c.outpoint) > 0; }),\r\n                ov.end());\r\n        };\r\n        remove_preset(available_coins.legacy);\r\n        remove_preset(available_coins.P2SH_segwit);\r\n        remove_preset(available_coins.bech32);\r\n        remove_preset(available_coins.bech32m);\r\n        remove_preset(available_coins.other);\r\n    }\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:27:25Z",
      "diff_hunk" : "@@ -488,13 +592,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, const std::vec\n         return result;\n     }\n \n-    // remove preset inputs from vCoins so that Coin Selection doesn't pick them.\n-    for (std::vector<COutput>::iterator it = vCoins.begin(); it != vCoins.end() && coin_control.HasSelected();)\n-    {\n-        if (preset_coins.count(it->outpoint))\n-            it = vCoins.erase(it);\n-        else\n-            ++it;\n+    // remove preset inputs from coins so that Coin Selection doesn't pick them.\n+    if (coin_control.HasSelected()) {\n+        available_coins.legacy.erase(remove_if(available_coins.legacy.begin(), available_coins.legacy.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.legacy.end());\n+        available_coins.P2SH_segwit.erase(remove_if(available_coins.P2SH_segwit.begin(), available_coins.P2SH_segwit.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.P2SH_segwit.end());\n+        available_coins.bech32.erase(remove_if(available_coins.bech32.begin(), available_coins.bech32.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.bech32.end());\n+        available_coins.bech32m.erase(remove_if(available_coins.bech32m.begin(), available_coins.bech32m.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.bech32m.end());\n+        available_coins.other.erase(remove_if(available_coins.other.begin(), available_coins.other.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.other.end());\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906725861",
      "id" : 906725861,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5842C4nl",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 602,
      "original_position" : 196,
      "original_start_line" : 596,
      "path" : "src/wallet/spend.cpp",
      "position" : 196,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906725861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 596,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906725861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726356"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    /** Vectors for each OutputType */\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:35:25Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the CoinsResult struct as if it were a vector\n+ */\n struct CoinsResult {\n-    std::vector<COutput> coins;\n-    // Sum of all the coins amounts\n+    /* Vectors for each OutputType */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726356",
      "id" : 906726356,
      "line" : 46,
      "node_id" : "PRRC_kwDOABII5842C4vU",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 46,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 15,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726356/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726458"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    /** Sum of all available coins */\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:36:26Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the CoinsResult struct as if it were a vector\n+ */\n struct CoinsResult {\n-    std::vector<COutput> coins;\n-    // Sum of all the coins amounts\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> legacy;\n+    std::vector<COutput> P2SH_segwit;\n+    std::vector<COutput> bech32;\n+    std::vector<COutput> bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */\n+    std::vector<COutput> other;\n+\n+    /** Concatenate and return all COutputs as one vector */\n+    std::vector<COutput> all() const;\n+\n+    /** The following methods are provided so that CoinsResult can mimic a vector,\n+     * i.e methods can work with invidivudal OutputType vectors or on the entire object */\n+    uint64_t size() const;\n+    void clear();\n+\n+    /** Sum of all available coins **/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726458",
      "id" : 906726458,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII5842C4w6",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 63,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 32,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726458/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726544"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    /** Other is a catch-all for anything that doesn't match the known OutputTypes */\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:37:35Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the CoinsResult struct as if it were a vector\n+ */\n struct CoinsResult {\n-    std::vector<COutput> coins;\n-    // Sum of all the coins amounts\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> legacy;\n+    std::vector<COutput> P2SH_segwit;\n+    std::vector<COutput> bech32;\n+    std::vector<COutput> bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726544",
      "id" : 906726544,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII5842C4yQ",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 52,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 21,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726544/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726681"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n     * i.e., methods can work with individual OutputType vectors or on the entire object */\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:39:28Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the CoinsResult struct as if it were a vector\n+ */\n struct CoinsResult {\n-    std::vector<COutput> coins;\n-    // Sum of all the coins amounts\n+    /* Vectors for each OutputType */\n+    std::vector<COutput> legacy;\n+    std::vector<COutput> P2SH_segwit;\n+    std::vector<COutput> bech32;\n+    std::vector<COutput> bech32m;\n+\n+    /** Other is a catch all for anything that doesn't match the known OutputTypes */\n+    std::vector<COutput> other;\n+\n+    /** Concatenate and return all COutputs as one vector */\n+    std::vector<COutput> all() const;\n+\n+    /** The following methods are provided so that CoinsResult can mimic a vector,\n+     * i.e methods can work with invidivudal OutputType vectors or on the entire object */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906726681",
      "id" : 906726681,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII5842C40Z",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 59,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 28,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906726681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906727275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906727275"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    }\r\n```\r\n(and similarly below)",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:48:21Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906727275",
      "id" : 906727275,
      "line" : 463,
      "node_id" : "PRRC_kwDOABII5842C49r",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 463,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 120,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906727275/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906727275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728058"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n * the CoinsResult struct as if it was a vector\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T21:57:58Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the CoinsResult struct as if it were a vector",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728058",
      "id" : 906728058,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII5842C5J6",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 43,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 10,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728058/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728756"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "clang-format\r\n```suggestion\r\nstd::optional<SelectionResult> AttemptSelection(\r\n    const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\r\n    const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types);\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:08:15Z",
      "diff_hunk" : "@@ -72,35 +96,52 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+ * Attempt to find a valid input set that preserves privacy by not mixing OutputTypes.\n+ * `ChooseSelectionResult()` will be called on each OutputType individually and the best\n+ * the solution (according to the waste metric) will be chosen. If a valid input cannot be found from any\n+ * single OutputType, fallback to running `ChooseSelectionResult()` over all available coins.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * param@[in]  allow_mixed_output_types  Relax restriction that SelectionResults must be of the same OutputType\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n+ */\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                        const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728756",
      "id" : 906728756,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII5842C5U0",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 115,
      "original_position" : 63,
      "original_start_line" : 114,
      "path" : "src/wallet/spend.h",
      "position" : 63,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728756/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 114,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728948"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "clang-format\r\n```suggestion\r\nstd::optional<SelectionResult> ChooseSelectionResult(\r\n    const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\r\n    const CoinSelectionParams& coin_selection_params);\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:10:34Z",
      "diff_hunk" : "@@ -72,35 +96,52 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+ * Attempt to find a valid input set that preserves privacy by not mixing OutputTypes.\n+ * `ChooseSelectionResult()` will be called on each OutputType individually and the best\n+ * the solution (according to the waste metric) will be chosen. If a valid input cannot be found from any\n+ * single OutputType, fallback to running `ChooseSelectionResult()` over all available coins.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * param@[in]  allow_mixed_output_types  Relax restriction that SelectionResults must be of the same OutputType\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n+ */\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                        const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types);\n \n /**\n  * Attempt to find a valid input set that meets the provided eligibility filter and target.\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                 The wallet which provides solving data for the coins\n- * param@[in]  nTargetValue           The target value\n- * param@[in]  eligilibity_filter     A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  coins                  The vector of coins available for selection prior to filtering\n- * param@[in]  coin_selection_params  Parameters for the coin selection\n- * returns                            If successful, a SelectionResult containing the input set\n- *                                    If failed, a nullopt\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The vector of coins available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n  */\n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n+std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n                         const CoinSelectionParams& coin_selection_params);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906728948",
      "id" : 906728948,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII5842C5X0",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 131,
      "original_position" : 87,
      "original_start_line" : 130,
      "path" : "src/wallet/spend.h",
      "position" : 87,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 130,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906728948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729278"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "clang-format\r\n```suggestion\r\nstd::optional<SelectionResult> SelectCoins(\r\n    const CWallet& wallet, CoinsResult& available_coins, const CAmount& nTargetValue, const CCoinControl& coin_control,\r\n    const CoinSelectionParams& coin_selection_params) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:14:03Z",
      "diff_hunk" : "@@ -72,35 +96,52 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+ * Attempt to find a valid input set that preserves privacy by not mixing OutputTypes.\n+ * `ChooseSelectionResult()` will be called on each OutputType individually and the best\n+ * the solution (according to the waste metric) will be chosen. If a valid input cannot be found from any\n+ * single OutputType, fallback to running `ChooseSelectionResult()` over all available coins.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * param@[in]  allow_mixed_output_types  Relax restriction that SelectionResults must be of the same OutputType\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n+ */\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                        const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types);\n \n /**\n  * Attempt to find a valid input set that meets the provided eligibility filter and target.\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                 The wallet which provides solving data for the coins\n- * param@[in]  nTargetValue           The target value\n- * param@[in]  eligilibity_filter     A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  coins                  The vector of coins available for selection prior to filtering\n- * param@[in]  coin_selection_params  Parameters for the coin selection\n- * returns                            If successful, a SelectionResult containing the input set\n- *                                    If failed, a nullopt\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The vector of coins available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n  */\n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n+std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n                         const CoinSelectionParams& coin_selection_params);\n \n /**\n  * Select a set of coins such that nTargetValue is met and at least\n  * all coins from coin_control are selected; never select unconfirmed coins if they are not ours\n  * param@[in]   wallet                 The wallet which provides data necessary to spend the selected coins\n- * param@[in]   vAvailableCoins        The vector of coins available to be spent\n+ * param@[in]   available_coins        The struct of coins, organized by OutputType, available for selection prior to filtering\n  * param@[in]   nTargetValue           The target value\n  * param@[in]   coin_selection_params  Parameters for this coin selection such as feerates, whether to avoid partial spends,\n  *                                     and whether to subtract the fee from the outputs.\n  * returns                             If successful, a SelectionResult containing the selected coins\n  *                                     If failed, a nullopt.\n  */\n-std::optional<SelectionResult> SelectCoins(const CWallet& wallet, const std::vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, const CCoinControl& coin_control,\n+std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& available_coins, const CAmount& nTargetValue, const CCoinControl& coin_control,\n                  const CoinSelectionParams& coin_selection_params) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729278",
      "id" : 906729278,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII5842C5c-",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 145,
      "original_position" : 103,
      "original_start_line" : 144,
      "path" : "src/wallet/spend.h",
      "position" : 103,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 144,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729500"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n// file COPYING or https://www.opensource.org/licenses/mit-license.php.\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:16:57Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729500",
      "id" : 906729500,
      "line" : 3,
      "node_id" : "PRRC_kwDOABII5842C5gc",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 3,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : 3,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729500/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729778"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n# file COPYING or https://www.opensource.org/licenses/mit-license.php.\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:20:30Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729778",
      "id" : 906729778,
      "line" : 4,
      "node_id" : "PRRC_kwDOABII5842C5ky",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 4,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729778/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729814"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nA wallet may have different types of UTXOs to choose from during coin selection,\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-25T22:21:31Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906729814",
      "id" : 906729814,
      "line" : 7,
      "node_id" : "PRRC_kwDOABII5842C5lW",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 7,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 7,
      "pull_request_review_id" : 1019324006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729814/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-25T22:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906729814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906739387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906739387"
         }
      },
      "author_association" : "NONE",
      "body" : "> I re-worked this to run coin selection by `OutputType` at each back-off, which fixed the preference for spending unconfirmed UTXOs. as such, I was able to leave the tests as is and removed the test changes from the PR.\r\n\r\n",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-26T00:43:24Z",
      "diff_hunk" : "@@ -293,7 +293,7 @@ def test_getbalances_used(self):\n \n         # send multiple transactions, reusing one address\n         for _ in range(101):\n-            self.nodes[0].sendtoaddress(new_addr, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r906739387",
      "id" : 906739387,
      "in_reply_to_id" : 836686905,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842C767",
      "original_commit_id" : "eaaece5598c713e4698c379dfbceefac4be44992",
      "original_line" : 307,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoidreuse.py",
      "position" : null,
      "pull_request_review_id" : 1019362751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906739387/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-26T00:43:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906739387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/108155318?v=4",
         "events_url" : "https://api.github.com/users/mehdialiakbar31/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mehdialiakbar31/followers",
         "following_url" : "https://api.github.com/users/mehdialiakbar31/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mehdialiakbar31/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mehdialiakbar31",
         "id" : 108155318,
         "login" : "mehdialiakbar31",
         "node_id" : "U_kgDOBnJRtg",
         "organizations_url" : "https://api.github.com/users/mehdialiakbar31/orgs",
         "received_events_url" : "https://api.github.com/users/mehdialiakbar31/received_events",
         "repos_url" : "https://api.github.com/users/mehdialiakbar31/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mehdialiakbar31/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mehdialiakbar31/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mehdialiakbar31"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Leaking information in a later transaction\r\n\r\nConcept ACK for fixing this\r\n\r\n> Accumulating older OutputType UTXOs\r\n\r\nNot sure about this because average users will use bech32/bech32m addresses. If some users prefer other addresses then it should be okay to accumulate other types in the wallet.\r\n\r\nStill need to review and test the approach. My first reaction after looking at the diagram was if the transaction has mixed inputs, will it be okay to use mixed outputs?\r\n\r\n![mixinmixout](https://user-images.githubusercontent.com/94559964/175802998-d7a3c840-5754-4575-8902-88c90fb8ab7d.png)\r\n\r\nOr never use mixed inputs in a transaction?\r\n",
      "created_at" : "2022-06-26T06:54:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1166432804",
      "id" : 1166432804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585Fhlok",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1166432804/reactions"
      },
      "updated_at" : "2022-06-26T06:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1166432804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907733451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907733451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d \"refactor: store by OutputType in CoinsResult\"\r\n\r\n`solvable` is good enough for this check. We just need to be able to look up the script which `solvable` indicates.\r\n\r\n```suggestion\r\n            if (output.scriptPubKey.IsPayToScriptHash() && solvable) {\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-27T19:37:22Z",
      "diff_hunk" : "@@ -199,9 +225,53 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n-            result.total_amount += output.nValue;\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            // If the Output is P2SH and spendable, we want to know if it is\n+            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n+            // this from the redeemScript. If the Output is not spendable, it will be classified\n+            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n+            if (output.scriptPubKey.IsPayToScriptHash() && spendable) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907733451",
      "id" : 907733451,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII5842GunL",
      "original_commit_id" : "2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d",
      "original_line" : 238,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 49,
      "pull_request_review_id" : 1020689658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907733451/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-27T20:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907733451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907737119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907737119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d \"refactor: store by OutputType in CoinsResult\"\r\n\r\nI think `WITNESS_UNKNOWN` should also be classified as bech32m.\r\n\r\n```suggestion\r\n            case TxoutType::WITNESS_UNKNOWN:\r\n            case TxoutType::WITNESS_V1_TAPROOT:\r\n```",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-27T19:42:21Z",
      "diff_hunk" : "@@ -199,9 +225,53 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (!spendable && only_spendable) continue;\n \n             int input_bytes = GetTxSpendSize(wallet, wtx, i, (coinControl && coinControl->fAllowWatchOnly));\n-            result.coins.emplace_back(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n-            result.total_amount += output.nValue;\n+            // When parsing a scriptPubKey, Solver returns the parsed pubkeys or hashes (depending on the script)\n+            // We don't need those here, so we are leaving them in return_values_unused\n+            std::vector<std::vector<uint8_t>> return_values_unused;\n+            TxoutType type;\n+            bool is_from_p2sh{false};\n+\n+            // If the Output is P2SH and spendable, we want to know if it is\n+            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n+            // this from the redeemScript. If the Output is not spendable, it will be classified\n+            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n+            if (output.scriptPubKey.IsPayToScriptHash() && spendable) {\n+                CScript redeemScript;\n+                CTxDestination destination;\n+                if (!ExtractDestination(output.scriptPubKey, destination))\n+                    continue;\n+                const CScriptID& hash = CScriptID(std::get<ScriptHash>(destination));\n+                if (!provider->GetCScript(hash, redeemScript))\n+                    continue;\n+                type = Solver(redeemScript, return_values_unused);\n+                is_from_p2sh = true;\n+            } else {\n+                type = Solver(output.scriptPubKey, return_values_unused);\n+            }\n \n+            COutput coin(outpoint, output, nDepth, input_bytes, spendable, solvable, safeTx, wtx.GetTxTime(), tx_from_me, feerate);\n+            switch (type) {\n+            case TxoutType::WITNESS_V1_TAPROOT:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907737119",
      "id" : 907737119,
      "line" : 254,
      "node_id" : "PRRC_kwDOABII5842Gvgf",
      "original_commit_id" : "2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d",
      "original_line" : 254,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 65,
      "pull_request_review_id" : 1020689658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907737119/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-27T20:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907737119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907757656"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907757656"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ffcc600156e45968b47586e6758f107a56d6b80e \"test: functional test for new coin selection logic\"\r\n\r\nHow can we be sure that `v` is never greater than 10 (and thus result in mixing input types)?",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-27T20:10:48Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit outputself.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+    has_bech32m = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_segwit_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True\n+        if is_bech32m_address(node, addr):\n+            has_bech32m = True\n+\n+    return (sum([has_legacy, has_p2sh, has_bech32, has_bech32m]) == 1)\n+\n+\n+def generate_payment_values(n, m):\n+    \"\"\"Return a randomly chosen list of n positive integers summing to m.\n+    Each such list is equally likely to occur.\"\"\"\n+\n+    dividers = sorted(random.sample(range(1, m), n - 1))\n+    return [a - b for a, b in zip(dividers + [m], [0] + dividers)]\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def make_payment(self, A, B, v, addr_type):\n+        fee_rate = random.randint(1, 20)\n+        self.log.debug(f\"Making payment of {v} BTC at fee_rate {fee_rate}\")\n+        tx = B.sendtoaddress(\n+            address=A.getnewaddress(address_type=addr_type),\n+            amount=v,\n+            fee_rate=fee_rate,\n+        )\n+        return tx\n+\n+    def run_test(self):\n+\n+        # alias self.nodes[i] to A, B for readability\n+        A, B = self.nodes[0], self.nodes[1]\n+        self.generate(A, COINBASE_MATURITY + 5)\n+\n+        self.log.info(\"Creating mixed UTXOs in B's wallet\")\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to legacy\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"legacy\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to p2sh\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"p2sh-segwit\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to bech32\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"bech32\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to bech32m\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"bech32m\"), v)\n+\n+        self.generate(A, 1)\n+\n+        self.log.info(\"Sending payments from B to A\")\n+        for v in generate_payment_values(10, 20):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907757656",
      "id" : 907757656,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII5842G0hY",
      "original_commit_id" : "ffcc600156e45968b47586e6758f107a56d6b80e",
      "original_line" : 177,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 177,
      "pull_request_review_id" : 1020689658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907757656/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-27T20:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907757656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907762558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907762558"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ffcc600156e45968b47586e6758f107a56d6b80e \"test: functional test for new coin selection logic\"\r\n\r\nThe easiest way to check for address type is to check what the descriptor starts with. `sh(wpkh(` or `sh(wsh(` is p2sh-segwit, `wpkh(` or `wsh(` is bech32, `tr(` is bech32m, and `pkh(` is legacy.",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-27T20:17:19Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit outputself.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r907762558",
      "id" : 907762558,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII5842G1t-",
      "original_commit_id" : "ffcc600156e45968b47586e6758f107a56d6b80e",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : 64,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 74,
      "pull_request_review_id" : 1020689658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907762558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 64,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-27T20:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/907762558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908271866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908271866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nice! this test only runs with `--descriptors` so ill update the `is_<addrtype>` functions",
      "commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "created_at" : "2022-06-28T09:41:59Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit outputself.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908271866",
      "id" : 908271866,
      "in_reply_to_id" : 907762558,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII5842IyD6",
      "original_commit_id" : "ffcc600156e45968b47586e6758f107a56d6b80e",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : 64,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 74,
      "pull_request_review_id" : 1021438373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908271866/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 64,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-28T09:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908271866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908822322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908822322"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d refactor: store by OutputType in CoinsResult:\r\n\r\nNaming-nit:\r\nFrom what I can tell, the struct that previously was `AvailableCoins` was renamed to `CoinsResult`. I'd submit that `AvailableCoins` was more descriptive.âIsn't any function's output a \"result\"? It feels like adding \"â¦Result\" dosen't add any information. The most notable things about this struct are that it a) lists the available UTXOs, b) separated by output types. These aspects are not captured well by `CoinsResult`.  \r\n\r\nSince `AvailableCoins` seems to be out of favor: We usually call the set of UTXOs available to a wallet its \"UTXO pool\". Since this codebase uses \"Coin\" for UTXO  frequently, maybe call this struct `CoinPool`, or `CoinPools` to stress that there are multiple sets?\r\n\r\n```suggestion\r\nstruct CoinPools {\r\n```",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-06-28T18:40:21Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n struct CoinsResult {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908822322",
      "id" : 908822322,
      "line" : 38,
      "node_id" : "PRRC_kwDOABII5842K4cy",
      "original_commit_id" : "2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d",
      "original_line" : 38,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 12,
      "pull_request_review_id" : 1022229917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908822322/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T19:48:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908822322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908830050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908830050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit message for 3520cf9d76d24e43b3ba08fe03687ee1b2e2368e (refactor: use AvailableCoins struct in SelectCoins)\r\n\r\nThe struct has been renamed to `CoinsResult` but is referred to as `AvailableCoins` in the commit message.",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-06-28T18:50:18Z",
      "diff_hunk" : "@@ -56,9 +56,9 @@ static void CoinSelection(benchmark::Bench& bench)\n     addCoin(3 * COIN, wallet, wtxs);\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908830050",
      "id" : 908830050,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII5842K6Vi",
      "original_commit_id" : "3520cf9d76d24e43b3ba08fe03687ee1b2e2368e",
      "original_line" : 57,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/bench/coin_selection.cpp",
      "position" : 2,
      "pull_request_review_id" : 1022229917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908830050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T19:48:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908830050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908864044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908864044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Consistency nit: In 3520cf9d76d24e43b3ba08fe03687ee1b2e2368e (refactor: use AvailableCoins struct in SelectCoins) \r\n\r\nAs below, should perhaps be referred to as the struct?\r\n\r\n```suggestion\r\n * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\r\n```",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-06-28T19:25:08Z",
      "diff_hunk" : "@@ -105,26 +105,42 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n  * param@[in]  wallet                 The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue           The target value\n  * param@[in]  eligilibity_filter     A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  coins                  The vector of coins available for selection prior to filtering\n+ * param@[in]  available_coins        The struct of coins, organized by OutputType, available for selection prior to filtering\n  * param@[in]  coin_selection_params  Parameters for the coin selection\n  * returns                            If successful, a SelectionResult containing the input set\n  *                                    If failed, a nullopt\n  */\n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                        const CoinSelectionParams& coin_selection_params);\n+\n+/**\n+ * Attempt to find a valid input set that meets the provided eligibility filter and target.\n+ * Multiple coin selection algorithms will be run and the input set that produces the least waste\n+ * (according to the waste metric) will be chosen.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The vector of coins available for selection prior to filtering",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r908864044",
      "id" : 908864044,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842LCos",
      "original_commit_id" : "3520cf9d76d24e43b3ba08fe03687ee1b2e2368e",
      "original_line" : 124,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : null,
      "pull_request_review_id" : 1022229917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908864044/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T19:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908864044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913936346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913936346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "it was originally a lambda, but i do think it's more legible without it. also, removing the lambda also takes care of the shadowing ",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T15:34:49Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913936346",
      "id" : 913936346,
      "in_reply_to_id" : 906692097,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842eY_a",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 476,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1028837585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913936346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T15:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913936346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913938049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913938049"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed by removing the lambda, fixed the initialization to use braces",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T15:36:41Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (allow_mixed_output_types) {\n+                if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                    return result;\n+                }\n+            }\n+            return std::optional<SelectionResult>();\n+        };\n+        std::optional<SelectionResult> result = *std::min_element(results.begin(), results.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913938049",
      "id" : 913938049,
      "in_reply_to_id" : 906693004,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842eZaB",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 485,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1028840075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913938049/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T15:36:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913938049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913939806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913939806"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed by removing the lambda",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T15:38:30Z",
      "diff_hunk" : "@@ -383,20 +453,55 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    };\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    std::optional<SelectionResult> result = [&] {\n+        if (results.size() == 0) {\n+            if (allow_mixed_output_types) {\n+                if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913939806",
      "id" : 913939806,
      "in_reply_to_id" : 906692135,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842eZ1e",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 479,
      "original_position" : 136,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1028842596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913939806/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T15:38:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913939806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913941842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913941842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "agree that this is not the most readable :sweat_smile: , however i really like @furszy 's suggestion for refactoring this: move the shuffle and erase functions into the `CoinsResult` struct. i didn't take his suggestion in this PR because it requires a bigger refactor than the scope of this PR, but i plan to address it in a follow-up.\r\n\r\nfor reference, it would look like this: https://github.com/furszy/bitcoin-core/commit/a5d4461eb30ad2da63a30a103ec16853689e3d38",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T15:40:34Z",
      "diff_hunk" : "@@ -488,13 +592,13 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, const std::vec\n         return result;\n     }\n \n-    // remove preset inputs from vCoins so that Coin Selection doesn't pick them.\n-    for (std::vector<COutput>::iterator it = vCoins.begin(); it != vCoins.end() && coin_control.HasSelected();)\n-    {\n-        if (preset_coins.count(it->outpoint))\n-            it = vCoins.erase(it);\n-        else\n-            ++it;\n+    // remove preset inputs from coins so that Coin Selection doesn't pick them.\n+    if (coin_control.HasSelected()) {\n+        available_coins.legacy.erase(remove_if(available_coins.legacy.begin(), available_coins.legacy.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.legacy.end());\n+        available_coins.P2SH_segwit.erase(remove_if(available_coins.P2SH_segwit.begin(), available_coins.P2SH_segwit.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.P2SH_segwit.end());\n+        available_coins.bech32.erase(remove_if(available_coins.bech32.begin(), available_coins.bech32.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.bech32.end());\n+        available_coins.bech32m.erase(remove_if(available_coins.bech32m.begin(), available_coins.bech32m.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.bech32m.end());\n+        available_coins.other.erase(remove_if(available_coins.other.begin(), available_coins.other.end(), [&](const COutput& c) { return preset_coins.count(c.outpoint); }), available_coins.other.end());\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913941842",
      "id" : 913941842,
      "in_reply_to_id" : 906725861,
      "line" : 598,
      "node_id" : "PRRC_kwDOABII5842eaVS",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 598,
      "original_position" : 196,
      "original_start_line" : 596,
      "path" : "src/wallet/spend.cpp",
      "position" : 194,
      "pull_request_review_id" : 1028845465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913941842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 592,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-05T15:40:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913941842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913945063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913945063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "huh, interesting. seems like we have a mix of http and https throughout the codebase in the license header (mental note to fix this in a follow up)",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T15:43:51Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r913945063",
      "id" : 913945063,
      "in_reply_to_id" : 906729500,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842ebHn",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 3,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1028850048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913945063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T15:43:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/913945063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914004521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914004521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`CoinsResult` was introduced in https://github.com/bitcoin/bitcoin/pull/25005 , which changed `AvailableCoins` to return a struct instead of populating a vector and was introduced here after a rebase.\r\n\r\nPersonally, I prefer `AvailableCoins` as the name of the struct (and renaming the `AvailableCoins` function to `GetAvailableCoins`), but changing the name again in this PR felt a little silly and would have expanded the diff on this PR. I have a follow-up PR in mind which incorporates some feedback from @furszy regarding the `CoinsResult` struct, and I think that would be a better place to address the naming",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T16:51:24Z",
      "diff_hunk" : "@@ -34,14 +34,38 @@ struct TxSize {\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const std::vector<CTxOut>& txouts, const CCoinControl* coin_control = nullptr);\n TxSize CalculateMaximumSignedTxSize(const CTransaction& tx, const CWallet* wallet, const CCoinControl* coin_control = nullptr) EXCLUSIVE_LOCKS_REQUIRED(wallet->cs_wallet);\n \n+/**\n+ * COutputs available for spending, stored by OutputType.\n+ * This struct is really just a wrapper around OutputType vectors with a convenient\n+ * method for concatenating and returning all COutputs as one vector.\n+ *\n+ * clear(), size() methods are implemented so that one can interact with\n+ * the AvailableCoins struct as if it were a vector\n+ */\n struct CoinsResult {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914004521",
      "id" : 914004521,
      "in_reply_to_id" : 908822322,
      "line" : 38,
      "node_id" : "PRRC_kwDOABII5842epop",
      "original_commit_id" : "2f3d3622a8b0d5dccdd574d5e37d8239a2f8ed4d",
      "original_line" : 38,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 12,
      "pull_request_review_id" : 1028933751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914004521/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T16:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914004521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914005090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914005090"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah, good point. there is nothing to prevent that, altho it is incredibly unlikely. ill change the values to 5 payments which add up to 9 to guarantee there is never a value of >= 10",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T16:52:08Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different type UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            not addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 0\n+        )\n+    return False\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    if addr_info['iswitness']:\n+        return (\n+            addr_info['isscript'] and\n+            addr_info['iswitness'] and addr_info['witness_version'] == 1\n+        )\n+    return False\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit outputself.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (\n+        addr_info['isscript'] and\n+        not addr_info['iswitness']\n+    )\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return (not addr_info['isscript'] and not addr_info['iswitness'])\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+    has_bech32m = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_segwit_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True\n+        if is_bech32m_address(node, addr):\n+            has_bech32m = True\n+\n+    return (sum([has_legacy, has_p2sh, has_bech32, has_bech32m]) == 1)\n+\n+\n+def generate_payment_values(n, m):\n+    \"\"\"Return a randomly chosen list of n positive integers summing to m.\n+    Each such list is equally likely to occur.\"\"\"\n+\n+    dividers = sorted(random.sample(range(1, m), n - 1))\n+    return [a - b for a, b in zip(dividers + [m], [0] + dividers)]\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def make_payment(self, A, B, v, addr_type):\n+        fee_rate = random.randint(1, 20)\n+        self.log.debug(f\"Making payment of {v} BTC at fee_rate {fee_rate}\")\n+        tx = B.sendtoaddress(\n+            address=A.getnewaddress(address_type=addr_type),\n+            amount=v,\n+            fee_rate=fee_rate,\n+        )\n+        return tx\n+\n+    def run_test(self):\n+\n+        # alias self.nodes[i] to A, B for readability\n+        A, B = self.nodes[0], self.nodes[1]\n+        self.generate(A, COINBASE_MATURITY + 5)\n+\n+        self.log.info(\"Creating mixed UTXOs in B's wallet\")\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to legacy\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"legacy\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to p2sh\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"p2sh-segwit\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to bech32\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"bech32\"), v)\n+\n+        for v in generate_payment_values(3, 10):\n+            self.log.debug(f\"Making payment of {v} BTC to bech32m\")\n+            A.sendtoaddress(B.getnewaddress(address_type=\"bech32m\"), v)\n+\n+        self.generate(A, 1)\n+\n+        self.log.info(\"Sending payments from B to A\")\n+        for v in generate_payment_values(10, 20):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914005090",
      "id" : 914005090,
      "in_reply_to_id" : 907757656,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842epxi",
      "original_commit_id" : "ffcc600156e45968b47586e6758f107a56d6b80e",
      "original_line" : 177,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : null,
      "pull_request_review_id" : 1028934580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914005090/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-05T16:52:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914005090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Not sure about this because average users will use bech32/bech32m addresses. If some users prefer other addresses then it should be okay to accumulate other types in the wallet.\r\n\r\nregardless of what the wallet default address type is, since https://github.com/bitcoin/bitcoin/pull/23789 , a user will accumulate non-default address types in their wallet based on the change address matching logic. this is the primary motivation for this PR. perhaps a better phrasing in the description would be \"non-default\" (instead of older types).",
      "created_at" : "2022-07-05T16:53:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1175282186",
      "id" : 1175282186,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GDWIK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175282186/reactions"
      },
      "updated_at" : "2022-07-05T16:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175282186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914029380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914029380"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "i tried to avoid changing the formatting as much as possible to minimize the diff on this PR, so im inclined to leave it as is, but happy to change if others have an opinion about it.\r\n\r\nnot sure what the recommended best practice here is :man_shrugging: ",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-05T17:23:22Z",
      "diff_hunk" : "@@ -72,35 +96,52 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+ * Attempt to find a valid input set that preserves privacy by not mixing OutputTypes.\n+ * `ChooseSelectionResult()` will be called on each OutputType individually and the best\n+ * the solution (according to the waste metric) will be chosen. If a valid input cannot be found from any\n+ * single OutputType, fallback to running `ChooseSelectionResult()` over all available coins.\n+ *\n+ * param@[in]  wallet                    The wallet which provides solving data for the coins\n+ * param@[in]  nTargetValue              The target value\n+ * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n+ * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  coin_selection_params     Parameters for the coin selection\n+ * param@[in]  allow_mixed_output_types  Relax restriction that SelectionResults must be of the same OutputType\n+ * returns                               If successful, a SelectionResult containing the input set\n+ *                                       If failed, a nullopt\n+ */\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                        const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r914029380",
      "id" : 914029380,
      "in_reply_to_id" : 906728756,
      "line" : 108,
      "node_id" : "PRRC_kwDOABII5842evtE",
      "original_commit_id" : "838685a4d018961dcd8315a59028aaa262b61916",
      "original_line" : 108,
      "original_position" : 63,
      "original_start_line" : 114,
      "path" : "src/wallet/spend.h",
      "position" : 63,
      "pull_request_review_id" : 1028968124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914029380/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 107,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-05T17:23:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914029380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "sorry for the late response all, and thanks for the review! force-pushed to address feedback from @LarryRuane , @achow101 and @Xekyo ; changes can be verified with `git range-diff master 838685a 7f12300`",
      "created_at" : "2022-07-05T17:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1175324748",
      "id" : 1175324748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GDghM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175324748/reactions"
      },
      "updated_at" : "2022-07-05T17:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1175324748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-07-06T17:05:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1176468502",
      "id" : 1176468502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GH3wW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1176468502/reactions"
      },
      "updated_at" : "2022-07-06T17:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1176468502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force pushed for rebase; `git range-diff master 7f12300 2e30c09`",
      "created_at" : "2022-07-07T12:04:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1177501508",
      "id" : 1177501508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GLz9E",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177501508/reactions"
      },
      "updated_at" : "2022-07-07T12:04:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177501508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Not sure about this because average users will use bech32/bech32m addresses. If some users prefer other addresses then it should be okay to accumulate other types in the wallet.\r\n> \r\n> regardless of what the wallet default address type is, since #23789 , a user will accumulate non-default address types in their wallet based on the change address matching logic. this is the primary motivation for this PR. perhaps a better phrasing in the description would be \"non-default\" (instead of older types).\r\n\r\nIt happens only when user sends bitcoin to non-default type. This was my point in the quoted part of comment.",
      "created_at" : "2022-07-07T17:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1177977052",
      "id" : 1177977052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GNoDc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177977052/reactions"
      },
      "updated_at" : "2022-07-07T17:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177977052",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It happens only when user sends bitcoin to non-default type. This was my point in the quoted part of comment.\r\n\r\ngotcha, i think we are on the same page, unless i am misunderstanding your comment. my point was this is not related to average user behavior. for example:\r\n\r\nif i have P2PKH as my default and i regularly pay to bech32/bech32m addresses, i will begin to accumulate non-default UTXOs in my wallet, which might be undesirable for me, the user.\r\n\r\nalthough, reading this again, that section of the description is a bit outdated. originally, i implemented this to prefer spending \"older types\" first, but it was pointed out by other reviewers that it would be better to always spend the most economical UTXOs without forcing an ordering by `OutputType`. ill update the the description to remove references to older type UTXOs as that is not really the primary concern of this PR: the issue this PR addresses is the privacy leak that can happen when different type UTXOs are mixed when funding a transaction.",
      "created_at" : "2022-07-07T17:45:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1177991068",
      "id" : 1177991068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GNrec",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177991068/reactions"
      },
      "updated_at" : "2022-07-07T17:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177991068",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 2e30c09e1ec488a0bd22c88b7f79d8d1bc3b098e",
      "created_at" : "2022-07-07T20:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1178203503",
      "id" : 1178203503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GOfVv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178203503/reactions"
      },
      "updated_at" : "2022-07-07T20:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178203503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-07-08T15:12:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1179098648",
      "id" : 1179098648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GR54Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179098648/reactions"
      },
      "updated_at" : "2022-07-08T15:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179098648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "force-pushed for a rebase; `git range-diff master 2e30c09 6530d19`",
      "created_at" : "2022-07-12T10:28:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1181592712",
      "id" : 1181592712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585GbayI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1181592712/reactions"
      },
      "updated_at" : "2022-07-12T10:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1181592712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920299948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920299948"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not a request for this PR, but in the future perhaps consider using a scripted-diffs for large renaming operations.",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-13T16:47:34Z",
      "diff_hunk" : "@@ -67,7 +67,7 @@ static void add_coin(const CAmount& nValue, int nInput, CoinSet& set, CAmount fe\n     set.insert(coin);\n }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920299948",
      "id" : 920299948,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII58422qms",
      "original_commit_id" : "4be724d8e723c7cc18aec568983c24ee4e753262",
      "original_line" : 68,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/wallet/test/coinselector_tests.cpp",
      "position" : 2,
      "pull_request_review_id" : 1037679184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920299948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T18:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920299948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920340596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920340596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: In \"wallet: run coin selection by OutputType\" (074e58f46b6ca2fe51fb6cb52ac296b971153e9c)\r\n\r\nThe \"output\" here threw me off, I think you meant \"output type\"\r\n```suggestion\r\n        // Also, allow mixing if and only if a solution from any single output type cannot be found\r\n```\r\n\r\nPerhaps go with:\r\n```suggestion\r\n        // Allow mixing only if no solution from any single output type can be found\r\n```\r\n\r\nAlso, this comment seems to be one line too early, shouldn't this be between `r1` and `r2`?",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-13T17:35:04Z",
      "diff_hunk" : "@@ -601,34 +626,35 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n \n         // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n         // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), available_coins, coin_selection_params)}) return r1;\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), available_coins, coin_selection_params)}) return r2;\n+        // Also, allow mixing if and only if a solution from any single output cannot be found",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920340596",
      "id" : 920340596,
      "line" : 629,
      "node_id" : "PRRC_kwDOABII584220h0",
      "original_commit_id" : "074e58f46b6ca2fe51fb6cb52ac296b971153e9c",
      "original_line" : 629,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 43,
      "pull_request_review_id" : 1037679184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920340596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T18:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920340596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920345794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920345794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    \"\"\"Check if an address contains a P2SH-Segwit output.\r\n```",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-13T17:41:11Z",
      "diff_hunk" : "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different types of UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('wpkh(')\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('tr(')\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit outputself.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920345794",
      "id" : 920345794,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII584221zC",
      "original_commit_id" : "d0d64c7858a0d0e2a402a635041126770c7123a5",
      "original_line" : 55,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 55,
      "pull_request_review_id" : 1037679184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920345794/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T18:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920345794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920355560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920355560"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In \"test: functional test for new coin selection logic\" (d0d64c7858a0d0e2a402a635041126770c7123a5): \r\nThis description seems to be outdated. I think it's now all four types and three UTXOs each for a total of 40â¯â¿.",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-13T17:53:16Z",
      "diff_hunk" : "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different types of UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends 10\n+random value payments to Bob, creating 5 bech32 UTXOs and 5 P2SH UTXOs,\n+for a total of 30BTC in Bob's wallet.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920355560",
      "id" : 920355560,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII584224Lo",
      "original_commit_id" : "d0d64c7858a0d0e2a402a635041126770c7123a5",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : 16,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 18,
      "pull_request_review_id" : 1037679184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920355560/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 16,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-13T18:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920355560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920364637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920364637"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No change needed: Don't quite understand why the `RANDOM_CHANGE_POSITION` is defined specifically like this. Wouldn't this just work?\r\n\r\n```suggestion\r\n            std::optional<CreatedTransactionResult> txr = CreateTransaction(*wallet, {recipient}, /*change_pos=*/-1, error, dummy, fee_calc_out);\r\n```",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-13T18:04:12Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <validation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(availablecoins_tests, WalletTestingSetup)\n+class AvailableCoinsTestingSetup : public TestChain100Setup\n+{\n+public:\n+    AvailableCoinsTestingSetup()\n+    {\n+        CreateAndProcessBlock({}, {});\n+        wallet = CreateSyncedWallet(*m_node.chain, m_node.chainman->ActiveChain(), m_args, coinbaseKey);\n+    }\n+\n+    ~AvailableCoinsTestingSetup()\n+    {\n+        wallet.reset();\n+    }\n+    CWalletTx& AddTx(CRecipient recipient)\n+    {\n+        CTransactionRef tx;\n+        bilingual_str error;\n+        CCoinControl dummy;\n+        FeeCalculation fee_calc_out;\n+        {\n+            constexpr int RANDOM_CHANGE_POSITION = -1;\n+            std::optional<CreatedTransactionResult> txr = CreateTransaction(*wallet, {recipient}, RANDOM_CHANGE_POSITION, error, dummy, fee_calc_out);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r920364637",
      "id" : 920364637,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII584226Zd",
      "original_commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : 35,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : 36,
      "pull_request_review_id" : 1037679184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920364637/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-13T18:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920364637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-18T20:04:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1188247460",
      "id" : 1188247460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585G0zek",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188247460/reactions"
      },
      "updated_at" : "2022-07-18T20:04:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188247460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe this PR conflicts with master silently?\r\nI cannot compile the code when rebasing with master but do not get any merge conflicts.\r\nIt looks like the issue comes from the last commit 6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a.",
      "created_at" : "2022-07-19T00:06:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1188454272",
      "id" : 1188454272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585G1l-A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188454272/reactions"
      },
      "updated_at" : "2022-07-19T00:06:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188454272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r923958534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923958534"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Need to adapt this (and the ones below) to the new result class.\r\n\r\n```\r\nconst auto& op_dest = wallet->GetNewDestination(OutputType::BECH32M, \"\");\r\nBOOST_ASSERT(op_dest.HasRes());\r\nconst CTxDestination& dest = op_dest.GetObj();\r\n```",
      "commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "created_at" : "2022-07-19T00:23:54Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <validation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(availablecoins_tests, WalletTestingSetup)\n+class AvailableCoinsTestingSetup : public TestChain100Setup\n+{\n+public:\n+    AvailableCoinsTestingSetup()\n+    {\n+        CreateAndProcessBlock({}, {});\n+        wallet = CreateSyncedWallet(*m_node.chain, m_node.chainman->ActiveChain(), m_args, coinbaseKey);\n+    }\n+\n+    ~AvailableCoinsTestingSetup()\n+    {\n+        wallet.reset();\n+    }\n+    CWalletTx& AddTx(CRecipient recipient)\n+    {\n+        CTransactionRef tx;\n+        bilingual_str error;\n+        CCoinControl dummy;\n+        FeeCalculation fee_calc_out;\n+        {\n+            constexpr int RANDOM_CHANGE_POSITION = -1;\n+            std::optional<CreatedTransactionResult> txr = CreateTransaction(*wallet, {recipient}, RANDOM_CHANGE_POSITION, error, dummy, fee_calc_out);\n+            BOOST_CHECK(txr.has_value());\n+            tx = txr->tx;\n+        }\n+        wallet->CommitTransaction(tx, {}, {});\n+        CMutableTransaction blocktx;\n+        {\n+            LOCK(wallet->cs_wallet);\n+            blocktx = CMutableTransaction(*wallet->mapWallet.at(tx->GetHash()).tx);\n+        }\n+        CreateAndProcessBlock({CMutableTransaction(blocktx)}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n+\n+        LOCK(wallet->cs_wallet);\n+        wallet->SetLastBlockProcessed(wallet->GetLastBlockHeight() + 1, m_node.chainman->ActiveChain().Tip()->GetBlockHash());\n+        auto it = wallet->mapWallet.find(tx->GetHash());\n+        BOOST_CHECK(it != wallet->mapWallet.end());\n+        it->second.m_state = TxStateConfirmed{m_node.chainman->ActiveChain().Tip()->GetBlockHash(), m_node.chainman->ActiveChain().Height(), /*index=*/1};\n+        return it->second;\n+    }\n+\n+    std::unique_ptr<CWallet> wallet;\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(BasicOutputTypesTest, AvailableCoinsTestingSetup)\n+{\n+    CTxDestination dest;\n+    bilingual_str error;\n+    CoinsResult available_coins;\n+    LOCK(wallet->cs_wallet);\n+\n+    // Verify our wallet has one usable coinbase UTXO before starting\n+    // This UTXO is a P2PK, so it should show up in the Other bucket\n+    available_coins = AvailableCoins(*wallet);\n+    BOOST_CHECK_EQUAL(available_coins.size(), 1U);\n+    BOOST_CHECK_EQUAL(available_coins.other.size(), 1U);\n+\n+    // We will create a self transfer for each of the OutputTypes and\n+    // verify it is put in the correct bucket after running GetAvailablecoins\n+    //\n+    // For each OutputType, We expect 2 UTXOs in our wallet following the self transfer:\n+    //   1. One UTXO as the recipient\n+    //   2. One UTXO from the change, due to payment address matching logic\n+\n+    // Bech32m\n+    wallet->GetNewDestination(OutputType::BECH32M, \"\", dest, error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r923958534",
      "id" : 923958534,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII5843En0G",
      "original_commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : 80,
      "pull_request_review_id" : 1042685819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923958534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T00:23:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923958534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r924625941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924625941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "iirc, i copied this from other tests which use `CreateTransaction`. personally, i prefer it to just `-1` because it's more clear to me having a `NAME_CONSTANT`, but i don't have a super strong feelings about it ",
      "commit_id" : "22b1af84ede60ee5b87935d947ce524e8f835e6e",
      "created_at" : "2022-07-19T15:09:39Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <validation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(availablecoins_tests, WalletTestingSetup)\n+class AvailableCoinsTestingSetup : public TestChain100Setup\n+{\n+public:\n+    AvailableCoinsTestingSetup()\n+    {\n+        CreateAndProcessBlock({}, {});\n+        wallet = CreateSyncedWallet(*m_node.chain, m_node.chainman->ActiveChain(), m_args, coinbaseKey);\n+    }\n+\n+    ~AvailableCoinsTestingSetup()\n+    {\n+        wallet.reset();\n+    }\n+    CWalletTx& AddTx(CRecipient recipient)\n+    {\n+        CTransactionRef tx;\n+        bilingual_str error;\n+        CCoinControl dummy;\n+        FeeCalculation fee_calc_out;\n+        {\n+            constexpr int RANDOM_CHANGE_POSITION = -1;\n+            std::optional<CreatedTransactionResult> txr = CreateTransaction(*wallet, {recipient}, RANDOM_CHANGE_POSITION, error, dummy, fee_calc_out);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r924625941",
      "id" : 924625941,
      "in_reply_to_id" : 920364637,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5843HKwV",
      "original_commit_id" : "6530d1950e6f6d5e1e64a2d59f244bb8c6b3996a",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : 35,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1043616587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924625941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-19T15:09:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924625941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "responded to review from @Xekyo , fixed the silent merge (thanks @aureleoules , @furszy ); `git range-diff master 6530d19 71d1d13`\r\n\r\n> I think that some readability improvements could be made in a follow-up especially for instances where the same operations is performed for each output type. Basically the idea that @LarryRuane suggested would also apply where AttemptSelection(â¦) is called. The output types could be put in a list and the AttemptSelection(â¦) call could be made for each of the listed output types.\r\n\r\ndefinitely agree! both @furszy and @LarryRuane had some great suggestions which id like to tackle in a follow-up",
      "created_at" : "2022-07-19T16:47:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1189324138",
      "id" : 1189324138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585G46Vq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189324138/reactions"
      },
      "updated_at" : "2022-07-19T16:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189324138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925471315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471315"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n        return std::nullopt;\r\n```",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-20T11:02:34Z",
      "diff_hunk" : "@@ -379,20 +450,51 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    if (results.size() == 0) {\n+        if (allow_mixed_output_types) {\n+            if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                return result;\n+            }\n+        }\n+        return std::optional<SelectionResult>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925471315",
      "id" : 925471315,
      "line" : 479,
      "node_id" : "PRRC_kwDOABII5843KZJT",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 479,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 141,
      "pull_request_review_id" : 1044787748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471315/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T11:20:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471315",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925471360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471360"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I understand this returns the SelectionResult with the least waste as std::min_element compares the elements with the `operator<`, but maybe add a comment to explicit this behavior?\r\n+nit\r\n```suggestion\r\n    // Find the best solution (lowest waste)\r\n    return std::make_optional(*std::min_element(results.begin(), results.end()));\r\n```",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-20T11:02:37Z",
      "diff_hunk" : "@@ -379,20 +450,51 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    if (results.size() == 0) {\n+        if (allow_mixed_output_types) {\n+            if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                return result;\n+            }\n+        }\n+        return std::optional<SelectionResult>();\n+    };\n+    std::optional<SelectionResult> result{*std::min_element(results.begin(), results.end())};\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925471360",
      "id" : 925471360,
      "line" : 482,
      "node_id" : "PRRC_kwDOABII5843KZKA",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 482,
      "original_position" : 144,
      "original_start_line" : 481,
      "path" : "src/wallet/spend.cpp",
      "position" : 144,
      "pull_request_review_id" : 1044787748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471360/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 481,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-20T11:20:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925471360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925484605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925484605"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe skip the test if not running with descriptors as well?",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-20T11:19:11Z",
      "diff_hunk" : "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different types of UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends three\n+random value payments which sum to 10BTC for each output type to Bob,\n+for a total of 40BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('wpkh(')\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('tr(')\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit output.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('sh(wpkh(')\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('pkh(')\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+    has_bech32m = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_segwit_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True\n+        if is_bech32m_address(node, addr):\n+            has_bech32m = True\n+\n+    return (sum([has_legacy, has_p2sh, has_bech32, has_bech32m]) == 1)\n+\n+\n+def generate_payment_values(n, m):\n+    \"\"\"Return a randomly chosen list of n positive integers summing to m.\n+    Each such list is equally likely to occur.\"\"\"\n+\n+    dividers = sorted(random.sample(range(1, m), n - 1))\n+    return [a - b for a, b in zip(dividers + [m], [0] + dividers)]\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r925484605",
      "id" : 925484605,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII5843KcY9",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 126,
      "original_position" : 126,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 126,
      "pull_request_review_id" : 1044787748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925484605/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 125,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-20T11:20:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925484605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-07-21T08:39:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1191209099",
      "id" : 1191209099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HAGiL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191209099/reactions"
      },
      "updated_at" : "2022-07-21T08:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191209099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926571471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571471"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I originally tried this and ran into strange behavior. Also, in other places an empty `SelectionResult` is returned as opposed to a nullopt. Going to leave this for now, but might be worth taking a second look at and perhaps using the newly created `BResult` class",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-21T11:37:57Z",
      "diff_hunk" : "@@ -379,20 +450,51 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    if (results.size() == 0) {\n+        if (allow_mixed_output_types) {\n+            if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                return result;\n+            }\n+        }\n+        return std::optional<SelectionResult>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926571471",
      "id" : 926571471,
      "in_reply_to_id" : 925471315,
      "line" : 479,
      "node_id" : "PRRC_kwDOABII5843OlvP",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 479,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 141,
      "pull_request_review_id" : 1046381815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571471/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-21T11:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926571785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571785"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "will add if I need to touch this file again",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-21T11:38:23Z",
      "diff_hunk" : "@@ -379,20 +450,51 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    if (results.size() == 0) {\n+        if (allow_mixed_output_types) {\n+            if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                return result;\n+            }\n+        }\n+        return std::optional<SelectionResult>();\n+    };\n+    std::optional<SelectionResult> result{*std::min_element(results.begin(), results.end())};\n+    return result;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926571785",
      "id" : 926571785,
      "in_reply_to_id" : 925471360,
      "line" : 482,
      "node_id" : "PRRC_kwDOABII5843Ol0J",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 482,
      "original_position" : 144,
      "original_start_line" : 481,
      "path" : "src/wallet/spend.cpp",
      "position" : 144,
      "pull_request_review_id" : 1046382275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571785/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 481,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-21T11:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926571785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926574773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926574773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I _think_ `skip_if_no_sqlite()` is sufficient for this? will add if i need to touch the functional test file again",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-21T11:42:06Z",
      "diff_hunk" : "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test output type mixing during coin selection\n+\n+A wallet may have different types of UTXOs to choose from during coin selection,\n+where output type is one of the following:\n+    - BECH32M\n+    - BECH32\n+    - P2SH-SEGWIT\n+    - LEGACY\n+\n+This test verifies that mixing different output types is avoided unless\n+absolutely necessary. Both wallets start with zero funds. Alice mines\n+enough blocks to have spendable coinbase outputs. Alice sends three\n+random value payments which sum to 10BTC for each output type to Bob,\n+for a total of 40BTC in Bob's wallet.\n+\n+Bob then sends random valued payments back to Alice, some of which need\n+unconfirmed change, and we verify that none of these payments contain mixed\n+inputs. Finally, Bob sends the remainder of his funds, which requires mixing.\n+\n+The payment values are random, but chosen such that they sum up to a specified\n+total. This ensures we are not relying on specific values for the UTXOs,\n+but still know when to expect mixing due to the wallet being close to empty.\n+\n+\"\"\"\n+\n+import random\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+\n+ADDRESS_TYPES = [\n+    \"bech32m\",\n+    \"bech32\",\n+    \"p2sh-segwit\",\n+    \"legacy\",\n+]\n+\n+\n+def is_bech32_address(node, addr):\n+    \"\"\"Check if an address contains a bech32 output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('wpkh(')\n+\n+\n+def is_bech32m_address(node, addr):\n+    \"\"\"Check if an address contains a bech32m output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('tr(')\n+\n+\n+def is_p2sh_segwit_address(node, addr):\n+    \"\"\"Check if an address contains a P2SH-Segwit output.\n+       Note: this function does not actually determine the type\n+       of P2SH output, but is sufficient for this test in that\n+       we are only generating P2SH-Segwit outputs.\n+    \"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('sh(wpkh(')\n+\n+\n+def is_legacy_address(node, addr):\n+    \"\"\"Check if an address contains a legacy output.\"\"\"\n+    addr_info = node.getaddressinfo(addr)\n+    return addr_info['desc'].startswith('pkh(')\n+\n+\n+def is_same_type(node, tx):\n+    \"\"\"Check that all inputs are of the same OutputType\"\"\"\n+    vins = node.getrawtransaction(tx, True)['vin']\n+    inputs = []\n+    for vin in vins:\n+        prev_tx, n = vin['txid'], vin['vout']\n+        inputs.append(\n+            node.getrawtransaction(\n+                prev_tx,\n+                True,\n+            )['vout'][n]['scriptPubKey']['address']\n+        )\n+    has_legacy = False\n+    has_p2sh = False\n+    has_bech32 = False\n+    has_bech32m = False\n+\n+    for addr in inputs:\n+        if is_legacy_address(node, addr):\n+            has_legacy = True\n+        if is_p2sh_segwit_address(node, addr):\n+            has_p2sh = True\n+        if is_bech32_address(node, addr):\n+            has_bech32 = True\n+        if is_bech32m_address(node, addr):\n+            has_bech32m = True\n+\n+    return (sum([has_legacy, has_p2sh, has_bech32, has_bech32m]) == 1)\n+\n+\n+def generate_payment_values(n, m):\n+    \"\"\"Return a randomly chosen list of n positive integers summing to m.\n+    Each such list is equally likely to occur.\"\"\"\n+\n+    dividers = sorted(random.sample(range(1, m), n - 1))\n+    return [a - b for a, b in zip(dividers + [m], [0] + dividers)]\n+\n+\n+class AddressInputTypeGrouping(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\n+                \"-addresstype=bech32\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+            [\n+                \"-addresstype=p2sh-segwit\",\n+                \"-whitelist=noban@127.0.0.1\",\n+                \"-txindex\",\n+            ],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r926574773",
      "id" : 926574773,
      "in_reply_to_id" : 925484605,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII5843Omi1",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 126,
      "original_position" : 126,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_avoid_mixing_output_types.py",
      "position" : 126,
      "pull_request_review_id" : 1046386455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926574773/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 125,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-21T11:42:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926574773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r927043776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927043776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It shouldn't be a problem to return `std::nullopt`, but the current code is equivalent anyways. The default constructor for a `std::optional` is to make a nullopt object.",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-21T19:43:15Z",
      "diff_hunk" : "@@ -379,20 +450,51 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n     return groups_out;\n }\n \n-std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                               const CoinSelectionParams& coin_selection_params)\n+std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const CoinsResult& available_coins,\n+                               const CoinSelectionParams& coin_selection_params, bool allow_mixed_output_types)\n+{\n+    // Run coin selection on each OutputType and compute the Waste Metric\n+    std::vector<SelectionResult> results;\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.legacy, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.P2SH_segwit, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+    if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.bech32m, coin_selection_params)}) {\n+        results.push_back(*result);\n+    }\n+\n+    // If we can't fund the transaction from any individual OutputType, run coin selection\n+    // over all available coins, else pick the best solution from the results\n+    if (results.size() == 0) {\n+        if (allow_mixed_output_types) {\n+            if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.all(), coin_selection_params)}) {\n+                return result;\n+            }\n+        }\n+        return std::optional<SelectionResult>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r927043776",
      "id" : 927043776,
      "in_reply_to_id" : 925471315,
      "line" : 479,
      "node_id" : "PRRC_kwDOABII5843QZDA",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 479,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 141,
      "pull_request_review_id" : 1047056003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927043776/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-21T19:43:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927043776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-21T20:19:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1191895126",
      "id" : 1191895126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HCuBW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191895126/reactions"
      },
      "updated_at" : "2022-07-21T20:19:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191895126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Approach NACK\r\n> \r\n> I was not able to achieve the privacy mentioned in PR description. Steps to reproduce:\r\n> \r\n>     1. Create a wallet w1, send 0.001 four times from signet faucet to bech32 addresses, wait for confirmation and spend more than 0.002 to a legacy address.\r\n> \r\n>     2. There will be 2 UTXO in wallet: 1 legacy and other bech32\r\n> \r\n>     3. Send more than 0.001 to a bech32 address\r\n> \r\n> \r\n> Example:\r\n> \r\n> https://mempool.space/signet/tx/6bb60f7dd4171d915b615030bc3cd2af785188834f38f391aa6b28e6a5359ecb:0\r\n> \r\n> https://mempool.space/signet/tx/2cd2821390126c5407f29be8669c612a4092d0bc11224811a0752ff7fa31d43a\r\n\r\nI don't see how this example tests what is described in the OP? You ended up making a transaction that has mixed inputs, but the that's because those are the only funds in your wallet. The point of this PR is to *avoid* mixing input types, not *never* mix input types.",
      "created_at" : "2022-07-21T23:25:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1192024390",
      "id" : 1192024390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HDNlG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192024390/reactions"
      },
      "updated_at" : "2022-07-21T23:25:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192024390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "hey @1440000bytes , thanks for testing! as mentioned, the goal is not to _never_ mix; the goal is to avoid mixing if possible. I've updated the OP to explicitly state this. also, take a look at the functional test, as this demonstrates the desired behavior: creating a wallet with mixed UTXO types, funding several transactions without mixing, and finally emptying the wallet (which is impossible to do without mixing).\r\n\r\n> This is a valid argument and there can be multiple interpretations even without coinjoin: https://github.com/bitcoin/bitcoin/pull/24584#pullrequestreview-911639998\r\n\r\nwhile there can be other interpretations, the most likely interpretation today is that the non-default input in the subsequent transaction is the change from the previous transaction (and in the majority of cases, this interpretation is correct).\r\n\r\n> Also still curious about the two questions/solutions I had about solving this problem in https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1166432804\r\n\r\ni responded here: https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1177991068 , please let me know which parts of your original question you feel are unaddressed.\r\n",
      "created_at" : "2022-07-22T09:47:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1192390318",
      "id" : 1192390318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HEm6u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192390318/reactions"
      },
      "updated_at" : "2022-07-22T09:47:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192390318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "How about insufficient funds error message or use mixed output types for change? This could happen even when some transactions are unconfirmed and confirmed UTXOs are of different types ",
      "created_at" : "2022-07-26T07:12:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1195096253",
      "id" : 1195096253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HO7i9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195096253/reactions"
      },
      "updated_at" : "2022-07-26T07:12:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195096253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> How about insufficient funds error message or use mixed output types for change? This could happen even when some transactions are unconfirmed and confirmed UTXOs are of different types\r\n\r\nAn advanced user that cares so much about not mixing inputs is probably already using coin control to manually select inputs. I think this PR is a reasonable middle-path of rolling out a privacy improvement while minimizing negative impact on the UX. Adding cases in which transaction building fails while there are sufficient funds available as the default behavior would be an unreasonable UX disimprovement. I would consider the addition of options for more strict behavior to be out of scope for this PR.",
      "created_at" : "2022-07-26T19:21:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#issuecomment-1195886286",
      "id" : 1195886286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
      "node_id" : "IC_kwDOABII585HR8bO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195886286/reactions"
      },
      "updated_at" : "2022-07-26T19:21:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195886286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r930344850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930344850"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit:\r\n```suggestion\r\n    dest = wallet->GetNewDestination(OutputType::P2SH_SEGWIT, \"\");\r\n    BOOST_ASSERT(dest.HasRes());\r\n```",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-26T19:37:26Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <validation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(availablecoins_tests, WalletTestingSetup)\n+class AvailableCoinsTestingSetup : public TestChain100Setup\n+{\n+public:\n+    AvailableCoinsTestingSetup()\n+    {\n+        CreateAndProcessBlock({}, {});\n+        wallet = CreateSyncedWallet(*m_node.chain, m_node.chainman->ActiveChain(), m_args, coinbaseKey);\n+    }\n+\n+    ~AvailableCoinsTestingSetup()\n+    {\n+        wallet.reset();\n+    }\n+    CWalletTx& AddTx(CRecipient recipient)\n+    {\n+        CTransactionRef tx;\n+        CCoinControl dummy;\n+        {\n+            constexpr int RANDOM_CHANGE_POSITION = -1;\n+            auto res = CreateTransaction(*wallet, {recipient}, RANDOM_CHANGE_POSITION, dummy);\n+            BOOST_CHECK(res);\n+            tx = res.GetObj().tx;\n+        }\n+        wallet->CommitTransaction(tx, {}, {});\n+        CMutableTransaction blocktx;\n+        {\n+            LOCK(wallet->cs_wallet);\n+            blocktx = CMutableTransaction(*wallet->mapWallet.at(tx->GetHash()).tx);\n+        }\n+        CreateAndProcessBlock({CMutableTransaction(blocktx)}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n+\n+        LOCK(wallet->cs_wallet);\n+        wallet->SetLastBlockProcessed(wallet->GetLastBlockHeight() + 1, m_node.chainman->ActiveChain().Tip()->GetBlockHash());\n+        auto it = wallet->mapWallet.find(tx->GetHash());\n+        BOOST_CHECK(it != wallet->mapWallet.end());\n+        it->second.m_state = TxStateConfirmed{m_node.chainman->ActiveChain().Tip()->GetBlockHash(), m_node.chainman->ActiveChain().Height(), /*index=*/1};\n+        return it->second;\n+    }\n+\n+    std::unique_ptr<CWallet> wallet;\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(BasicOutputTypesTest, AvailableCoinsTestingSetup)\n+{\n+    CoinsResult available_coins;\n+    BResult<CTxDestination> dest;\n+    LOCK(wallet->cs_wallet);\n+\n+    // Verify our wallet has one usable coinbase UTXO before starting\n+    // This UTXO is a P2PK, so it should show up in the Other bucket\n+    available_coins = AvailableCoins(*wallet);\n+    BOOST_CHECK_EQUAL(available_coins.size(), 1U);\n+    BOOST_CHECK_EQUAL(available_coins.other.size(), 1U);\n+\n+    // We will create a self transfer for each of the OutputTypes and\n+    // verify it is put in the correct bucket after running GetAvailablecoins\n+    //\n+    // For each OutputType, We expect 2 UTXOs in our wallet following the self transfer:\n+    //   1. One UTXO as the recipient\n+    //   2. One UTXO from the change, due to payment address matching logic\n+\n+    // Bech32m\n+    dest = wallet->GetNewDestination(OutputType::BECH32M, \"\");\n+    BOOST_ASSERT(dest.HasRes());\n+    AddTx(CRecipient{{GetScriptForDestination(dest.GetObj())}, 1 * COIN, /*fSubtractFeeFromAmount=*/true});\n+    available_coins = AvailableCoins(*wallet);\n+    BOOST_CHECK_EQUAL(available_coins.bech32m.size(), 2U);\n+\n+    // Bech32\n+    dest = wallet->GetNewDestination(OutputType::BECH32, \"\");\n+    BOOST_ASSERT(dest.HasRes());\n+    AddTx(CRecipient{{GetScriptForDestination(dest.GetObj())}, 2 * COIN, /*fSubtractFeeFromAmount=*/true});\n+    available_coins = AvailableCoins(*wallet);\n+    BOOST_CHECK_EQUAL(available_coins.bech32.size(), 2U);\n+\n+    // P2SH-SEGWIT\n+    dest = wallet->GetNewDestination(OutputType::P2SH_SEGWIT, \"\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r930344850",
      "id" : 930344850,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII5843c--S",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 91,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/wallet/test/availablecoins_tests.cpp",
      "position" : 91,
      "pull_request_review_id" : 1051520158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930344850/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-26T19:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930344850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r932666302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932666302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "commit 2e67291ca3ab2d8f498fa910738ca655fde11c5e refactor: store by OutputType in CoinsResult\r\nnit\r\n```suggestion\r\nsize_t CoinsResult::size() const\r\n```",
      "commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "created_at" : "2022-07-28T21:00:46Z",
      "diff_hunk" : "@@ -79,6 +79,32 @@ TxSize CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *walle\n     return CalculateMaximumSignedTxSize(tx, wallet, txouts, coin_control);\n }\n \n+uint64_t CoinsResult::size() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24584#discussion_r932666302",
      "id" : 932666302,
      "line" : 82,
      "node_id" : "PRRC_kwDOABII5843l1u-",
      "original_commit_id" : "71d1d13627ccd27319f347e2d8167c8fe8a433f4",
      "original_line" : 82,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 4,
      "pull_request_review_id" : 1054745390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932666302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-28T21:44:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932666302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   }
]
