[
   {
      "author_association" : "MEMBER",
      "body" : "<details><summary>Internal crash for reference</summary>\r\n\r\n```\r\nThreadSanitizer: CHECK failed: sanitizer_common.h:494 \"((i)) < ((size_))\" (0xffffffff, 0x1a) (tid=143618)\r\n    #0 __tsan::CheckUnwind() <null> (bitcoind+0x120582) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #1 __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) <null> (bitcoind+0xa29c4) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #2 __tsan::ScopedReportBase::AddLocation(unsigned long, unsigned long) <null> (bitcoind+0x131bee) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #3 __tsan::ReportRace(__tsan::ThreadState*, __tsan::RawShadow*, __tsan::Shadow, __tsan::Shadow, unsigned long) <null> (bitcoind+0x1341ad) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #4 __tsan::FdClose(__tsan::ThreadState*, unsigned long, int, bool) <null> (bitcoind+0xb8565) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #5 closedir <null> (bitcoind+0xc1f35) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #6 __os_dirlist <null> (bitcoind+0x9d8884) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #7 __env_remove_env <null> (bitcoind+0x9b6e71) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #8 __env_open <null> (bitcoind+0x9b3527) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #9 DbEnv::open(char const*, unsigned int, int) <null> (bitcoind+0x985105) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #10 wallet::BerkeleyEnvironment::Open(bilingual_str&) src/./src/wallet/bdb.cpp:161:22 (bitcoind+0x67e6e1) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #11 wallet::BerkeleyDatabase::Verify(bilingual_str&) src/./src/wallet/bdb.cpp:268:15 (bitcoind+0x680813) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #12 wallet::MakeBerkeleyDatabase(fs::path const&, wallet::DatabaseOptions const&, wallet::DatabaseStatus&, bilingual_str&) src/./src/wallet/bdb.cpp:843:32 (bitcoind+0x687d72) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #13 wallet::MakeDatabase(fs::path const&, wallet::DatabaseOptions const&, wallet::DatabaseStatus&, bilingual_str&) src/./src/wallet/walletdb.cpp:1176:12 (bitcoind+0x658ed7) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #14 wallet::MakeWalletDatabase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, wallet::DatabaseOptions const&, wallet::DatabaseStatus&, bilingual_str&) src/./src/wallet/wallet.cpp:2671:12 (bitcoind+0x60b77b) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #15 wallet::(anonymous namespace)::LoadWalletInternal(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, wallet::DatabaseOptions const&, wallet::DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/./src/wallet/wallet.cpp:222:52 (bitcoind+0x608b9d) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #16 wallet::LoadWallet(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, wallet::DatabaseOptions const&, wallet::DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/./src/wallet/wallet.cpp:258:19 (bitcoind+0x608b9d)\r\n    #17 wallet::loadwallet()::$_3::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/./src/wallet/rpc/wallet.cpp:227:45 (bitcoind+0x5b49eb) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #18 decltype(static_cast<wallet::loadwallet()::$_3&>(fp)(static_cast<RPCHelpMan const&>(fp0), static_cast<JSONRPCRequest const&>(fp0))) std::__1::__invoke<wallet::loadwallet()::$_3&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::loadwallet()::$_3&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x5b49eb)\r\n    #19 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::loadwallet()::$_3&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::loadwallet()::$_3&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x5b49eb)\r\n    #20 std::__1::__function::__alloc_func<wallet::loadwallet()::$_3, std::__1::allocator<wallet::loadwallet()::$_3>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:180:16 (bitcoind+0x5b49eb)\r\n    #21 std::__1::__function::__func<wallet::loadwallet()::$_3, std::__1::allocator<wallet::loadwallet()::$_3>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:354:12 (bitcoind+0x5b49eb)\r\n    #22 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:507:16 (bitcoind+0x7e9924) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #23 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:1184:12 (bitcoind+0x7e9924)\r\n    #24 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/./src/rpc/util.cpp:586:26 (bitcoind+0x7e9924)\r\n    #25 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x32d827) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #26 decltype(static_cast<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x32d827)\r\n    #27 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x32d827)\r\n    #28 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:180:16 (bitcoind+0x32d827)\r\n    #29 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:354:12 (bitcoind+0x32d827)\r\n    #30 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:507:16 (bitcoind+0x57b652) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #31 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:1184:12 (bitcoind+0x57b652)\r\n    #32 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./src/wallet/interfaces.cpp:529:24 (bitcoind+0x57b652)\r\n    #33 decltype(static_cast<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x57b652)\r\n    #34 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x57b652)\r\n    #35 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:180:16 (bitcoind+0x57b652)\r\n    #36 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:354:12 (bitcoind+0x57b652)\r\n    #37 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:507:16 (bitcoind+0x261376) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #38 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:1184:12 (bitcoind+0x261376)\r\n    #39 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./src/node/interfaces.cpp:421:24 (bitcoind+0x261376)\r\n    #40 decltype(static_cast<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x261376)\r\n    #41 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x261376)\r\n    #42 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:180:16 (bitcoind+0x261376)\r\n    #43 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:354:12 (bitcoind+0x261376)\r\n    #44 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:507:16 (bitcoind+0x40f1af) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #45 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:1184:12 (bitcoind+0x40f1af)\r\n    #46 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/./src/rpc/server.cpp:480:20 (bitcoind+0x40f1af)\r\n    #47 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) src/./src/rpc/server.cpp:444:13 (bitcoind+0x40f1af)\r\n    #48 CRPCTable::execute(JSONRPCRequest const&) const src/./src/rpc/server.cpp:464:13 (bitcoind+0x40ee20) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #49 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/./src/httprpc.cpp:202:40 (bitcoind+0x526ecc) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #50 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const src/./src/httprpc.cpp:298:80 (bitcoind+0x526ecc)\r\n    #51 decltype(static_cast<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(static_cast<HTTPRequest*>(fp0), static_cast<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x526ecc)\r\n    #52 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x526ecc)\r\n    #53 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:180:16 (bitcoind+0x526ecc)\r\n    #54 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:354:12 (bitcoind+0x526ecc)\r\n    #55 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:507:16 (bitcoind+0x534e90) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #56 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-14/bin/../include/c++/v1/__functional/function.h:1184:12 (bitcoind+0x534e90)\r\n    #57 HTTPWorkItem::operator()() src/./src/httpserver.cpp:54:9 (bitcoind+0x534e90)\r\n    #58 WorkQueue<HTTPClosure>::Run() src/./src/httpserver.cpp:112:13 (bitcoind+0x5374d3) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #59 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/./src/httpserver.cpp:342:12 (bitcoind+0x52f08a) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #60 decltype(static_cast<void (*>(fp)(static_cast<WorkQueue<HTTPClosure>*>(fp0), static_cast<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-14/bin/../include/c++/v1/type_traits:3640:23 (bitcoind+0x538065) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #61 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-14/bin/../include/c++/v1/thread:282:5 (bitcoind+0x538065)\r\n    #62 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-14/bin/../include/c++/v1/thread:293:5 (bitcoind+0x538065)\r\n    #63 __tsan_thread_start_func <null> (bitcoind+0xbc448) (BuildId: 337970ff7135e4c1044b5f6473d0f7f108230cee)\r\n    #64 <null> <null> (libc.so.6+0x94b42) (BuildId: 89c3cb85f9e55046776471fed05ec441581d1969)\r\n    #65 <null> <null> (libc.so.6+0x1269ff) (BuildId: 89c3cb85f9e55046776471fed05ec441581d1969)\r\n\r\n\r\n```\r\n\r\n</details>",
      "created_at" : "2022-03-15T17:26:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24572#issuecomment-1068253894",
      "id" : 1068253894,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24572",
      "node_id" : "IC_kwDOABII584_rELG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068253894/reactions"
      },
      "updated_at" : "2022-03-15T17:26:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068253894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I tested this locally and it worked",
      "created_at" : "2022-03-15T17:33:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24572#issuecomment-1068259881",
      "id" : 1068259881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24572",
      "node_id" : "IC_kwDOABII584_rFop",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068259881/reactions"
      },
      "updated_at" : "2022-03-15T17:33:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068259881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Backported to v23.0 in #24512.",
      "created_at" : "2022-03-28T11:10:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24572#issuecomment-1080514267",
      "id" : 1080514267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24572",
      "node_id" : "IC_kwDOABII585AZ1bb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1080514267/reactions"
      },
      "updated_at" : "2022-03-28T11:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1080514267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed from backport due to https://github.com/bitcoin/bitcoin/pull/25304",
      "created_at" : "2022-06-08T07:32:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24572#issuecomment-1149566058",
      "id" : 1149566058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24572",
      "node_id" : "IC_kwDOABII585EhPxq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1149566058/reactions"
      },
      "updated_at" : "2022-06-08T07:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1149566058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
