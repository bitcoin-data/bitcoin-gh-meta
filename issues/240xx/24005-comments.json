[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780390992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780390992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's pretty ugly; it's a function for testing whether a point is on the curve. Returning anything but True or False seems pretty unintuitive.\r\n\r\nI'd suggest instead adding an \"is_infinity\" function to this class instead, and using that further on.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:48:55Z",
      "diff_hunk" : "@@ -93,7 +93,9 @@ def on_curve(self, p1):\n         x1, y1, z1 = p1\n         z2 = pow(z1, 2, self.p)\n         z4 = pow(z2, 2, self.p)\n-        return z1 != 0 and (pow(x1, 3, self.p) + self.a * x1 * z4 + self.b * z2 * z4 - pow(y1, 2, self.p)) % self.p == 0\n+        if z1 == 0:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780390992",
      "id" : 780390992,
      "line" : 128,
      "node_id" : "PRRC_kwDOABII584ug9JQ",
      "original_commit_id" : "88ed68160834c51d545bf70080f6e7dd713c88b1",
      "original_line" : 128,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 41,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780390992/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780390992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780391774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780391774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: missing newline at the end",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:50:12Z",
      "diff_hunk" : "@@ -0,0 +1,68 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = c2 - c1*s / (1+b+s)\n+    g1 = x1**3 + b\n+    if is_square(g1):\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1-1\n+        g2 = x2**3 + b\n+        if is_square(g2):\n+            x, g = x2, g2\n+        else:\n+            x3 = 1 - (1+b+s)**2 / (3*s)\n+            g3 = x3**3 + b\n+            x, g = x3, g3\n+    y = sqrt(g)\n+    if is_odd(y) == is_odd(u):\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 1 or i == 2:\n+        z = 2*x + 1\n+        t1 = c1 - z\n+        t2 = c1 + z\n+        if not is_square(t1*t2):\n+            return None\n+        if i == 1:\n+            if t2 == 0:\n+                return None\n+            if t1 == 0 and is_odd(y):\n+                return None\n+            u = sqrt((1+b)*t1/t2)\n+        else:\n+            x1 = -x-1\n+            if is_square(x1**3 + b):\n+                return None\n+            u = sqrt((1+b)*t2/t1)\n+    else:\n+        z = 2 - 4*b - 6*x\n+        if not is_square(z**2 - 16*(b+1)**2):\n+            return None\n+        if i == 3:\n+            s = (z + sqrt(z**2 - 16*(b+1)**2)) / 4\n+        else:\n+            if z**2 == 16*(b+1)**2:\n+                return None\n+            s = (z - sqrt(z**2 - 16*(b+1)**2)) / 4\n+        if not is_square(s):\n+            return None\n+        x1 = c2 - c1*s / (1+b+s)\n+        if is_square(x1**3 + b):\n+            return None\n+        u = sqrt(s)\n+    if is_odd(y) == is_odd(u):\n+        return u\n+    else:\n+        return -u",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780391774",
      "id" : 780391774,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug9Ve",
      "original_commit_id" : "e3a80dd45c840703e8a6c492739490aa0acfc64f",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780391774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780391774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780392201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780392201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit \"Add Elligator Squared mapping functions f and r\". Perhaps point out somewhere that this is Sage code, and won't actually work as Python. Alternatively, just merge it with the next commit that converts it to Python.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:50:54Z",
      "diff_hunk" : "@@ -0,0 +1,68 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780392201",
      "id" : 780392201,
      "line" : 4,
      "node_id" : "PRRC_kwDOABII584ug9cJ",
      "original_commit_id" : "e3a80dd45c840703e8a6c492739490aa0acfc64f",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 4,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780392201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780392201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780393128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps this class should live in key.py instead? The rest of key.py could also benefit from this abstraction. The `p` here can also reuse the SECP256K1_FIELD_SIZE then.\r\n\r\nAlternatively, you could just follow the approach key.py uses currently, and manually write the modulo reductions and `modinv`/`modsqrt` calls directly where used.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:52:23Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780393128",
      "id" : 780393128,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug9qo",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 10,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393128/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:22:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780393385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Capitalize global constants.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:52:43Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe((self.val *  o.val         ) % self.p)\n+    def __neg__     (self   ): return fe(-self.val                            )\n+    def __pow__     (self, s): return fe(pow(self.val, s       , self.p))\n+    def __sub__     (self, o): return fe( self.val -  o.val                   )\n+    def __truediv__ (self, o): return fe((self.val *  o.invert().val) % self.p)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))\n+    def is_odd(self): return (self.val & 1) != 0\n+    def is_square(self):\n+        ret_val = modsqrt(self.val, fe.p)\n+        if ret_val is not None:\n+            return True\n+        return False\n+    def sqrt(self):\n+        return fe(modsqrt(self.val, fe.p))\n+\n+c1 = fe(-3).sqrt()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780393385",
      "id" : 780393385,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug9up",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393385/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780393385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780395317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780395317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can be written more succintly as:\r\n\r\n```python\r\ndef SECP256K1_FE_CONST(*d):\r\n    return fe(sum(d[i] << ((7-i)*32) for i in range(8)))\r\n```\r\n\r\nAlternatively, it can be avoided entirely (see suggestion below).\r\n",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:55:34Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780395317",
      "id" : 780395317,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug-M1",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 100,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780395317/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780395317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780396428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780396428"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Capitalize global constant.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T16:57:11Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780396428",
      "id" : 780396428,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug-eM",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 116,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780396428/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780396428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780400738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780400738"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would avoid the round-tripping through the awkward secp256k1 8x32 notation for field elements.\r\n\r\nand then for the first line (just concatenating the hex digits, dropping the `, 0x` between them).\r\n\r\n```python\r\n    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\r\n```\r\n\r\netc.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:03:50Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [\n+    [SECP256K1_GE_CONST(0xc27fb7a3, 0x283a7d3e, 0xc9f96421, 0x545ef6f5, 0x8ace7b71, 0x06c8a1b9, 0x07c0ae8a, 0x7598159c, 0xe05a060e, 0x839ef79f, 0xc0c1267c, 0xa17880c9, 0x584cdd34, 0xc05f9695, 0x55482207, 0xe6851f2a), [SECP256K1_FE_CONST(0xc0ad127a, 0xa36824d6, 0x5b1f5be7, 0x4de1aa25, 0xbc4d5cbe, 0xcee15462, 0x0a12682a, 0xfc87df98), SECP256K1_FE_CONST(0xd40fd5bc, 0x51992484, 0x8f13273b, 0x1d857cba, 0x42d45e78, 0x9eaa4e47, 0xf458b83a, 0xbd5f8d1c), SECP256K1_FE_CONST(0xde636141, 0x7deb440b, 0x3a305924, 0x43635cf9, 0xcf42f9b5, 0xf5b891c1, 0x1e119f09, 0x71b570ac), SECP256K1_FE_CONST(0xd55135ce, 0x41bb4d05, 0x5b3757f4, 0xaf1d6537, 0x137376d7, 0x5270caae, 0xda68382d, 0x25d00708)]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780400738",
      "id" : 780400738,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug_hi",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 117,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780400738/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780400738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780401442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Newline at the end of file.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:04:58Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [\n+    [SECP256K1_GE_CONST(0xc27fb7a3, 0x283a7d3e, 0xc9f96421, 0x545ef6f5, 0x8ace7b71, 0x06c8a1b9, 0x07c0ae8a, 0x7598159c, 0xe05a060e, 0x839ef79f, 0xc0c1267c, 0xa17880c9, 0x584cdd34, 0xc05f9695, 0x55482207, 0xe6851f2a), [SECP256K1_FE_CONST(0xc0ad127a, 0xa36824d6, 0x5b1f5be7, 0x4de1aa25, 0xbc4d5cbe, 0xcee15462, 0x0a12682a, 0xfc87df98), SECP256K1_FE_CONST(0xd40fd5bc, 0x51992484, 0x8f13273b, 0x1d857cba, 0x42d45e78, 0x9eaa4e47, 0xf458b83a, 0xbd5f8d1c), SECP256K1_FE_CONST(0xde636141, 0x7deb440b, 0x3a305924, 0x43635cf9, 0xcf42f9b5, 0xf5b891c1, 0x1e119f09, 0x71b570ac), SECP256K1_FE_CONST(0xd55135ce, 0x41bb4d05, 0x5b3757f4, 0xaf1d6537, 0x137376d7, 0x5270caae, 0xda68382d, 0x25d00708)]],\n+    [SECP256K1_GE_CONST(0x3f5ada4e, 0x8f646ec9, 0x10ffc1a2, 0xb74d94bb, 0xb1860631, 0xa3c2a349, 0xeddf55ca, 0xfd49cce9, 0x28ad9d8d, 0x77d9cd87, 0xf80aaa34, 0x8e9ad1b4, 0x40353d7a, 0x6e717714, 0x60425319, 0x38f530c3), [SECP256K1_FE_CONST(0xac42348f, 0x1b356822, 0x5bb7d4c0, 0x0feab37e, 0xa5fb7fbb, 0x0cc3879d, 0xc74e2dda, 0xf9a393bf), SECP256K1_FE_CONST(0xda7a45b2, 0x6c87dcb6, 0x4a934c1d, 0xc841d250, 0xf98af5f0, 0x511be2a3, 0x82d17bab, 0xe1e4a533), SECP256K1_FE_CONST(0xc3d9b9a6, 0x570ca9c8, 0xa640fc75, 0x945850b2, 0xcc86b6d6, 0x399b4496, 0x4288d76d, 0x832a32d7), SECP256K1_FE_CONST(0xbf5ebc2f, 0x4060abe7, 0x884a1fa7, 0xcc0883cb, 0x97535c5a, 0x31dc6df4, 0xc6968e9d, 0x8554f3b1)]],\n+    [SECP256K1_GE_CONST(0xf5f74fab, 0x3ebbbcfd, 0xdcaef6cc, 0xd14eb934, 0xf9435a4e, 0x4a1ed2d8, 0x75352c47, 0x306d6c2f, 0xea6a5b2a, 0xe109897d, 0x046e1504, 0xf7a382d6, 0x1eb49a8a, 0xae8852ef, 0x48e29466, 0x194d9e66), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xe8362df2, 0x38e0405b, 0x49218747, 0x74f9ebca, 0x36dfe21b, 0x1a49ae2d, 0x0fa23fd4, 0x11a262a6), SECP256K1_FE_CONST(0x9e453426, 0xac973155, 0x19d11d63, 0xc3bb27ee, 0x89a7ec85, 0x5661dce4, 0xe428f6cc, 0x0be059cc)]],\n+    [SECP256K1_GE_CONST(0x977694f6, 0x6f0a3005, 0x2c638916, 0x61432fa0, 0x605528a7, 0xad87d829, 0x5c9eb9a3, 0x973c6fed, 0x16515f14, 0x00186fec, 0x67f6314c, 0x8a9e2d43, 0x3d2020e9, 0x38f86465, 0x39f749a1, 0x51a793ed), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x8f091a42, 0xce496be8, 0x877d43fc, 0x2f2b2927, 0x42c9c1fb, 0x0dfe570b, 0x9c9fbd3e, 0x04afa709), SECP256K1_FE_CONST(0xb5930cf1, 0x4db355a5, 0xa92b9f78, 0x9390b59a, 0x013c8e27, 0x7c41ddd6, 0xd8221622, 0x93d39141)]],\n+    [SECP256K1_GE_CONST(0x9c970ce9, 0x39e8a4ec, 0x70237f33, 0xad858370, 0xc9d30e8a, 0xadaac257, 0x546d1e16, 0xf374973b, 0x95755fab, 0x1bcae32e, 0xc811c63f, 0xb1e56da8, 0x97a1e140, 0xb1aae97e, 0x0b6ae6c5, 0x3879f51c), [SECP256K1_FE_CONST(0xa7424f55, 0x60b58ceb, 0xbb9a6ee1, 0x5fc41b18, 0xf282b2cd, 0xd9e2fb4d, 0x02626c1a, 0xc0a89ec4), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xd7016e9b, 0x94db9b4c, 0x5bc61c87, 0xaf3b3c9c, 0x72707e5e, 0x48332958, 0xce5371bf, 0xd501a006), SECP256K1_FE_CONST(0xe95cd3a1, 0x2cff74bd, 0x6761a782, 0x61f73f0d, 0x755a80f6, 0x39ccd117, 0x136f9963, 0xf422b82a)]],\n+    [SECP256K1_GE_CONST(0x48206211, 0x5e6fc771, 0x738b4859, 0x4da66901, 0xa0a8c36e, 0xa61122b7, 0x745cf5fe, 0xec932b64, 0x01c9e1a1, 0x59effb22, 0x4442c868, 0x9119fd26, 0x8cdca070, 0x7edbefb6, 0xea81d5f6, 0x86333768), [SECP256K1_FE_CONST(0xf1047fb9, 0x4cfa6dcd, 0x202e1acc, 0xa85afc88, 0x46381925, 0x7adf32aa, 0x25e19e52, 0xbf3cadd8), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x94dc1b2b, 0x6a24bbdb, 0x36afab1a, 0x6e036e7f, 0xdf1ded22, 0x915bf761, 0x97e5e5a5, 0xc6261582), SECP256K1_FE_CONST(0x8dd664ba, 0x47061bac, 0x0c99d727, 0xac2ade9f, 0xf8d33aff, 0x995a7a28, 0x97f2968c, 0x558ef724)]],\n+    [SECP256K1_GE_CONST(0x47e54d7b, 0x86025d30, 0x248b18e6, 0xc6b2b128, 0x3f8eb11e, 0x60d11cad, 0xf59884ea, 0x56939f5a, 0xb618d932, 0x6110c200, 0xcbed144f, 0xc6376800, 0xd8ba0de1, 0xd87fa02d, 0x17d1d58d, 0x9652c498), [SECP256K1_FE_CONST(0x8797d6a9, 0xe3614b34, 0x80e43cb6, 0x936cd932, 0xbe4eee02, 0x1e47e067, 0x2d1d9f2f, 0xd0148558), SECP256K1_FE_CONST(0xb19c75d0, 0xb4856c81, 0xb467f8f5, 0xb9f8d849, 0x0e5296f0, 0x4c60d639, 0x6f772b7f, 0x427c5d38), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x8fa5ffb5, 0x597068f6, 0x06785a63, 0x1f74cd6f, 0x8b16e94b, 0xe6cee831, 0x2970e0ec, 0xa9ecda52, 0x6c4f0efe, 0xf1d0eef2, 0xe3281b13, 0x4f29289f, 0x0a9d7b4d, 0xb3118c5f, 0x1d2d1da4, 0x75569ebf), [SECP256K1_FE_CONST(0xe66995d0, 0x9cfdddda, 0xadf4b4ec, 0xc00270ed, 0xaeaacf01, 0x2db38d37, 0xe4143baf, 0x0ae7dfa3), SECP256K1_FE_CONST(0xfe0d264e, 0x3121942c, 0xd5126e26, 0x0766f36c, 0x3a08a689, 0x4e8ec172, 0xf3fdb252, 0x70def1ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x016a682d, 0x1df4f869, 0xb32c48b0, 0xa9b442a1, 0x493949fb, 0x85d951d1, 0x21c1143b, 0xd3d5c1af, 0x38d33fe5, 0xd3f9b4b9, 0x82e37dff, 0x7561428d, 0x47ef4ddf, 0x654bd959, 0x51b04e90, 0xa3be50e7), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x1ec42424, 0xb4d2226f, 0x83f94258, 0xc737d0da, 0xf93a4eb1, 0x1d9b9e3f, 0xd500d5b9, 0xc3aa7c71, 0x84975819, 0xb703da77, 0xca98bd3c, 0xd9bbdc7a, 0xf1dbc7b5, 0x85c590eb, 0xcbd417fd, 0x739ad572), [SECP256K1_FE_CONST(0x945faa12, 0x7e8bf378, 0x63581bfb, 0xde084bf7, 0x63caee39, 0x1449c610, 0xc2074f86, 0xff1bf16c), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x69ee52b2, 0x88dfb06a, 0x449d3db8, 0x7602e094, 0xb4f131e3, 0xf6a4b249, 0xdc0a76ff, 0xdebe989a, 0x3922f1a4, 0xdd208f94, 0xcbac1c5d, 0x34a9278d, 0x84310781, 0x84ff4430, 0x31a14018, 0x95ffd9e6), [SECP256K1_FE_CONST(0xdc1e4760, 0x15bda784, 0xa1b9527b, 0x0357786a, 0xdf2a8028, 0x03957837, 0xe10cff92, 0x5ef4ca7e), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x7ae96a2b, 0x657c0710, 0x6e64479e, 0xac3434e9, 0x9cf04975, 0x12f58995, 0xc1396c28, 0x719501ee, 0x4218f20a, 0xe6c646b3, 0x63db6860, 0x5822fb14, 0x264ca8d2, 0x587fdd6f, 0xbc750d58, 0x7e76a7ee), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaa9, 0xfffffd6b, 0x3ac01550, 0x68185039, 0x6068aaf0, 0xc3f24144, 0x9a267956, 0x698833d4, 0x80c03dc5, 0x678b67cf), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xbde70df5, 0x1939b94c, 0x9c24979f, 0xa7dd04eb, 0xd9b3572d, 0xa7802290, 0x438af2a6, 0x81895441), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x9ddddd8e, 0xc1814a29, 0x3fcca202, 0xebfbe14e, 0x5d808dda, 0x142eee64, 0xc6108381, 0xe99e5cff, 0xb5072d55, 0x37223f39, 0x3e4176d2, 0xcfd93c86, 0x82ca2c22, 0xcd25ec40, 0x877296bd, 0xbb7c08f6), [SECP256K1_FE_CONST(0xadd34f27, 0xc5f90171, 0x75186c23, 0xd14f6ef2, 0xaa182896, 0x77d5373a, 0xd6c31e9f, 0xf6358ae8), SECP256K1_FE_CONST(0xf5ee8614, 0x1916fe03, 0x945d028b, 0xbc354c4a, 0x09f6d6ab, 0x1468ab9a, 0xd8742075, 0x1543c2a2), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x1ee7e9a7, 0xfcd56edf, 0xabf3712e, 0x72cc24a3, 0x0a476f5a, 0x97f77825, 0xf0308620, 0x162f31ad, 0x77bfc7de, 0xc2401a39, 0x8c5e8675, 0x417c8a7b, 0x632f5d64, 0x2f1a5059, 0x9a830b8c, 0x7981f636), [SECP256K1_FE_CONST(0xb3a8d9e7, 0x368af258, 0x3785be92, 0x2ad54dfb, 0x47329513, 0x6ade2d18, 0x2f931cd6, 0x54f35d02), SECP256K1_FE_CONST(0xe1d420e5, 0xfab5c26d, 0xf4294b2b, 0x0c19eb9a, 0x188409bf, 0x48a3741f, 0x31f72acc, 0x6ea93418), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x9e24d0a5, 0xd5014164, 0x987f86bb, 0x1709305a, 0x6fd352a0, 0xa3478fae, 0x3f85e594, 0x21d72a80, 0x3729c39b, 0xbbb26d97, 0xa4ec6bf7, 0xcb4e6453, 0x058e448e, 0x7530b028, 0xd1ae345e, 0x35608d3c), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x15f2f1a4, 0x339f5f2a, 0x313b9501, 0x5cad8124, 0xd054a171, 0xac2f31cf, 0x529dda7c, 0xfb6a38b4, 0xfe1d0fa5, 0x95b4f7d3, 0x63e82c29, 0x0095189f, 0x5f2be99c, 0x880be4fc, 0x9742a31b, 0x40041eda), [SECP256K1_FE_CONST(0xc1c3ed27, 0x17ffabfd, 0x01132f5e, 0x54dd73c3, 0x475297e0, 0xfdbff814, 0xdc9456b8, 0x4a57b698), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xd383134d, 0x721cf055, 0x143570e7, 0x82bb323d, 0x5c542a61, 0xe455823e, 0xd60b940f, 0x86826d54, 0x5a88e50b, 0x3f59874e, 0x84dab4a2, 0x07d34623, 0xd836c376, 0xc68dded3, 0xc095a716, 0xf563e4fc), [SECP256K1_FE_CONST(0xe4d2660c, 0x1d50d031, 0x97f5e610, 0x4d9c2066, 0x01f6c791, 0xadb52178, 0xe2bd6c88, 0xe89cf012), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x851695d4, 0x9a83f8ef, 0x919bb861, 0x53cbcb16, 0x630fb68a, 0xed0a766a, 0x3ec693d6, 0x8e6afa40, 0xbde70df5, 0x1939b94c, 0x9c24979f, 0xa7dd04eb, 0xd9b3572d, 0xa7802290, 0x438af2a6, 0x81895441), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0xbde70df5, 0x1939b94c, 0x9c24979f, 0xa7dd04eb, 0xd9b3572d, 0xa7802290, 0x438af2a6, 0x81895441), [SECP256K1_FE_CONST(0xd3779b57, 0x3cb17828, 0xac118cff, 0x74412ab5, 0xb84c86f8, 0xa92f48b8, 0xefcbe4c7, 0x0a675631), SECP256K1_FE_CONST(0xea6f729d, 0xdc884123, 0xf0130aa0, 0x339bda36, 0x2166d034, 0xfe50d9d7, 0x53bf0dde, 0x7721fa3f), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x99a70224, 0xc3062c32, 0x6c45d3c6, 0x46a545e9, 0xb152b75b, 0xee868378, 0x07e47951, 0x9e5b600d, 0x95b6675a, 0x10845b66, 0x37ff96e8, 0xe67f2a75, 0xbbf0f764, 0xc56d26c5, 0x4b2db5eb, 0xb026d7de), [SECP256K1_FE_CONST(0xb74a9552, 0xc5b9b6ed, 0x575d380f, 0xec3df8ed, 0xdb524ed1, 0x80b13607, 0x81e2eec6, 0x7ad06c04), SECP256K1_FE_CONST(0xbb702282, 0x4194fbe4, 0x4a74c4f4, 0xabd01ee3, 0xdac8f4cb, 0x5a0e3a67, 0xd2276039, 0xdd4aac1a), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xb5902433, 0x3110b310, 0x8625f254, 0x47665c1e, 0xbf10c6a6, 0xbbe9f018, 0xc421f4b0, 0xdcb5a993, 0x43bae2cd, 0xaae9c002, 0xe57ac99a, 0x17926e22, 0x76a66728, 0xf92b11bb, 0x7dc953b9, 0xea6d49b7), [SECP256K1_FE_CONST(0xd5a57c1b, 0x71916606, 0xbfb235f0, 0xce8d880d, 0xe9109a01, 0xb86d58c8, 0x2852b211, 0x0e55ee0f), SECP256K1_FE_CONST(0xca6cf74b, 0x128e1d79, 0x75482bfd, 0xc9e81416, 0x71a5c3e7, 0xe2af854b, 0x23707630, 0x97ba917b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xb526749e, 0x35fa04ef, 0x5d20b1d6, 0xcda6f57e, 0x2f3c10c9, 0x85098901, 0xc390da79, 0x31769e34, 0x182093b3, 0xce5883a2, 0x7b834af6, 0x18547fd1, 0x6017cee0, 0x4e9398da, 0x6aaaed2b, 0x87ca0e7c), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x901c52d6, 0xa39718c7, 0x255e94e3, 0x3189cbeb, 0x41f2fa97, 0x95279076, 0xbecd6678, 0x99684c17, 0xf988a838, 0x156cc39f, 0x2182bbc5, 0xf7e4f707, 0x9cf75bfb, 0x58638cff, 0x5b201fd3, 0xcf499fc0), [SECP256K1_FE_CONST(0xa356db31, 0x44b754a3, 0xdafdf2a9, 0x0767b65a, 0xbaea92ca, 0x56c69c3a, 0x31a4ff5b, 0xd7914d9c), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x957d4fd4, 0x4a10f38a, 0x0d0e1e46, 0x2656dd2e, 0x7f2b6b8c, 0x9545ee02, 0x903f28b0, 0x8f9a57e7, 0x3f4bf4de, 0x3731bea3, 0x291627e3, 0x9daa7dac, 0xcdcd4e13, 0xb2418482, 0x488730b7, 0xa7a816b7), [SECP256K1_FE_CONST(0xa761cd3a, 0x58385878, 0x300c6963, 0xe918b545, 0x99eb0254, 0x550f6254, 0xe414628c, 0x2f431bbd), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x0a7b6db2, 0x56f01aea, 0x797a0798, 0x5eaf98d6, 0x64486f82, 0x723758bf, 0x1a5f7b00, 0xb74887e1, 0xe07ce7ec, 0x5f24b6da, 0x199329ff, 0x674788c4, 0x1b7312d4, 0xbb63672f, 0x81ebbfd3, 0x6d962235), [SECP256K1_FE_CONST(0x442e15e3, 0xac31958b, 0x7acdb8b9, 0x7977b6d0, 0x533b1ef0, 0x5094f496, 0x126a04d0, 0xc6d6c327), SECP256K1_FE_CONST(0xc565d637, 0x6c8f4fa4, 0xa22ab5d4, 0xe1c87f5d, 0x6f9beb27, 0x7764a77f, 0x8ebe3796, 0xaa82cba5), SECP256K1_FE_CONST(0x2082a3b7, 0x04d3729c, 0x71a73a0c, 0xd745c7ce, 0x7a7c5e26, 0x77c688e2, 0x772806d1, 0xdd1a849f), SECP256K1_FE_CONST(0xc00c8cc3, 0x5ea8122e, 0xf17b0a8e, 0xc69218d1, 0x8cb45a3f, 0x0227a2c5, 0x68fbd9f9, 0xc6d6d141)]],\n+    [SECP256K1_GE_CONST(0x770ed6cb, 0xf6d2156b, 0x362523eb, 0xc2908f68, 0x65ab182c, 0x43468bc8, 0x69d6754e, 0x68dc71a0, 0x2a378713, 0x10223129, 0xbaba56c2, 0x0dc4a1e9, 0x634dba32, 0xa034d21f, 0x3104176b, 0x870c9916), [SECP256K1_FE_CONST(0x092c79ab, 0xbbafd66d, 0x58c56208, 0x7ba5c385, 0x9fed6c1b, 0x5f8005af, 0x0087cedb, 0xec7dc084), SECP256K1_FE_CONST(0x3f5c280a, 0x60802515, 0x16dfd84a, 0x4488df47, 0x96198d5f, 0xbce0be21, 0x1ab0ee7d, 0xa456e73e), SECP256K1_FE_CONST(0x94057b6b, 0xd54b13b2, 0xe2b9d322, 0x687569f5, 0xdd16727d, 0x3d912ba3, 0xeb8aa33d, 0x36c15108), SECP256K1_FE_CONST(0x098360ae, 0xcf93979e, 0x7cd6df39, 0x6e8fe2f3, 0x18fa1da3, 0x9efa707a, 0xeab95cd8, 0xcd5dca2a)]],\n+    [SECP256K1_GE_CONST(0xab01575c, 0x0604c63e, 0xe77d3153, 0x4a5bcfa2, 0x0ce66c9d, 0xf47d6054, 0xb822bfd8, 0x6934f8ec, 0xce488d85, 0xd0875b40, 0x4fb92b6e, 0x8068602a, 0x670ac4f8, 0xd76b78b6, 0xc246b713, 0x595e226b), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x4ab21b18, 0x1009aa48, 0xb8ba5eb9, 0xd373919b, 0xcfcb36a6, 0xf34961b2, 0xc859f5a8, 0x6da8ba41), SECP256K1_FE_CONST(0x9a11c401, 0x9a4ba9fc, 0xf4698a71, 0x2d85c8e4, 0x70028e02, 0x545ef049, 0xf9f3083d, 0x187c5b41)]],\n+    [SECP256K1_GE_CONST(0x6084cfdd, 0xf8d9736e, 0xa90100eb, 0xdb43338f, 0x65e2ab43, 0xef35a799, 0x926e6ce3, 0x2a89ae17, 0x753998b5, 0x9eaae7a3, 0xdcab34d9, 0xa15dbc71, 0xe539cdff, 0xdcf05927, 0x0eb27c86, 0xab6b62a4), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x18b1f707, 0x3fca3167, 0x04e1b3b8, 0x8cc8ff5a, 0x702d79bc, 0x756e4dea, 0x2ff948cc, 0xdb43a9f4), SECP256K1_FE_CONST(0xca02e589, 0x89eb16d1, 0x520463d2, 0x435745cf, 0x6e69fa52, 0x6b5c7adc, 0x57cea2b3, 0xf5a6441c)]],\n+    [SECP256K1_GE_CONST(0xc9fbac00, 0x9d8eda5d, 0x25c9aabb, 0x2b6794bc, 0x9a801afd, 0x17adef78, 0x78c65392, 0x04eb0f82, 0x95ed9e51, 0x898b903e, 0xe689e6ed, 0xff2b54bf, 0xed5c2da1, 0x69e2bdd0, 0x415a392e, 0x16b3de2b), [SECP256K1_FE_CONST(0x21a95220, 0x8577e3f0, 0xcc5b4b17, 0xf5e434b2, 0x2bbdbaaa, 0x51cd2659, 0xe37880a6, 0xa25aa7dd), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xcfd1ca13, 0x2f8d3eae, 0x73a97895, 0x01d2c82a, 0x6f057566, 0x7949fab9, 0x267bc1e8, 0xef9bf5bd), SECP256K1_FE_CONST(0x9cde02aa, 0x3acd2596, 0xdbea4b82, 0xf9f47ad1, 0x994ad567, 0x3c0d4fb2, 0xe8a3dca5, 0xe8e067fb)]],\n+    [SECP256K1_GE_CONST(0x8dcb38d9, 0x0059d4f1, 0x270455af, 0x6f3dd40e, 0x8d671a34, 0xa1fad81d, 0x2470db8a, 0x13b18f76, 0x603ed5be, 0x7bc3e67f, 0x439067da, 0x29949bcb, 0xd3c96c9f, 0x94da4231, 0x3c9c0feb, 0xe5cdf560), [SECP256K1_FE_CONST(0x3ef4008a, 0x8a190a3f, 0x5c97d211, 0x3bb539e1, 0xf4261a78, 0xf7cd85c4, 0xfd254837, 0xeaacd020), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x0fe7af4f, 0xcab80199, 0x37ee0026, 0x47d55d97, 0x575474b3, 0x4b9cc1bb, 0x133f4261, 0x017124a0), SECP256K1_FE_CONST(0x09dcec3b, 0x93c4ab42, 0x91d01dce, 0xccc19525, 0xc801add3, 0x77170c2c, 0x919f5488, 0xf41d6d3e)]],\n+    [SECP256K1_GE_CONST(0xf69dfe44, 0x890d2b09, 0x4b749a56, 0xf680e851, 0x50c47c4c, 0xd51e7796, 0x3fec4e6a, 0x09dcd0a1, 0xfb5d321c, 0x1e243b63, 0x6dfb71f3, 0xcf0e8a01, 0x2e52b22c, 0x905cec6d, 0x2f6ae32a, 0x6a4eb7be), [SECP256K1_FE_CONST(0xa17fd528, 0x7276cbf6, 0xc168dcde, 0xb32aba14, 0xe1aeae2f, 0xe7f5bea5, 0xa87d384e, 0xe8046aac), SECP256K1_FE_CONST(0x637f176a, 0xf2fe854a, 0x968ab19b, 0xee010554, 0x313e3eff, 0xc6ff8cb4, 0xcb538a6d, 0xbaedd954), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x043a0631, 0x871a3f67, 0xac03c5f8, 0x406b69a0, 0xdc14bd5b, 0x23e55f27, 0xa5d4462b, 0x0f0a2d23, 0x247b9bcc, 0x0019091c, 0x31eb4b03, 0xe731a0b5, 0xa9b33f75, 0xad9e5e63, 0x39286573, 0xa6439d88), [SECP256K1_FE_CONST(0xd65add13, 0xad3044d9, 0x2ebcd0e6, 0xd42853d8, 0xe5733ff6, 0x5297f544, 0x09a3ce89, 0xfdaffbdc), SECP256K1_FE_CONST(0x7281ad3c, 0x85de3870, 0x84f64e14, 0x42b37154, 0xeab39453, 0x8b1c0753, 0x4b303ae7, 0x37f3973e), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x8855508a, 0xade16ec5, 0x73d21e6a, 0x485dfd0a, 0x7624085c, 0x1a14b5ec, 0xdd6485de, 0x0c6839a4, 0xe50aaeba, 0xa0ceceec, 0xa1bce62e, 0x5f0fac4b, 0xe78ab03a, 0x7b2deaa6, 0xe5c17e88, 0x98e277e9), [SECP256K1_FE_CONST(0x4e96da73, 0xae14fc85, 0x25eccb2d, 0xf4416924, 0x8a7fd269, 0xa065e065, 0x04d315e6, 0x63666b03), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xc66327bc, 0x5b0b8b90, 0x37adfd63, 0xc2a9f192, 0x2ce2144a, 0xa513b390, 0xd48bc387, 0xae3ebff6, 0x17a1ca89, 0x64eb0b41, 0x162894e6, 0x4fb4112b, 0x638f96ec, 0xe0c6f30d, 0xef7616fe, 0x0e78386a), [SECP256K1_FE_CONST(0x56e8e17e, 0xfaf989d6, 0xa7efb81d, 0x5a602393, 0x6814930e, 0xbc3f6fdf, 0x72ebf472, 0x69ba4c9a), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaaa, 0xaaaaaaa9, 0xfffffd6b, 0xc53feaaf, 0x97e7afc6, 0x9f97550f, 0x3c0dbebb, 0x65d986a9, 0x9677cc2b, 0x7f3fc239, 0x98749460), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x4218f20a, 0xe6c646b3, 0x63db6860, 0x5822fb14, 0x264ca8d2, 0x587fdd6f, 0xbc750d58, 0x7e76a7ee), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x9d709c02, 0x74604cb6, 0x3b531fea, 0x35932e2e, 0xc965f4bf, 0x5913e577, 0xff31080b, 0x67727a2e, 0xf2b0b821, 0xa24081a9, 0xd0ca84d9, 0x303068cf, 0x7ea32788, 0x05926b0a, 0xb90b9af7, 0x498efbd5), [SECP256K1_FE_CONST(0xb06abefa, 0x192a6498, 0xbce368ff, 0xacc843fb, 0xb39f8117, 0xa56a1870, 0xf57197ef, 0xd9312f6d), SECP256K1_FE_CONST(0x1263d142, 0xaac9cfc5, 0x64c56650, 0x0fa4a62f, 0x38e727fb, 0xb4dbeaf2, 0x6fdf7d05, 0xfd022c71), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xb4955dcb, 0x4daaa784, 0x9b421c14, 0x53ec8945, 0xd685d554, 0xf41103f8, 0x12cbfb2f, 0x54a4539b, 0x354d18e4, 0xb1cee7a3, 0xf98b0651, 0xf5544091, 0xe8a00656, 0x0c74750d, 0xaadf460e, 0xc3f620ea), [SECP256K1_FE_CONST(0x6281a8a7, 0x0a3b5745, 0xb897ce4f, 0x58305fb0, 0xd6a0f8ab, 0xa6c5ba18, 0xed278ce1, 0x50f7911c), SECP256K1_FE_CONST(0x5f95a708, 0x2d2f6d69, 0xf7ff9b74, 0x2b88063c, 0x39a3003b, 0xb03f333c, 0x7e3d7c5e, 0xd861fb04), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x6ad63dfd, 0xcd231967, 0xff2508f4, 0x75896976, 0xf8728e40, 0xdd7a2acc, 0x6b5ced37, 0xcada8291, 0xf93e5181, 0x8f5329b8, 0xd520a9af, 0xd72938e1, 0x2e3f8be6, 0x421d2bce, 0x89d7b14e, 0x25bf5336), [SECP256K1_FE_CONST(0x0f050318, 0x622f79f1, 0x5a2b23d9, 0xf76329b7, 0x8e195f1a, 0x4651aae0, 0x65d58bcd, 0xdfa4d3b6), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xa91b7f2a, 0xb93de821, 0xabeec175, 0x0258e4d4, 0xf5f09831, 0xb0a11dda, 0x47e89ddf, 0x6944d819, 0x22eb9bf6, 0x4a517df2, 0xc27d1c55, 0x1df07609, 0x166fc995, 0xe2b39fee, 0x0473ea46, 0xed14efc1), [SECP256K1_FE_CONST(0x7a01651a, 0x81a7f09e, 0x2733cf34, 0x9e6472a1, 0x18c16780, 0x6f5c880f, 0x534b89a6, 0x52be06a7), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x4218f20a, 0xe6c646b3, 0x63db6860, 0x5822fb14, 0x264ca8d2, 0x587fdd6f, 0xbc750d58, 0x7e76a7ee), [SECP256K1_FE_CONST(0x2c8864a8, 0xc34e87d7, 0x53ee7300, 0x8bbed54a, 0x47b37907, 0x56d0b747, 0x10341b37, 0xf598a5fe), SECP256K1_FE_CONST(0x15908d62, 0x2377bedc, 0x0fecf55f, 0xcc6425c9, 0xde992fcb, 0x01af2628, 0xac40f220, 0x88de01f0), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xa64de96a, 0x6254cefc, 0xffbeaf89, 0x8f2c228a, 0xf6d405f3, 0xbcc6a4cc, 0xe068312a, 0xf7ccf8e1, 0x8f9b3a1b, 0x2d146ea9, 0x54bfc5e2, 0xcdfe861c, 0xcbed8431, 0xc741c5f9, 0xd32f16a3, 0x073ea496), [SECP256K1_FE_CONST(0x4591d33d, 0x1a133a87, 0x94689b1b, 0x0ca445b7, 0x8ada3bce, 0xc2e812b0, 0x8315e2b1, 0x07940ad4), SECP256K1_FE_CONST(0xa763d217, 0x6027d40e, 0x8a8ff34b, 0xd9c639b7, 0x3e2ea045, 0x92274fdc, 0xfa4051c6, 0x6d93a1b6), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n+    [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n+]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780401442",
      "id" : 780401442,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug_si",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 162,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780401898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401898"
         }
      },
      "author_association" : "MEMBER",
      "body" : "More Pythonic: `ge, fe = test_vector`.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:05:42Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780401898",
      "id" : 780401898,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug_zq",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 200,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401898/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780402250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps more Pythonic: `for j, field_ele in enumerate(fe):` (this results in 0-based j rather than 1-based, but perhaps f() and r() should be converted to use 0-based indexing for j anyway).",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:06:20Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780402250",
      "id" : 780402250,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug_5K",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 202,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402250/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:18:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780402807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402807"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Newline.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:07:19Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    assert(field_ele == fe[j-1])\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780402807",
      "id" : 780402807,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhAB3",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 207,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402807/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780402807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780404247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think the modulo reductions are strictly needed; any `fe` object's `val` value should already be reduced.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:09:47Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780404247",
      "id" : 780404247,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhAYX",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 15,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780404523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `fe` constructor will do a modulo reduction; no need to repeat it here.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:10:14Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe((self.val *  o.val         ) % self.p)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780404523",
      "id" : 780404523,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhAcr",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 17,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404523/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780404523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780405854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780405854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you replace all the 0 fe elements with Null, you can simplify the equality check in the test.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:12:27Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [\n+    [SECP256K1_GE_CONST(0xc27fb7a3, 0x283a7d3e, 0xc9f96421, 0x545ef6f5, 0x8ace7b71, 0x06c8a1b9, 0x07c0ae8a, 0x7598159c, 0xe05a060e, 0x839ef79f, 0xc0c1267c, 0xa17880c9, 0x584cdd34, 0xc05f9695, 0x55482207, 0xe6851f2a), [SECP256K1_FE_CONST(0xc0ad127a, 0xa36824d6, 0x5b1f5be7, 0x4de1aa25, 0xbc4d5cbe, 0xcee15462, 0x0a12682a, 0xfc87df98), SECP256K1_FE_CONST(0xd40fd5bc, 0x51992484, 0x8f13273b, 0x1d857cba, 0x42d45e78, 0x9eaa4e47, 0xf458b83a, 0xbd5f8d1c), SECP256K1_FE_CONST(0xde636141, 0x7deb440b, 0x3a305924, 0x43635cf9, 0xcf42f9b5, 0xf5b891c1, 0x1e119f09, 0x71b570ac), SECP256K1_FE_CONST(0xd55135ce, 0x41bb4d05, 0x5b3757f4, 0xaf1d6537, 0x137376d7, 0x5270caae, 0xda68382d, 0x25d00708)]],\n+    [SECP256K1_GE_CONST(0x3f5ada4e, 0x8f646ec9, 0x10ffc1a2, 0xb74d94bb, 0xb1860631, 0xa3c2a349, 0xeddf55ca, 0xfd49cce9, 0x28ad9d8d, 0x77d9cd87, 0xf80aaa34, 0x8e9ad1b4, 0x40353d7a, 0x6e717714, 0x60425319, 0x38f530c3), [SECP256K1_FE_CONST(0xac42348f, 0x1b356822, 0x5bb7d4c0, 0x0feab37e, 0xa5fb7fbb, 0x0cc3879d, 0xc74e2dda, 0xf9a393bf), SECP256K1_FE_CONST(0xda7a45b2, 0x6c87dcb6, 0x4a934c1d, 0xc841d250, 0xf98af5f0, 0x511be2a3, 0x82d17bab, 0xe1e4a533), SECP256K1_FE_CONST(0xc3d9b9a6, 0x570ca9c8, 0xa640fc75, 0x945850b2, 0xcc86b6d6, 0x399b4496, 0x4288d76d, 0x832a32d7), SECP256K1_FE_CONST(0xbf5ebc2f, 0x4060abe7, 0x884a1fa7, 0xcc0883cb, 0x97535c5a, 0x31dc6df4, 0xc6968e9d, 0x8554f3b1)]],\n+    [SECP256K1_GE_CONST(0xf5f74fab, 0x3ebbbcfd, 0xdcaef6cc, 0xd14eb934, 0xf9435a4e, 0x4a1ed2d8, 0x75352c47, 0x306d6c2f, 0xea6a5b2a, 0xe109897d, 0x046e1504, 0xf7a382d6, 0x1eb49a8a, 0xae8852ef, 0x48e29466, 0x194d9e66), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xe8362df2, 0x38e0405b, 0x49218747, 0x74f9ebca, 0x36dfe21b, 0x1a49ae2d, 0x0fa23fd4, 0x11a262a6), SECP256K1_FE_CONST(0x9e453426, 0xac973155, 0x19d11d63, 0xc3bb27ee, 0x89a7ec85, 0x5661dce4, 0xe428f6cc, 0x0be059cc)]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780405854",
      "id" : 780405854,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhAxe",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 119,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780405854/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780405854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780406347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406347"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the field_ele is None, you should probably check that `fe[j-1]` is 0 (or better, have those fe elements be `Null` instead).",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:13:17Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780406347",
      "id" : 780406347,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhA5L",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 204,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406347/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780406884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add a new `SECP256k1.is_infinity` function instead of overloading `on_curve`, and use that.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:14:09Z",
      "diff_hunk" : "@@ -103,35 +104,47 @@ def r(x,y,i):\n \n def encode(P):\n     while True:\n-        u = field_random()\n-        T = curve_negate(f(u))\n-        Q = curve_add(T, P)\n-        if is_infinity(Q): Q = T\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.on_curve(Q) is None:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780406884",
      "id" : 780406884,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhBBk",
      "original_commit_id" : "c2fb7ebfbcdd017d1191afd8d199cc1cec924517",
      "original_line" : 113,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406884/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780406884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780407924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780407924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could write these as `b\"\\x54\\xca\\xd2\\x27\\xb2...\"` to directly construct bytes objects.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-07T17:15:52Z",
      "diff_hunk" : "@@ -211,6 +211,21 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n ]\n \n+ellsq_enc_tests = [\n+    [[0x54,0xca,0xd2,0x27,0xb2,0xc9,0x8d,0x5f,0x7c,0x78,0x8c,0xfc,0x3d,0xaf,0xd6,0x52,0xf5,0x8f,0x69,0xcf,0xef,0x63,0x2b,0x82,0x2b,0x35,0xd0,0xb0,0xe2,0x4f,0xc0,0x3a,0xd2,0x8c,0xa1,0x4b,0x6f,0x62,0xd4,0x53,0x79,0xc5,0x3f,0x70,0xee,0x40,0x5c,0xa9,0x2c,0xe7,0xb6,0xf9,0x70,0x83,0x13,0x05,0xf2,0x7d,0xc4,0x1e,0xb6,0x9d,0xe0,0x6e], [0x02,0x11,0x62,0x89,0x03,0x32,0x88,0x91,0xae,0x09,0xd1,0x08,0xd8,0x92,0x43,0xe4,0x7e,0x10,0x9f,0xe7,0xb8,0xbb,0x1e,0x2d,0xf1,0xa3,0xae,0x9b,0x0e,0x78,0x08,0x54,0x9c]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780407924",
      "id" : 780407924,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uhBR0",
      "original_commit_id" : "915a1c9abb308e00cb8ddc8c9f76fd5211eb6474",
      "original_line" : 215,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 846794921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780407924/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780407924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780672835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780672835"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Alternative: `return p1[2] == 0`.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:17:36Z",
      "diff_hunk" : "@@ -95,6 +95,13 @@ def on_curve(self, p1):\n         z4 = pow(z2, 2, self.p)\n         return z1 != 0 and (pow(x1, 3, self.p) + self.a * x1 * z4 + self.b * z2 * z4 - pow(y1, 2, self.p)) % self.p == 0\n \n+    def is_infinity(self, p1):\n+        \"\"\"Return true if Jacobian tuple p is at infinity\"\"\"\n+        _, _, z1 = p1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780672835",
      "id" : 780672835,
      "line" : 127,
      "node_id" : "PRRC_kwDOABII584uiB9D",
      "original_commit_id" : "56cb9c62967df3effdf9506bcfa9b7c5a3e70c4f",
      "original_line" : 127,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 40,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780672835/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780672835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Faster alternative: `return jacobi_symbol(self.val, SECP256K1_FIELD_SIZE) >= 0`",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:25:50Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe(self.val + o.val)\n+    def __eq__      (self, o): return self.val == o.val\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe(self.val * o.val)\n+    def __neg__     (self   ): return fe(-self.val)\n+    def __pow__     (self, s): return fe(pow(self.val, s, self.p))\n+    def __sub__     (self, o): return fe(self.val - o.val)\n+    def __truediv__ (self, o): return fe(self.val * o.invert().val)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))\n+    def is_odd(self): return (self.val & 1) != 0\n+    def is_square(self):\n+        ret_val = modsqrt(self.val, fe.p)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673423",
      "id" : 780673423,
      "line" : 83,
      "node_id" : "PRRC_kwDOABII584uiCGP",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 83,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 24,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Faster alternative: `return fe(modinv(self.val, SECP256K1_FIELD_SIZE))`",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:26:33Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe(self.val + o.val)\n+    def __eq__      (self, o): return self.val == o.val\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe(self.val * o.val)\n+    def __neg__     (self   ): return fe(-self.val)\n+    def __pow__     (self, s): return fe(pow(self.val, s, self.p))\n+    def __sub__     (self, o): return fe(self.val - o.val)\n+    def __truediv__ (self, o): return fe(self.val * o.invert().val)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673501",
      "id" : 780673501,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII584uiCHd",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 80,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 21,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673501/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`p` isn't needed anymore; you can also use `SECP256K1_FIELD_SIZE` directly.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:27:27Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780673587",
      "id" : 780673587,
      "line" : 67,
      "node_id" : "PRRC_kwDOABII584uiCIz",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 67,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 8,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673587/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780673587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Slow and bad randomness apply, but elligator square inherently doesn't deal with secret keys, so there is nothing to protect, and side channel attacks do not apply.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:33:14Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674061",
      "id" : 780674061,
      "line" : 5,
      "node_id" : "PRRC_kwDOABII584uiCQN",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 5,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674061/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No braces needed around `matches == 1` (here and elsewhere)",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:34:58Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674185",
      "id" : 780674185,
      "line" : 201,
      "node_id" : "PRRC_kwDOABII584uiCSJ",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 201,
      "original_position" : 201,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 201,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674863"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense. Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:42:45Z",
      "diff_hunk" : "@@ -93,7 +93,9 @@ def on_curve(self, p1):\n         x1, y1, z1 = p1\n         z2 = pow(z1, 2, self.p)\n         z4 = pow(z2, 2, self.p)\n-        return z1 != 0 and (pow(x1, 3, self.p) + self.a * x1 * z4 + self.b * z2 * z4 - pow(y1, 2, self.p)) % self.p == 0\n+        if z1 == 0:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674863",
      "id" : 780674863,
      "in_reply_to_id" : 780390992,
      "line" : 128,
      "node_id" : "PRRC_kwDOABII584uiCcv",
      "original_commit_id" : "88ed68160834c51d545bf70080f6e7dd713c88b1",
      "original_line" : 128,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : 41,
      "pull_request_review_id" : 847161350,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674863/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674865"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:42:49Z",
      "diff_hunk" : "@@ -0,0 +1,68 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = c2 - c1*s / (1+b+s)\n+    g1 = x1**3 + b\n+    if is_square(g1):\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1-1\n+        g2 = x2**3 + b\n+        if is_square(g2):\n+            x, g = x2, g2\n+        else:\n+            x3 = 1 - (1+b+s)**2 / (3*s)\n+            g3 = x3**3 + b\n+            x, g = x3, g3\n+    y = sqrt(g)\n+    if is_odd(y) == is_odd(u):\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 1 or i == 2:\n+        z = 2*x + 1\n+        t1 = c1 - z\n+        t2 = c1 + z\n+        if not is_square(t1*t2):\n+            return None\n+        if i == 1:\n+            if t2 == 0:\n+                return None\n+            if t1 == 0 and is_odd(y):\n+                return None\n+            u = sqrt((1+b)*t1/t2)\n+        else:\n+            x1 = -x-1\n+            if is_square(x1**3 + b):\n+                return None\n+            u = sqrt((1+b)*t2/t1)\n+    else:\n+        z = 2 - 4*b - 6*x\n+        if not is_square(z**2 - 16*(b+1)**2):\n+            return None\n+        if i == 3:\n+            s = (z + sqrt(z**2 - 16*(b+1)**2)) / 4\n+        else:\n+            if z**2 == 16*(b+1)**2:\n+                return None\n+            s = (z - sqrt(z**2 - 16*(b+1)**2)) / 4\n+        if not is_square(s):\n+            return None\n+        x1 = c2 - c1*s / (1+b+s)\n+        if is_square(x1**3 + b):\n+            return None\n+        u = sqrt(s)\n+    if is_odd(y) == is_odd(u):\n+        return u\n+    else:\n+        return -u",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674865",
      "id" : 780674865,
      "in_reply_to_id" : 780391774,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCcx",
      "original_commit_id" : "e3a80dd45c840703e8a6c492739490aa0acfc64f",
      "original_line" : 68,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674865/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:42:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674873"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Merged with next commit.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:42:54Z",
      "diff_hunk" : "@@ -0,0 +1,68 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674873",
      "id" : 780674873,
      "in_reply_to_id" : 780392201,
      "line" : 4,
      "node_id" : "PRRC_kwDOABII584uiCc5",
      "original_commit_id" : "e3a80dd45c840703e8a6c492739490aa0acfc64f",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 4,
      "pull_request_review_id" : 847161368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:42:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674885"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense. I've moved the class to key.py.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:00Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674885",
      "id" : 780674885,
      "in_reply_to_id" : 780393128,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdF",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 10,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674885/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674886"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:04Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe((self.val *  o.val         ) % self.p)\n+    def __neg__     (self   ): return fe(-self.val                            )\n+    def __pow__     (self, s): return fe(pow(self.val, s       , self.p))\n+    def __sub__     (self, o): return fe( self.val -  o.val                   )\n+    def __truediv__ (self, o): return fe((self.val *  o.invert().val) % self.p)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))\n+    def is_odd(self): return (self.val & 1) != 0\n+    def is_square(self):\n+        ret_val = modsqrt(self.val, fe.p)\n+        if ret_val is not None:\n+            return True\n+        return False\n+    def sqrt(self):\n+        return fe(modsqrt(self.val, fe.p))\n+\n+c1 = fe(-3).sqrt()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674886",
      "id" : 780674886,
      "in_reply_to_id" : 780393385,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdG",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 33,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674889"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pretty cool! I've implemented the suggestion.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:08Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674889",
      "id" : 780674889,
      "in_reply_to_id" : 780395317,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdJ",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 100,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674889/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674895"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:13Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674895",
      "id" : 780674895,
      "in_reply_to_id" : 780396428,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdP",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 116,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674899"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! This looks really nice.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:16Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [\n+    [SECP256K1_GE_CONST(0xc27fb7a3, 0x283a7d3e, 0xc9f96421, 0x545ef6f5, 0x8ace7b71, 0x06c8a1b9, 0x07c0ae8a, 0x7598159c, 0xe05a060e, 0x839ef79f, 0xc0c1267c, 0xa17880c9, 0x584cdd34, 0xc05f9695, 0x55482207, 0xe6851f2a), [SECP256K1_FE_CONST(0xc0ad127a, 0xa36824d6, 0x5b1f5be7, 0x4de1aa25, 0xbc4d5cbe, 0xcee15462, 0x0a12682a, 0xfc87df98), SECP256K1_FE_CONST(0xd40fd5bc, 0x51992484, 0x8f13273b, 0x1d857cba, 0x42d45e78, 0x9eaa4e47, 0xf458b83a, 0xbd5f8d1c), SECP256K1_FE_CONST(0xde636141, 0x7deb440b, 0x3a305924, 0x43635cf9, 0xcf42f9b5, 0xf5b891c1, 0x1e119f09, 0x71b570ac), SECP256K1_FE_CONST(0xd55135ce, 0x41bb4d05, 0x5b3757f4, 0xaf1d6537, 0x137376d7, 0x5270caae, 0xda68382d, 0x25d00708)]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674899",
      "id" : 780674899,
      "in_reply_to_id" : 780400738,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdT",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 117,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674899/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674904"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:23Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674904",
      "id" : 780674904,
      "in_reply_to_id" : 780401898,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdY",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 200,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674904/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:27Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674907",
      "id" : 780674907,
      "in_reply_to_id" : 780402250,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdb",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 202,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674907/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674911"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:31Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    assert(field_ele == fe[j-1])\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674911",
      "id" : 780674911,
      "in_reply_to_id" : 780402807,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdf",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 207,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161438,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674911/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674917"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674917"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:35Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674917",
      "id" : 780674917,
      "in_reply_to_id" : 780404247,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCdl",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 15,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674917/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674934"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:39Z",
      "diff_hunk" : "@@ -5,64 +5,93 @@\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n \n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = 2**256 - 2**32 - 977\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe( self.val +  o.val                   )\n+    def __eq__      (self, o): return self.val % self.p == o.val % self.p\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe((self.val *  o.val         ) % self.p)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674934",
      "id" : 780674934,
      "in_reply_to_id" : 780404523,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCd2",
      "original_commit_id" : "5c31902d6201b6a3aec8580fac6157b7463b18fb",
      "original_line" : 17,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice! Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:42Z",
      "diff_hunk" : "@@ -94,4 +94,69 @@ def r(x,y,i):\n     if y.is_odd() == u.is_odd():\n         return u\n     else:\n-        return -u\n\\ No newline at end of file\n+        return -u\n+\n+def SECP256K1_FE_CONST(d7, d6, d5, d4, d3, d2, d1, d0):\n+    n = []\n+    n.append(d0 | (((d1) & 0xFFFFF) << 32))\n+    n.append((d1 >> 20) | (d2 << 12) | ((d3 & 0xFF) << 44))\n+    n.append((d3 >> 8) | ((d4 & 0xFFFFFFF) << 24))\n+    n.append((d4 >> 28) | (d5 << 4) | ((d6 & 0xFFFF) << 36))\n+    n.append((d6 >> 16) | (d7 << 16))\n+    sum = 0\n+    for i in range(5):\n+        sum += n[i]*(2**(i*52))\n+    return fe(sum)\n+\n+def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n+    fe1 = SECP256K1_FE_CONST(a, b, c, d, e, f, g, h)\n+    fe2 = SECP256K1_FE_CONST(i, j, k, l, m, n, o, p)\n+    return (fe1, fe2)\n+\n+ellsq_tests = [\n+    [SECP256K1_GE_CONST(0xc27fb7a3, 0x283a7d3e, 0xc9f96421, 0x545ef6f5, 0x8ace7b71, 0x06c8a1b9, 0x07c0ae8a, 0x7598159c, 0xe05a060e, 0x839ef79f, 0xc0c1267c, 0xa17880c9, 0x584cdd34, 0xc05f9695, 0x55482207, 0xe6851f2a), [SECP256K1_FE_CONST(0xc0ad127a, 0xa36824d6, 0x5b1f5be7, 0x4de1aa25, 0xbc4d5cbe, 0xcee15462, 0x0a12682a, 0xfc87df98), SECP256K1_FE_CONST(0xd40fd5bc, 0x51992484, 0x8f13273b, 0x1d857cba, 0x42d45e78, 0x9eaa4e47, 0xf458b83a, 0xbd5f8d1c), SECP256K1_FE_CONST(0xde636141, 0x7deb440b, 0x3a305924, 0x43635cf9, 0xcf42f9b5, 0xf5b891c1, 0x1e119f09, 0x71b570ac), SECP256K1_FE_CONST(0xd55135ce, 0x41bb4d05, 0x5b3757f4, 0xaf1d6537, 0x137376d7, 0x5270caae, 0xda68382d, 0x25d00708)]],\n+    [SECP256K1_GE_CONST(0x3f5ada4e, 0x8f646ec9, 0x10ffc1a2, 0xb74d94bb, 0xb1860631, 0xa3c2a349, 0xeddf55ca, 0xfd49cce9, 0x28ad9d8d, 0x77d9cd87, 0xf80aaa34, 0x8e9ad1b4, 0x40353d7a, 0x6e717714, 0x60425319, 0x38f530c3), [SECP256K1_FE_CONST(0xac42348f, 0x1b356822, 0x5bb7d4c0, 0x0feab37e, 0xa5fb7fbb, 0x0cc3879d, 0xc74e2dda, 0xf9a393bf), SECP256K1_FE_CONST(0xda7a45b2, 0x6c87dcb6, 0x4a934c1d, 0xc841d250, 0xf98af5f0, 0x511be2a3, 0x82d17bab, 0xe1e4a533), SECP256K1_FE_CONST(0xc3d9b9a6, 0x570ca9c8, 0xa640fc75, 0x945850b2, 0xcc86b6d6, 0x399b4496, 0x4288d76d, 0x832a32d7), SECP256K1_FE_CONST(0xbf5ebc2f, 0x4060abe7, 0x884a1fa7, 0xcc0883cb, 0x97535c5a, 0x31dc6df4, 0xc6968e9d, 0x8554f3b1)]],\n+    [SECP256K1_GE_CONST(0xf5f74fab, 0x3ebbbcfd, 0xdcaef6cc, 0xd14eb934, 0xf9435a4e, 0x4a1ed2d8, 0x75352c47, 0x306d6c2f, 0xea6a5b2a, 0xe109897d, 0x046e1504, 0xf7a382d6, 0x1eb49a8a, 0xae8852ef, 0x48e29466, 0x194d9e66), [SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0xe8362df2, 0x38e0405b, 0x49218747, 0x74f9ebca, 0x36dfe21b, 0x1a49ae2d, 0x0fa23fd4, 0x11a262a6), SECP256K1_FE_CONST(0x9e453426, 0xac973155, 0x19d11d63, 0xc3bb27ee, 0x89a7ec85, 0x5661dce4, 0xe428f6cc, 0x0be059cc)]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674938",
      "id" : 780674938,
      "in_reply_to_id" : 780405854,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCd6",
      "original_commit_id" : "94767af46217fef4954c78e216384a87d8ffbb14",
      "original_line" : 119,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674938/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674943"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:46Z",
      "diff_hunk" : "@@ -159,4 +164,44 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x49a0dc06, 0x8c3f117a, 0xefdc842d, 0x3d358153, 0xf677f04c, 0x6dabc9c9, 0x1b09d452, 0xfef27b66, 0x7b944da4, 0x8a175dbc, 0x444ead8d, 0xb82eff66, 0xb081a8aa, 0xe6453fed, 0x2bca9720, 0xb44dd6e5), [SECP256K1_FE_CONST(0x7bf1e2b1, 0x720c1c44, 0x0db64687, 0xf16439fa, 0x41b39833, 0x8095f24e, 0xbeec0cfa, 0x88750dc9), SECP256K1_FE_CONST(0xdc97e26d, 0x3137445d, 0x6c1269b6, 0x1a765501, 0x0c19c36a, 0x2e361066, 0xe31e2bb1, 0x0403470b), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0xd09a4047, 0xf158fe52, 0xf96c661d, 0x02c68657, 0xc4c976ea, 0x96ea85ef, 0x46d6985b, 0xd540756b, 0xe793bfaa, 0xe9300f18, 0xe6f9b55a, 0xae263223, 0x68b61d51, 0xae5022ef, 0xe266c72d, 0x574178bc), [SECP256K1_FE_CONST(0x7e6175fd, 0xfbb9fb4f, 0xaf6e2b92, 0x5ef86c4a, 0x444d819a, 0xaa82dbee, 0x545d3d9b, 0x296375be), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]],\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n-]\n\\ No newline at end of file\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(1,5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge[0] == group_ele[0] and ge[1] == group_ele[1])\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ellsq_tests:\n+            ge = test_vector[0]\n+            fe = test_vector[1]\n+            for j in range(1, 5):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674943",
      "id" : 780674943,
      "in_reply_to_id" : 780406347,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCd_",
      "original_commit_id" : "8eb51d7e80772c02d6e3219b30fff4297f3dc3ad",
      "original_line" : 204,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674945"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:49Z",
      "diff_hunk" : "@@ -103,35 +104,47 @@ def r(x,y,i):\n \n def encode(P):\n     while True:\n-        u = field_random()\n-        T = curve_negate(f(u))\n-        Q = curve_add(T, P)\n-        if is_infinity(Q): Q = T\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.on_curve(Q) is None:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674945",
      "id" : 780674945,
      "in_reply_to_id" : 780406884,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCeB",
      "original_commit_id" : "c2fb7ebfbcdd017d1191afd8d199cc1cec924517",
      "original_line" : 113,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161470,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674945/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674948"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! That looks really elegant.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:43:53Z",
      "diff_hunk" : "@@ -211,6 +211,21 @@ def SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):\n     [SECP256K1_GE_CONST(0x34986625, 0x04b73c7c, 0x8cecb6c3, 0x3cd493bd, 0xfc190e0f, 0x87d913d7, 0xff9ad42e, 0x222bfe95, 0x245b3a61, 0xb8d46997, 0xf14f2fea, 0x28748996, 0x91eb3254, 0x2b9907d6, 0x5eb9d21d, 0x42454021), [SECP256K1_FE_CONST(0x7f556282, 0xc3dd9d26, 0x3390d6bb, 0xddada698, 0xab8fd7c7, 0xd1a06498, 0xf42b3043, 0x7c8361ad), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000), SECP256K1_FE_CONST(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)]]\n ]\n \n+ellsq_enc_tests = [\n+    [[0x54,0xca,0xd2,0x27,0xb2,0xc9,0x8d,0x5f,0x7c,0x78,0x8c,0xfc,0x3d,0xaf,0xd6,0x52,0xf5,0x8f,0x69,0xcf,0xef,0x63,0x2b,0x82,0x2b,0x35,0xd0,0xb0,0xe2,0x4f,0xc0,0x3a,0xd2,0x8c,0xa1,0x4b,0x6f,0x62,0xd4,0x53,0x79,0xc5,0x3f,0x70,0xee,0x40,0x5c,0xa9,0x2c,0xe7,0xb6,0xf9,0x70,0x83,0x13,0x05,0xf2,0x7d,0xc4,0x1e,0xb6,0x9d,0xe0,0x6e], [0x02,0x11,0x62,0x89,0x03,0x32,0x88,0x91,0xae,0x09,0xd1,0x08,0xd8,0x92,0x43,0xe4,0x7e,0x10,0x9f,0xe7,0xb8,0xbb,0x1e,0x2d,0xf1,0xa3,0xae,0x9b,0x0e,0x78,0x08,0x54,0x9c]],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674948",
      "id" : 780674948,
      "in_reply_to_id" : 780407924,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiCeE",
      "original_commit_id" : "915a1c9abb308e00cb8ddc8c9f76fd5211eb6474",
      "original_line" : 215,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847161476,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:43:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You'll need to add `\"ellsq\"` to the `TEST_FRAMEWORK_MODULES` in test/functional/test_runner.py.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:44:03Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780674958",
      "id" : 780674958,
      "line" : 188,
      "node_id" : "PRRC_kwDOABII584uiCeO",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 188,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 188,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674958/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780674958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780675249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps don't use `P` here (it's also used as a function argument further). Alternatively, just drop it and use `SECP256K1_FIELD_SIZE` directly.",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:47:15Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780675249",
      "id" : 780675249,
      "line" : 158,
      "node_id" : "PRRC_kwDOABII584uiCix",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 158,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 158,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for your really nice review @sipa! Iâve addressed your comments. Ready for further review.",
      "created_at" : "2022-01-08T14:47:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1008011629",
      "id" : 1008011629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII5848FQlt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008011629/reactions"
      },
      "updated_at" : "2022-01-08T14:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008011629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780675342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`fe` classes with class name. Maybe call it `fes` (since it's a list)?",
      "commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "created_at" : "2022-01-08T14:48:49Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge == group_ele)\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ELLSQ_TESTS:\n+            ge, fe = test_vector",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780675342",
      "id" : 780675342,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII584uiCkO",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 219,
      "original_position" : 219,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 219,
      "pull_request_review_id" : 847159550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675342/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T14:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780675342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:42Z",
      "diff_hunk" : "@@ -95,6 +95,13 @@ def on_curve(self, p1):\n         z4 = pow(z2, 2, self.p)\n         return z1 != 0 and (pow(x1, 3, self.p) + self.a * x1 * z4 + self.b * z2 * z4 - pow(y1, 2, self.p)) % self.p == 0\n \n+    def is_infinity(self, p1):\n+        \"\"\"Return true if Jacobian tuple p is at infinity\"\"\"\n+        _, _, z1 = p1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679477",
      "id" : 780679477,
      "in_reply_to_id" : 780672835,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDk1",
      "original_commit_id" : "56cb9c62967df3effdf9506bcfa9b7c5a3e70c4f",
      "original_line" : 127,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 847166221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679477/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:45Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe(self.val + o.val)\n+    def __eq__      (self, o): return self.val == o.val\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe(self.val * o.val)\n+    def __neg__     (self   ): return fe(-self.val)\n+    def __pow__     (self, s): return fe(pow(self.val, s, self.p))\n+    def __sub__     (self, o): return fe(self.val - o.val)\n+    def __truediv__ (self, o): return fe(self.val * o.invert().val)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))\n+    def is_odd(self): return (self.val & 1) != 0\n+    def is_square(self):\n+        ret_val = modsqrt(self.val, fe.p)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679497",
      "id" : 780679497,
      "in_reply_to_id" : 780673423,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDlJ",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 83,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 847166230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679497/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:49Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE\n+    def __init__(self, x):\n+        self.val = x % self.p\n+\n+    def __add__     (self, o): return fe(self.val + o.val)\n+    def __eq__      (self, o): return self.val == o.val\n+    def __hash__    (self   ): return id(self)\n+    def __mul__     (self, o): return fe(self.val * o.val)\n+    def __neg__     (self   ): return fe(-self.val)\n+    def __pow__     (self, s): return fe(pow(self.val, s, self.p))\n+    def __sub__     (self, o): return fe(self.val - o.val)\n+    def __truediv__ (self, o): return fe(self.val * o.invert().val)\n+\n+    def invert      (self   ): return fe(pow(self.val, self.p-2, self.p))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679518",
      "id" : 780679518,
      "in_reply_to_id" : 780673501,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDle",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 80,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 847166242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679526"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:52Z",
      "diff_hunk" : "@@ -60,6 +60,33 @@ def modsqrt(a, p):\n         return sqrt\n     return None\n \n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+\n+class fe:\n+    \"\"\"Prime field over 2^256 - 2^32 - 977\"\"\"\n+    p = SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679526",
      "id" : 780679526,
      "in_reply_to_id" : 780673587,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDlm",
      "original_commit_id" : "cdecacdc4f4b656b93a4c8206c71d139619d7fc9",
      "original_line" : 67,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/key.py",
      "position" : null,
      "pull_request_review_id" : 847166248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679526/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679530"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:55Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679530",
      "id" : 780679530,
      "in_reply_to_id" : 780674061,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDlq",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847166255,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679530/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679534"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:39:59Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679534",
      "id" : 780679534,
      "in_reply_to_id" : 780674185,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDlu",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 201,
      "original_position" : 201,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847166260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679539"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:40:04Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679539",
      "id" : 780679539,
      "in_reply_to_id" : 780674958,
      "line" : 186,
      "node_id" : "PRRC_kwDOABII584uiDlz",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 186,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 186,
      "pull_request_review_id" : 847166267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679539/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:40:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:40:07Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679546",
      "id" : 780679546,
      "in_reply_to_id" : 780675249,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDl6",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 158,
      "original_position" : 158,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847166273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679561"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T15:40:11Z",
      "diff_hunk" : "@@ -0,0 +1,245 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow, uses bad randomness, does not properly protect\n+keys, and is trivially vulnerable to side channel attacks. Do not use for\n+anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+P = SECP256K1_FIELD_SIZE\n+FIELD_BITS = P.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % P\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert(SECP256K1.on_curve(jac_ge))\n+            # t should appear exactly once in preimages\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert(matches == 1)\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert (ge == group_ele)\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ELLSQ_TESTS:\n+            ge, fe = test_vector",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780679561",
      "id" : 780679561,
      "in_reply_to_id" : 780675342,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiDmJ",
      "original_commit_id" : "e755867f796d0cfe7539a9d1d82590d918433ee2",
      "original_line" : 219,
      "original_position" : 219,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847166283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T15:40:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780679561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks again @sipa! Iâve addressed your comments. Ready for further review.",
      "created_at" : "2022-01-08T15:40:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1008030306",
      "id" : 1008030306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII5848FVJi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008030306/reactions"
      },
      "updated_at" : "2022-01-08T15:40:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008030306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780696856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780696856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe give this function a more descriptive name, and a longer comment?\r\n\r\nE.g. \"Given any field element u (of type fe), return the affine X and Y coordinates of a point on the secp256k1 curve\"",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:30:14Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780696856",
      "id" : 780696856,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII584uiH0Y",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 17,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780696856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780696856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here, something like \"Given the X and Y coordinates of a point on the secp256k1 curve (of type fe), return a value u such that f(u) = (x,y), or None. There can be up to 4 such inverses, and i selects which formula to use. Each i can independently from other i values return a value or None. All non-None values returned across all 4 i values are guaranteed to be distinct, and together they will cover all inverses of (x,y) under f.\"",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:34:42Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697225",
      "id" : 780697225,
      "line" : 40,
      "node_id" : "PRRC_kwDOABII584uiH6J",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 40,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 40,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Using `fe1` as variable name here is a bit confusing, as the return value is a *pair* of fe values (the x and y coordinates of a point on the curve). Use `p` or `ge` or so?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:36:07Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697326",
      "id" : 780697326,
      "line" : 130,
      "node_id" : "PRRC_kwDOABII584uiH7u",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 130,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 130,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a bit overkill for tests. You can use `random.getrandbits(2)` or `random.randrange(4)`. The `secrets` dependency can be dropped too then.",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:36:51Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697381",
      "id" : 780697381,
      "line" : 137,
      "node_id" : "PRRC_kwDOABII584uiH8l",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 137,
      "original_position" : 137,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 137,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These aren't field elements, but group elements (or coordinate pairs, or points).",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:37:26Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697435",
      "id" : 780697435,
      "line" : 144,
      "node_id" : "PRRC_kwDOABII584uiH9b",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 144,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 144,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The braces aren't actually necessary (here and elsewhere).",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:38:55Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697539",
      "id" : 780697539,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII584uiH_D",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 35,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 35,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697539/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697654"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unnecessary variables?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:40:05Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697654",
      "id" : 780697654,
      "line" : 147,
      "node_id" : "PRRC_kwDOABII584uiIA2",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 147,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 147,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697654/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697680"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unnecessary variables?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:40:15Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697680",
      "id" : 780697680,
      "line" : 162,
      "node_id" : "PRRC_kwDOABII584uiIBQ",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 162,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 162,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697680/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you think about adding a `to_bytes` method to `fe` (which just returns `self.val.to_bytes(32, 'big')`), and then using `return u.to_bytes() + v.to_bytes()` here?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:41:13Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697789",
      "id" : 780697789,
      "line" : 164,
      "node_id" : "PRRC_kwDOABII584uiIC9",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 164,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 164,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/24005#pullrequestreview-1365649506) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27507](https://github.com/bitcoin/bitcoin/pull/27507) (lint: stop ignoring LIEF imports by fanquake)\n* [#27483](https://github.com/bitcoin/bitcoin/pull/27483) (Bump python minimum version to 3.8 by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-01-08T18:42:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1008100527",
      "id" : 1008100527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII5848FmSv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008100527/reactions"
      },
      "updated_at" : "2023-04-22T02:57:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008100527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `& ((1 << FIELD_BITS) - 1)` doesn't do anything here, as FIELD_BITS is 256, an exact multiple of 8.\r\n\r\nSimilar to above, what do you think about adding a (static) `from_bytes(b)` method to fe (returning `fe(int.from_bytes(b, 'big'))`), and then using `return decode(fe.from_bytes(enc[:32]), fe.from_bytes(enc[32:]))` here?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:43:13Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697934",
      "id" : 780697934,
      "line" : 167,
      "node_id" : "PRRC_kwDOABII584uiIFO",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 167,
      "original_position" : 167,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 167,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:47:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`u, v` are confusing here; the result of `decode_bytes` are X and Y coordinates. Just call them x, y?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:44:06Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % SECP256K1_FIELD_SIZE\n+    v = (int.from_bytes(enc[FIELD_BYTES:], 'big') & ((1 << FIELD_BITS) - 1)) % SECP256K1_FIELD_SIZE\n+    return decode(fe(u), fe(v))\n+\n+ELLSQ_ENC_TESTS = [\n+    [b\"\\x54\\xca\\xd2\\x27\\xb2\\xc9\\x8d\\x5f\\x7c\\x78\\x8c\\xfc\\x3d\\xaf\\xd6\\x52\\xf5\\x8f\\x69\\xcf\\xef\\x63\\x2b\\x82\\x2b\\x35\\xd0\\xb0\\xe2\\x4f\\xc0\\x3a\\xd2\\x8c\\xa1\\x4b\\x6f\\x62\\xd4\\x53\\x79\\xc5\\x3f\\x70\\xee\\x40\\x5c\\xa9\\x2c\\xe7\\xb6\\xf9\\x70\\x83\\x13\\x05\\xf2\\x7d\\xc4\\x1e\\xb6\\x9d\\xe0\\x6e\", b\"\\x02\\x11\\x62\\x89\\x03\\x32\\x88\\x91\\xae\\x09\\xd1\\x08\\xd8\\x92\\x43\\xe4\\x7e\\x10\\x9f\\xe7\\xb8\\xbb\\x1e\\x2d\\xf1\\xa3\\xae\\x9b\\x0e\\x78\\x08\\x54\\x9c\"],\n+    [b\"\\xfb\\xe6\\xce\\xab\\x4c\\x5f\\xdf\\xa5\\xfb\\xee\\x8f\\x3d\\x09\\xa2\\xf7\\x23\\x53\\xe7\\x4e\\x5a\\x9c\\xd4\\xab\\x8e\\x6a\\x34\\xd4\\x95\\x23\\xa7\\xd1\\xa2\\xc4\\x50\\xb7\\x45\\xda\\xb1\\xaf\\xa9\\x95\\x4b\\x3a\\x35\\x75\\xe4\\xe8\\xe2\\xdb\\x3d\\xa5\\xcd\\x4d\\x56\\x48\\xea\\xd0\\x0a\\x60\\xb4\\xcd\\xfe\\x84\\xb3\", b\"\\x02\\xc0\\x4c\\x84\\x85\\xf9\\x8d\\x56\\x6c\\x79\\xbf\\x33\\xa7\\x0c\\xb2\\x32\\x54\\x9e\\x3d\\xe1\\xc3\\xe3\\x01\\xe3\\x57\\x1c\\x83\\x68\\x97\\xf0\\x7c\\x5d\\x12\"],\n+    [b\"\\x71\\x7e\\x63\\xd7\\x71\\xdb\\xda\\x67\\x67\\xd5\\x8f\\x26\\xab\\x5f\\x54\\x9b\\xd2\\xd1\\x8a\\xcf\\x59\\xff\\x50\\x77\\x5f\\x4e\\xb5\\x0a\\xc0\\x17\\x4d\\xf1\\x7d\\xd0\\x34\\xc8\\xed\\x08\\x11\\x61\\x5e\\x3e\\xbb\\x36\\xf8\\xf3\\x3e\\x09\\x23\\x8e\\x4d\\xa8\\xf5\\x01\\x9d\\x37\\x00\\x78\\x4f\\x37\\xc1\\x53\\x53\\x94\", b\"\\x02\\x72\\x81\\x15\\x0c\\xeb\\xc3\\xd7\\xb3\\xbb\\xb9\\x92\\xf5\\x81\\xbb\\xcb\\x9e\\x30\\x4f\\x87\\x44\\xf0\\x19\\x98\\xa7\\x1f\\x5d\\xe1\\x14\\xf8\\x22\\x91\\xc4\"],\n+    [b\"\\x01\\xf0\\xbf\\xe4\\xf9\\xbd\\xee\\x52\\x5e\\xb7\\x7c\\x8e\\x35\\x1e\\x1f\\x88\\x3f\\xb9\\xcd\\x37\\x7e\\xf7\\xc5\\xbd\\xde\\xe4\\xf6\\x60\\x64\\x43\\x90\\xf5\\x95\\x3e\\x7d\\x2b\\x6c\\xde\\x36\\x90\\x3e\\xa1\\x34\\x4b\\x0d\\x16\\x33\\x5c\\xc5\\x11\\x5d\\xaa\\x97\\x7c\\x3c\\x2b\\xf9\\x31\\xac\\xde\\x2f\\xf5\\x78\\x9a\", b\"\\x02\\x10\\x44\\x9d\\x7e\\xa0\\x62\\x3e\\x80\\xa5\\x87\\x01\\x9f\\xa5\\x11\\xaf\\xd3\\x94\\xb2\\x55\\xb0\\x8f\\x91\\xb5\\xf7\\x48\\x2a\\xe9\\xd1\\xa1\\xa7\\xfb\\x7c\"],\n+    [b\"\\x82\\xd5\\x87\\x1e\\x18\\x37\\x66\\xbd\\x22\\xe1\\x13\\xa8\\x52\\x79\\xaa\\x61\\x7e\\x6b\\x9f\\x73\\x52\\x2c\\xd4\\x6b\\x90\\x59\\xba\\x51\\x97\\xfa\\x56\\x44\\xaf\\x90\\x41\\x89\\x30\\x98\\x7d\\xb7\\xab\\x4a\\x84\\x0c\\x72\\x64\\x1b\\x58\\xb3\\x66\\xe5\\x7c\\x92\\x8c\\x98\\x3a\\x47\\x37\\x82\\x00\\x3c\\x36\\x10\\xab\", b\"\\x03\\xc8\\xb2\\x62\\xf9\\x31\\x69\\x43\\x75\\x51\\x48\\x3b\\x8a\\x61\\x19\\x83\\x82\\xe3\\x11\\x41\\xaf\\x61\\xbf\\x36\\x10\\x0b\\xd0\\x68\\x46\\x5d\\xdd\\xa8\\x40\"],\n+    [b\"\\xda\\x82\\x53\\xb4\\x3b\\x5a\\xc2\\x3b\\x42\\x36\\x07\\xe9\\x18\\xab\\x5c\\xaa\\x5d\\x7d\\x34\\x3d\\x77\\xa3\\x99\\x6a\\x42\\xeb\\x33\\x2a\\x3b\\x55\\x1d\\x8c\\xda\\x6c\\xb6\\xf9\\x57\\x4c\\xe3\\x60\\x91\\x2c\\xf4\\x5b\\x90\\x9a\\x96\\x2e\\x4d\\xed\\x63\\xae\\x5a\\xac\\xb0\\xab\\x23\\x29\\x45\\xb1\\x01\\xf7\\x2b\\x62\", b\"\\x02\\xe7\\x28\\x34\\x1d\\xf6\\x93\\x48\\x71\\xb3\\x94\\xbb\\x4f\\xb2\\x8b\\xd8\\xd2\\xdf\\x39\\x92\\x55\\xb0\\x30\\x02\\xed\\x6f\\xc3\\x8f\\x28\\xcf\\xbf\\x53\\x56\"],\n+    [b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", b\"\\x03\\x1b\\x41\\x2e\\x7a\\x96\\x6d\\x2c\\x24\\x3d\\xbc\\x5b\\x18\\xb7\\xf9\\xba\\xf1\\x85\\xbc\\xfe\\x41\\x38\\x96\\x04\\x79\\x64\\x1a\\xb1\\xe6\\x3b\\x38\\x1e\\x11\"],\n+    [b\"\\xdc\\x30\\x98\\xe4\\x00\\x61\\x83\\x30\\xf3\\x8b\\x19\\xe9\\x20\\x0a\\xdf\\x7f\\xfb\\x96\\x84\\x3f\\xa8\\x3c\\x49\\x1c\\xf6\\x7f\\x34\\xa7\\x90\\xbb\\xcf\\xe1\\x23\\xdc\\x30\\x07\\xa4\\xfd\\x13\\x3a\\x39\\x44\\x0b\\x06\\x03\\x1e\\x9e\\x2c\\x38\\x8e\\x41\\x47\\xaf\\x0e\\x82\\xbe\\xda\\x6d\\x56\\x4b\\xf8\\xcc\\x37\\xb1\", b\"\\x02\\x5b\\x74\\x48\\x15\\x22\\xd4\\xc2\\x9f\\x2e\\x6a\\x2f\\x11\\x7f\\x9e\\x39\\xf9\\xab\\x01\\xb1\\xe9\\xf2\\xc3\\x4c\\x68\\xbe\\x8f\\x53\\x1b\\xe0\\x1f\\x6e\\xa7\"],\n+    [b\"\\x35\\xd7\\x0a\\x71\\x2c\\xc0\\x85\\x7f\\x8d\\xb1\\xbc\\x55\\x6a\\x6c\\x4e\\xf8\\x66\\x24\\xfd\\x0a\\x47\\x7f\\x96\\x7e\\xed\\xc0\\x32\\xfc\\xda\\xac\\xe7\\x96\\xc6\\x73\\xc5\\x43\\xd0\\x07\\x34\\x32\\x07\\x85\\x5b\\xeb\\xad\\x85\\xe9\\x4b\\xca\\xc7\\x78\\x2b\\x11\\x57\\x9a\\x70\\xdc\\x88\\xe2\\xa4\\x8d\\x9d\\xf2\\xd4\", b\"\\x02\\xdb\\x21\\xb4\\x8f\\xe9\\xf9\\x95\\x08\\x3a\\x1f\\x9c\\x1f\\x3f\\x4b\\x31\\x1d\\x2c\\x43\\xa1\\x28\\xdb\\xb3\\xa4\\xd4\\x78\\x41\\xe4\\xff\\x5d\\xd0\\x2e\\x61\"],\n+    [b\"\\x5f\\xb8\\x07\\xce\\x10\\x0c\\x90\\xd2\\x83\\x7c\\xcf\\xc9\\x4d\\x8f\\x8b\\xa5\\xd3\\x5c\\xd3\\xd6\\xfa\\xfc\\xd2\\xf4\\x1f\\x24\\x5b\\x59\\x6e\\x36\\x00\\x57\\xa0\\x47\\xf8\\x31\\xef\\xf3\\x6f\\x2d\\x7c\\x83\\x30\\x36\\xb2\\x70\\x74\\x5a\\x2c\\xa3\\x2c\\x29\\x05\\x03\\x2d\\x0b\\xe0\\xdb\\xa4\\xa5\\x91\\xc9\\xfb\\xd8\", b\"\\x03\\x41\\x58\\x28\\x65\\x43\\x5e\\xe9\\xc8\\xc9\\x27\\xc3\\x49\\xbd\\x3e\\x43\\x7b\\xce\\x2b\\x5c\\xfc\\xd0\\xc4\\x17\\x77\\xc3\\x4c\\x71\\xc6\\x7b\\x14\\x06\\x93\"],\n+    [b\"\\x1e\\x76\\x57\\x72\\xbf\\x72\\xde\\xb8\\x81\\x54\\x16\\xbd\\x54\\x45\\xdd\\x75\\x50\\xcd\\x86\\x7a\\xa2\\x5a\\xc6\\x3f\\x6f\\xd9\\xaf\\xd3\\x2f\\x92\\x1c\\xc8\\x8a\\x06\\x1a\\xb5\\xf6\\x98\\x1b\\x55\\x92\\x1b\\x90\\x5b\\x6f\\x4f\\x3d\\xf4\\x82\\x5d\\x79\\x72\\xd6\\x99\\xe3\\xb4\\x21\\x4e\\x40\\x44\\xcf\\xbe\\x65\\x34\", b\"\\x03\\x90\\xd2\\x94\\x30\\x92\\xec\\x7e\\xd8\\xff\\x5a\\xf7\\x04\\x43\\x2d\\x0d\\xbe\\xb0\\x33\\x7c\\xbf\\x58\\x22\\x87\\x18\\x32\\x76\\x38\\x68\\x1f\\x70\\xd7\\xf0\"],\n+    [b\"\\x86\\xef\\x92\\xfd\\x28\\x09\\x85\\x4f\\x74\\xf7\\x5a\\xeb\\xbe\\xa1\\x8a\\xee\\xc0\\xee\\xdd\\x4e\\x81\\x92\\xc8\\x8c\\xd7\\xcf\\xf5\\xdf\\xc0\\x8a\\x57\\xdc\\x32\\x73\\xbf\\x6f\\x39\\x2d\\xee\\x48\\x4a\\x72\\x2c\\x3d\\xb0\\x0c\\x0e\\xfb\\x40\\xd5\\x1e\\x8a\\x72\\xfc\\xfb\\x78\\x3f\\xa7\\xeb\\xd4\\x30\\x82\\xdb\\x71\", b\"\\x02\\x31\\x74\\x79\\x29\\x80\\x2d\\x79\\x76\\x02\\x26\\x71\\xb2\\xf7\\x5a\\xc0\\x31\\x18\\x56\\xb3\\x84\\xf4\\xb9\\xa8\\x00\\x0d\\x44\\xa2\\xab\\xc5\\x90\\x3a\\xd4\"]\n+]\n+\n+class TestFrameworkEllsq(unittest.TestCase):\n+    def test_fe_to_ge_to_fe(self):\n+        for i in range(100):\n+            matches = 0\n+            t = fe(random.randrange(1, SECP256K1_ORDER))\n+            ge = f(t)\n+            jac_ge = (ge[0].val, ge[1].val, 1)\n+            assert SECP256K1.on_curve(jac_ge)\n+            # t should appear exactly once in preimages\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    matches += (field_ele == t)\n+            assert matches == 1\n+\n+    def test_ge_to_fe_to_ge(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            ge = (fe(A[0]), fe(A[1]))\n+            preimages = []\n+            for j in range(4):\n+                field_ele = r(ge[0], ge[1], j)\n+                if field_ele is not None:\n+                    preimages.append(field_ele)\n+                    group_ele = f(field_ele)\n+                    assert ge == group_ele\n+            assert len(set(preimages)) == len(preimages)\n+\n+    def test_ellsq_mapping(self):\n+        for test_vector in ELLSQ_TESTS:\n+            ge, fes = test_vector\n+            for j, fe1 in enumerate(fes):\n+                fe2 = r(ge[0], ge[1], j)\n+                assert fe1 == fe2\n+                if fe2 is not None:\n+                    group_ele = f(fe2)\n+                    assert ge == group_ele\n+\n+    def test_encode_decode(self):\n+        for i in range(100):\n+            m = random.randrange(1, SECP256K1_ORDER)\n+            A = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, m)]))\n+            A = A[0:2] + (1,)\n+            group_ele1 = (fe(A[0]), fe(A[1]))\n+            ell64 = encode_bytes(A)\n+            group_ele2 = decode_bytes(ell64)\n+            assert group_ele1 == group_ele2\n+\n+    def test_decode_test_vectors(self):\n+        for test_vector in ELLSQ_ENC_TESTS:\n+            ell64,  pubkey = test_vector\n+            u, v = decode_bytes(ell64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780697995",
      "id" : 780697995,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII584uiIGL",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 238,
      "original_position" : 238,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 238,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697995/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780697995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780698141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780698141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems this function takes as input a point in jacobian coordinates, but still assumes the Z coordinate to be 1. Perhaps just accept an input in affine coordinates (just X, Y)?",
      "commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "created_at" : "2022-01-08T18:45:50Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780698141",
      "id" : 780698141,
      "line" : 127,
      "node_id" : "PRRC_kwDOABII584uiIId",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 127,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 127,
      "pull_request_review_id" : 847184849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780698141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T18:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780698141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709676"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "ff16f37018e079a1f54b300ca323261eb1ba2442",
      "created_at" : "2022-01-08T21:20:33Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709676",
      "id" : 780709676,
      "in_reply_to_id" : 780696856,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiK8s",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847196451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709676/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T21:20:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709680"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "ff16f37018e079a1f54b300ca323261eb1ba2442",
      "created_at" : "2022-01-08T21:20:37Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709680",
      "id" : 780709680,
      "in_reply_to_id" : 780697225,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiK8w",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 40,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847196454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709680/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T21:20:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709702"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Looks really neat.",
      "commit_id" : "ff16f37018e079a1f54b300ca323261eb1ba2442",
      "created_at" : "2022-01-08T21:21:15Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709702",
      "id" : 780709702,
      "in_reply_to_id" : 780697789,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiK9G",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 164,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847196491,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709702/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T21:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709746"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Done.",
      "commit_id" : "ff16f37018e079a1f54b300ca323261eb1ba2442",
      "created_at" : "2022-01-08T21:22:18Z",
      "diff_hunk" : "@@ -0,0 +1,243 @@\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import random\n+import secrets\n+import unittest\n+\n+from .key import fe, SECP256K1, SECP256K1_FIELD_SIZE, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def f(u):\n+    \"\"\"Forward mapping function\"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return (x, y)\n+    else:\n+        return (x, -y)\n+\n+def r(x,y,i):\n+    \"\"\"Reverse mapping function\"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P):\n+    while True:\n+        u = fe(random.randrange(1, SECP256K1_ORDER))\n+        fe1 = f(u)\n+        # convert fe1 to jacobian form for EC operations\n+        fe1 = (fe1[0].val, fe1[1].val, 1)\n+        T = SECP256K1.negate(fe1)\n+        Q = SECP256K1.add(T, P)\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = secrets.choice([0,1,2,3])\n+        Q = SECP256K1.affine(Q)\n+        v = r(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return (u, v)\n+\n+def decode(u, v):\n+    fe1 = f(u)\n+    fe2 = f(v)\n+    # convert fe1 and fe2 to jacobian form for EC operations\n+    jac1 = (fe1[0].val, fe1[1].val, 1)\n+    jac2 = (fe2[0].val, fe2[1].val, 1)\n+    T = jac1\n+    S = jac2\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return (fe(P[0]), fe(P[1]))\n+\n+FIELD_BITS = SECP256K1_FIELD_SIZE.bit_length()\n+FIELD_BYTES = (FIELD_BITS + 7) // 8\n+\n+def encode_bytes(P):\n+    u, v = encode(P)\n+    up = u.val\n+    vp = v.val\n+    return up.to_bytes(FIELD_BYTES, 'big') + vp.to_bytes(FIELD_BYTES, 'big')\n+\n+def decode_bytes(enc):\n+    u = (int.from_bytes(enc[:FIELD_BYTES], 'big') & ((1 << FIELD_BITS) - 1)) % SECP256K1_FIELD_SIZE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r780709746",
      "id" : 780709746,
      "in_reply_to_id" : 780697934,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uiK9y",
      "original_commit_id" : "90d044f51c8988db2820c12720a87ced8e8d100d",
      "original_line" : 167,
      "original_position" : 167,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 847196532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709746/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-08T21:22:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780709746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks again @sipa! Iâve addressed your comments. Ready for further review.",
      "created_at" : "2022-01-08T21:23:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1008157223",
      "id" : 1008157223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII5848F0In",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008157223/reactions"
      },
      "updated_at" : "2022-01-08T21:23:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008157223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Made some changes to simplify the Elligator squared interface \r\n\r\n- interact with pubkeys instead of group elements. (added `get_group_element()` and `set_from_curve_point()` in ECPubkey for this purpose)\r\n- rename `encode_bytes()` to `ellsq_encode()` and `decode_bytes()` to `ellsq_decode()`\r\n- sort `TEST_FRAMEWORK_MODULES` in alphabetical order",
      "created_at" : "2022-02-03T19:33:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1029330280",
      "id" : 1029330280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII5849WlVo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1029330280/reactions"
      },
      "updated_at" : "2022-02-03T19:33:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1029330280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated the elligator squared encoding function signature from `ellsq_encode(pubkey)` to `ellsq_encode(pubkey, randombytes)` in order to test the BIP 324 test vectors in python.",
      "created_at" : "2022-04-02T15:21:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1086661007",
      "id" : 1086661007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII585AxSGP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086661007/reactions"
      },
      "updated_at" : "2022-04-02T15:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086661007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r841679561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841679561"
         }
      },
      "author_association" : "NONE",
      "body" : "I think this might be easier to read if ```fe(16)*(B+fe(1))**2)``` and ```z**2 - fe(16)*(B+fe(1))**2``` were assigned to variables.",
      "commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "created_at" : "2022-04-04T12:27:38Z",
      "diff_hunk" : "@@ -0,0 +1,289 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import hashlib\n+import os\n+import random\n+import unittest\n+\n+from .key import fe, ECPubKey, SECP256K1, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def forward_map(u):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        u (of type fe) : any field element\n+    Returns:\n+        fe, fe : affine X and Y coordinates of a point on the secp256k1 curve\n+    \"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return x, y\n+    else:\n+        return x, -y\n+\n+def reverse_map(x, y, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        fe, fe : X and Y coordinates of a point on the secp256k1 curve\n+        i      : integer in range [0,3]\n+    Returns:\n+        u (of type fe) : such that forward_map(u) = (x,y), or None.\n+\n+        - There can be up to 4 such inverses, and i selects which formula to use.\n+        - Each i can independently from other i values return a value or None.\n+        - All non-None values returned across all 4 i values are guaranteed to be distinct.\n+        - Together they will cover all inverses of (x,y) under forward_map.\n+    \"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r841679561",
      "id" : 841679561,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584yKwLJ",
      "original_commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "original_line" : 90,
      "original_position" : 90,
      "original_start_line" : 83,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 90,
      "pull_request_review_id" : 930280933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841679561/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 83,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-04T12:27:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841679561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2314891?v=4",
         "events_url" : "https://api.github.com/users/KevinMusgrave/events{/privacy}",
         "followers_url" : "https://api.github.com/users/KevinMusgrave/followers",
         "following_url" : "https://api.github.com/users/KevinMusgrave/following{/other_user}",
         "gists_url" : "https://api.github.com/users/KevinMusgrave/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/KevinMusgrave",
         "id" : 2314891,
         "login" : "KevinMusgrave",
         "node_id" : "MDQ6VXNlcjIzMTQ4OTE=",
         "organizations_url" : "https://api.github.com/users/KevinMusgrave/orgs",
         "received_events_url" : "https://api.github.com/users/KevinMusgrave/received_events",
         "repos_url" : "https://api.github.com/users/KevinMusgrave/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/KevinMusgrave/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/KevinMusgrave/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/KevinMusgrave"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r868288953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868288953"
         }
      },
      "author_association" : "NONE",
      "body" : "The same as in `ellsq_encode`, you can just use x.to_bytes() now.",
      "commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "created_at" : "2022-05-09T18:14:09Z",
      "diff_hunk" : "@@ -0,0 +1,289 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import hashlib\n+import os\n+import random\n+import unittest\n+\n+from .key import fe, ECPubKey, SECP256K1, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def forward_map(u):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        u (of type fe) : any field element\n+    Returns:\n+        fe, fe : affine X and Y coordinates of a point on the secp256k1 curve\n+    \"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return x, y\n+    else:\n+        return x, -y\n+\n+def reverse_map(x, y, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        fe, fe : X and Y coordinates of a point on the secp256k1 curve\n+        i      : integer in range [0,3]\n+    Returns:\n+        u (of type fe) : such that forward_map(u) = (x,y), or None.\n+\n+        - There can be up to 4 such inverses, and i selects which formula to use.\n+        - Each i can independently from other i values return a value or None.\n+        - All non-None values returned across all 4 i values are guaranteed to be distinct.\n+        - Together they will cover all inverses of (x,y) under forward_map.\n+    \"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P, randombytes):\n+    count = 0\n+    while True:\n+        # Random field element u and random number j is extracted from\n+        # SHA256(\"secp256k1_ellsq_encode\\x00\" + uint32{count} + rnd32 + X + byte{Y & 1})\n+        m = hashlib.sha256()\n+        m.update(b\"secp256k1_ellsq_encode\\x00\")\n+        m.update(count.to_bytes(4, 'little'))\n+        m.update(randombytes)\n+        m.update(P[0].to_bytes(32, byteorder='big'))\n+        m.update((P[1] & 1).to_bytes(1, 'big'))\n+        hash = m.digest()\n+        u = fe(int.from_bytes(hash, 'big'))\n+        count += 1\n+        if count == 1:\n+            branch_hash = hash\n+            continue\n+\n+        ge = forward_map(u)\n+        # convert ge to jacobian form for EC operations\n+        ge = (ge[0].val, ge[1].val, 1)\n+        T = SECP256K1.negate(ge)\n+        Q = SECP256K1.add(T, SECP256K1.affine(P))\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = (branch_hash[(count-2) >> 2] >> (((count-2) & 3) << 1)) & 3\n+        Q = SECP256K1.affine(Q)\n+        v = reverse_map(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return u, v\n+\n+def decode(u, v):\n+    ge1 = forward_map(u)\n+    ge2 = forward_map(v)\n+    # convert ge1 and ge2 to jacobian form for EC operations\n+    T = ge1[0].val, ge1[1].val, 1\n+    S = ge2[0].val, ge2[1].val, 1\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return fe(P[0]), fe(P[1])\n+\n+def ellsq_encode(pubkey, randombytes):\n+    \"\"\"\n+    generates elligator squared encoding of pubkey\n+    Parameters:\n+        pubkey : ECPubKey object\n+        randombytes : 32 bytes entropy\n+    Returns: 64 bytes encoding\n+    \"\"\"\n+    ge = pubkey.get_group_element()\n+    u, v = encode((ge[0].val, ge[1].val, 1), randombytes)\n+    return u.to_bytes() + v.to_bytes()\n+\n+def ellsq_decode(enc):\n+    \"\"\"\n+    decodes elligator squared encoding to obtain pubkey\n+    Parameters:\n+        enc : 64 bytes encoding\n+    Returns: ECPubKey object\n+    \"\"\"\n+    x, y = decode(fe.from_bytes(enc[:32]), fe.from_bytes(enc[32:]))\n+    if y.val % 2 == 0:\n+        compressed_sec = b'\\x02' + x.val.to_bytes(32, 'big')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r868288953",
      "id" : 868288953,
      "line" : 214,
      "node_id" : "PRRC_kwDOABII584zwQm5",
      "original_commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "original_line" : 214,
      "original_position" : 214,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : 214,
      "pull_request_review_id" : 966649129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868288953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-09T18:14:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868288953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/47944736?v=4",
         "events_url" : "https://api.github.com/users/rage-proof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rage-proof/followers",
         "following_url" : "https://api.github.com/users/rage-proof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rage-proof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rage-proof",
         "id" : 47944736,
         "login" : "rage-proof",
         "node_id" : "MDQ6VXNlcjQ3OTQ0NzM2",
         "organizations_url" : "https://api.github.com/users/rage-proof/orgs",
         "received_events_url" : "https://api.github.com/users/rage-proof/received_events",
         "repos_url" : "https://api.github.com/users/rage-proof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rage-proof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rage-proof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rage-proof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-07-17T18:14:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1186583481",
      "id" : 1186583481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII585GudO5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186583481/reactions"
      },
      "updated_at" : "2022-07-17T18:14:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186583481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "* updates include:\r\n    * elligator swift instead of elligator squared\r\n    * built on top of #26222\r\n* references - https://github.com/bitcoin-core/secp256k1/pull/1129, https://github.com/sipa/bitcoin/tree/202209_ellswift_py\r\n* for #24748, we'd want to keep the entropy derivations(like for u, j, in `ellswift_create()`) similar to how it's done in [PR 1129](https://github.com/bitcoin-core/secp256k1/pull/1129)",
      "created_at" : "2022-10-03T19:20:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1265922090",
      "id" : 1265922090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII585LdHAq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265922090/reactions"
      },
      "updated_at" : "2022-10-03T19:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265922090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r986143291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/986143291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why recreate the exact PRNG used by the libsecp256k1 implementation?\r\n\r\nI think it'd be much simpler to use the Python PRNG (the `random` one, or if we actually wanted it \"secure\", the `secrets` one, but I think that's overkill for a test-only implementation).",
      "commit_id" : "fe10103065b64c69b4f1c1cd7afc7e51375c4322",
      "created_at" : "2022-10-03T19:24:17Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test-only Elligator Swift implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import os\n+import hashlib\n+import unittest\n+\n+from .key import ECKey, ECPubKey, FE, GE\n+\n+C1 = FE(-3).sqrt()\n+C2 = -(C1 - FE(1))/2\n+B = FE(7)\n+\n+def forward_map(u, t):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        FE, FE : any field element\n+    Returns:\n+        FE : X coordinate of a point on the secp256k1 curve\n+    \"\"\"\n+    if u == 0:\n+        u = FE(1)\n+    if t == 0:\n+        t = FE(1)\n+    if u**3 + t**2 + B == 0:\n+        t = 2 * t\n+    X = (u**3 - t**2 + B) / (2 * t)\n+    Y = (X + t) / (C1 * u)\n+    x3 = u + 4 * Y**2\n+    if GE.is_valid_x(x3):\n+        return x3\n+    x2 = (-X / Y - u) / 2\n+    if GE.is_valid_x(x2):\n+        return x2\n+    x1 = (X / Y - u) / 2\n+    return x1\n+\n+def reverse_map(x, u, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        FE, FE : x is X coordinate of a point, u is a random fe\n+        i      : integer in range [0,7]\n+    Returns:\n+        t (of type FE) : such that forward_map(u, t) = x or None\n+    \"\"\"\n+    g = u**3 + B\n+    if i&2 == 0:\n+        o = (-x - u)**3 + B\n+        if o.is_square():\n+            return None\n+        if i&1:\n+            x = -x - u\n+        w = g / (u * x - (x + u)**2)\n+    else:\n+        w = x - u\n+        if w == FE(0):\n+            return None\n+        r = -w * (FE(4) * g + FE(3) * w * u**2)\n+        r = r.sqrt()\n+        if r is None:\n+            return None\n+        if i&1:\n+            if r == FE(0):\n+                return None\n+            r = -r\n+        x = -(r / w + u) / 2\n+    w = w.sqrt()\n+    if w is None:\n+        return None\n+    if i&4:\n+        w = -w\n+    u = u * C2 + x\n+    t = w * u\n+    return t\n+\n+def encode(P, hasher):\n+    cnt = 0\n+    while True:\n+        if cnt % 64 == 0:\n+            hash = hasher.copy()\n+            hash.update(cnt.to_bytes(4, 'little'))\n+            cnt += 1\n+            branch_hash = hash.digest()\n+\n+        j = (branch_hash[(64-cnt) % 64 >> 1] >> (((64-cnt) % 64 & 1) << 2)) & 7\n+        hash = hasher.copy()\n+        hash.update(cnt.to_bytes(4, 'little'))\n+        cnt += 1\n+        u = FE(int.from_bytes(hash.digest(), 'big'))\n+        if u == FE(0):\n+            continue\n+        t = reverse_map(P.x, u, j)\n+        if t is None:\n+            continue\n+        if t.is_even() != P.y.is_even():\n+            t = -t\n+        return u.to_bytes() + t.to_bytes()\n+\n+def ellswift_create(privkey, rnd32=bytearray(32)):\n+    \"\"\"\n+    generates elligator swift encoding of pubkey\n+    with privkey also used as entropy\n+    Parameters:\n+        privkey : ECKey object\n+        randombytes : 32 bytes entropy\n+    Returns: 64 bytes encoding\n+    \"\"\"\n+    m = hashlib.sha256()\n+    m.update(b\"secp256k1_ellswift_create\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r986143291",
      "id" : 986143291,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846x1o7",
      "original_commit_id" : "fe544ad9bd3272064626c7fe9b922ec65006b68d",
      "original_line" : 117,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellswift.py",
      "position" : null,
      "pull_request_review_id" : 855980251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/986143291/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-03T19:24:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/986143291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045492157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045492157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "makes sense, this is much more simpler! (initially wanted to add test vectors, but wouldn't be very useful here)\r\ni've updated the PR to use BIP 324's reference implementation for consistency. ",
      "commit_id" : "fe10103065b64c69b4f1c1cd7afc7e51375c4322",
      "created_at" : "2022-12-12T07:48:36Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test-only Elligator Swift implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import os\n+import hashlib\n+import unittest\n+\n+from .key import ECKey, ECPubKey, FE, GE\n+\n+C1 = FE(-3).sqrt()\n+C2 = -(C1 - FE(1))/2\n+B = FE(7)\n+\n+def forward_map(u, t):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        FE, FE : any field element\n+    Returns:\n+        FE : X coordinate of a point on the secp256k1 curve\n+    \"\"\"\n+    if u == 0:\n+        u = FE(1)\n+    if t == 0:\n+        t = FE(1)\n+    if u**3 + t**2 + B == 0:\n+        t = 2 * t\n+    X = (u**3 - t**2 + B) / (2 * t)\n+    Y = (X + t) / (C1 * u)\n+    x3 = u + 4 * Y**2\n+    if GE.is_valid_x(x3):\n+        return x3\n+    x2 = (-X / Y - u) / 2\n+    if GE.is_valid_x(x2):\n+        return x2\n+    x1 = (X / Y - u) / 2\n+    return x1\n+\n+def reverse_map(x, u, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        FE, FE : x is X coordinate of a point, u is a random fe\n+        i      : integer in range [0,7]\n+    Returns:\n+        t (of type FE) : such that forward_map(u, t) = x or None\n+    \"\"\"\n+    g = u**3 + B\n+    if i&2 == 0:\n+        o = (-x - u)**3 + B\n+        if o.is_square():\n+            return None\n+        if i&1:\n+            x = -x - u\n+        w = g / (u * x - (x + u)**2)\n+    else:\n+        w = x - u\n+        if w == FE(0):\n+            return None\n+        r = -w * (FE(4) * g + FE(3) * w * u**2)\n+        r = r.sqrt()\n+        if r is None:\n+            return None\n+        if i&1:\n+            if r == FE(0):\n+                return None\n+            r = -r\n+        x = -(r / w + u) / 2\n+    w = w.sqrt()\n+    if w is None:\n+        return None\n+    if i&4:\n+        w = -w\n+    u = u * C2 + x\n+    t = w * u\n+    return t\n+\n+def encode(P, hasher):\n+    cnt = 0\n+    while True:\n+        if cnt % 64 == 0:\n+            hash = hasher.copy()\n+            hash.update(cnt.to_bytes(4, 'little'))\n+            cnt += 1\n+            branch_hash = hash.digest()\n+\n+        j = (branch_hash[(64-cnt) % 64 >> 1] >> (((64-cnt) % 64 & 1) << 2)) & 7\n+        hash = hasher.copy()\n+        hash.update(cnt.to_bytes(4, 'little'))\n+        cnt += 1\n+        u = FE(int.from_bytes(hash.digest(), 'big'))\n+        if u == FE(0):\n+            continue\n+        t = reverse_map(P.x, u, j)\n+        if t is None:\n+            continue\n+        if t.is_even() != P.y.is_even():\n+            t = -t\n+        return u.to_bytes() + t.to_bytes()\n+\n+def ellswift_create(privkey, rnd32=bytearray(32)):\n+    \"\"\"\n+    generates elligator swift encoding of pubkey\n+    with privkey also used as entropy\n+    Parameters:\n+        privkey : ECKey object\n+        randombytes : 32 bytes entropy\n+    Returns: 64 bytes encoding\n+    \"\"\"\n+    m = hashlib.sha256()\n+    m.update(b\"secp256k1_ellswift_create\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045492157",
      "id" : 1045492157,
      "in_reply_to_id" : 986143291,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-UPG9",
      "original_commit_id" : "fe544ad9bd3272064626c7fe9b922ec65006b68d",
      "original_line" : 117,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellswift.py",
      "position" : null,
      "pull_request_review_id" : 1213027476,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045492157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-12T07:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045492157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045493840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045493840"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks @rage-proof! i've updated the code to use this.",
      "commit_id" : "fe10103065b64c69b4f1c1cd7afc7e51375c4322",
      "created_at" : "2022-12-12T07:50:49Z",
      "diff_hunk" : "@@ -0,0 +1,289 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import hashlib\n+import os\n+import random\n+import unittest\n+\n+from .key import fe, ECPubKey, SECP256K1, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def forward_map(u):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        u (of type fe) : any field element\n+    Returns:\n+        fe, fe : affine X and Y coordinates of a point on the secp256k1 curve\n+    \"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return x, y\n+    else:\n+        return x, -y\n+\n+def reverse_map(x, y, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        fe, fe : X and Y coordinates of a point on the secp256k1 curve\n+        i      : integer in range [0,3]\n+    Returns:\n+        u (of type fe) : such that forward_map(u) = (x,y), or None.\n+\n+        - There can be up to 4 such inverses, and i selects which formula to use.\n+        - Each i can independently from other i values return a value or None.\n+        - All non-None values returned across all 4 i values are guaranteed to be distinct.\n+        - Together they will cover all inverses of (x,y) under forward_map.\n+    \"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        if not s.is_square():\n+            return None\n+        x1 = C2 - C1*s / (fe(1)+B+s)\n+        if (x1**3 + B).is_square():\n+            return None\n+        u = s.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return u\n+    else:\n+        return -u\n+\n+ELLSQ_TESTS = [\n+    [(fe(0xc27fb7a3283a7d3ec9f96421545ef6f58ace7b7106c8a1b907c0ae8a7598159c), fe(0xe05a060e839ef79fc0c1267ca17880c9584cdd34c05f969555482207e6851f2a)), [fe(0xc0ad127aa36824d65b1f5be74de1aa25bc4d5cbecee154620a12682afc87df98), fe(0xd40fd5bc519924848f13273b1d857cba42d45e789eaa4e47f458b83abd5f8d1c), fe(0xde6361417deb440b3a30592443635cf9cf42f9b5f5b891c11e119f0971b570ac), fe(0xd55135ce41bb4d055b3757f4af1d6537137376d75270caaeda68382d25d00708)]],\n+    [(fe(0x3f5ada4e8f646ec910ffc1a2b74d94bbb1860631a3c2a349eddf55cafd49cce9), fe(0x28ad9d8d77d9cd87f80aaa348e9ad1b440353d7a6e7177146042531938f530c3)), [fe(0xac42348f1b3568225bb7d4c00feab37ea5fb7fbb0cc3879dc74e2ddaf9a393bf), fe(0xda7a45b26c87dcb64a934c1dc841d250f98af5f0511be2a382d17babe1e4a533), fe(0xc3d9b9a6570ca9c8a640fc75945850b2cc86b6d6399b44964288d76d832a32d7), fe(0xbf5ebc2f4060abe7884a1fa7cc0883cb97535c5a31dc6df4c6968e9d8554f3b1)]],\n+    [(fe(0xf5f74fab3ebbbcfddcaef6ccd14eb934f9435a4e4a1ed2d875352c47306d6c2f), fe(0xea6a5b2ae109897d046e1504f7a382d61eb49a8aae8852ef48e29466194d9e66)), [None                                                                  , None                                                                  , fe(0xe8362df238e0405b4921874774f9ebca36dfe21b1a49ae2d0fa23fd411a262a6), fe(0x9e453426ac97315519d11d63c3bb27ee89a7ec855661dce4e428f6cc0be059cc)]],\n+    [(fe(0x977694f66f0a30052c63891661432fa0605528a7ad87d8295c9eb9a3973c6fed), fe(0x16515f1400186fec67f6314c8a9e2d433d2020e938f8646539f749a151a793ed)), [None                                                                  , None                                                                  , fe(0x8f091a42ce496be8877d43fc2f2b292742c9c1fb0dfe570b9c9fbd3e04afa709), fe(0xb5930cf14db355a5a92b9f789390b59a013c8e277c41ddd6d822162293d39141)]],\n+    [(fe(0x9c970ce939e8a4ec70237f33ad858370c9d30e8aadaac257546d1e16f374973b), fe(0x95755fab1bcae32ec811c63fb1e56da897a1e140b1aae97e0b6ae6c53879f51c)), [fe(0xa7424f5560b58cebbb9a6ee15fc41b18f282b2cdd9e2fb4d02626c1ac0a89ec4), None                                                                  , fe(0xd7016e9b94db9b4c5bc61c87af3b3c9c72707e5e48332958ce5371bfd501a006), fe(0xe95cd3a12cff74bd6761a78261f73f0d755a80f639ccd117136f9963f422b82a)]],\n+    [(fe(0x482062115e6fc771738b48594da66901a0a8c36ea61122b7745cf5feec932b64), fe(0x01c9e1a159effb224442c8689119fd268cdca0707edbefb6ea81d5f686333768)), [fe(0xf1047fb94cfa6dcd202e1acca85afc88463819257adf32aa25e19e52bf3cadd8), None                                                                  , fe(0x94dc1b2b6a24bbdb36afab1a6e036e7fdf1ded22915bf76197e5e5a5c6261582), fe(0x8dd664ba47061bac0c99d727ac2ade9ff8d33aff995a7a2897f2968c558ef724)]],\n+    [(fe(0x47e54d7b86025d30248b18e6c6b2b1283f8eb11e60d11cadf59884ea56939f5a), fe(0xb618d9326110c200cbed144fc6376800d8ba0de1d87fa02d17d1d58d9652c498)), [fe(0x8797d6a9e3614b3480e43cb6936cd932be4eee021e47e0672d1d9f2fd0148558), fe(0xb19c75d0b4856c81b467f8f5b9f8d8490e5296f04c60d6396f772b7f427c5d38), None                                                                  , None                                                                  ]],\n+    [(fe(0x8fa5ffb5597068f606785a631f74cd6f8b16e94be6cee8312970e0eca9ecda52), fe(0x6c4f0efef1d0eef2e3281b134f29289f0a9d7b4db3118c5f1d2d1da475569ebf)), [fe(0xe66995d09cfddddaadf4b4ecc00270edaeaacf012db38d37e4143baf0ae7dfa3), fe(0xfe0d264e3121942cd5126e260766f36c3a08a6894e8ec172f3fdb25270def1ad), None                                                                  , None                                                                  ]],\n+    [(fe(0x016a682d1df4f869b32c48b0a9b442a1493949fb85d951d121c1143bd3d5c1af), fe(0x38d33fe5d3f9b4b982e37dff7561428d47ef4ddf654bd95951b04e90a3be50e7)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x1ec42424b4d2226f83f94258c737d0daf93a4eb11d9b9e3fd500d5b9c3aa7c71), fe(0x84975819b703da77ca98bd3cd9bbdc7af1dbc7b585c590ebcbd417fd739ad572)), [fe(0x945faa127e8bf37863581bfbde084bf763caee391449c610c2074f86ff1bf16c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x69ee52b288dfb06a449d3db87602e094b4f131e3f6a4b249dc0a76ffdebe989a), fe(0x3922f1a4dd208f94cbac1c5d34a9278d8431078184ff443031a1401895ffd9e6)), [fe(0xdc1e476015bda784a1b9527b0357786adf2a802803957837e10cff925ef4ca7e), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0x3ac01550681850396068aaf0c3f241449a267956698833d480c03dc5678b67cf)), [None                                                                  , None                                                                  , fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441), None                                                                  ]],\n+    [(fe(0x9ddddd8ec1814a293fcca202ebfbe14e5d808dda142eee64c6108381e99e5cff), fe(0xb5072d5537223f393e4176d2cfd93c8682ca2c22cd25ec40877296bdbb7c08f6)), [fe(0xadd34f27c5f9017175186c23d14f6ef2aa18289677d5373ad6c31e9ff6358ae8), fe(0xf5ee86141916fe03945d028bbc354c4a09f6d6ab1468ab9ad87420751543c2a2), None                                                                  , None                                                                  ]],\n+    [(fe(0x1ee7e9a7fcd56edfabf3712e72cc24a30a476f5a97f77825f0308620162f31ad), fe(0x77bfc7dec2401a398c5e8675417c8a7b632f5d642f1a50599a830b8c7981f636)), [fe(0xb3a8d9e7368af2583785be922ad54dfb473295136ade2d182f931cd654f35d02), fe(0xe1d420e5fab5c26df4294b2b0c19eb9a188409bf48a3741f31f72acc6ea93418), None                                                                  , None                                                                  ]],\n+    [(fe(0x9e24d0a5d5014164987f86bb1709305a6fd352a0a3478fae3f85e59421d72a80), fe(0x3729c39bbbb26d97a4ec6bf7cb4e6453058e448e7530b028d1ae345e35608d3c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x15f2f1a4339f5f2a313b95015cad8124d054a171ac2f31cf529dda7cfb6a38b4), fe(0xfe1d0fa595b4f7d363e82c290095189f5f2be99c880be4fc9742a31b40041eda)), [fe(0xc1c3ed2717ffabfd01132f5e54dd73c3475297e0fdbff814dc9456b84a57b698), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xd383134d721cf055143570e782bb323d5c542a61e455823ed60b940f86826d54), fe(0x5a88e50b3f59874e84dab4a207d34623d836c376c68dded3c095a716f563e4fc)), [fe(0xe4d2660c1d50d03197f5e6104d9c206601f6c791adb52178e2bd6c88e89cf012), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x851695d49a83f8ef919bb86153cbcb16630fb68aed0a766a3ec693d68e6afa40), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0xbde70df51939b94c9c24979fa7dd04ebd9b3572da7802290438af2a681895441)), [fe(0xd3779b573cb17828ac118cff74412ab5b84c86f8a92f48b8efcbe4c70a675631), fe(0xea6f729ddc884123f0130aa0339bda362166d034fe50d9d753bf0dde7721fa3f), None                                                                  , None                                                                  ]],\n+    [(fe(0x99a70224c3062c326c45d3c646a545e9b152b75bee86837807e479519e5b600d), fe(0x95b6675a10845b6637ff96e8e67f2a75bbf0f764c56d26c54b2db5ebb026d7de)), [fe(0xb74a9552c5b9b6ed575d380fec3df8eddb524ed180b1360781e2eec67ad06c04), fe(0xbb7022824194fbe44a74c4f4abd01ee3dac8f4cb5a0e3a67d2276039dd4aac1a), None                                                                  , None                                                                  ]],\n+    [(fe(0xb59024333110b3108625f25447665c1ebf10c6a6bbe9f018c421f4b0dcb5a993), fe(0x43bae2cdaae9c002e57ac99a17926e2276a66728f92b11bb7dc953b9ea6d49b7)), [fe(0xd5a57c1b71916606bfb235f0ce8d880de9109a01b86d58c82852b2110e55ee0f), fe(0xca6cf74b128e1d7975482bfdc9e8141671a5c3e7e2af854b2370763097ba917b), None                                                                  , None                                                                  ]],\n+    [(fe(0xb526749e35fa04ef5d20b1d6cda6f57e2f3c10c985098901c390da7931769e34), fe(0x182093b3ce5883a27b834af618547fd16017cee04e9398da6aaaed2b87ca0e7c)), [None                                                                  , None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x901c52d6a39718c7255e94e33189cbeb41f2fa9795279076becd667899684c17), fe(0xf988a838156cc39f2182bbc5f7e4f7079cf75bfb58638cff5b201fd3cf499fc0)), [fe(0xa356db3144b754a3dafdf2a90767b65abaea92ca56c69c3a31a4ff5bd7914d9c), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x957d4fd44a10f38a0d0e1e462656dd2e7f2b6b8c9545ee02903f28b08f9a57e7), fe(0x3f4bf4de3731bea3291627e39daa7daccdcd4e13b2418482488730b7a7a816b7)), [fe(0xa761cd3a58385878300c6963e918b54599eb0254550f6254e414628c2f431bbd), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0a7b6db256f01aea797a07985eaf98d664486f82723758bf1a5f7b00b74887e1), fe(0xe07ce7ec5f24b6da199329ff674788c41b7312d4bb63672f81ebbfd36d962235)), [fe(0x442e15e3ac31958b7acdb8b97977b6d0533b1ef05094f496126a04d0c6d6c327), fe(0xc565d6376c8f4fa4a22ab5d4e1c87f5d6f9beb277764a77f8ebe3796aa82cba5), fe(0x2082a3b704d3729c71a73a0cd745c7ce7a7c5e2677c688e2772806d1dd1a849f), fe(0xc00c8cc35ea8122ef17b0a8ec69218d18cb45a3f0227a2c568fbd9f9c6d6d141)]],\n+    [(fe(0x770ed6cbf6d2156b362523ebc2908f6865ab182c43468bc869d6754e68dc71a0), fe(0x2a37871310223129baba56c20dc4a1e9634dba32a034d21f3104176b870c9916)), [fe(0x092c79abbbafd66d58c562087ba5c3859fed6c1b5f8005af0087cedbec7dc084), fe(0x3f5c280a6080251516dfd84a4488df4796198d5fbce0be211ab0ee7da456e73e), fe(0x94057b6bd54b13b2e2b9d322687569f5dd16727d3d912ba3eb8aa33d36c15108), fe(0x098360aecf93979e7cd6df396e8fe2f318fa1da39efa707aeab95cd8cd5dca2a)]],\n+    [(fe(0xab01575c0604c63ee77d31534a5bcfa20ce66c9df47d6054b822bfd86934f8ec), fe(0xce488d85d0875b404fb92b6e8068602a670ac4f8d76b78b6c246b713595e226b)), [None                                                                  , None                                                                  , fe(0x4ab21b181009aa48b8ba5eb9d373919bcfcb36a6f34961b2c859f5a86da8ba41), fe(0x9a11c4019a4ba9fcf4698a712d85c8e470028e02545ef049f9f3083d187c5b41)]],\n+    [(fe(0x6084cfddf8d9736ea90100ebdb43338f65e2ab43ef35a799926e6ce32a89ae17), fe(0x753998b59eaae7a3dcab34d9a15dbc71e539cdffdcf059270eb27c86ab6b62a4)), [None                                                                  , None                                                                  , fe(0x18b1f7073fca316704e1b3b88cc8ff5a702d79bc756e4dea2ff948ccdb43a9f4), fe(0xca02e58989eb16d1520463d2435745cf6e69fa526b5c7adc57cea2b3f5a6441c)]],\n+    [(fe(0xc9fbac009d8eda5d25c9aabb2b6794bc9a801afd17adef7878c6539204eb0f82), fe(0x95ed9e51898b903ee689e6edff2b54bfed5c2da169e2bdd0415a392e16b3de2b)), [fe(0x21a952208577e3f0cc5b4b17f5e434b22bbdbaaa51cd2659e37880a6a25aa7dd), None                                                                  , fe(0xcfd1ca132f8d3eae73a9789501d2c82a6f0575667949fab9267bc1e8ef9bf5bd), fe(0x9cde02aa3acd2596dbea4b82f9f47ad1994ad5673c0d4fb2e8a3dca5e8e067fb)]],\n+    [(fe(0x8dcb38d90059d4f1270455af6f3dd40e8d671a34a1fad81d2470db8a13b18f76), fe(0x603ed5be7bc3e67f439067da29949bcbd3c96c9f94da42313c9c0febe5cdf560)), [fe(0x3ef4008a8a190a3f5c97d2113bb539e1f4261a78f7cd85c4fd254837eaacd020), None                                                                  , fe(0x0fe7af4fcab8019937ee002647d55d97575474b34b9cc1bb133f4261017124a0), fe(0x09dcec3b93c4ab4291d01dceccc19525c801add377170c2c919f5488f41d6d3e)]],\n+    [(fe(0xf69dfe44890d2b094b749a56f680e85150c47c4cd51e77963fec4e6a09dcd0a1), fe(0xfb5d321c1e243b636dfb71f3cf0e8a012e52b22c905cec6d2f6ae32a6a4eb7be)), [fe(0xa17fd5287276cbf6c168dcdeb32aba14e1aeae2fe7f5bea5a87d384ee8046aac), fe(0x637f176af2fe854a968ab19bee010554313e3effc6ff8cb4cb538a6dbaedd954), None                                                                  , None                                                                  ]],\n+    [(fe(0x043a0631871a3f67ac03c5f8406b69a0dc14bd5b23e55f27a5d4462b0f0a2d23), fe(0x247b9bcc0019091c31eb4b03e731a0b5a9b33f75ad9e5e6339286573a6439d88)), [fe(0xd65add13ad3044d92ebcd0e6d42853d8e5733ff65297f54409a3ce89fdaffbdc), fe(0x7281ad3c85de387084f64e1442b37154eab394538b1c07534b303ae737f3973e), None                                                                  , None                                                                  ]],\n+    [(fe(0x8855508aade16ec573d21e6a485dfd0a7624085c1a14b5ecdd6485de0c6839a4), fe(0xe50aaebaa0ceceeca1bce62e5f0fac4be78ab03a7b2deaa6e5c17e8898e277e9)), [fe(0x4e96da73ae14fc8525eccb2df44169248a7fd269a065e06504d315e663666b03), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xc66327bc5b0b8b9037adfd63c2a9f1922ce2144aa513b390d48bc387ae3ebff6), fe(0x17a1ca8964eb0b41162894e64fb4112b638f96ece0c6f30def7616fe0e78386a)), [fe(0x56e8e17efaf989d6a7efb81d5a6023936814930ebc3f6fdf72ebf47269ba4c9a), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9fffffd6b), fe(0xc53feaaf97e7afc69f97550f3c0dbebb65d986a99677cc2b7f3fc23998749460)), [None                                                                  , None                                                                  , fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee), None                                                                  ]],\n+    [(fe(0x9d709c0274604cb63b531fea35932e2ec965f4bf5913e577ff31080b67727a2e), fe(0xf2b0b821a24081a9d0ca84d9303068cf7ea3278805926b0ab90b9af7498efbd5)), [fe(0xb06abefa192a6498bce368ffacc843fbb39f8117a56a1870f57197efd9312f6d), fe(0x1263d142aac9cfc564c566500fa4a62f38e727fbb4dbeaf26fdf7d05fd022c71), None                                                                  , None                                                                  ]],\n+    [(fe(0xb4955dcb4daaa7849b421c1453ec8945d685d554f41103f812cbfb2f54a4539b), fe(0x354d18e4b1cee7a3f98b0651f5544091e8a006560c74750daadf460ec3f620ea)), [fe(0x6281a8a70a3b5745b897ce4f58305fb0d6a0f8aba6c5ba18ed278ce150f7911c), fe(0x5f95a7082d2f6d69f7ff9b742b88063c39a3003bb03f333c7e3d7c5ed861fb04), None                                                                  , None                                                                  ]],\n+    [(fe(0x6ad63dfdcd231967ff2508f475896976f8728e40dd7a2acc6b5ced37cada8291), fe(0xf93e51818f5329b8d520a9afd72938e12e3f8be6421d2bce89d7b14e25bf5336)), [fe(0x0f050318622f79f15a2b23d9f76329b78e195f1a4651aae065d58bcddfa4d3b6), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0xa91b7f2ab93de821abeec1750258e4d4f5f09831b0a11dda47e89ddf6944d819), fe(0x22eb9bf64a517df2c27d1c551df07609166fc995e2b39fee0473ea46ed14efc1)), [fe(0x7a01651a81a7f09e2733cf349e6472a118c167806f5c880f534b89a652be06a7), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x0000000000000000000000000000000000000000000000000000000000000001), fe(0x4218f20ae6c646b363db68605822fb14264ca8d2587fdd6fbc750d587e76a7ee)), [fe(0x2c8864a8c34e87d753ee73008bbed54a47b3790756d0b74710341b37f598a5fe), fe(0x15908d622377bedc0fecf55fcc6425c9de992fcb01af2628ac40f22088de01f0), None                                                                  , None                                                                  ]],\n+    [(fe(0xa64de96a6254cefcffbeaf898f2c228af6d405f3bcc6a4cce068312af7ccf8e1), fe(0x8f9b3a1b2d146ea954bfc5e2cdfe861ccbed8431c741c5f9d32f16a3073ea496)), [fe(0x4591d33d1a133a8794689b1b0ca445b78ada3bcec2e812b08315e2b107940ad4), fe(0xa763d2176027d40e8a8ff34bd9c639b73e2ea04592274fdcfa4051c66d93a1b6), None                                                                  , None                                                                  ]],\n+    [(fe(0x49a0dc068c3f117aefdc842d3d358153f677f04c6dabc9c91b09d452fef27b66), fe(0x7b944da48a175dbc444ead8db82eff66b081a8aae6453fed2bca9720b44dd6e5)), [fe(0x7bf1e2b1720c1c440db64687f16439fa41b398338095f24ebeec0cfa88750dc9), fe(0xdc97e26d3137445d6c1269b61a7655010c19c36a2e361066e31e2bb10403470b), None                                                                  , None                                                                  ]],\n+    [(fe(0xd09a4047f158fe52f96c661d02c68657c4c976ea96ea85ef46d6985bd540756b), fe(0xe793bfaae9300f18e6f9b55aae26322368b61d51ae5022efe266c72d574178bc)), [fe(0x7e6175fdfbb9fb4faf6e2b925ef86c4a444d819aaa82dbee545d3d9b296375be), None                                                                  , None                                                                  , None                                                                  ]],\n+    [(fe(0x3498662504b73c7c8cecb6c33cd493bdfc190e0f87d913d7ff9ad42e222bfe95), fe(0x245b3a61b8d46997f14f2fea2874899691eb32542b9907d65eb9d21d42454021)), [fe(0x7f556282c3dd9d263390d6bbddada698ab8fd7c7d1a06498f42b30437c8361ad), None                                                                  , None                                                                  , None                                                                  ]]\n+]\n+\n+def encode(P, randombytes):\n+    count = 0\n+    while True:\n+        # Random field element u and random number j is extracted from\n+        # SHA256(\"secp256k1_ellsq_encode\\x00\" + uint32{count} + rnd32 + X + byte{Y & 1})\n+        m = hashlib.sha256()\n+        m.update(b\"secp256k1_ellsq_encode\\x00\")\n+        m.update(count.to_bytes(4, 'little'))\n+        m.update(randombytes)\n+        m.update(P[0].to_bytes(32, byteorder='big'))\n+        m.update((P[1] & 1).to_bytes(1, 'big'))\n+        hash = m.digest()\n+        u = fe(int.from_bytes(hash, 'big'))\n+        count += 1\n+        if count == 1:\n+            branch_hash = hash\n+            continue\n+\n+        ge = forward_map(u)\n+        # convert ge to jacobian form for EC operations\n+        ge = (ge[0].val, ge[1].val, 1)\n+        T = SECP256K1.negate(ge)\n+        Q = SECP256K1.add(T, SECP256K1.affine(P))\n+        if SECP256K1.is_infinity(Q):\n+            Q = T\n+        j = (branch_hash[(count-2) >> 2] >> (((count-2) & 3) << 1)) & 3\n+        Q = SECP256K1.affine(Q)\n+        v = reverse_map(fe(Q[0]), fe(Q[1]), j)\n+        if v is not None:\n+            return u, v\n+\n+def decode(u, v):\n+    ge1 = forward_map(u)\n+    ge2 = forward_map(v)\n+    # convert ge1 and ge2 to jacobian form for EC operations\n+    T = ge1[0].val, ge1[1].val, 1\n+    S = ge2[0].val, ge2[1].val, 1\n+    P = SECP256K1.add(T, S)\n+    if SECP256K1.is_infinity(P):\n+        P = T\n+    P = SECP256K1.affine(P)\n+    return fe(P[0]), fe(P[1])\n+\n+def ellsq_encode(pubkey, randombytes):\n+    \"\"\"\n+    generates elligator squared encoding of pubkey\n+    Parameters:\n+        pubkey : ECPubKey object\n+        randombytes : 32 bytes entropy\n+    Returns: 64 bytes encoding\n+    \"\"\"\n+    ge = pubkey.get_group_element()\n+    u, v = encode((ge[0].val, ge[1].val, 1), randombytes)\n+    return u.to_bytes() + v.to_bytes()\n+\n+def ellsq_decode(enc):\n+    \"\"\"\n+    decodes elligator squared encoding to obtain pubkey\n+    Parameters:\n+        enc : 64 bytes encoding\n+    Returns: ECPubKey object\n+    \"\"\"\n+    x, y = decode(fe.from_bytes(enc[:32]), fe.from_bytes(enc[32:]))\n+    if y.val % 2 == 0:\n+        compressed_sec = b'\\x02' + x.val.to_bytes(32, 'big')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045493840",
      "id" : 1045493840,
      "in_reply_to_id" : 868288953,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-UPhQ",
      "original_commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "original_line" : 214,
      "original_position" : 214,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 1213029942,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045493840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-12T07:50:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045493840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045498310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045498310"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks @KevinMusgrave, that's true. it's built on top of #26222 now and much better readability.",
      "commit_id" : "fe10103065b64c69b4f1c1cd7afc7e51375c4322",
      "created_at" : "2022-12-12T07:56:25Z",
      "diff_hunk" : "@@ -0,0 +1,289 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Source: https://github.com/sipa/writeups/tree/main/elligator-square-for-bn\n+\"\"\"Test-only Elligator Squared implementation\n+\n+WARNING: This code is slow and uses bad randomness.\n+Do not use for anything but tests.\"\"\"\n+\n+import hashlib\n+import os\n+import random\n+import unittest\n+\n+from .key import fe, ECPubKey, SECP256K1, SECP256K1_G, SECP256K1_ORDER\n+\n+C1 = fe(-3).sqrt()\n+C2 = (C1 - fe(1)) / fe(2)\n+B = fe(7)\n+\n+def forward_map(u):\n+    \"\"\"Forward mapping function\n+\n+    Parameters:\n+        u (of type fe) : any field element\n+    Returns:\n+        fe, fe : affine X and Y coordinates of a point on the secp256k1 curve\n+    \"\"\"\n+    s = u**2\n+    x1 = C2 - C1*s / (fe(1)+B+s)\n+    g1 = x1**3 + B\n+    if g1.is_square():\n+        x, g = x1, g1\n+    else:\n+        x2 = -x1 - fe(1)\n+        g2 = x2**3 + B\n+        if g2.is_square():\n+            x, g = x2, g2\n+        else:\n+            x3 = fe(1) - (fe(1)+B+s)**2 / (fe(3)*s)\n+            g3 = x3**3 + B\n+            x, g = x3, g3\n+    y = g.sqrt()\n+    if y.is_odd() == u.is_odd():\n+        return x, y\n+    else:\n+        return x, -y\n+\n+def reverse_map(x, y, i):\n+    \"\"\"Reverse mapping function\n+\n+    Parameters:\n+        fe, fe : X and Y coordinates of a point on the secp256k1 curve\n+        i      : integer in range [0,3]\n+    Returns:\n+        u (of type fe) : such that forward_map(u) = (x,y), or None.\n+\n+        - There can be up to 4 such inverses, and i selects which formula to use.\n+        - Each i can independently from other i values return a value or None.\n+        - All non-None values returned across all 4 i values are guaranteed to be distinct.\n+        - Together they will cover all inverses of (x,y) under forward_map.\n+    \"\"\"\n+    if i == 0 or i == 1:\n+        z = fe(2)*x + fe(1)\n+        t1 = C1 - z\n+        t2 = C1 + z\n+        if not (t1*t2).is_square():\n+            return None\n+        if i == 0:\n+            if t2 == fe(0):\n+                return None\n+            if t1 == fe(0) and y.is_odd():\n+                return None\n+            u = ((fe(1)+B)*t1/t2).sqrt()\n+        else:\n+            x1 = -x-fe(1)\n+            if (x1**3 + B).is_square():\n+                return None\n+            u = ((fe(1)+B)*t2/t1).sqrt()\n+    else:\n+        z = fe(2) - fe(4)*B - fe(6)*x\n+        if not (z**2 - fe(16)*(B+fe(1))**2).is_square():\n+            return None\n+        if i == 2:\n+            s = (z + (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)\n+        else:\n+            if z**2 == fe(16)*(B+fe(1))**2:\n+                return None\n+            s = (z - (z**2 - fe(16)*(B+fe(1))**2).sqrt()) / fe(4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#discussion_r1045498310",
      "id" : 1045498310,
      "in_reply_to_id" : 841679561,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-UQnG",
      "original_commit_id" : "0650f1ffcbc021734d3a97d998b2589d198e5c53",
      "original_line" : 90,
      "original_position" : 90,
      "original_start_line" : 83,
      "path" : "test/functional/test_framework/ellsq.py",
      "position" : null,
      "pull_request_review_id" : 1213036119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24005",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045498310/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-12T07:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1045498310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-03T22:22:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1370284414",
      "id" : 1370284414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII585RrOF-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1370284414/reactions"
      },
      "updated_at" : "2023-01-03T22:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1370284414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-04-28T10:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24005#issuecomment-1527373835",
      "id" : 1527373835,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24005",
      "node_id" : "IC_kwDOABII585bCeAL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527373835/reactions"
      },
      "updated_at" : "2023-04-28T10:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527373835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
