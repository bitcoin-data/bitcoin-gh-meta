{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "In RESTful APIs, [typically](https://rapidapi.com/blog/api-glossary/parameters/query/) path parameters  (e.g. `/some/unique/resource/`) are used to represent resources, and query parameters (e.g. `?sort=asc`) are used to control how these resources are being loaded through e.g. sorting, pagination, filtering, ...\r\n\r\nAs first [discussed in #17631](https://github.com/bitcoin/bitcoin/pull/17631#discussion_r733031180), the [current REST api](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md) contains two endpoints `/headers/` and `/blockfilterheaders/` that rather unexpectedly use path parameters to control how many (filter) headers are returned in the response. While this is no critical issue, it is unintuitive and we are still early enough to easily phase this behaviour out and ensure new endpoints (if any) do not have to stick to non-standard behaviour just for internal consistency.\r\n\r\nIn this PR, a new `HTTPRequest::GetQueryParameter` method is introduced to easily parse query parameters, as well as two new `/headers/` and `/blockfilterheaders/` endpoints that use a count query parameter are introduced. The old path parameter-based endpoints are kept without too much overhead, but the documentation now points to the new query parameter-based endpoints as the default interface to encourage standardness.\r\n\r\n## Behaviour change\r\n### New endpoints and default values\r\n`/headers/` and `/blockfilterheaders/` now have 2 new endpoints that contain query parameters (`?count=<count>`) instead of path parameters (`/<count>/`), as described in REST-interface.md. Since query parameters can easily have default values, I have set this at 5 for both endpoints.\r\n\r\n**headers**\r\n`GET /rest/headers/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\r\nshould now be used instead of\r\n`GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\r\n\r\n**blockfilterheaders**\r\n`GET /rest/blockfilterheaders/<FILTERTYPE>/<BLOCK-HASH>.<bin|hex|json>?count=<COUNT=5>`\r\nshould now be used instead of\r\n`GET /rest/blockfilterheaders/<FILTERTYPE>/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\r\n\r\n### Some previously invalid API calls are now valid\r\nAPI calls that contained query strings in the URI could not be parsed prior to this PR. This PR changes behaviour in that previously invalid calls (e.g. `GET /rest/headers/5/somehash.json?someunusedparam=foo`) would now become valid, as the query parameters are properly parsed, and discarded if unused. \r\nFor example, prior to this PR, adding an irrelevant `someparam` parameter would be illegal:\r\n```\r\nGET /rest/headers/5/0000004c6aad0c89c1c060e8e116dcd849e0554935cd78ff9c6a398abeac6eda.json?someparam=true\r\n->\r\nInvalid hash: 0000004c6aad0c89c1c060e8e116dcd849e0554935cd78ff9c6a398abeac6eda.json?someparam=true\r\n```\r\n**This behaviour change affects all rest endpoints, not just the 2 new ones introduced here.**\r\n\r\n*(Note: I'd be open to implementing additional logic to refuse requests containing unrecognized query parameters to minimize behaviour change, but for the endpoints that we currently have I don't really see the point for that added complexity. E.g. I don't see any scenarios where misspelling a parameter could lead to harmful outcomes)*\r\n\r\n## Using the REST API\r\n\r\nTo run the API HTTP server, start a bitcoind instance with the `-rest` flag enabled. To use the\r\n`blockfilterheaders` endpoint, you'll also need to set `-blockfilterindex=1`: \r\n```\r\n./bitcoind -signet -rest -blockfilterindex=1\r\n```\r\n\r\nAs soon as bitcoind is fully up and running, you should be able to query the API, for example by\r\nusing curl on the command line: ```curl \"127.0.0.1:38332/rest/chaininfo.json\"```. \r\nTo more easily parse the JSON output, you can also use tools like 'jq' or `json_pp`, e.g.:\r\n```\r\ncurl -s \"localhost:38332/rest/blockfilterheaders/basic/0000004c6aad0c89c1c060e8e116dcd849e0554935cd78ff9c6a398abeac6eda.json?count=2\" | json_pp .\r\n```\r\n\r\n## To do\r\n- [x] update `doc/release-notes`\r\n\r\n## Feedback\r\nThis is my first PR (hooray!). Please don't hold back on any feedback/comments/nits/... you may have, big or small, whether they are code, process, language, ... related. I welcome private messages too if there's anything you don't want to clutter the PR with. I'm here to learn and am grateful for everyone's input.\r\n",
   "closed_at" : "2022-04-06T07:28:12Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 21,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098/comments",
   "created_at" : "2022-01-18T21:06:55Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/24098",
   "id" : 1107362576,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "0052cc",
         "default" : false,
         "description" : null,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584xOeEH",
   "number" : 24098,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/24098.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24098",
      "merged_at" : "2022-04-06T07:28:12Z",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/24098.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24098"
   },
   "reactions" : {
      "+1" : 3,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 4,
      "laugh" : 0,
      "rocket" : 1,
      "total_count" : 8,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098/timeline",
   "title" : "rest: Use query parameters to control resource loading",
   "updated_at" : "2022-04-06T07:28:12Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24098",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
      "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
      "followers_url" : "https://api.github.com/users/stickies-v/followers",
      "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
      "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/stickies-v",
      "id" : 69010457,
      "login" : "stickies-v",
      "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
      "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
      "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
      "repos_url" : "https://api.github.com/users/stickies-v/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/stickies-v"
   }
}
