{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "I have Django app trying to make bitcoin payment page using local bitcoin core node but I keep getting ([Errno 32] Broken pipe) when the page refresh to check the incoming transactions the error looks like timeout error but I tried several methods to resolve timeout errors using uWsgi and Nginx params but didn't work and didn't got any benfet from logs only from journalctl got `SIGPIPE: writing to a closed pipe/socket/fd`\r\n\r\nThe debug mode showing this\r\n\r\n`\r\n\r\nTraceback (most recent call last):\r\n  File \"./wallet/models.py\", line 235, in updatedeposit_btc\r\n    unconf_amount = self.bitcoind.unconf_by_addr(address)\r\n  File \"./wallet/bitcoind.py\", line 70, in unconf_by_addr\r\n    return self.proxy.getreceivedbyaddress(addr, minconf=0)\r\n  File \"/project/env/lib/python3.9/site-packages/bitcoin/rpc.py\", line 600, in getreceivedbyaddress\r\n    r = self._call('getreceivedbyaddress', str(addr), minconf)\r\n  File \"/project/env/lib/python3.9/site-packages/bitcoin/rpc.py\", line 231, in _call\r\n    self.__conn.request('POST', self.__url.path, postdata, headers)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1255, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1301, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1250, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1049, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 971, in send\r\n    self.sock.sendall(data)\r\nDuring handling of the above exception ([Errno 32] Broken pipe), another exception occurred:\r\n\r\n`\r\nAnd I have in bitcoind connection setting .py\r\n`\r\nfrom django.conf import settings\r\nfrom decimal import Decimal\r\nfrom .rates import rate\r\nimport bitcoin\r\nimport bitcoin.rpc\r\nfrom bitcoin.wallet import CBitcoinAddress, CBitcoinAddressError\r\nfrom django.core.exceptions import ValidationError\r\n\r\ntry:\r\n    network = settings.BTC_NETWORK\r\nexcept:\r\n    network = None\r\n\r\nif network:\r\n    bitcoin.SelectParams(network)\r\n\r\nclass Bitcoind:\r\n\r\n    MINCONF = settings.BTC_MIN_CONFIRMATIONS\r\n    VIEW_URL = settings.BTC_VIEW_URL\r\n    URL = settings.BITCOIND_URL\r\n\r\n    def __init__(self):\r\n        try:\r\n            url = self.URL\r\n        except:\r\n            url = None\r\n            \r\n        self.proxy = bitcoin.rpc.Proxy(service_url=url)\r\n    @staticmethod\r\n    def usd_to_btc(usd):\r\n        return rate.usd_to_btc(usd)\r\n\r\n    @staticmethod\r\n    def btc_to_usd(btc):\r\n        return rate.btc_to_usd(btc)\r\n\r\n    @staticmethod\r\n    def sats_to_usd(sats):\r\n        return rate.btc_to_usd(Bitcoind.sats_to_btc(sats))\r\n\r\n    @staticmethod\r\n    def usd_to_sats(usd):\r\n        return Bitcoind.btc_to_sats(rate.usd_to_btc(usd))\r\n\r\n    @staticmethod\r\n    def sats_to_btc(sats):\r\n        return Decimal(sats) / Decimal(1e8)\r\n\r\n    @staticmethod\r\n    def btc_to_sats(btc):\r\n        return Decimal(btc) * Decimal(1e8)\r\n\r\n    def create_address(self):\r\n        return self.proxy.getnewaddress(account=self.ACC)\r\n\r\n    def unconf_by_addr(self, addr):\r\n        return self.proxy.getreceivedbyaddress(addr, minconf=0)\r\n\r\n    def conf_by_addr(self, addr):\r\n        return self.proxy.getreceivedbyaddress(addr, minconf=self.MINCONF)\r\n\r\n    @staticmethod\r\n    def validate(addr):\r\n        try:\r\n            return CBitcoinAddress(addr)\r\n        except CBitcoinAddressError:\r\n            raise ValidationError(_('BTC address is invalid'), code='invalid_btc_address')\r\n        return None\r\n\r\ndef btc_address_validator(address):\r\n    return Bitcoind.validate(address)\r\n\r\n`\r\nAnd my models.py\r\n`\r\ndef updatedeposit(self, dp):\r\n        if dp.coin == Coins.BTC:\r\n            return self.updatedeposit_btc(dp)\r\n        else:\r\n            raise WalletException('No such deposit option')\r\n\r\n        if dp.status not in STATUS_TO_UPDATE:\r\n            return dp\r\n\r\n        try:\r\n            address = self.bitcoind.validate(dp.recv_address)\r\n        except:\r\n            raise WalletException(\"Invalid BTC address\")\r\n        try:\r\n            unconf_amount = self.bitcoind.unconf_by_addr(address)\r\n            conf_amount = self.bitcoind.conf_by_addr(address)\r\n        except:\r\n            raise WalletException('Bitcoind error')\r\n\r\n        if unconf_amount > conf_amount:\r\n            dp.status = Status.UNCONFIRMED\r\n            dp.sats_amount = unconf_amount\r\n            dp.save()\r\n            return dp\r\n        if conf_amount == 0:\r\n            delta = timedelta(minutes=settings.DEPOSIT_EXPIRATION)\r\n            if dp.date < timezone.now() - delta:\r\n                dp.status = Status.EXPIRED\r\n                dp.save()\r\n                return dp\r\n            delta = timedelta(minutes=settings.DEPOSIT_EXPIRATION+40)\r\n            if dp.date < timezone.now() - delta:\r\n                dp.status = Status.CANCELLED\r\n                dp.save()\r\n                return dp\r\n            dp.status = Status.WAITING\r\n            dp.sats_amount = 0\r\n            dp.save()\r\n            return dp\r\n`\r\nplease help me out\r\n\r\nthis my nginx conf and uwsgi ini\r\n\r\n`\r\n[uwsgi]\r\nchdir           = /dir/\r\nmodule          = core.wsgi\r\nenv             = DJANGO_SETTINGS_MODULE=core.settings\r\nhome            = /dir/env\r\nmaster          = true\r\nprocesses       = 10\r\nsocket          = /dir/uwsgi.sock\r\nchmod-socket    = 666\r\nvacuum          = true\r\nharakiri        = 200\r\npost-buffering  = 1\r\nmax-requests    = 5000\r\njournalctl\r\nsafe-pidfile    = /dir/uwsgi-master.pid\r\nignore-sigpipe\r\nsocket-timeout  =300\r\nhttp-timeout    =300\r\nserver {\r\n    listen      80;\r\n    charset     utf-8;\r\n    server_name _;\r\n    client_max_body_size 20M;\r\n    keepalive_timeout  300;\r\n    sendfile        on;\r\n\r\nserver\r\n    location /media  {\r\n        alias /dir/media;\r\n    }\r\n\r\n    location /static {\r\n        alias /dir/static;\r\n    }\r\n\r\n    location / {\r\n        uwsgi_pass  django;\r\n        include     /dir/uwsgi_params;\r\n        proxy_http_version 1.1;\r\n        proxy_connect_timeout 1200s;\r\n        proxy_read_timeout 1000s;\r\n        uwsgi_connect_timeout 2000s;\r\n        uwsgi_read_timeout 2000s;\r\n        uwsgi_send_timeout 2000s;\r\n\r\n    }\r\n}\r\n`",
   "closed_at" : "2022-01-14T13:04:43Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070/comments",
   "created_at" : "2022-01-14T13:03:38Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/24070",
   "id" : 1103610378,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585Bx8IK",
   "number" : 24070,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070/timeline",
   "title" : "Getting [Errno 32] Broken pipe after the page reloading several times ! using Django app with nginx for Bitcoin core gateway",
   "updated_at" : "2022-01-14T13:05:55Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24070",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/97731600?v=4",
      "events_url" : "https://api.github.com/users/mimo6090/events{/privacy}",
      "followers_url" : "https://api.github.com/users/mimo6090/followers",
      "following_url" : "https://api.github.com/users/mimo6090/following{/other_user}",
      "gists_url" : "https://api.github.com/users/mimo6090/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/mimo6090",
      "id" : 97731600,
      "login" : "mimo6090",
      "node_id" : "U_kgDOBdNEEA",
      "organizations_url" : "https://api.github.com/users/mimo6090/orgs",
      "received_events_url" : "https://api.github.com/users/mimo6090/received_events",
      "repos_url" : "https://api.github.com/users/mimo6090/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/mimo6090/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/mimo6090/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/mimo6090"
   }
}
