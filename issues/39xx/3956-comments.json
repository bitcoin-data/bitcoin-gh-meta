[
   {
      "author_association" : "MEMBER",
      "body" : "Not all tests may want to have the same setup steps or arguments. Defining a rigid base class limits flexibility.\n\nFor example tests may want a different number of nodes, different command line arguments, or nodes with special configuration, etc. \n\nIf you take this into account in a base class you may end up with some huge overdesigned system (which people have to learn before they can contribute tests).\n",
      "created_at" : "2014-03-26T09:19:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38662934",
      "id" : 38662934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NjYyOTM0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38662934/reactions"
      },
      "updated_at" : "2014-03-26T09:26:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38662934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For very different test setups, a common base class may not work. The thing is, Gavin just made some changes to the RPC testing(#3863), for now we have only one test that implements the skeleton test, what if we had a 100 that were based on the skeleton .. we would have had to go and fix manually all of them.\n",
      "created_at" : "2014-03-26T09:27:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663485",
      "id" : 38663485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NjYzNDg1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663485/reactions"
      },
      "updated_at" : "2014-03-26T09:27:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3773981?v=4",
         "events_url" : "https://api.github.com/users/alonmuroch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alonmuroch/followers",
         "following_url" : "https://api.github.com/users/alonmuroch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alonmuroch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alonmuroch",
         "id" : 3773981,
         "login" : "alonmuroch",
         "node_id" : "MDQ6VXNlcjM3NzM5ODE=",
         "organizations_url" : "https://api.github.com/users/alonmuroch/orgs",
         "received_events_url" : "https://api.github.com/users/alonmuroch/received_events",
         "repos_url" : "https://api.github.com/users/alonmuroch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alonmuroch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alonmuroch"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Well in the least you then need to have methods on the skeleton object (that can be overridden) that provide all the configurable steps such as command line arguments, node setup, ...\n\nIf subclasses end up overriding everything in the skeleton it will be exactly the same and you still need to manually fix everything.\n",
      "created_at" : "2014-03-26T09:30:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663711",
      "id" : 38663711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NjYzNzEx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663711/reactions"
      },
      "updated_at" : "2014-03-26T09:30:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a generic utility function, no need to make it part of a class (ie, no use of self or global state).\n",
      "commit_id" : "48b991a930d516a74cf525aaa02159ce0d857aac",
      "created_at" : "2014-03-26T09:31:53Z",
      "diff_hunk" : "@@ -6,151 +6,93 @@\n # Exercise the listtransactions API\n \n # Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n-sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n-\n-import json\n-import shutil\n-import subprocess\n-import tempfile\n-import traceback\n-\n-from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n+from skeleton import Skeleton as baseclass\n \n-\n-def check_array_result(object_array, to_match, expected):\n-    \"\"\"\n-    Pass in array of JSON objects, a dictionary with key/value pairs\n-    to match against, and another dictionary with expected key/value\n-    pairs.\n-    \"\"\"\n-    num_matched = 0\n-    for item in object_array:\n-        all_match = True\n-        for key,value in to_match.items():\n-            if item[key] != value:\n-                all_match = False\n-        if not all_match:\n-            continue\n-        for key,value in expected.items():\n-            if item[key] != value:\n-                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n-            num_matched = num_matched+1\n-    if num_matched == 0:\n-        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n-\n-def run_test(nodes):\n-    # Simple send, 0 to 1:\n-    txid = nodes[0].sendtoaddress(nodes[1].getnewaddress(), 0.1)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":0})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":0})\n-    # mine a block, confirmations should change:\n-    nodes[0].setgenerate(True, 1)\n-    sync_blocks(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":1})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":1})\n-\n-    # send-to-self:\n-    txid = nodes[0].sendtoaddress(nodes[0].getnewaddress(), 0.2)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"send\"},\n-                       {\"amount\":Decimal(\"-0.2\")})\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"receive\"},\n-                       {\"amount\":Decimal(\"0.2\")})\n-\n-    # sendmany from node1: twice to self, twice to node2:\n-    send_to = { nodes[0].getnewaddress() : 0.11, nodes[1].getnewaddress() : 0.22,\n-                nodes[0].getaccountaddress(\"from1\") : 0.33, nodes[1].getaccountaddress(\"toself\") : 0.44 }\n-    txid = nodes[1].sendmany(\"\", send_to)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.33\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.33\")},\n-                       {\"txid\":txid, \"account\" : \"from1\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.44\")},\n-                       {\"txid\":txid, \"account\" : \"\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.44\")},\n-                       {\"txid\":txid, \"account\" : \"toself\"} )\n+class ListtransactionsTest(baseclass):\n     \n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n-    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                      help=\"Root directory for datadirs\")\n-    (options, args) = parser.parse_args()\n-\n-    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n-\n-    check_json_precision()\n-\n-    success = False\n-    nodes = []\n-    try:\n-        print(\"Initializing test directory \"+options.tmpdir)\n-        if not os.path.isdir(options.tmpdir):\n-            os.makedirs(options.tmpdir)\n-        initialize_chain(options.tmpdir)\n-\n-        nodes = start_nodes(2, options.tmpdir)\n-        connect_nodes(nodes[1], 0)\n+    def run(self):\n+        super(ListtransactionsTest, self).main()\n+    \n+    def check_array_result(self,object_array, to_match, expected):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969010",
      "id" : 10969010,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTY5MDEw",
      "original_commit_id" : "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
      "original_line" : null,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "qa/rpc-tests/listtransactions.py",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-03-27T08:52:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why add this method, and not just call MyTest().main() in step 4?\n",
      "commit_id" : "48b991a930d516a74cf525aaa02159ce0d857aac",
      "created_at" : "2014-03-26T09:32:06Z",
      "diff_hunk" : "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the listtransactions API\n+\n+# Add python-bitcoinrpc to module search path:\n+from util import *\n+from skeleton import Skeleton as baseclass\n+\n+# 1) Change class name to your test\n+class MyTest(baseclass):\n+    \n+    # 2) Change 'MyTest' to class name\n+    def run(self):\n+        super(MyTest, self).main()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969016",
      "id" : 10969016,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTY5MDE2",
      "original_commit_id" : "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "qa/rpc-tests/TEST_EXAMPLE.py",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-03-27T08:52:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed it.\n",
      "commit_id" : "48b991a930d516a74cf525aaa02159ce0d857aac",
      "created_at" : "2014-03-27T08:52:37Z",
      "diff_hunk" : "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the listtransactions API\n+\n+# Add python-bitcoinrpc to module search path:\n+from util import *\n+from skeleton import Skeleton as baseclass\n+\n+# 1) Change class name to your test\n+class MyTest(baseclass):\n+    \n+    # 2) Change 'MyTest' to class name\n+    def run(self):\n+        super(MyTest, self).main()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014121",
      "id" : 11014121,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDE0MTIx",
      "original_commit_id" : "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "qa/rpc-tests/TEST_EXAMPLE.py",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-03-27T08:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3773981?v=4",
         "events_url" : "https://api.github.com/users/alonmuroch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alonmuroch/followers",
         "following_url" : "https://api.github.com/users/alonmuroch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alonmuroch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alonmuroch",
         "id" : 3773981,
         "login" : "alonmuroch",
         "node_id" : "MDQ6VXNlcjM3NzM5ODE=",
         "organizations_url" : "https://api.github.com/users/alonmuroch/orgs",
         "received_events_url" : "https://api.github.com/users/alonmuroch/received_events",
         "repos_url" : "https://api.github.com/users/alonmuroch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alonmuroch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alonmuroch"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed\n",
      "commit_id" : "48b991a930d516a74cf525aaa02159ce0d857aac",
      "created_at" : "2014-03-27T08:54:48Z",
      "diff_hunk" : "@@ -6,151 +6,93 @@\n # Exercise the listtransactions API\n \n # Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n-sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n-\n-import json\n-import shutil\n-import subprocess\n-import tempfile\n-import traceback\n-\n-from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n+from skeleton import Skeleton as baseclass\n \n-\n-def check_array_result(object_array, to_match, expected):\n-    \"\"\"\n-    Pass in array of JSON objects, a dictionary with key/value pairs\n-    to match against, and another dictionary with expected key/value\n-    pairs.\n-    \"\"\"\n-    num_matched = 0\n-    for item in object_array:\n-        all_match = True\n-        for key,value in to_match.items():\n-            if item[key] != value:\n-                all_match = False\n-        if not all_match:\n-            continue\n-        for key,value in expected.items():\n-            if item[key] != value:\n-                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n-            num_matched = num_matched+1\n-    if num_matched == 0:\n-        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n-\n-def run_test(nodes):\n-    # Simple send, 0 to 1:\n-    txid = nodes[0].sendtoaddress(nodes[1].getnewaddress(), 0.1)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":0})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":0})\n-    # mine a block, confirmations should change:\n-    nodes[0].setgenerate(True, 1)\n-    sync_blocks(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":1})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":1})\n-\n-    # send-to-self:\n-    txid = nodes[0].sendtoaddress(nodes[0].getnewaddress(), 0.2)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"send\"},\n-                       {\"amount\":Decimal(\"-0.2\")})\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"receive\"},\n-                       {\"amount\":Decimal(\"0.2\")})\n-\n-    # sendmany from node1: twice to self, twice to node2:\n-    send_to = { nodes[0].getnewaddress() : 0.11, nodes[1].getnewaddress() : 0.22,\n-                nodes[0].getaccountaddress(\"from1\") : 0.33, nodes[1].getaccountaddress(\"toself\") : 0.44 }\n-    txid = nodes[1].sendmany(\"\", send_to)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.33\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.33\")},\n-                       {\"txid\":txid, \"account\" : \"from1\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.44\")},\n-                       {\"txid\":txid, \"account\" : \"\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.44\")},\n-                       {\"txid\":txid, \"account\" : \"toself\"} )\n+class ListtransactionsTest(baseclass):\n     \n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n-    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                      help=\"Root directory for datadirs\")\n-    (options, args) = parser.parse_args()\n-\n-    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n-\n-    check_json_precision()\n-\n-    success = False\n-    nodes = []\n-    try:\n-        print(\"Initializing test directory \"+options.tmpdir)\n-        if not os.path.isdir(options.tmpdir):\n-            os.makedirs(options.tmpdir)\n-        initialize_chain(options.tmpdir)\n-\n-        nodes = start_nodes(2, options.tmpdir)\n-        connect_nodes(nodes[1], 0)\n+    def run(self):\n+        super(ListtransactionsTest, self).main()\n+    \n+    def check_array_result(self,object_array, to_match, expected):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014185",
      "id" : 11014185,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDE0MTg1",
      "original_commit_id" : "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
      "original_line" : null,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "qa/rpc-tests/listtransactions.py",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-03-27T08:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3773981?v=4",
         "events_url" : "https://api.github.com/users/alonmuroch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alonmuroch/followers",
         "following_url" : "https://api.github.com/users/alonmuroch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alonmuroch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alonmuroch",
         "id" : 3773981,
         "login" : "alonmuroch",
         "node_id" : "MDQ6VXNlcjM3NzM5ODE=",
         "organizations_url" : "https://api.github.com/users/alonmuroch/orgs",
         "received_events_url" : "https://api.github.com/users/alonmuroch/received_events",
         "repos_url" : "https://api.github.com/users/alonmuroch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alonmuroch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alonmuroch"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I can start creating methods that the parent class can override (init_nodes, stop_nodes,parse_options,etc. ).... but i think the current setup is pretty wide ... you have 200 blocks with 4 nodes ... i think can cover a lot of tests, don't you ?\n",
      "created_at" : "2014-03-27T08:56:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780282",
      "id" : 38780282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NzgwMjgy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780282/reactions"
      },
      "updated_at" : "2014-03-27T08:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3773981?v=4",
         "events_url" : "https://api.github.com/users/alonmuroch/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alonmuroch/followers",
         "following_url" : "https://api.github.com/users/alonmuroch/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alonmuroch/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alonmuroch",
         "id" : 3773981,
         "login" : "alonmuroch",
         "node_id" : "MDQ6VXNlcjM3NzM5ODE=",
         "organizations_url" : "https://api.github.com/users/alonmuroch/orgs",
         "received_events_url" : "https://api.github.com/users/alonmuroch/received_events",
         "repos_url" : "https://api.github.com/users/alonmuroch/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alonmuroch/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alonmuroch"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I do not want to make that judgement for others.\n",
      "created_at" : "2014-03-27T08:58:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780372",
      "id" : 38780372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM4NzgwMzcy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780372/reactions"
      },
      "updated_at" : "2014-03-27T08:58:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So, I think that the base idea here is good, but it needs finer customizability in the base class. Adding init_nodes, stop_nodes, parse_options etc, as you said, makes sense.\n",
      "created_at" : "2014-06-03T13:14:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-44962376",
      "id" : 44962376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0OTYyMzc2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44962376/reactions"
      },
      "updated_at" : "2014-06-03T13:14:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44962376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3956_48b991a930d516a74cf525aaa02159ce0d857aac/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-06-23T14:48:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-46854881",
      "id" : 46854881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODU0ODgx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46854881/reactions"
      },
      "updated_at" : "2014-06-23T14:48:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46854881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this because of inactivity.\n",
      "created_at" : "2014-07-08T13:17:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-48334095",
      "id" : 48334095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzM0MDk1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/48334095/reactions"
      },
      "updated_at" : "2014-07-08T13:17:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/48334095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
