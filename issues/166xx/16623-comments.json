[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16392](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16392.html) (WIP build: macOS toolchain update by fanquake)\n* [#16161](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16161.html) (util: Fix compilation errors in support/lockedpool.cpp by jkczyz)\n* [#15584](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15584.html) (build: disable BIP70 support by default by fanquake)\n* [#12134](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12134.html) (Build previous releases and run functional tests by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-16T00:27:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-521842438",
      "id" : 521842438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTg0MjQzOA==",
      "updated_at" : "2019-08-16T22:29:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521842438",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16623#discussion_r314553137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16623"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314553137"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this be `00_setup_env_amd64_mac` ? There's no `00_setup_env_mac.sh` file.",
      "commit_id" : "fa21737ba7159578299f2b10e181a084ab8887c4",
      "created_at" : "2019-08-16T01:07:47Z",
      "diff_hunk" : "@@ -91,101 +91,49 @@ jobs:\n     - stage: test\n       name: 'ARM  [GOAL: install]  [no unit or functional tests]'\n       env: >-\n-        HOST=arm-linux-gnueabihf\n-        PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-        # This could be removed once the ABI change warning does not show up by default\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n \n     - stage: test\n       name: 'Win64  [GOAL: deploy]  [no gui or functional tests]'\n       env: >-\n-        HOST=x86_64-w64-mingw32\n-        PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n \n     - stage: test\n       name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n       env: >-\n-        HOST=i686-pc-linux-gnu\n-        PACKAGES=\"g++-multilib python3-zmq\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-        CONFIG_SHELL=\"/bin/dash\"\n+        FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n-        DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-        TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_qt5.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:14.04\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_trusty.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:16.04\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_tsan.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_asan.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n-        NO_DEPENDS=1\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        RUN_FUZZ_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_fuzz.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq\"\n-        DEP_OPTS=\"NO_WALLET=1\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_nowallet.sh\"\n \n     - stage: test\n       name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n       env: >-\n-        HOST=x86_64-apple-darwin14\n-        PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-        OSX_SDK=10.11\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+        FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#discussion_r314553137",
      "id" : 314553137,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDU1MzEzNw==",
      "original_commit_id" : "e5ada9ad16e8ff90735a2d48f25535f0d8c36a7a",
      "original_position" : 111,
      "path" : ".travis.yml",
      "position" : 111,
      "pull_request_review_id" : 275737574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16623",
      "updated_at" : "2019-08-16T12:49:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314553137",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This approach pollutes the calling bash environment.\r\n\r\nCan you explain what command exactly does that? I can't find any.\r\n\r\nIt will potentially pollute your ccache dir and the git repo with build artifacts, but that has nothing to do with bash.",
      "created_at" : "2019-08-16T13:12:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522003959",
      "id" : 522003959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjAwMzk1OQ==",
      "updated_at" : "2019-08-16T13:12:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522003959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16623#discussion_r314716003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16623"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314716003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "fa21737ba7159578299f2b10e181a084ab8887c4",
      "created_at" : "2019-08-16T13:19:32Z",
      "diff_hunk" : "@@ -91,101 +91,49 @@ jobs:\n     - stage: test\n       name: 'ARM  [GOAL: install]  [no unit or functional tests]'\n       env: >-\n-        HOST=arm-linux-gnueabihf\n-        PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-        # This could be removed once the ABI change warning does not show up by default\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n \n     - stage: test\n       name: 'Win64  [GOAL: deploy]  [no gui or functional tests]'\n       env: >-\n-        HOST=x86_64-w64-mingw32\n-        PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n \n     - stage: test\n       name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n       env: >-\n-        HOST=i686-pc-linux-gnu\n-        PACKAGES=\"g++-multilib python3-zmq\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-        CONFIG_SHELL=\"/bin/dash\"\n+        FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n-        DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-        TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_qt5.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:14.04\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_trusty.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:16.04\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_tsan.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_asan.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n-        NO_DEPENDS=1\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        RUN_FUZZ_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_fuzz.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq\"\n-        DEP_OPTS=\"NO_WALLET=1\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+        FILE_ENV=\"./ci/test/00_setup_env_amd64_nowallet.sh\"\n \n     - stage: test\n       name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n       env: >-\n-        HOST=x86_64-apple-darwin14\n-        PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-        OSX_SDK=10.11\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+        FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#discussion_r314716003",
      "id" : 314716003,
      "in_reply_to_id" : 314553137,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDcxNjAwMw==",
      "original_commit_id" : "e5ada9ad16e8ff90735a2d48f25535f0d8c36a7a",
      "original_position" : 111,
      "path" : ".travis.yml",
      "position" : 111,
      "pull_request_review_id" : 275944436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16623",
      "updated_at" : "2019-08-16T13:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314716003",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Good suggestions @fanquake. I'll probably leave those as follow-up features that can be added.",
      "created_at" : "2019-08-16T13:20:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522006456",
      "id" : 522006456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjAwNjQ1Ng==",
      "updated_at" : "2019-08-16T13:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522006456",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK. I would find it easier if the new files were numbered the same as its equivalent Travis machine.\r\n\r\nRecipe to verify the move:\r\n\r\n1. delete `export` from `ci/test/00_setup_env_*`\r\n2. `git commit -a --amend`\r\n3.  `git show --color-moved=dimmed-zebra --color-moved-ws=allow-indentation-change`\r\n\r\nI tried (cloned in /home/travis/bitcoin):\r\n```sh\r\ncd bitcoin\r\nFILE_ENV=\"./ci/test/00_setup_env_amd64_qt5.sh\" ./ci/test_run_all.sh\r\n```\r\n\r\nThis fails at the configure step:\r\n```\r\ntravis_fold:start:configure\r\nconfigure: loading site script /home/travis/bitcoin/depends/x86_64-unknown-linux-gnu/share/config.site\r\nconfigure: loading cache config.cache\r\nconfigure: error: `CXXFLAGS' was not set in the previous run\r\nconfigure: error: `CFLAGS' was not set in the previous run\r\nconfigure: error: in `/home/travis/bitcoin/build':\r\nconfigure: error: changes in the environment can compromise the build\r\nconfigure: error: run `make distclean' and/or `rm config.cache' and start over\r\n...\r\nconfigure:2987: loading cache config.cache\r\nconfigure:3014: error: `CXXFLAGS' was not set in the previous run\r\nconfigure:3014: error: `CFLAGS' was not set in the previous run\r\nconfigure:3051: error: in `/home/travis/bitcoin/build':\r\nconfigure:3053: error: changes in the environment can compromise the build\r\nconfigure:3055: error: run `make distclean' and/or `rm config.cache' and start over\r\n...\r\nconfigure: exit 1\r\n```\r\n\r\nIt may have gotten poluted from a previous run, so I tried purging docker instances and nuking the git repository:\r\n\r\n```\r\ndocker stop $(docker ps -a -q)\r\ndocker container prune\r\ngit clean -dfx\r\n```\r\n\r\nNow it runs. Because Docker has root privileges, things very quickly turn into permission hell if you try to run more than one instance.\r\n\r\nAs a followup, it would be nice if you can run all configurations with a single command (stopping if any fails).",
      "created_at" : "2019-08-17T17:13:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522254673",
      "id" : 522254673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjI1NDY3Mw==",
      "updated_at" : "2019-08-17T17:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522254673",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Now it runs. Because Docker has root privileges, things very quickly turn into permission hell if you try to run more than one instance.\r\n\r\nYou can't run more than one ci instance on the repo at the same time.\r\n\r\n> As a followup, it would be nice if you can run all configurations with a single command (stopping if any fails).\r\n\r\nI'll leave this as follow-up ;)",
      "created_at" : "2019-08-19T13:41:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522580760",
      "id" : 522580760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjU4MDc2MA==",
      "updated_at" : "2019-08-19T13:41:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522580760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You can't run more than one ci instance on the repo at the same time.\r\n\r\nI was running them in sequence.",
      "created_at" : "2019-08-19T14:22:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522597557",
      "id" : 522597557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjU5NzU1Nw==",
      "updated_at" : "2019-08-19T14:22:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522597557",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "That should work as long as you run `sudo git clean -dffx` (at your own risk, obviously)",
      "created_at" : "2019-08-19T14:25:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16623#issuecomment-522598838",
      "id" : 522598838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16623",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjU5ODgzOA==",
      "updated_at" : "2019-08-19T14:25:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522598838",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
