[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Travis is stalling yet another time..",
      "created_at" : "2019-08-15T22:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521816320",
      "id" : 521816320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgxNjMyMA==",
      "updated_at" : "2019-08-15T22:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521816320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-15T23:17:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521829833",
      "id" : 521829833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgyOTgzMw==",
      "updated_at" : "2019-08-15T23:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521829833",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15129.html) (rpc: Added ability to remove watch only addresses by benthecarman)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-16T00:26:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521842286",
      "id" : 521842286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTg0MjI4Ng==",
      "updated_at" : "2019-08-25T14:43:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521842286",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314647502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314647502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: why the trailing comma?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T09:28:10Z",
      "diff_hunk" : "@@ -396,7 +396,7 @@ class CWalletTx\n private:\n     const CWallet* pwallet;\n \n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n+    /** Constant used in hashBlock to indicate tx has been abandoned, */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314647502",
      "id" : 314647502,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0NzUwMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 399,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314647502",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314648430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314648430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is the default initialization changed to 0?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T09:31:01Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314648430",
      "id" : 314648430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0ODQzMA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 479,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314648430",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314649394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314649394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we move this backwards compatibility feature entirely to the serialization code, and then make `nIndex` a `uint` (for clarity)?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T09:34:00Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314649394",
      "id" : 314649394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0OTM5NA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314649394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314650144"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314650144"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mention that `nIndex` is a block height?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T09:36:17Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314650144",
      "id" : 314650144,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY1MDE0NA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314650144",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. This overlaps (but is compatible) with #9381",
      "created_at" : "2019-08-16T10:39:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521967025",
      "id" : 521967025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTk2NzAyNQ==",
      "updated_at" : "2019-08-16T10:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521967025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683678"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`isConfirmed()` does not seem to be tested as the others. Add a test? :-)",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T11:34:29Z",
      "diff_hunk" : "@@ -607,10 +651,14 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_state.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_state.state = CWalletTx::ABANDONED; }\n+    bool isConflicted() const { return tx_state.state == CWalletTx::CONFLICTED; }\n+    void setConflicted() { tx_state.state = CWalletTx::CONFLICTED; }\n+    bool isUnconfirmed() const { return tx_state.state == CWalletTx::UNCONFIRMED; }\n+    void setUnconfirmed() { tx_state.state = CWalletTx::UNCONFIRMED; }\n+    bool isConfirmed() const { return tx_state.state == CWalletTx::CONFIRMED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683678",
      "id" : 314683678,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY4MzY3OA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 660,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275902603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"conflicted\"? :-)",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T11:34:49Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683814",
      "id" : 314683814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY4MzgxNA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 488,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275902757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314778232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314778232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> if hashBlock is null it means transaction is abandoned\r\n\r\nCould you clarify this part of the comment. Doesn't `1` not `0` mean abandoned?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T15:42:13Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314778232",
      "id" : 314778232,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc3ODIzMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314778232",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314782646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314782646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment above about \"if transaction was found in a block\" no longer makes sense without the if condition.\r\n\r\nAlso, it seems like now when an abandoned, conflicted, or confirmed transaction is added to the mempool, and this is called, the transaction will now be marked unconfirmed instead of left in the previous state.\r\n\r\nThis seems logical, but I'm wondering if it is a change in behavior. It'd be helpful if the PR description or commit message would say explicitly whether any of this changes wallet behavior, and what the changes are if it does.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T15:53:15Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314782646",
      "id" : 314782646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4MjY0Ng==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 1240,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314782646",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314787768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314787768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Can we move this backwards compatibility feature entirely to the serialization code, and then make `nIndex` a `uint` (for clarity)?\r\n\r\nPersonally -0 on this. Imo, unsigned types provide no safety and are terrible for everything except bitfields.\r\n",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T16:06:31Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314787768",
      "id" : 314787768,
      "in_reply_to_id" : 314649394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4Nzc2OA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314787768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314788614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314788614"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just a suggestion, but I'd add `= 0` here and `= UNCONFIRMED` on the line below to simplify constructor and deserialization code.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T16:08:46Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314788614",
      "id" : 314788614,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4ODYxNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314788614",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314789485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314789485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why is the default initialization changed to 0?\r\n\r\nFrom what I can tell in this PR, the convention mostly adhered to in this PR is to stop using -1 and ABANDON_HASH values at runtime, and restrict them only to the serialization code. This seems like a pretty good convention if it's followed consistently. I also think it'd be nice to explicitly say what values the block and index values should have for different states in a comment.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T16:10:54Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314789485",
      "id" : 314789485,
      "in_reply_to_id" : 314648430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4OTQ4NQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 479,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314789485",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314790802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314790802"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we set 0 here, or change MarkConflicted to set -1? I think it'd be good to be consistent about what conflicted transactions look like.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T16:14:39Z",
      "diff_hunk" : "@@ -513,7 +541,23 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314790802",
      "id" : 314790802,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc5MDgwMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 551,
      "original_position" : 94,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314790802",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314792223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314792223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove SyncTransaction for conflicted txn in CWallet::BlockConnected\" (0e3212ae85c7cf1eb6a8d937ac67d6822f624175)\r\n\r\nI don't think I understand this change. Commit description suggests why it is ok, but I don't understand what motivates it. Is it just cleanup? Is it maybe a minor bugfix, or needed for a future change?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T16:18:27Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314792223",
      "id" : 314792223,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc5MjIyMw==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 1418,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314792223",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "With these changes, but even before, `nIndex` never referred directly to a block height. When set at -1, it's interpreted as a magic value meaning the `hashBlock` is one of the deepest conflicting tx. This PR intents to scope this logic only to serialization/deserialization.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:42:28Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822059",
      "id" : 314822059,
      "in_reply_to_id" : 314650144,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMjA1OQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276081238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes see comment on top of `TxConfirmation`, should be improved ?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:44:12Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822720",
      "id" : 314822720,
      "in_reply_to_id" : 314648430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMjcyMA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 479,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276082091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822720",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314823204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314823204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you mean here by moving this backwards compatibility feature entirely to the serialization code ? If changes are right this logic should only lived in serialization code now. ",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:45:34Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314823204",
      "id" : 314823204,
      "in_reply_to_id" : 314649394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMzIwNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276082742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314823204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314824365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314824365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed for now, I've added it for further changes were ABANDON state was dual-set with other states, but drop if for now, would have been too big changes at once.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:48:40Z",
      "diff_hunk" : "@@ -607,10 +651,14 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_state.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_state.state = CWalletTx::ABANDONED; }\n+    bool isConflicted() const { return tx_state.state == CWalletTx::CONFLICTED; }\n+    void setConflicted() { tx_state.state = CWalletTx::CONFLICTED; }\n+    bool isUnconfirmed() const { return tx_state.state == CWalletTx::UNCONFIRMED; }\n+    void setUnconfirmed() { tx_state.state = CWalletTx::UNCONFIRMED; }\n+    bool isConfirmed() const { return tx_state.state == CWalletTx::CONFIRMED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314824365",
      "id" : 314824365,
      "in_reply_to_id" : 314683678,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNDM2NQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 660,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276084280,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314824365",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314825417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314825417"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're right that an inconsistency from my part. Corrected.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:51:09Z",
      "diff_hunk" : "@@ -513,7 +541,23 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314825417",
      "id" : 314825417,
      "in_reply_to_id" : 314790802,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNTQxNw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 551,
      "original_position" : 94,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276085453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314825417",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `nIndex` doesn't mean a block height, then why not remove the instance variable altogether? We can still (de)serialize in a backwards compatible way.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:55:03Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827034",
      "id" : 314827034,
      "in_reply_to_id" : 314650144,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNzAzNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276087488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827034",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See below, it depends on if nIndex has any meaning.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T17:55:36Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827251",
      "id" : 314827251,
      "in_reply_to_id" : 314649394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNzI1MQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276087756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827251",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314833011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314833011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Currently, `AbandonTransaction` set `nIndex` as -1 and this value is kept at serialization/deserialization. I'm not sure if it make sense for older client, because an abandoned transaction can be also confirmed/unconfirmed/conflicted at same time. Nevertheless, I've tried to keep same behavior for now, so `hashBlock` set as ABANDON_HASH is used to avoid deserialization ambiguity with conflicted.\r\n\r\nI've clarified this comment, the ABANDON_HASH one and also reset abandon txn `hashBlock` at deserialization. ABANDON_HASH should be scoped at serialization/deserialization.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T18:10:59Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314833011",
      "id" : 314833011,
      "in_reply_to_id" : 314778232,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgzMzAxMQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276095145,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314833011",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314834977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314834977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T18:16:04Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314834977",
      "id" : 314834977,
      "in_reply_to_id" : 314788614,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgzNDk3Nw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 513,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276097580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314834977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314851583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314851583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clarified in commit message that is a change in behavior where at block disconnection, previous tx state is override by UNCONFIRMED one. I think right now, we don't track at all the fact that tx has been disconnected, and that's why we don't undo conflicts, or make it hard to solve them. The only direct consequence of these changes I can think of is a user having to call abandontransaction a 2nd time if block get disconnected and transaction is not back in mempool.\r\n\r\nThis change would make easier to track conflicts, where if conflicting transaction get UNCONFIRMED, iterate on conflicted outpoints and make them free.\r\n\r\nMaybe, I can avoid update right now for UNCONFIRMED state, so a tx is born in this state but never go backward to it, and save implications for a later PR ?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T19:01:10Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314851583",
      "id" : 314851583,
      "in_reply_to_id" : 314782646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1MTU4Mw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 1240,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276118971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314851583",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314855770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314855770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated commit message. I think this redundant, as conflicts tagging logic is triggered by connection of conflicting transaction. AFAIK, it's not a bugfix but a cleanup. And as it was same issue than major commit, I bundled them together.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T19:13:57Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314855770",
      "id" : 314855770,
      "in_reply_to_id" : 314792223,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1NTc3MA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 1418,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276124371,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314855770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314858435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314858435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I think we need to keep `nIndex` at least it's used by RPCs in `WalletTxToJSON` ? Or getting it out of new `TxConfirmation` struct ? ",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T19:21:22Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314858435",
      "id" : 314858435,
      "in_reply_to_id" : 314650144,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1ODQzNQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276127735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314858435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks all for reviews, updated with comments corrected at 6cc34fc.",
      "created_at" : "2019-08-16T19:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522123948",
      "id" : 522123948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjEyMzk0OA==",
      "updated_at" : "2019-08-16T21:13:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522123948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314863840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314863840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should figure out what it means in the RPC, consider deprecating that field, and then having an explicit backwards compatible workaround.\r\n\r\nIn the backwards compatiblity tests I wrote it seems `blockindex` is absent for uncofirmned or abandoned transactions. It was `1` for a confirmed transaction.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-16T19:38:33Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314863840",
      "id" : 314863840,
      "in_reply_to_id" : 314650144,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg2Mzg0MA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 508,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276134793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314863840",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-16T21:47:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522161854",
      "id" : 522161854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjE2MTg1NA==",
      "updated_at" : "2019-08-16T21:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522161854",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314977051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314977051"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you clarify why we keep the first loop at all? Why not call `TransactionRemovedFromMempool` before `SyncTransaction` in the second loop?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-18T09:43:26Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314977051",
      "id" : 314977051,
      "in_reply_to_id" : 314792223,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3NzA1MQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 1418,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314977051",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978161"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Above this comment: `For a CONFIRMED transaction, nIndex is the position inside the block, used in merkle proofs.`\r\n\r\nThis had me confused before; I assumed it referred to a block height.\r\n\r\nThis serialization comment can be moved to the serialization code, because with this change `nIndex` is never `-1`; only `serializedIndex` is.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-18T10:16:15Z",
      "diff_hunk" : "@@ -477,16 +477,44 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978161",
      "id" : 314978161,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3ODE2MQ==",
      "original_commit_id" : "4ac5d649034585a9da96a55efe70770823729af8",
      "original_line" : 506,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978161",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978711"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`TxConfirmation tx_state` is now a confusingly named variable.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-18T10:30:35Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978711",
      "id" : 314978711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3ODcxMQ==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 4622,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979368"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can live with changing it now, but we should drop the comment then.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-18T10:48:19Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979368",
      "id" : 314979368,
      "in_reply_to_id" : 314782646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3OTM2OA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 1240,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979368",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`posInBlock` could be a good rename candidate for `nIndex`, though probably not worth making the diff bigger.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-18T11:02:58Z",
      "diff_hunk" : "@@ -1383,8 +1372,9 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n     }\n }\n \n-void CWallet::SyncTransaction(const CTransactionRef& ptx, const uint256& block_hash, int posInBlock, bool update_tx) {\n-    if (!AddToWalletIfInvolvingMe(ptx, block_hash, posInBlock, update_tx))\n+void CWallet::SyncTransaction(const CTransactionRef& ptx, CWalletTx::TxState state, const uint256& block_hash, int posInBlock, bool update_tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979956",
      "id" : 314979956,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3OTk1Ng==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 1374,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979956",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315231755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315231755"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Extended commit message, we keep the loop because set of conflicted txn isn't same as txn included in a block.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T14:11:36Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315231755",
      "id" : 315231755,
      "in_reply_to_id" : 314792223,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMTc1NQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_line" : 1418,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276586034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315231755",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315233217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315233217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh I've struggled hard on naming, `TxConfirmation` is struct with tx state + its values (block hash, position in block). If you have any better names, I'll take it :)",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T14:14:24Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315233217",
      "id" : 315233217,
      "in_reply_to_id" : 314978711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMzIxNw==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 4622,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276587922,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315233217",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315235906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315235906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved to the deserialization code!",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T14:19:29Z",
      "diff_hunk" : "@@ -477,16 +477,44 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315235906",
      "id" : 315235906,
      "in_reply_to_id" : 314978161,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzNTkwNg==",
      "original_commit_id" : "4ac5d649034585a9da96a55efe70770823729af8",
      "original_line" : 506,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276591330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315235906",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @Sjors for review, pushed some corrections on de4459c",
      "created_at" : "2019-08-19T14:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522596969",
      "id" : 522596969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjU5Njk2OQ==",
      "updated_at" : "2019-08-19T15:52:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522596969",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315245474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315245474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The variable name `tx_state` is the confusing part, because it's not a TxState",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T14:37:26Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315245474",
      "id" : 315245474,
      "in_reply_to_id" : 314978711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI0NTQ3NA==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 4622,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276603726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315245474",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315289405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315289405"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nOn the surface it seems like improved behavior to not consider a transaction conflicted or abandoned when it's in the mempool. So just removing or updating the comment above seems good for that case. If this can mark a transaction not abandoned when it's not actually in the mempool that also seems ok but might be worth noting in a comment.\r\n\r\nIdeally this commit might just be a pure refactor, and behavior changes could be left for other commits or PRs, but I think it's fine to have changes here if they're explicitly noted.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T16:01:01Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315289405",
      "id" : 315289405,
      "in_reply_to_id" : 314782646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI4OTQwNQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_line" : 1240,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315289405",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315293956"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nShould we maybe add\r\n\r\n```c++\r\n} else {\r\n    assert(wtx.tx_state.nIndex == wtxIn.tx_state.nIndex);\r\n    assert(wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock);\r\n}\r\n```\r\n\r\nMy concern is that the new behavior might be less robust than previous behavior if there is a bug in higher level code that marks a transaction as confirmed in two different blocks without marking the transaction as unconfirmed in between.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T16:11:38Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956",
      "id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI5Mzk1Ng==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315293956",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315297321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315297321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> The variable name `tx_state` is the confusing part, because it's not a TxState\r\n\r\nI think the current naming is ok, but if it I had to choose, I would probably do something like:\r\n\r\n```c++\r\nclass CWalletTx\r\n{\r\npublic:\r\n    enum Status { UNCONFIRMED, CONFIRMED, CONFLICTED, ABANDONED };\r\n    struct Confirmation {\r\n        Status status;\r\n        uint256 block_hash\r\n        int pos_in_block;\r\n    }\r\n    ...\r\n    Confirmation m_confirm;\r\n    ...\r\n};\r\n```",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T16:19:59Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315297321",
      "id" : 315297321,
      "in_reply_to_id" : 314978711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI5NzMyMQ==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 4622,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315297321",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315300924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315300924"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nIt seems more safe to reset the whole struct instead of just one member. Maybe `tx_state = TxConfirmation{};`?\r\n\r\nI think there may actually be a (theoretical) bug without this. If you unserialized an unconfirmed transaction into a CWalletTx that was _not_ unconfirmed, deserialization code would not actually update the state to unconfirmed.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T16:29:00Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315300924",
      "id" : 315300924,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMwMDkyNA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 480,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315300924",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315310345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315310345"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove SyncTransaction for conflicted txn in CWallet::BlockConnected\" (3e027c776556c3070a9c3460045a6e397b21ceb8)\r\n\r\nCan we drop these `tx_state.nIndex = 0;` assignments or set them in all cases consistently? (There is a missing assignment in the unconfirmed case). I'd have a slight preference for just dropping these and the Init() call above reset everything to default, instead of repeating same default values multiple places.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T16:51:25Z",
      "diff_hunk" : "@@ -513,7 +534,27 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with. If nIndex == -1 and hashBlock is ABANDON_HASH, it means transaction is abandoned.\n+         * In same context, an nIndex >= 0 refers to a confirmed transaction (if hashBlock set) or\n+         * unconfirmed one. Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            tx_state.hashBlock = uint256();\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315310345",
      "id" : 315310345,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMxMDM0NQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 552,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315310345",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315323037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315323037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Replaced by `tx_conf` on f9f4926",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-19T17:22:56Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315323037",
      "id" : 315323037,
      "in_reply_to_id" : 314978711,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMyMzAzNw==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_line" : 4622,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276701856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315323037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315810816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315810816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Change to `SetMerkleBranch()`?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:23:39Z",
      "diff_hunk" : "@@ -249,8 +249,9 @@ BOOST_FIXTURE_TEST_CASE(coin_mark_dirty_immature_credit, TestChain100Setup)\n     LockAssertion lock(::cs_main);\n     LOCK(wallet.cs_wallet);\n \n-    wtx.hashBlock = ::ChainActive().Tip()->GetBlockHash();\n-    wtx.nIndex = 0;\n+    wtx.tx_conf.hashBlock = ::ChainActive().Tip()->GetBlockHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315810816",
      "id" : 315810816,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMDgxNg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 252,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315810816",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well strictly speaking, given that Init set to unconfirmed, it would be more wrongly updating to confirmed. But if hash is set IMO we have database corruption or bug in higher tracking logic. Updated serialization logic with this and beneath to make it more robust.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:27:22Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812394",
      "id" : 315812394,
      "in_reply_to_id" : 315300924,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMjM5NA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 480,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277323357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812394",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:27:28Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812435",
      "id" : 315812435,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMjQzNQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277323410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315821088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315821088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Change to `SetMerkleBranch()`?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:46:57Z",
      "diff_hunk" : "@@ -384,8 +384,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Something wrong with merkleblock\");\n     }\n \n-    wtx.nIndex = txnIndex;\n-    wtx.hashBlock = merkleBlock.header.GetHash();\n+    wtx.tx_conf.nIndex = txnIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315821088",
      "id" : 315821088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyMTA4OA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 387,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315821088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315825109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315825109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this whole comment can be removed (since you're removing the `SyncTransaction()` call for the conflicting transactions). You could also move the `for (const CTransactionRef& ptx : vtxConflicted)` loop to below the `for (size_t i = 0; i < block.vtx.size(); i++)`, which seems more natural.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:55:44Z",
      "diff_hunk" : "@@ -1425,11 +1414,10 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315825109",
      "id" : 315825109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNTEwOQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 1419,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315825109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micronit: place this at the top of the function (so the order of logic matches the order of the arguments)",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:57:44Z",
      "diff_hunk" : "@@ -4628,21 +4616,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_conf.hashBlock = block_hash;\n \n     // set the position of the transaction in the block\n-    nIndex = posInBlock;\n+    tx_conf.nIndex = posInBlock;\n+\n+    // Update tx state",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826030",
      "id" : 315826030,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNjAzMA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 4627,
      "original_position" : 173,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: could join this and the line below to one line to match current code style guide.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T17:58:24Z",
      "diff_hunk" : "@@ -4628,21 +4616,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_conf.hashBlock = block_hash;\n \n     // set the position of the transaction in the block\n-    nIndex = posInBlock;\n+    tx_conf.nIndex = posInBlock;\n+\n+    // Update tx state\n+    tx_conf.state = state;\n }\n \n int CWalletTx::GetDepthInMainChain(interfaces::Chain::Lock& locked_chain) const\n {\n-    if (hashUnset())\n+    if (isUnconfirmed() || isAbandoned())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826312",
      "id" : 315826312,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNjMxMg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 4638,
      "original_position" : 180,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315828072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315828072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "grammar nits:\r\n\r\n- s/start in the UNCONFIRMED/start as UNCONFIRMED/\r\n- s/they rollback/they roll back/\r\n- s/we update [...] as CONFLICTED/we update [...] to CONFLICTED/\r\n- s/In tx isn't confirmed/If tx isn't confirmed/\r\n- s/switch it to ABANDONED thanks to the abandontransaction call/switch it to ABANDONED by using the abandontransaction call/",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:02:20Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315828072",
      "id" : 315828072,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyODA3Mg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 485,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315828072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I don't think `block index` is well understood to mean 'the transaction's position in the block'. I think explicitly calling it 'a pair of {block hash, tx index in block}' would be clearer.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:05:13Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829382",
      "id" : 315829382,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyOTM4Mg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 500,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829382",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is right. When state is `CONFLICTED`, `nIndex` is set to 0",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:05:43Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829607",
      "id" : 315829607,
      "line" : 502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyOTYwNw==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 502,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 53,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829607",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: in the function calls, `state` comes before `hashBlock` and `nIndex`. I suggest you do the same here for consistency.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:07:07Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        int nIndex = 0;\n+        TxState state = UNCONFIRMED;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830180",
      "id" : 315830180,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMDE4MA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 507,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830488"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: code style guide says that data members should be named `m_...`",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:07:51Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        int nIndex = 0;\n+        TxState state = UNCONFIRMED;\n+    };\n+\n+    TxConfirmation tx_conf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830488",
      "id" : 315830488,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMDQ4OA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 510,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830488",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I'd prefer to not have these ternary operators in this very long line, since it makes it very difficult to read. I think it'd be clearer if you instantiated two local variables `serialized_hash` and `serialized_index`, and then use them in this serialization line.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:10:05Z",
      "diff_hunk" : "@@ -502,7 +523,7 @@ class CWalletTx\n         std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char = false; //!< Used to be fSpent\n-        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n+        s << tx << (isAbandoned() ? ABANDON_HASH : tx_conf.hashBlock) << dummy_vector1 << ((isAbandoned() || isConflicted()) ? -1 : tx_conf.nIndex) << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831474",
      "id" : 315831474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMTQ3NA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 526,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831790"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: should this be 'any in-wallet ancestor'?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:10:54Z",
      "diff_hunk" : "@@ -513,7 +534,27 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_conf.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831790",
      "id" : 315831790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMTc5MA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 541,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831790",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315840155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315840155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider updating this function to also zero out `nIndex` and `hashBlock`",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T18:30:00Z",
      "diff_hunk" : "@@ -607,10 +648,12 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_conf.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_conf.state = CWalletTx::ABANDONED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315840155",
      "id" : 315840155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0MDE1NQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 652,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315840155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 5ef9e95 with @ryanofsky comments. Main changes are a more robust serialization logic and assert for already present txn in AddToWallet. This last one flagged a misbehavior of AddToWallet in ComputeTimeSmart (see commit message), so was worth adding.",
      "created_at" : "2019-08-20T18:57:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523150156",
      "id" : 523150156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzE1MDE1Ng==",
      "updated_at" : "2019-08-20T18:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523150156",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315869597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315869597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: this function is badly named (and has been since 391dff16fe9ace90fc0f3308a5c63c453370e713 _Do not store Merkle branches in the wallet._). Now would be a good time to rename it to `SetTxConf()` or similar.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T19:42:34Z",
      "diff_hunk" : "@@ -590,7 +629,7 @@ class CWalletTx\n     // in place.\n     std::set<uint256> GetConflicts() const NO_THREAD_SAFETY_ANALYSIS;\n \n-    void SetMerkleBranch(const uint256& block_hash, int posInBlock);\n+    void SetMerkleBranch(Status status, const uint256& block_hash, int posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315869597",
      "id" : 315869597,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg2OTU5Nw==",
      "original_commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "original_line" : 632,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315869597",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just nits so far. Still planning on doing a more thorough review.",
      "created_at" : "2019-08-20T19:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523167191",
      "id" : 523167191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzE2NzE5MQ==",
      "updated_at" : "2019-08-20T19:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523167191",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315883326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(re: https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956)\r\n\r\nI don't like these new asserts. I think they could be triggered under the following scenario:\r\n\r\n1. a wallet tx is confirmed in a block\r\n2. the wallet is shut down\r\n3. the block chain re-orgs and the tx is included in a different block\r\n4. the wallet file is loaded on a sync'ed node\r\n\r\nAll this code is trying to do is update an existing wallet tx's `Confirmation` status with the new `Confirmation` status. I think we can just change it to:\r\n\r\n`if (wtxIn.tx_state.state != wtx.tx_state.state || wtxIn.tx_state.hashBlock != wtx.tx_state.hashBlock || wtxIn.tx_state.nIndex != wtx.tx_state.nIndex) {`",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-20T20:17:44Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326",
      "id" : 315883326,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg4MzMyNg==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277414677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315883326",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-08-21T09:13:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523371207",
      "id" : 523371207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzM3MTIwNw==",
      "updated_at" : "2019-08-21T09:13:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523371207",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316218507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316218507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes that's right, I rewrote comment to new code without thinking it wasn't relevant anymore",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T14:30:49Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316218507",
      "id" : 316218507,
      "in_reply_to_id" : 315829607,
      "line" : 502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIxODUwNw==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 502,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 53,
      "pull_request_review_id" : 277837983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316218507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316219351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316219351"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes already corrected at 5ef9e95",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T14:32:21Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        int nIndex = 0;\n+        TxState state = UNCONFIRMED;\n+    };\n+\n+    TxConfirmation tx_conf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316219351",
      "id" : 316219351,
      "in_reply_to_id" : 315830488,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIxOTM1MQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 510,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277839131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316219351",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316224229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316224229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated, just to be sure a 'in-wallet dependency' is relative to a parent tx on which it relies to be valid ?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T14:41:01Z",
      "diff_hunk" : "@@ -513,7 +534,27 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_conf.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316224229",
      "id" : 316224229,
      "in_reply_to_id" : 315831790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIyNDIyOQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 541,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277845422,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316224229",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316231071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316231071"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If these new asserts get triggered it would mean we have bugs in higher level code, but yes aborting maybe too strong given that this kind of bugs could be due to some likely API misuse in RPCs ? What's about logging them with a warning ?\r\n\r\nI'm not in favor of proposed alternative as it may cause hidden inconsistencies if these aforementioned high level bugs are present ",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T14:52:46Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316231071",
      "id" : 316231071,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIzMTA3MQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277854386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316231071",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 63596cf with @jnewbery nits and comments addressed. Thanks for the review!\r\n\r\nStill need to decide on https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316231071 which spotted this https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523150156",
      "created_at" : "2019-08-21T15:19:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523505122",
      "id" : 523505122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzUwNTEyMg==",
      "updated_at" : "2019-08-21T15:34:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523505122",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316284578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316284578"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't feel strongly, but I think asserts are way to go because we should not allow bugs and uncertainty in wallet event processing code. It's hard for me to imagine a scenario where it would be a win to use defensive programming in a place like this.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T16:35:15Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316284578",
      "id" : 316284578,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjI4NDU3OA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277922829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316284578",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316291670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316291670"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx status in a Confirmation struct\" (e591ef7a796d1ca164e791862e20a31b801fdf1b)\r\n\r\nThis is a little unclear, maybe replace \"Block disconnection override an abandoned tx as unconfirmed\" with \"At block disconnection, this will change an abandoned transaction to be unconfirmed, whether or not the transaction is added back to the mempool.\"\r\n\r\nIt might be better to move this comment to block disconnection code, since it really describing behavior of the caller, not this code directly, so it's easy to imagine it becoming out of date.\r\n\r\nAlso it might be good if the comment said whether this is a real concern, or just a quirk, or how it might be addressed in the future (updating the state conditionally, adding a stickier abandoned state)?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T16:51:44Z",
      "diff_hunk" : "@@ -1248,9 +1240,9 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n \n             CWalletTx wtx(this, ptx);\n \n-            // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            // Block disconnection override an abandoned tx as unconfirmed\n+            // which means user may have to call abandontransaction again\n+            wtx.SetConf(status, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316291670",
      "id" : 316291670,
      "line" : 1256,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjI5MTY3MA==",
      "original_commit_id" : "e591ef7a796d1ca164e791862e20a31b801fdf1b",
      "original_line" : 1256,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 78,
      "pull_request_review_id" : 277931748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316291670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316292664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316292664"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ryanofsky - do you agree that the scenario I describe above would trigger the assert?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T16:54:18Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316292664",
      "id" : 316292664,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjI5MjY2NA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277933042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316292664",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316297799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316297799"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx status in a Confirmation struct\" (e591ef7a796d1ca164e791862e20a31b801fdf1b)\r\n\r\nMaybe add a doxygen comment for hashBlock saying it's set to the block of the deepest conflicting transaction when the wallet transaction is in the CONFLICTED state. This information seems to have been lost in latest change to the comments above.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T17:06:27Z",
      "diff_hunk" : "@@ -477,16 +477,36 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        m_confirm = Confirmation{};\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start as UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they roll back to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * If tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * by using the abandontransaction call. This last status may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum Status {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* Confirmation includes tx status and a pair of {block hash/tx index in block} at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet.\n      */\n-    int nIndex;\n+    struct Confirmation {\n+        Status status = UNCONFIRMED;\n+        uint256 hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316297799",
      "id" : 316297799,
      "line" : 506,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjI5Nzc5OQ==",
      "original_commit_id" : "e591ef7a796d1ca164e791862e20a31b801fdf1b",
      "original_line" : 506,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 58,
      "pull_request_review_id" : 277931748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316297799",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316355243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316355243"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I think you've removed too much now. It's still useful to know that `hashBlock` refers to the block hash of the deepest conflicting transaction.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T19:07:55Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316355243",
      "id" : 316355243,
      "in_reply_to_id" : 315829607,
      "line" : 502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjM1NTI0Mw==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 502,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 53,
      "pull_request_review_id" : 278012668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316355243",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316359216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316359216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, I didn't realize https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326 was describing a specific scenario, not just a list of possible events. I could see that scenerio triggering these asserts, and making the change you suggested an improvement and bugfix. It is likely some change is needed here, and the suggested one seems ok.\r\n\r\nMore ideally, though, it'd be really nice to have a functional test that triggers these asserts, and instead of hiding the problem of an unconfirmed transaction being left in the CONFIRMED state after a reorg, there would be code on startup that marks reorged transactions UNCONFIRMED before rescanning (could basically be the same code from #15931 that looks up block heights on startup).\r\n\r\nNice catch though (assuming this a bug)!\r\n\r\n",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T19:18:19Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316359216",
      "id" : 316359216,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjM1OTIxNg==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 278017951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316359216",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316366261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316366261"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I didn't realize #16624 (comment) was describing a specific scenario\r\n\r\nsorry - changed my unordered list to an ordered list and updated wording to make this clearer.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T19:36:15Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316366261",
      "id" : 316366261,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjM2NjI2MQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 278026824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316366261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316366957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316366957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> there would be code on startup that marks reorged transactions UNCONFIRMED before rescanning\r\n\r\nYes - I think if the wallet rescans from block at height x, it should first change all transactions that are CONFIRMED at height >x to UNCOFIRMED.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-21T19:38:16Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316366957",
      "id" : 316366957,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjM2Njk1Nw==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 278027777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316366957",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316893229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316893229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes I've tried to combine abandon state with every other one but would run into issue. IMO, would be better to rework abandontransaction to something like abandoncoins, because confirmation are on the transaction-level, but conflict/abandon at the output one",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-22T21:29:27Z",
      "diff_hunk" : "@@ -1248,9 +1240,9 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n \n             CWalletTx wtx(this, ptx);\n \n-            // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            // Block disconnection override an abandoned tx as unconfirmed\n+            // which means user may have to call abandontransaction again\n+            wtx.SetConf(status, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316893229",
      "id" : 316893229,
      "in_reply_to_id" : 316291670,
      "line" : 1256,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjg5MzIyOQ==",
      "original_commit_id" : "e591ef7a796d1ca164e791862e20a31b801fdf1b",
      "original_line" : 1256,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 78,
      "pull_request_review_id" : 278697431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316893229",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316893298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316893298"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reestablished",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-22T21:29:39Z",
      "diff_hunk" : "@@ -477,16 +477,36 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        m_confirm = Confirmation{};\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start as UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they roll back to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * If tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * by using the abandontransaction call. This last status may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum Status {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* Confirmation includes tx status and a pair of {block hash/tx index in block} at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet.\n      */\n-    int nIndex;\n+    struct Confirmation {\n+        Status status = UNCONFIRMED;\n+        uint256 hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316893298",
      "id" : 316893298,
      "in_reply_to_id" : 316297799,
      "line" : 506,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjg5MzI5OA==",
      "original_commit_id" : "e591ef7a796d1ca164e791862e20a31b801fdf1b",
      "original_line" : 506,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 58,
      "pull_request_review_id" : 278697501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316893298",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316894190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316894190"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I let asserts and move some bits from #15931 to transition status to UNCONFIRMED if blockHash not anymore in chain. Also added a wallet_reorgsrestore test with aforementioned scenario, without new code it triggers asserts ",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-22T21:32:26Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r316894190",
      "id" : 316894190,
      "in_reply_to_id" : 315293956,
      "line" : 1129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjg5NDE5MA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_line" : 1129,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 278698625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316894190",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 4fc221d with new commit and test to solve https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326",
      "created_at" : "2019-08-22T21:33:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524086380",
      "id" : 524086380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDA4NjM4MA==",
      "updated_at" : "2019-08-23T02:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524086380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis machines 5 and 8 will fail until the next rebase (see #16561).",
      "created_at" : "2019-08-23T10:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524269080",
      "id" : 524269080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDI2OTA4MA==",
      "updated_at" : "2019-08-23T10:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524269080",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis should run the latest version and a rebase is not required.\r\n\r\nHave you tried running the tests locally with `./configure --enable-debug`?",
      "created_at" : "2019-08-23T17:41:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524401895",
      "id" : 524401895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQwMTg5NQ==",
      "updated_at" : "2019-08-23T17:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524401895",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n./out/x86_64-unknown-linux-gnu/bin/test_bitcoin -t wallet_tests\r\nRunning 9 test cases...\r\nAssertion failed: detected inconsistent lock order at sync.cpp:121, details in debug log.\r\nunknown location(0): fatal error: in \"wallet_tests/ComputeTimeSmart\": signal: SIGABRT (application abort requested)\r\nwallet/test/wallet_tests.cpp(303): last checkpoint\r\n",
      "created_at" : "2019-08-23T17:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524404798",
      "id" : 524404798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQwNDc5OA==",
      "updated_at" : "2019-08-23T17:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524404798",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n\r\n\r\n2019-08-23T17:36:07Z Bitcoin Core version v0.18.99.0-unk (debug build)\r\n2019-08-23T17:36:07Z Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2019-08-23T17:36:07Z Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2019-08-23T17:36:07Z Opened LevelDB successfully\r\n2019-08-23T17:36:07Z Using obfuscation key for /tmp/test_common_Bitcoin Core/1566581767_852108204/blocks/index: 0000000000000000\r\n2019-08-23T17:36:07Z Opened LevelDB successfully\r\n2019-08-23T17:36:07Z Wrote new obfuscate key for /tmp/test_common_Bitcoin Core/1566581767_852108204/chainstate: ab46c080088c71f8\r\n2019-08-23T17:36:07Z Using obfuscation key for /tmp/test_common_Bitcoin Core/1566581767_852108204/chainstate: ab46c080088c71f8\r\n2019-08-23T17:36:07Z Pre-allocating up to position 0x1000000 in blk00000.dat\r\n2019-08-23T17:36:07Z UpdateTip: new best=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f height=0 version=0x00000001 log2_work=32.000022 tx=1 date='2009-01-03T18:15:05Z' progress=0.000000 cache=0.0MiB(0txo)\r\n2019-08-23T17:36:07Z ERROR: DeserializeFileDB: Failed to open file /tmp/test_common_Bitcoin Core/1566581767_852108204/banlist.dat\r\n2019-08-23T17:36:07Z Invalid or missing banlist.dat; recreating\r\n2019-08-23T17:36:07Z [default wallet] Wallet File Version = 10500\r\n2019-08-23T17:36:07Z [default wallet] Keys: 0 plaintext, 0 encrypted, 0 w/ metadata, 0 total. Unknown wallet records: 0\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z) POTENTIAL DEADLOCK DETECTED\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z) Previous lock order was:\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z)  (1) wallet.cs_wallet wallet/test/wallet_tests.cpp:283 (in thread )\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z)  (1) cs_wallet wallet/wallet.cpp:1091 (in thread )\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z)  (2) cs_main interfaces/chain.cpp:255 (in thread )\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z) Current lock order is:\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z)  (2) cs_main interfaces/chain.cpp:245 (in thread )\r\n2019-08-23T17:36:07Z (mocktime: 1970-01-01T00:01:40Z)  (1) cs_wallet wallet/wallet.cpp:3352 (in thread )\r\n",
      "created_at" : "2019-08-23T17:53:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524405428",
      "id" : 524405428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQwNTQyOA==",
      "updated_at" : "2019-08-23T17:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524405428",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at be2d6d3 with a lock order correction. Thanks to @MarcoFalke for spotting #16700 and finding the root issue with failures",
      "created_at" : "2019-08-23T20:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-524444343",
      "id" : 524444343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDQ0NDM0Mw==",
      "updated_at" : "2019-08-23T20:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524444343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318787529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318787529"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Modify wallet tx status if has been reorged out\" (73b7aa0af12c1110055c0d0c82415f7b92347217)\r\n\r\nIt'd be possible to avoid some repetition in this commit by adding a LockChain method instead of a HasChain method:\r\n\r\n```c++\r\nstd::unique_ptr<interfaces::Chain::Lock> LockChain() { return m_chain ? m_chain->lock() : nullptr; }\r\n```\r\n\r\nThis would also allow shortening the \"Even if we don't use this lock...\" comments by dropping the \"If wallet doesn't have a chain...\" parts.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-28T20:54:14Z",
      "diff_hunk" : "@@ -946,6 +946,9 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     bool IsLocked() const;\n     bool Lock();\n \n+    /** Interface to assert chain access */\n+    bool hasChain() const { return m_chain != nullptr; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318787529",
      "id" : 318787529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODc4NzUyOQ==",
      "original_commit_id" : "73b7aa0af12c1110055c0d0c82415f7b92347217",
      "original_line" : 950,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 281096881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318787529",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318793473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318793473"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Modify wallet tx status if has been reorged out\" (73b7aa0af12c1110055c0d0c82415f7b92347217)\r\n\r\nDo you think that instead of calling getBlockHeight() and setUnconfirmed() immediately in LoadToWallet as individual transactions are loaded, the calls could happen later after transactions are loaded, in a loop over mapWallet from LoadWallet or CreateWalletFromFile? It seems like this could make locking simpler.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-28T21:08:10Z",
      "diff_hunk" : "@@ -1172,8 +1172,22 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     return true;\n }\n \n-void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n-{\n+void CWallet::LoadToWallet(CWalletTx& wtxIn)\n+{\n+    // If wallet doesn't have a chain (e.g wallet-tool), lock should have not\n+    // be taken.\n+    if (hasChain()) {\n+        // If tx hasn't been reorged out of chain while wallet being shutdown\n+        // change tx status to UNCONFIRMED and reset hashBlock/nIndex.\n+        if (!wtxIn.m_confirm.hashBlock.IsNull()) {\n+            auto locked_chain = chain().lock();\n+            if (!locked_chain->getBlockHeight(wtxIn.m_confirm.hashBlock)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318793473",
      "id" : 318793473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODc5MzQ3Mw==",
      "original_commit_id" : "73b7aa0af12c1110055c0d0c82415f7b92347217",
      "original_line" : 1184,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 281096881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318793473",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318794585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318794585"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a test wallet_reorgsrestore\" (be2d6d3cd1421d66871396eeef5f6e30b0841889)\r\n\r\nReally nice to have this test!",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-28T21:11:10Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test tx status in case of reorgs while wallet being shutdown.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318794585",
      "id" : 318794585,
      "line" : 6,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODc5NDU4NQ==",
      "original_commit_id" : "be2d6d3cd1421d66871396eeef5f6e30b0841889",
      "original_line" : 6,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_reorgsrestore.py",
      "position" : 6,
      "pull_request_review_id" : 281096881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318794585",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318795216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318795216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a test wallet_reorgsrestore\" (be2d6d3cd1421d66871396eeef5f6e30b0841889)\r\n\r\nspelling longest",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-28T21:12:50Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test tx status in case of reorgs while wallet being shutdown.\n+\n+Wallet txn status rely on block connection/disconnection for its\n+accuracy. In case of reorgs happening while wallet being shutdown\n+block updates are not going to be received. At wallet loading, we\n+check against chain if confirmed txn are still in chain and change\n+their status if block in which they have been included has been\n+disconnected.\n+\"\"\"\n+\n+from decimal import Decimal\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        connect_nodes,\n+        disconnect_nodes,\n+)\n+\n+class ReorgsRestoreTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Send a tx from which to conflict outputs later\n+        txid_conflict_from = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Disconnect node1 from others to reorg its chain later\n+        disconnect_nodes(self.nodes[0], 1)\n+        disconnect_nodes(self.nodes[1], 2)\n+        connect_nodes(self.nodes[0], 2)\n+\n+        # Send a tx to be unconfirmed later\n+        txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        tx = self.nodes[0].gettransaction(txid)\n+        self.nodes[0].generate(4)\n+        tx_before_reorg = self.nodes[0].gettransaction(txid)\n+        assert_equal(tx_before_reorg[\"confirmations\"], 4)\n+\n+        # Disconnect node0 from node2 to broadcast a conflict on their respective chains\n+        disconnect_nodes(self.nodes[0], 2)\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs = []\n+        inputs.append({\"txid\": txid_conflict_from, \"vout\": nA})\n+        outputs_1 = {}\n+        outputs_2 = {}\n+\n+        # Create a conflicted tx broadcast on node0 chain and conflicting tx broadcast on node1 chain. Both spend from txid_conflict_from\n+        outputs_1[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_2[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_1))\n+        conflicting = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_2))\n+\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[0].generate(1)\n+        conflicting_txid = self.nodes[2].sendrawtransaction(conflicting[\"hex\"])\n+        self.nodes[2].generate(3)\n+\n+        # Reconnect node0 and node2 and check that conflicted_txid is effectively conflicted\n+        connect_nodes(self.nodes[0], 2)\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid)\n+        assert_equal(conflicted[\"confirmations\"], -3)\n+        assert_equal(conflicted[\"walletconflicts\"][0], conflicting[\"txid\"])\n+\n+        # Node0 wallet is shutdown\n+        self.stop_node(0)\n+        self.start_node(0)\n+\n+        # The block chain re-orgs and the tx is included in a different block\n+        self.nodes[1].generate(9)\n+        self.nodes[1].sendrawtransaction(tx[\"hex\"])\n+        self.nodes[1].generate(1)\n+        self.nodes[1].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[1].generate(1)\n+\n+        # Node0 wallet file is loaded on longuest sync'ed node1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318795216",
      "id" : 318795216,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODc5NTIxNg==",
      "original_commit_id" : "be2d6d3cd1421d66871396eeef5f6e30b0841889",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/functional/wallet_reorgsrestore.py",
      "position" : null,
      "pull_request_review_id" : 281096881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318795216",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318797000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318797000"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a test wallet_reorgsrestore\" (be2d6d3cd1421d66871396eeef5f6e30b0841889)\r\n\r\nNot sure, but maybe it would be possible to use return values from generate to verify transactions are in the expected blocks, to be able to check more equality instead of just inequality. On the other hand, maybe the test is more robust this way, so feel free to leave this alone.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-28T21:17:37Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test tx status in case of reorgs while wallet being shutdown.\n+\n+Wallet txn status rely on block connection/disconnection for its\n+accuracy. In case of reorgs happening while wallet being shutdown\n+block updates are not going to be received. At wallet loading, we\n+check against chain if confirmed txn are still in chain and change\n+their status if block in which they have been included has been\n+disconnected.\n+\"\"\"\n+\n+from decimal import Decimal\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        connect_nodes,\n+        disconnect_nodes,\n+)\n+\n+class ReorgsRestoreTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Send a tx from which to conflict outputs later\n+        txid_conflict_from = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Disconnect node1 from others to reorg its chain later\n+        disconnect_nodes(self.nodes[0], 1)\n+        disconnect_nodes(self.nodes[1], 2)\n+        connect_nodes(self.nodes[0], 2)\n+\n+        # Send a tx to be unconfirmed later\n+        txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        tx = self.nodes[0].gettransaction(txid)\n+        self.nodes[0].generate(4)\n+        tx_before_reorg = self.nodes[0].gettransaction(txid)\n+        assert_equal(tx_before_reorg[\"confirmations\"], 4)\n+\n+        # Disconnect node0 from node2 to broadcast a conflict on their respective chains\n+        disconnect_nodes(self.nodes[0], 2)\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs = []\n+        inputs.append({\"txid\": txid_conflict_from, \"vout\": nA})\n+        outputs_1 = {}\n+        outputs_2 = {}\n+\n+        # Create a conflicted tx broadcast on node0 chain and conflicting tx broadcast on node1 chain. Both spend from txid_conflict_from\n+        outputs_1[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_2[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_1))\n+        conflicting = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_2))\n+\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[0].generate(1)\n+        conflicting_txid = self.nodes[2].sendrawtransaction(conflicting[\"hex\"])\n+        self.nodes[2].generate(3)\n+\n+        # Reconnect node0 and node2 and check that conflicted_txid is effectively conflicted\n+        connect_nodes(self.nodes[0], 2)\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid)\n+        assert_equal(conflicted[\"confirmations\"], -3)\n+        assert_equal(conflicted[\"walletconflicts\"][0], conflicting[\"txid\"])\n+\n+        # Node0 wallet is shutdown\n+        self.stop_node(0)\n+        self.start_node(0)\n+\n+        # The block chain re-orgs and the tx is included in a different block\n+        self.nodes[1].generate(9)\n+        self.nodes[1].sendrawtransaction(tx[\"hex\"])\n+        self.nodes[1].generate(1)\n+        self.nodes[1].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[1].generate(1)\n+\n+        # Node0 wallet file is loaded on longuest sync'ed node1\n+        self.stop_node(1)\n+        self.nodes[0].backupwallet(os.path.join(self.nodes[0].datadir, 'wallet.bak'))\n+        shutil.copyfile(os.path.join(self.nodes[0].datadir, 'wallet.bak'), os.path.join(self.nodes[1].datadir, 'regtest', 'wallet.dat'))\n+        self.start_node(1)\n+        tx_after_reorg = self.nodes[1].gettransaction(txid)\n+        # Check that normal confirmed tx is confirmed again but with different blockhash\n+        assert_equal(tx_after_reorg[\"confirmations\"], 2)\n+        assert(tx_before_reorg[\"blockhash\"] != tx_after_reorg[\"blockhash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r318797000",
      "id" : 318797000,
      "line" : 98,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODc5NzAwMA==",
      "original_commit_id" : "be2d6d3cd1421d66871396eeef5f6e30b0841889",
      "original_line" : 98,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/wallet_reorgsrestore.py",
      "position" : 98,
      "pull_request_review_id" : 281096881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318797000",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319152916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319152916"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes took this one, make it easier",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-29T16:07:10Z",
      "diff_hunk" : "@@ -946,6 +946,9 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     bool IsLocked() const;\n     bool Lock();\n \n+    /** Interface to assert chain access */\n+    bool hasChain() const { return m_chain != nullptr; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319152916",
      "id" : 319152916,
      "in_reply_to_id" : 318787529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTE1MjkxNg==",
      "original_commit_id" : "73b7aa0af12c1110055c0d0c82415f7b92347217",
      "original_line" : 950,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 281567228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319152916",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 442a87c with some @ryanofsky comments to take lock smoother. \r\nNote, also fix a race condition in the new wallet_reorgsrestore, were order of block announcements after block connection was making test successful or not.",
      "created_at" : "2019-08-29T16:07:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-526254932",
      "id" : 526254932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNjI1NDkzMg==",
      "updated_at" : "2019-08-29T16:07:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/526254932",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319153504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319153504"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the same effect is reached with confirmations depth assertations?",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-29T16:08:27Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test tx status in case of reorgs while wallet being shutdown.\n+\n+Wallet txn status rely on block connection/disconnection for its\n+accuracy. In case of reorgs happening while wallet being shutdown\n+block updates are not going to be received. At wallet loading, we\n+check against chain if confirmed txn are still in chain and change\n+their status if block in which they have been included has been\n+disconnected.\n+\"\"\"\n+\n+from decimal import Decimal\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        connect_nodes,\n+        disconnect_nodes,\n+)\n+\n+class ReorgsRestoreTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Send a tx from which to conflict outputs later\n+        txid_conflict_from = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Disconnect node1 from others to reorg its chain later\n+        disconnect_nodes(self.nodes[0], 1)\n+        disconnect_nodes(self.nodes[1], 2)\n+        connect_nodes(self.nodes[0], 2)\n+\n+        # Send a tx to be unconfirmed later\n+        txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        tx = self.nodes[0].gettransaction(txid)\n+        self.nodes[0].generate(4)\n+        tx_before_reorg = self.nodes[0].gettransaction(txid)\n+        assert_equal(tx_before_reorg[\"confirmations\"], 4)\n+\n+        # Disconnect node0 from node2 to broadcast a conflict on their respective chains\n+        disconnect_nodes(self.nodes[0], 2)\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs = []\n+        inputs.append({\"txid\": txid_conflict_from, \"vout\": nA})\n+        outputs_1 = {}\n+        outputs_2 = {}\n+\n+        # Create a conflicted tx broadcast on node0 chain and conflicting tx broadcast on node1 chain. Both spend from txid_conflict_from\n+        outputs_1[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_2[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_1))\n+        conflicting = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_2))\n+\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[0].generate(1)\n+        conflicting_txid = self.nodes[2].sendrawtransaction(conflicting[\"hex\"])\n+        self.nodes[2].generate(3)\n+\n+        # Reconnect node0 and node2 and check that conflicted_txid is effectively conflicted\n+        connect_nodes(self.nodes[0], 2)\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid)\n+        assert_equal(conflicted[\"confirmations\"], -3)\n+        assert_equal(conflicted[\"walletconflicts\"][0], conflicting[\"txid\"])\n+\n+        # Node0 wallet is shutdown\n+        self.stop_node(0)\n+        self.start_node(0)\n+\n+        # The block chain re-orgs and the tx is included in a different block\n+        self.nodes[1].generate(9)\n+        self.nodes[1].sendrawtransaction(tx[\"hex\"])\n+        self.nodes[1].generate(1)\n+        self.nodes[1].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[1].generate(1)\n+\n+        # Node0 wallet file is loaded on longuest sync'ed node1\n+        self.stop_node(1)\n+        self.nodes[0].backupwallet(os.path.join(self.nodes[0].datadir, 'wallet.bak'))\n+        shutil.copyfile(os.path.join(self.nodes[0].datadir, 'wallet.bak'), os.path.join(self.nodes[1].datadir, 'regtest', 'wallet.dat'))\n+        self.start_node(1)\n+        tx_after_reorg = self.nodes[1].gettransaction(txid)\n+        # Check that normal confirmed tx is confirmed again but with different blockhash\n+        assert_equal(tx_after_reorg[\"confirmations\"], 2)\n+        assert(tx_before_reorg[\"blockhash\"] != tx_after_reorg[\"blockhash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319153504",
      "id" : 319153504,
      "in_reply_to_id" : 318797000,
      "line" : 98,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTE1MzUwNA==",
      "original_commit_id" : "be2d6d3cd1421d66871396eeef5f6e30b0841889",
      "original_line" : 98,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/wallet_reorgsrestore.py",
      "position" : 98,
      "pull_request_review_id" : 281567969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:08:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319153504",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319154771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319154771"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It could and would make lock less a pain until #16426 but after it we will have the update status code lost in the middle of CreateWalletFromFile...not sure if it's great to ease understanding of wallet bootstrap which is already intertwined a lot",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-29T16:11:16Z",
      "diff_hunk" : "@@ -1172,8 +1172,22 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     return true;\n }\n \n-void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n-{\n+void CWallet::LoadToWallet(CWalletTx& wtxIn)\n+{\n+    // If wallet doesn't have a chain (e.g wallet-tool), lock should have not\n+    // be taken.\n+    if (hasChain()) {\n+        // If tx hasn't been reorged out of chain while wallet being shutdown\n+        // change tx status to UNCONFIRMED and reset hashBlock/nIndex.\n+        if (!wtxIn.m_confirm.hashBlock.IsNull()) {\n+            auto locked_chain = chain().lock();\n+            if (!locked_chain->getBlockHeight(wtxIn.m_confirm.hashBlock)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319154771",
      "id" : 319154771,
      "in_reply_to_id" : 318793473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTE1NDc3MQ==",
      "original_commit_id" : "73b7aa0af12c1110055c0d0c82415f7b92347217",
      "original_line" : 1184,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 281569563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T16:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319154771",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319175528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319175528"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a test wallet_reorgsrestore\" (442a87cc0ae43ebc9b6654a6165778eecb931f74)\r\n\r\nIt might be useful to add comments to explain where the `9` value comes from here and why the new (since 442a87cc0ae43ebc9b6654a6165778eecb931f74) `sync_block` call is necessary below. From https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-526254932 it sounds like there was a race condition without these changes, so understanding this could save us from having to debug the same problem in the future in the course of maintaining or extending this test.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-08-29T17:01:25Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test tx status in case of reorgs while wallet being shutdown.\n+\n+Wallet txn status rely on block connection/disconnection for its\n+accuracy. In case of reorgs happening while wallet being shutdown\n+block updates are not going to be received. At wallet loading, we\n+check against chain if confirmed txn are still in chain and change\n+their status if block in which they have been included has been\n+disconnected.\n+\"\"\"\n+\n+from decimal import Decimal\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+        connect_nodes,\n+        disconnect_nodes,\n+)\n+\n+class ReorgsRestoreTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Send a tx from which to conflict outputs later\n+        txid_conflict_from = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Disconnect node1 from others to reorg its chain later\n+        disconnect_nodes(self.nodes[0], 1)\n+        disconnect_nodes(self.nodes[1], 2)\n+        connect_nodes(self.nodes[0], 2)\n+\n+        # Send a tx to be unconfirmed later\n+        txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        tx = self.nodes[0].gettransaction(txid)\n+        self.nodes[0].generate(4)\n+        tx_before_reorg = self.nodes[0].gettransaction(txid)\n+        assert_equal(tx_before_reorg[\"confirmations\"], 4)\n+\n+        # Disconnect node0 from node2 to broadcast a conflict on their respective chains\n+        disconnect_nodes(self.nodes[0], 2)\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs = []\n+        inputs.append({\"txid\": txid_conflict_from, \"vout\": nA})\n+        outputs_1 = {}\n+        outputs_2 = {}\n+\n+        # Create a conflicted tx broadcast on node0 chain and conflicting tx broadcast on node1 chain. Both spend from txid_conflict_from\n+        outputs_1[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_2[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_1))\n+        conflicting = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs, outputs_2))\n+\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.nodes[0].generate(1)\n+        conflicting_txid = self.nodes[2].sendrawtransaction(conflicting[\"hex\"])\n+        self.nodes[2].generate(9)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r319175528",
      "id" : 319175528,
      "line" : 69,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxOTE3NTUyOA==",
      "original_commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "original_line" : 69,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "test/functional/wallet_reorgsrestore.py",
      "position" : 69,
      "pull_request_review_id" : 281596225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-08-29T17:06:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/319175528",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Light re-Code Review ACK 442a87cc0ae43ebc9b6654a6165778eecb931f74\r\n\r\nI think this is in a good state, thank you @ryanofsky for being so active with review and @ariard for addressing feedback so quickly :)",
      "created_at" : "2019-09-05T13:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-528362819",
      "id" : 528362819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODM2MjgxOQ==",
      "updated_at" : "2019-09-05T13:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/528362819",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321331127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321331127"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is still wrong. index is left as 0 for a CONFLICTED tx.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-09-05T15:21:44Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321331127",
      "id" : 321331127,
      "in_reply_to_id" : 315829607,
      "line" : 502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTMzMTEyNw==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_line" : 502,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 53,
      "pull_request_review_id" : 284346179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-09-05T17:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321331127",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321331630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321331630"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This isn't needed. `setAbandoned()` sets `nIndex` to 0.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-09-05T15:22:46Z",
      "diff_hunk" : "@@ -1310,7 +1313,7 @@ bool CWallet::AbandonTransaction(interfaces::Chain::Lock& locked_chain, const ui\n         if (currentconfirm == 0 && !wtx.isAbandoned()) {\n             // If the orig tx was not in block/mempool, none of its spends can be in mempool\n             assert(!wtx.InMempool());\n-            wtx.nIndex = -1;\n+            wtx.m_confirm.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321331630",
      "id" : 321331630,
      "line" : 1316,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTMzMTYzMA==",
      "original_commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "original_line" : 1316,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 284346179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-09-05T17:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321331630",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321338669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321338669"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I think this would be clearer as:\r\n\r\n```\r\n if (wtxIn.isConflicted() || wtxIn.isConfirmed()) {\r\n    ...\r\n```",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2019-09-05T15:36:20Z",
      "diff_hunk" : "@@ -1180,8 +1172,19 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     return true;\n }\n \n-void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n+void CWallet::LoadToWallet(CWalletTx& wtxIn)\n {\n+    // If wallet doesn't have a chain (e.g wallet-tool), lock can't be taken.\n+    auto locked_chain = LockChain();\n+    // If tx hasn't been reorged out of chain while wallet being shutdown\n+    // change tx status to UNCONFIRMED and reset hashBlock/nIndex.\n+    if (!wtxIn.m_confirm.hashBlock.IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r321338669",
      "id" : 321338669,
      "line" : 1181,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTMzODY2OQ==",
      "original_commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "original_line" : 1181,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 41,
      "pull_request_review_id" : 284346179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2019-09-05T17:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321338669",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553435829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553435829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx status in a Confirmation struct\" (a31be09bfd77eed497a8e251d31358e16e2f2eb1)\r\n\r\nThis line is removed in the immediate next commit (https://github.com/bitcoin/bitcoin/pull/16624/commits/7e89994133725125dddbfa8d45484e3b9ed51c6e), but technically it has some bugs. Original intent of this code was only ever to send `-walletnotify`notifications, not to update transaction state, and the change should have used `UNCONFIRMED` instead of `CONFLICTED` to stay equivalent to previous code. Problems with the change:\r\n\r\n- It was an undocumented change in behavior in what was supposed to be a refactoring commit\r\n- It forgot to pass the block hash to `SyncTransaction` so wasn't properly setting a conflicted state. Instead it set an inconsistent state that would sometimes be treated as unconfirmed, sometimes conflicted.\r\n- It would compound reorg problems wallet already has treating transactions that are no longer conflicted as conflicted, see [*bug-stale-conflicted*](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking#bug-stale-conflicted).\r\n\r\nIn the future it would actually be possible to mark these transactions as conflicted instead of unconfirmed. Way this could be done is described [*idea-more-conflicts*](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking#idea-more-conflicts).",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2021-01-07T16:25:49Z",
      "diff_hunk" : "@@ -1425,11 +1419,11 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, {} /* block hash */, 0 /* position in block */);\n+        SyncTransaction(ptx, CWalletTx::Status::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553435829",
      "id" : 553435829,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQzNTgyOQ==",
      "original_commit_id" : "a31be09bfd77eed497a8e251d31358e16e2f2eb1",
      "original_line" : 1422,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 563629052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-07T16:39:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553435829",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553436127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553436127"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx status in a Confirmation struct\" (a31be09bfd77eed497a8e251d31358e16e2f2eb1)\r\n\r\nComment seems slightly off. I think the comment is right that `abandontransaction` would need to be called again in this case, but I don't think it would just be because of this code. The abandoned state would already have been lost previously when the block was connected.",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2021-01-07T16:26:19Z",
      "diff_hunk" : "@@ -1440,8 +1434,12 @@ void CWallet::BlockDisconnected(const CBlock& block) {\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n \n+    // At block disconnection, this will change an abandoned transaction to\n+    // be unconfirmed, whether or not the transaction is added back to the mempool.\n+    // User may have to call abandontransaction again. It may be addressed in the\n+    // future with a stickier abandoned state or even removing abandontransaction call.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553436127",
      "id" : 553436127,
      "line" : 1443,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQzNjEyNw==",
      "original_commit_id" : "a31be09bfd77eed497a8e251d31358e16e2f2eb1",
      "original_line" : 1440,
      "original_position" : 124,
      "original_start_line" : 1437,
      "path" : "src/wallet/wallet.cpp",
      "position" : 158,
      "pull_request_review_id" : 563629052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "RIGHT",
      "start_line" : 1440,
      "start_side" : "RIGHT",
      "updated_at" : "2021-01-07T16:39:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553436127",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553436927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553436927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove SyncTransaction for conflicted txn in CWallet::BlockConnected\" (7e89994133725125dddbfa8d45484e3b9ed51c6e)\r\n\r\nDropping this SyncTransaction call was a bug, since it caused `-walletnotify` notifications to be lost. These were restored later in #18982, basically just reverting this commit, but with some updates due to notification code changes in the meantime, and using `CONFIRMED` instead of `CONFLICTED` to avoid a bug from the previous commit https://github.com/bitcoin/bitcoin/pull/16624/commits/a31be09bfd77eed497a8e251d31358e16e2f2eb1",
      "commit_id" : "442a87cc0ae43ebc9b6654a6165778eecb931f74",
      "created_at" : "2021-01-07T16:27:39Z",
      "diff_hunk" : "@@ -1410,22 +1410,14 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     const uint256& block_hash = block.GetHash();\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n-    // TODO: Temporarily ensure that mempool removals are notified before\n-    // connected transactions.  This shouldn't matter, but the abandoned\n-    // state of transactions in our wallet is currently cleared when we\n-    // receive another notification and there is a race condition where\n-    // notification of a connected conflict might cause an outside process\n-    // to abandon a transaction and then have it inadvertently cleared by\n-    // the notification that the conflicted transaction was evicted.\n \n-    for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::Status::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r553436927",
      "id" : 553436927,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQzNjkyNw==",
      "original_commit_id" : "7e89994133725125dddbfa8d45484e3b9ed51c6e",
      "original_line" : 1422,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 563629052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-07T16:39:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553436927",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
