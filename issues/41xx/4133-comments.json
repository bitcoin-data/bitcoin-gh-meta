[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi laanwj.  I left you a message on IRC but it might be better to track things here.\n\nI can devote some time to getting this feature implemented, but since I'm new to QT, it would really help me if you could sketch up a really basic design.  Just some quick notes in terms of where the model code would go (is a new model class needed?), what GUI widgets to use (QTableView?), and where/when to emit signals to update the GUI.\n\nI've reviewed some previous patches to the debug console, ce14345a (network traffic graph), and 4d3dda5d (button to open debug.log), so I've gotten a feel for how the code is structured, but I still feel like I need some design notes for how to best implement this particular feature.\n\nBTW when I say \"design\" I just mean the code design, not UI.  I'll just focus on getting the data to appear on a tab at first, then I'll post screenshots and we could iterate through the UI to get it right.\n\nThanks.\n",
      "created_at" : "2014-05-20T14:54:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4133#issuecomment-43636652",
      "id" : 43636652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4133",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjM2NjUy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43636652/reactions"
      },
      "updated_at" : "2014-05-20T14:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43636652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It would also be nice if this window could show blocks currently being\ndownloaded by each peer.\n",
      "created_at" : "2014-05-20T14:57:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4133#issuecomment-43637064",
      "id" : 43637064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4133",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjM3MDY0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43637064/reactions"
      },
      "updated_at" : "2014-05-20T14:57:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43637064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ashleyholman I took a look at this issue last week. I wanted to see how far I could go being a complete beginner in C++ and Qt myself, so I dedicated some time to it. I probably won't be able to finish it, but I can tell you what I found in my quick investigation.\n\nA new model class is probably needed. I believe you can get it to work using the `QStandardItemModel` class directly, but subclassing it is probably more elegant and maintainable. UI wise, I guess the best option is to place a `QTableView` under a new \"Connected Peers\" tab in the rpcconsole. For updating the view, you can hook initially to the `NotifyNumConnectionsChanged()` signal and look at the code for getting the peers from the `getpeerinfo` function in `src/rpcnet.cpp`. This won't work for the final implementation though, because peers could change without changing the total number of them. You could modify the code in `ThreadSocketHandler` from `src/net.cpp` to also notify when there are any peer changes, regardless of wether the number of connections changed or not.\n",
      "created_at" : "2014-05-21T03:43:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4133#issuecomment-43709512",
      "id" : 43709512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4133",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzA5NTEy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43709512/reactions"
      },
      "updated_at" : "2014-05-21T03:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43709512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/138426?v=4",
         "events_url" : "https://api.github.com/users/federicobond/events{/privacy}",
         "followers_url" : "https://api.github.com/users/federicobond/followers",
         "following_url" : "https://api.github.com/users/federicobond/following{/other_user}",
         "gists_url" : "https://api.github.com/users/federicobond/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/federicobond",
         "id" : 138426,
         "login" : "federicobond",
         "node_id" : "MDQ6VXNlcjEzODQyNg==",
         "organizations_url" : "https://api.github.com/users/federicobond/orgs",
         "received_events_url" : "https://api.github.com/users/federicobond/received_events",
         "repos_url" : "https://api.github.com/users/federicobond/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/federicobond/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/federicobond/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/federicobond"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@federicobond Thanks for this info.  Much appreciated.  In regards to updating the view, another option would be to just do a full update of the table every 1 second, by calling the CopyNodeStats() function that the \"getpeerinfo\" rpc command currently uses.  Of course, the calls should only be made while the GUI widget is visible.  This may or may not result in less overhead, depending on the amount of socket activity, but at least this would cap the overhead to O(vNodes.size()) per second, and wouldn't require modifying any of the network handling code to emit signals.\n",
      "created_at" : "2014-05-21T05:00:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4133#issuecomment-43712402",
      "id" : 43712402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4133",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzEyNDAy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43712402/reactions"
      },
      "updated_at" : "2014-05-21T05:00:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43712402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=4",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "node_id" : "MDQ6VXNlcjU0OTQ4NA==",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ashleyholman Thanks for picking this up. You're on the right track. For polling node statistics it makes sense to just update them at regular intervals. Indeed, to probe every second or so.\n\nLike the other GUI polling functions we'd want to make this poll optional. Start the timer handler with a TRY_LOCK on cs_vNodes, and if you don't get the lock, skip this update this time. This avoids hanging the GUI thread on the lock. You can release the lock immediately after copying the data.\n\nYou _could_ use the NotifyNumConnectionsChanged() signal as @federicobond mentions to be notified when new nodes could be added or nodes disconnected instantly. This would introduce a possible DoS risk because a node could connect/disconnect 100s of times per second, updating the table every time.\n\n(this is always a compromise; at some point with continuous or fast-changing statistics polling is preferable to change notifications; a thermometer that sends a message every time the temperature changes would clog up all bandwidth)\n\n> Just some quick notes in terms of where the model code would go (is a new model class needed?)\n\nMaybe a `PeerTableModel` that is part of the `ClientModel`. It could live in its own cpp/h files.\n\n> what GUI widgets to use (QTableView?)\n\nWhat GUI to use is up to you :) In my mind there would be a table that shows the most important statistics for every node, and maybe a details window/pane that can show the nitty gritty details that don't fit into the table.\n\nIndeed, using QTableView would be consistent with what is used for the transactions list, address lists, etc. It's also easiest to get a grid of information that way.\n\n@rebroad That would be useful, but I'd prefer if that is handled in a separate pull that adds that information to the RPC first.\nWhen first adding this to the GUI let's show what is in getpeerinfo already, so that the change is manageable.\n",
      "created_at" : "2014-05-21T06:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4133#issuecomment-43715426",
      "id" : 43715426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4133",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzE1NDI2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43715426/reactions"
      },
      "updated_at" : "2014-05-21T06:07:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43715426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
