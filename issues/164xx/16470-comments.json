[
   {
      "author_association" : "MEMBER",
      "body" : "Example:\r\n\r\n```\r\n2019-07-26T20:11:22.049000Z TestFramework (INFO): Test a re-org of one week's worth of blocks (1088 blocks)\r\n[...]\r\n node0 2019-07-26T20:14:44.224983Z [msghand] UpdateTip: new best=02a38b39fec53caf38302ad6075fb32f1f5dc52737ac36c60dbfbb11849038c4 height=766 version=0x00000004 log2_work=10.583083 tx=12824 date='2019-07-26T20:22:31Z' progress=1.000000 cache=1.6MiB(12000txo) \r\n test  2019-07-26T20:14:58.425000Z TestFramework.mininode (DEBUG): Closed connection to: 127.0.0.1:13931 \r\n[...]\r\n2019-07-26T20:14:58.552000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/test_framework.py\", line 193, in main\r\n    self.run_test()\r\n  File \"./test/functional/feature_block.py\", line 1233, in run_test\r\n    self.send_blocks([block], True, timeout=60*60)\r\n  File \"./test/functional/feature_block.py\", line 1365, in send_blocks\r\n    self.nodes[0].p2p.send_blocks_and_test(blocks, self.nodes[0], success=success, reject_reason=reject_reason, force_send=force_send, timeout=timeout, expect_disconnect=reconnect)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 561, in send_blocks_and_test\r\n    self.sync_with_ping(timeout=timeout)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 441, in sync_with_ping\r\n    wait_until(test_function, timeout=timeout, lock=mininode_lock)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/util.py\", line 211, in wait_until\r\n    if predicate():\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 439, in test_function\r\n    assert self.is_connected\r\nAssertionError\r\n2019-07-26T20:14:58.723000Z TestFramework (INFO): Stopping nodes\r\n",
      "created_at" : "2019-07-26T20:19:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16470#issuecomment-515586615",
      "id" : 515586615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16470",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTU4NjYxNQ==",
      "updated_at" : "2019-07-26T20:19:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515586615",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you explain why not assert here?",
      "commit_id" : "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
      "created_at" : "2019-07-28T22:25:33Z",
      "diff_hunk" : "@@ -399,20 +408,30 @@ def wait_for_getheaders(self, timeout=60):\n         value must be explicitly cleared before calling this method, or this will return\n         immediately with success. TODO: change this method to take a hash value and only\n         return true if the correct block header has been requested.\"\"\"\n-        test_function = lambda: self.last_message.get(\"getheaders\")\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"getheaders\")\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_inv(self, expected_inv, timeout=60):\n         \"\"\"Waits for an INV message and checks that the first inv object in the message was as expected.\"\"\"\n         if len(expected_inv) > 1:\n             raise NotImplementedError(\"wait_for_inv() will only verify the first inv object\")\n-        test_function = lambda: self.last_message.get(\"inv\") and \\\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"inv\") and \\\n                                 self.last_message[\"inv\"].inv[0].type == expected_inv[0].type and \\\n                                 self.last_message[\"inv\"].inv[0].hash == expected_inv[0].hash\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_verack(self, timeout=60):\n-        test_function = lambda: self.message_count[\"verack\"]\n+        def test_function():",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021130",
      "id" : 308021130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAyMTEzMA==",
      "original_commit_id" : "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
      "original_position" : 66,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 66,
      "pull_request_review_id" : 267525313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470",
      "updated_at" : "2019-07-28T22:25:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021130",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is called in `add_p2p_connection`, which establishes the connection async. So the assert will fail on the first try.",
      "commit_id" : "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
      "created_at" : "2019-07-28T22:49:14Z",
      "diff_hunk" : "@@ -399,20 +408,30 @@ def wait_for_getheaders(self, timeout=60):\n         value must be explicitly cleared before calling this method, or this will return\n         immediately with success. TODO: change this method to take a hash value and only\n         return true if the correct block header has been requested.\"\"\"\n-        test_function = lambda: self.last_message.get(\"getheaders\")\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"getheaders\")\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_inv(self, expected_inv, timeout=60):\n         \"\"\"Waits for an INV message and checks that the first inv object in the message was as expected.\"\"\"\n         if len(expected_inv) > 1:\n             raise NotImplementedError(\"wait_for_inv() will only verify the first inv object\")\n-        test_function = lambda: self.last_message.get(\"inv\") and \\\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"inv\") and \\\n                                 self.last_message[\"inv\"].inv[0].type == expected_inv[0].type and \\\n                                 self.last_message[\"inv\"].inv[0].hash == expected_inv[0].hash\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_verack(self, timeout=60):\n-        test_function = lambda: self.message_count[\"verack\"]\n+        def test_function():",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021833",
      "id" : 308021833,
      "in_reply_to_id" : 308021130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAyMTgzMw==",
      "original_commit_id" : "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
      "original_position" : 66,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 66,
      "pull_request_review_id" : 267526109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470",
      "updated_at" : "2019-07-28T22:49:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021833",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
      "created_at" : "2019-08-01T13:12:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16470#issuecomment-517282069",
      "id" : 517282069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16470",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzI4MjA2OQ==",
      "updated_at" : "2019-08-01T13:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517282069",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
