{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Comments left over from #16421.\r\n\r\nFrom aj:\r\n\r\n> Can't we actually cope with merging packages this way too though? If you've got a tx that has parents A, B, C; and that conflicts with tx's X (parent A) and Y (parent B), then beforehand you had:\r\n\r\n> ```\r\n> ..., A, X, [children X]\r\n> ..., B, Y, [children Y]\r\n> ```\r\n\r\n> (maybe some tx's were descendants of both X and Y, but it's worse if there weren't any like that) and afterwards you have:\r\n\r\n> ```\r\n> ..., A, tx\r\n> ..., B, tx\r\n> ```\r\n\r\n> You don't have C in the mempool because that would fail the \"replacement-adds-unconfirmed\" test later.\r\n\r\n> So you know tx's ancestor checks pass, because they're actually worked out; you know A,B's ancestor checks pass because they don't change, tx's descendant check is trivial, and you know A,B and all their parent's descendant checks passed, because they did so when X and Y were there -- as far as sizes go, if they were all at their limit, then the max size for tx is the minimum of the descendant sizes of each tx that was replaced.\r\n\r\n> So I think you could replace the `setConflicts.size() == 1` test with:\r\n\r\n>```\r\n> if (!setConflicts.empty()) {\r\n>    auto conflict = setIterConflicting.begin();\r\n>    assert(conflict != setIterConflicting.end());\r\n>    uint64_t bump = (*conflict)->GetSizeWithDescendants();\r\n>    while(++conflict != setIterConflicting.end()) {\r\n>        bump = std::min(bump, (*conflict)->GetSizeWithDescendants());\r\n>    }\r\n>    nLimitDescendants += 1;\r\n>    nLimitDescendantSize += bump;\r\n> }\r\n> ```\r\n\r\nFrom sipa\r\n> I haven't thought hard about the effect on potential DoS issues this policy change may have.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819/comments",
   "created_at" : "2019-09-07T02:21:30Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/16819",
   "id" : 490580544,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 82428251,
         "name" : "TX fees and policy",
         "node_id" : "MDU6TGFiZWw4MjQyODI1MQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU0OTA1ODA1NDQ=",
   "number" : 16819,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819/timeline",
   "title" : "policy: allow RBF descendant carveout whenever conflicts exist, not just when number of conflicts == 1",
   "updated_at" : "2022-08-08T09:34:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16819",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
