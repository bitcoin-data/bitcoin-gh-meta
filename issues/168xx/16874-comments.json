[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think ideally the way for the gui to receive these updates would be with a new wallet callback `handleLastBlockChanged` analogous to existing [`handleAddressBookChanged`](https://github.com/bitcoin/bitcoin/blob/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b/src/interfaces/wallet.h#L285-L291), [`handleTransactionChanged`](https://github.com/bitcoin/bitcoin/blob/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b/src/interfaces/wallet.h#L293-L295), etc callbacks. The callback could be invoked whenever [`CWallet::m_last_block_processed`](https://github.com/bitcoin/bitcoin/blob/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b/src/wallet/wallet.h#L705-L712) is updated and pass along\r\n[`CWallet::m_last_block_processed_height`](https://github.com/bitcoin/bitcoin/blob/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b/src/wallet/wallet.h#L714-L719) or other useful state values.\r\n\r\nThis way no polling would be required at all.\r\n\r\n---\r\n\r\nIn the meantime, there have been a lot of PRs affecting polling and tip updates. Making a list here to keep track.\r\n\r\nTwo changes were made to make polling less expensive and block less:\r\n\r\n- #18160 (merged) avoids expensive wallet balance calls during polling\r\n- #18587 (pending) reverts previous change and takes it further, implementing it entirely in the GUI and not calling out to node or wallet\r\n\r\nOther polling changes:\r\n\r\n- #17993 (pending) switches all block change checks in GUI code from height checks to hash checks so the checks are more reliable\r\n\r\n- #17905 (merged) avoids repeated calls from the gui to the wallet to update transaction statuses as they are displayed, by skipping updates if the last block isn't changed\r\n\r\nOther notification changes:\r\n\r\n- #18121 (merged) - avoids rapid gui updates in tip changed callback during reindexing\r\n- #18152 (pending) - avoids getReindex and isInitialBlockDownload calls during tip changed callback and \r\n- #19007 (pending) - subset of #18152, avoid isInitialBlockDownload call during tip changed callback",
      "created_at" : "2020-05-18T22:48:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630475098",
      "id" : 630475098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDQ3NTA5OA==",
      "updated_at" : "2020-05-18T22:48:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630475098",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This way no polling would be required at all.\r\n\r\nYes! Title is misleading.\r\n\r\nThe approach you suggest looks fine to me but it doesn't prevent going back to node/wallet and request more data which in turn can disturb the GUI responsiveness.",
      "created_at" : "2020-05-18T23:07:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630480575",
      "id" : 630480575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDQ4MDU3NQ==",
      "updated_at" : "2020-05-18T23:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630480575",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "When running with a wallet, I encountered that one of the most annoying blockings I had in mainnet-catchup was `SendCoinsDialog::updateSmartFeeLabel()`.\r\nWe call `CTxMemPool::GetMinFee()` on all tip updates which is fine when in-sync but problematic otherwise.\r\n\r\nIt seems to be a mempool lock issue. The backtrace where the GUI thread gets stuck for seconds:\r\n```\r\n    frame #8: 0x000000010fe75136 bitcoin-qt`CTxMemPool::GetMinFee(this=0x0000000110cd75e8, sizelimit=300000000) const at txmempool.cpp:1004:5\r\n    frame #9: 0x000000010fa6c531 bitcoin-qt`interfaces::(anonymous namespace)::ChainImpl::mempoolMinFee(this=0x00007fee41f46730) at chain.cpp:332:26\r\n    frame #10: 0x0000000110194e21 bitcoin-qt`GetMinimumFeeRate(wallet=0x00007fee35804080, coin_control=0x00007fee35b8a880, feeCalc=0x00007ffee04d10f8) at fees.cpp:67:55\r\n    frame #11: 0x0000000110194b06 bitcoin-qt`GetMinimumFee(wallet=0x00007fee35804080, nTxBytes=1000, coin_control=0x00007fee35b8a880, feeCalc=0x00007ffee04d10f8) at fees.cpp:20:12\r\n    frame #12: 0x000000011011fa26 bitcoin-qt`interfaces::(anonymous namespace)::WalletImpl::getMinimumFee(this=0x00007fee367175b0, tx_bytes=1000, coin_control=0x00007fee35b8a880, returned_target=0x00007ffee04d12a4, reason=0x00007ffee04d12a0) at wallet.cpp:428:18\r\n    frame #13: 0x000000010f8d4ace bitcoin-qt`SendCoinsDialog::updateSmartFeeLabel(this=0x00007fee35b89e50) at sendcoinsdialog.cpp:755:49\r\n```",
      "created_at" : "2020-05-19T07:07:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630628320",
      "id" : 630628320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDYyODMyMA==",
      "updated_at" : "2020-05-19T07:07:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630628320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess the scope of this issue has changed since or was different than I thought when I replied https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630475098. At the time the issue title was \"gui: Poll for balances should be async\" not \"gui: Long or blocking calls should be async\". These are different problems. It is relatively easy to move slow polling code off the main event loop thread to a different thread, as opposed to getting slow code which is actually triggered by UI events (like SendCoinsDialog::updateSmartFeeLabel in Jonas's example) to not block the event loop. In the latter case you need one of the approaches from https://doc.qt.io/archives/qq/qq27-responsive-guis.html or #10504, beyond just a different choice of thread for polling.",
      "created_at" : "2020-05-19T11:17:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630754030",
      "id" : 630754030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDc1NDAzMA==",
      "updated_at" : "2020-05-19T11:17:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630754030",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky right, the real problem are the long/blocking calls on the GUI thread - polling one of those just makes it more noticeable. Polling in some thread and sending the results to the GUI thread is what makes more sense to me.\r\n\r\n> as opposed to getting slow code which is actually triggered by UI events\r\n\r\nThis is what is done in `OpenWalletActivity::open`.",
      "created_at" : "2020-05-20T08:35:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-631327600",
      "id" : 631327600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTMyNzYwMA==",
      "updated_at" : "2020-05-20T08:35:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631327600",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I generally agree on doing things async, though I think It is not a sliver bullet. Even if calls that \"take longer\" are ran in the background (a.k.a outside the GUI thread), it might still be \"laggy\" for the user (he might see a `loading...` instead of an ugly GUI freeze).\r\n\r\nIMO the GUI/node interaction design is not very performance optimised. Things like constant polling the minimal fee on every block update during sync seems to be wasteful. Moving that to another thread will not cure the issue.\r\n\r\nWhat I think would be an efficient performance increase is pushing relevant information to the GUI rather the requesting it from the GUI side either periodical or right after a signal notification. Often we have the information available at the relevant time under the relevant lock,... but fail to pass it to the GUI. What then happens is that the GUI requests the information again (periodically or after a signal) leading to another expansive lock.",
      "created_at" : "2020-05-20T08:47:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-631334738",
      "id" : 631334738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTMzNDczOA==",
      "updated_at" : "2020-05-20T08:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631334738",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: @jonasschnelli https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-630628320\r\n\r\n> When running with a wallet, I encountered that one of the most annoying blockings I had in mainnet-catchup was `SendCoinsDialog::updateSmartFeeLabel()`.\r\n\r\nI looked into this case as an example, trying to see if there's an easy way to fix bad GUI hangs without having to rewrite lots of code.\r\n\r\nMy idea was to write a little helper function `AsyncUpdate`  that can be called anywhere and takes two callback arguments, running the first callback asynchronously on a worker thread and passing whatever that returns as an argument to the second callback, which runs on the UI thread, so it can update GUI elements with the result. \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/eacd34144c1ee989c9ab43eb439fecca76addc76/src/qt/async_update.h#L46-L50\r\n\r\nExample applied to `SendCoinsDialog::updateSmartFeeLabel` looks like: eacd34144c1ee989c9ab43eb439fecca76addc76 ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/gsync))\r\n\r\nI think something like this could be used as a bandaid solution to fix known hangs, and help identify places in the code that should be priorities for rewriting in a more asynchronous style.",
      "created_at" : "2020-05-22T01:12:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-632424392",
      "id" : 632424392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjQyNDM5Mg==",
      "updated_at" : "2020-05-22T01:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632424392",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Moved to bitcoin-core/gui#642.",
      "created_at" : "2022-08-05T09:46:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16874#issuecomment-1206260507",
      "id" : 1206260507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16874",
      "node_id" : "IC_kwDOABII585H5hMb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206260507/reactions"
      },
      "updated_at" : "2022-08-05T09:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206260507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
