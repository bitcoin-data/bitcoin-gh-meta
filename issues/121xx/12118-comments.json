[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove double cast?",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-08T23:51:55Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)\n+    bool UseAncestorScore(const CTxMemPoolEntry &a) const\n+    {\n+        double f1 = (double)a.GetModifiedFee() * a.GetSizeWithAncestors();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160286983",
      "id" : 160286983,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 43,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-13T21:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160286983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why floating point? Aren't these all 64 integers?\r\n  ",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-08T23:54:29Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160287321",
      "id" : 160287321,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 18,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-13T21:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160287321",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of factoring out `UseAncestorScore`, do (missing comments):\r\n```cpp\r\nvoid GetModFeeAndSize(const CTxMemPoolEntry& a, int64_t& mod_fee, int64_t& size) {\r\n    int64_t f1 = a.GetModifiedFee() * a.GetSizeWithAncestors();\r\n    int64_t f2 = a.GetModFeesWithAncestors() * a.GetTxSize();\r\n    if (f1 > f2) {\r\n        mod_fee = a.GetModFeesWithAncestors();\r\n        size = a.GetSizeWithAncestors();\r\n    } else {\r\n        mod_fee = a.GetModifiedFee();\r\n        size = a.GetTxSize();\r\n    }\r\n}\r\n```",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-09T00:01:41Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288272",
      "id" : 160288272,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 23,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-13T21:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288272",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, missing `.`.",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-09T00:01:59Z",
      "diff_hunk" : "@@ -261,27 +261,44 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        bool fUseAAncestors = UseAncestorScore(a);\n+        bool fUseBAncestors = UseAncestorScore(b);\n+\n+        double aModFee = fUseAAncestors ? a.GetModFeesWithAncestors() : a.GetModifiedFee();\n+        double aSize = fUseAAncestors ? a.GetSizeWithAncestors() : a.GetTxSize();\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        double bModFee = fUseBAncestors ? b.GetModFeesWithAncestors() : b.GetModifiedFee();\n+        double bSize = fUseBAncestors ? b.GetSizeWithAncestors() : b.GetTxSize();\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = aModFee * bSize;\n+        double f2 = aSize * bModFee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n \n         return f1 > f2;\n     }\n+\n+    // Calculate which score to use for an entry (avoiding division).\n+    // Picks min(feerate, feerate_with_ancestors)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160288319",
      "id" : 160288319,
      "original_commit_id" : "f0aef6c7df28675d7d8982cef38b398daf975584",
      "original_position" : 40,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 87376974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-13T21:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160288319",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag Thanks for taking a look.  I mimicked `CompareTxMempoolEntryByDescendantScore` in this PR to make review easier, since the two concepts have a symmetry.\r\n\r\nThe use of `double` for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.  That's also why there's an explicit double cast before multiplication.\r\n\r\nI'll rewrite the helper function along the lines of your suggestion.",
      "created_at" : "2018-01-09T16:02:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356327874",
      "id" : 356327874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-09T16:02:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356327874",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The use of double for the intermediate value is to prevent overflow of an int64_t, which is theoretically possible.\r\n\r\nHow about http://releases.llvm.org/4.0.0/tools/clang/docs/LanguageExtensions.html#checked-arithmetic-builtins?",
      "created_at" : "2018-01-09T23:57:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356453583",
      "id" : 356453583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-09T23:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356453583",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160558620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160558620"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "& next to type.\r\n  ",
      "commit_id" : "9a51319578091234fdd218a1eb144d517ea82b85",
      "created_at" : "2018-01-09T23:59:12Z",
      "diff_hunk" : "@@ -206,31 +206,36 @@ class CompareTxMemPoolEntryByDescendantScore\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        bool fUseADescendants = UseDescendantScore(a);\n-        bool fUseBDescendants = UseDescendantScore(b);\n+        double a_mod_fee, a_size, b_mod_fee, b_size;\n \n-        double aModFee = fUseADescendants ? a.GetModFeesWithDescendants() : a.GetModifiedFee();\n-        double aSize = fUseADescendants ? a.GetSizeWithDescendants() : a.GetTxSize();\n-\n-        double bModFee = fUseBDescendants ? b.GetModFeesWithDescendants() : b.GetModifiedFee();\n-        double bSize = fUseBDescendants ? b.GetSizeWithDescendants() : b.GetTxSize();\n+        GetModFeeAndSize(a, a_mod_fee, a_size);\n+        GetModFeeAndSize(b, b_mod_fee, b_size);\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aModFee * bSize;\n-        double f2 = aSize * bModFee;\n+        double f1 = a_mod_fee * b_size;\n+        double f2 = a_size * b_mod_fee;\n \n         if (f1 == f2) {\n             return a.GetTime() >= b.GetTime();\n         }\n         return f1 < f2;\n     }\n \n-    // Calculate which score to use for an entry (avoiding division).\n-    bool UseDescendantScore(const CTxMemPoolEntry &a) const\n+    // Return the fee/size we're using for sorting this entry.\n+    void GetModFeeAndSize(const CTxMemPoolEntry &a, double &mod_fee, double &size) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160558620",
      "id" : 160558620,
      "original_commit_id" : "9a51319578091234fdd218a1eb144d517ea82b85",
      "original_position" : 31,
      "path" : "src/txmempool.h",
      "position" : 31,
      "pull_request_review_id" : 87697407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-10T00:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160558620",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160559047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160559047"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same.",
      "commit_id" : "9a51319578091234fdd218a1eb144d517ea82b85",
      "created_at" : "2018-01-10T00:02:22Z",
      "diff_hunk" : "@@ -261,27 +266,46 @@ class CompareTxMemPoolEntryByEntryTime\n     }\n };\n \n+/** \\class CompareTxMemPoolEntryByAncestorScore\n+ *\n+ *  Sort an entry by min(score/size of entry's tx, score/size with all ancestors).\n+ */\n class CompareTxMemPoolEntryByAncestorFee\n {\n public:\n     bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b) const\n     {\n-        double aFees = a.GetModFeesWithAncestors();\n-        double aSize = a.GetSizeWithAncestors();\n+        double a_mod_fee, a_size, b_mod_fee, b_size;\n \n-        double bFees = b.GetModFeesWithAncestors();\n-        double bSize = b.GetSizeWithAncestors();\n+        GetModFeeAndSize(a, a_mod_fee, a_size);\n+        GetModFeeAndSize(b, b_mod_fee, b_size);\n \n         // Avoid division by rewriting (a/b > c/d) as (a*d > c*b).\n-        double f1 = aFees * bSize;\n-        double f2 = aSize * bFees;\n+        double f1 = a_mod_fee * b_size;\n+        double f2 = a_size * b_mod_fee;\n \n         if (f1 == f2) {\n             return a.GetTx().GetHash() < b.GetTx().GetHash();\n         }\n-\n         return f1 > f2;\n     }\n+\n+    // Return the fee/size we're using for sorting this entry.\n+    void GetModFeeAndSize(const CTxMemPoolEntry &a, double &mod_fee, double &size) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r160559047",
      "id" : 160559047,
      "original_commit_id" : "9a51319578091234fdd218a1eb144d517ea82b85",
      "original_position" : 85,
      "path" : "src/txmempool.h",
      "position" : 85,
      "pull_request_review_id" : 87697407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-10T00:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160559047",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag The style of where to put the `&` doesn't seem to be in our style guide and is inconsistent already in this file, so I'm going to leave it the way I have it (which happens to be my preference for where to put the `&` :) ).\r\n\r\nI don't think it's a problem for code-correctness if the arithmetic overflows, so I'd rather just handle it as we currently do than introduce complication from calculating things two ways.",
      "created_at" : "2018-01-10T15:19:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356633351",
      "id" : 356633351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-10T15:19:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356633351",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 9a51319.\r\n\r\n> I'm going to leave it the way I have it\r\n\r\nFine.\r\n\r\n> so I'd rather just handle it as we currently do\r\n\r\nIt was just curiosity. Maybe `GetModFeeAndSize` values could be cached in `CTxMemPoolEntry` to improve even further? (adding 128 bytes per entry)",
      "created_at" : "2018-01-10T15:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356641676",
      "id" : 356641676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-10T15:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356641676",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">>I measured this as approximately a 5% speedup in removeForBlock.\r\n\r\n>I'm always interested to know how you benchmark these things, in case you want to post details.\r\n\r\n@ryanofsky I ran through nearly 3 months of historical block & transaction data (roughly March-May 2017), which I record and can play back to a patched bitcoind.  I ran two historical studies, one with this patch and one without, each with added benchmarks to specifically measure the time spent in removeForBlock.\r\n",
      "created_at" : "2018-01-11T02:21:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-356803845",
      "id" : 356803845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-11T02:21:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356803845",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 9a51319578091234fdd218a1eb144d517ea82b85",
      "created_at" : "2018-01-11T17:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357009787",
      "id" : 357009787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-11T17:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357009787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK",
      "created_at" : "2018-01-11T20:34:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357052870",
      "id" : 357052870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-11T20:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357052870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe augment the `MempoolAncestorIndexingTest` with a case of a higher fee parent with a lower fee child (for which the sort order has changed).",
      "created_at" : "2018-01-12T08:32:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357174960",
      "id" : 357174960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-12T08:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357174960",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jimpo Sounds good; I added a test.",
      "created_at" : "2018-01-12T17:43:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357306399",
      "id" : 357306399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-12T17:43:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357306399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I just remembered that the mining code had this ancestor feerate sorting logic duplicated; I just added a commit that attempts to re-use the mempool code so that the new behavior will apply there as well.",
      "created_at" : "2018-01-13T21:07:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357467313",
      "id" : 357467313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-13T21:07:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357467313",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161404506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161404506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to check my understanding, this should have zero effect, correct? The highest element in mapTx and mapModifiedTx should always be the element we want, if the min() is hit, it will never have sorted as the top element in either mapModifedTx *or* mapTx, as all modifiedTx entries also have their parents in modifiedTx?",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-14T17:30:24Z",
      "diff_hunk" : "@@ -352,7 +352,7 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n             // Try to compare the mapTx entry to the mapModifiedTx entry\n             iter = mempool.mapTx.project<0>(mi);\n             if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareModifiedEntry()(*modit, CTxMemPoolModifiedEntry(iter))) {\n+                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161404506",
      "id" : 161404506,
      "original_commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "original_position" : 5,
      "path" : "src/miner.cpp",
      "position" : 5,
      "pull_request_review_id" : 88689212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-14T18:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161404506",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 0a22a5291",
      "created_at" : "2018-01-15T14:27:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357697399",
      "id" : 357697399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-15T14:27:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357697399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-utACK 0a22a52. Added test looks good.",
      "created_at" : "2018-01-15T14:43:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#issuecomment-357701732",
      "id" : 357701732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12118",
      "updated_at" : "2018-01-15T14:43:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357701732",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161764266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161764266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes -- this change was only because I wanted to delete the code for CompareModifiedEntry, which is otherwise no longer needed.\r\n\r\n> all modifiedTx entries also have their parents in modifiedTx\r\n\r\nNot quite -- the parents of entries in mapModifiedTx are not in mapModifiedTx if they have been included in the candidate block.  Also a parent could be missing from mapModifiedTx if we already considered it for inclusion and it failed for some reason (eg the package it's part of would be too big).",
      "commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "created_at" : "2018-01-16T14:01:10Z",
      "diff_hunk" : "@@ -352,7 +352,7 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n             // Try to compare the mapTx entry to the mapModifiedTx entry\n             iter = mempool.mapTx.project<0>(mi);\n             if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareModifiedEntry()(*modit, CTxMemPoolModifiedEntry(iter))) {\n+                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12118#discussion_r161764266",
      "id" : 161764266,
      "in_reply_to_id" : 161404506,
      "original_commit_id" : "0a22a52918ad5af6d105b4f5ae9dd6c52199f0e8",
      "original_position" : 5,
      "path" : "src/miner.cpp",
      "position" : 5,
      "pull_request_review_id" : 89104280,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12118",
      "updated_at" : "2018-01-16T14:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161764266",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
