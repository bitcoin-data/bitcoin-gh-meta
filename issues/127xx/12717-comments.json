[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK b1038af.\r\n\r\nNit, could get rid of `viewDummy` by using `viewChain` by default:\r\n```cpp\r\n        LOCK2(cs_main, mempool.cs);\r\n\r\n        CCoinsViewCache& viewChain = *pcoinsTip;\r\n        CCoinsViewMemPool viewMempool(&viewChain, mempool);\r\n        CCoinsViewCache view(&viewChain);\r\n        if (fCheckMemPool) {\r\n            // switch cache backend to db+mempool in case user likes to query mempool\r\n            view.SetBackend(viewMempool);\r\n        }\r\n```",
      "created_at" : "2018-03-20T22:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-374785128",
      "id" : 374785128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-20T22:55:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374785128",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b1038afceadacb640ab1fa4fd9b577bb51d45e84 \r\n\r\nBut since we are nitting, I would probably do it like this\r\n\r\n```c++\r\nCCoinsViewCache view(fCheckMemPool ? &viewMempool : &viewChain);\r\n```\r\n\r\nNot a big deal either way.",
      "created_at" : "2018-03-21T01:22:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-374810297",
      "id" : 374810297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T01:23:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374810297",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the review!\r\nI have removed `viewDummy` as suggested.",
      "created_at" : "2018-03-21T06:42:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-374845762",
      "id" : 374845762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T06:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374845762",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@eklitzke that gives:\r\n```cpp\r\nrest.cpp:495:44: error: incompatible operand types ('CCoinsViewMemPool *' and 'CCoinsViewCache *')\r\n```\r\nit needs a cast:\r\n```cpp\r\nCCoinsViewCache view(fCheckMemPool ? (CCoinsView*) &viewMempool : &viewChain);\r\n```\r\nBut yeah, either way.",
      "created_at" : "2018-03-21T14:13:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-374950942",
      "id" : 374950942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T14:13:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374950942",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "But I wonder if it pays off dealing with both cases separately:\r\n```cpp\r\nif (fCheckMemPool) {\r\n    LOCK2(cs_main, mempool.cs);\r\n    CCoinsViewCache& viewChain = *pcoinsTip;\r\n    CCoinsViewMemPool viewMempool(&viewChain, mempool);\r\n    CCoinsViewCache view(&viewMempool);\r\n    ...\r\n} else {\r\n    LOCK(cs_main);  // no need to lock mempool!\r\n    CCoinsViewCache& viewChain = *pcoinsTip;\r\n    CCoinsViewCache view(&viewChain);\r\n    ...\r\n}\r\n```\r\n",
      "created_at" : "2018-03-21T14:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-374952539",
      "id" : 374952539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T14:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374952539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@eklitzke @promag I'm fine with both suggestions, please let me know which is the preferred one :)",
      "created_at" : "2018-03-21T17:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375020462",
      "id" : 375020462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T17:06:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375020462",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The way @promag just suggested is best of all. If you want to do that you'll have to refactor the loop out so it can be called in both code paths. You can do that by adding a new static method or using a lambda.",
      "created_at" : "2018-03-21T23:05:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375124584",
      "id" : 375124584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-21T23:05:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375124584",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
         "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eklitzke/followers",
         "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eklitzke",
         "id" : 2734,
         "login" : "eklitzke",
         "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
         "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
         "repos_url" : "https://api.github.com/users/eklitzke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eklitzke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks!\r\nI have updated the code according to the suggestion above (refactoring the loop into a lambda), and added a few more tests (to make sure that we don't return outputs, being spent by mempool transactions).",
      "created_at" : "2018-03-22T12:10:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375282319",
      "id" : 375282319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-22T13:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375282319",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176478821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176478821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this comment could be clearer. Something like `# tx not found since it is in the mempool (and /mempool not included in request`\r\n\r\nedit: in fact, I think you could remove all the inline comments and just place a comment at the top of the section explaining what's happening (create a transaction, check that it's found with `/checkmempool`, but not found without, then confirm the transaction and check that it's found with or without `/checkmempool`",
      "commit_id" : "9cb9af8c41e4a7abd6b3e011127c4274557ca7e4",
      "created_at" : "2018-03-22T16:07:25Z",
      "diff_hunk" : "@@ -151,23 +151,48 @@ def run_test(self):\n         txid = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)\n         json_string = http_get_call(url.hostname, url.port, '/rest/tx/'+txid+self.FORMAT_SEPARATOR+\"json\")\n         json_obj = json.loads(json_string)\n-        vintx = json_obj['vin'][0]['txid'] # get the vin to later check for utxo (should be spent by then)\n+        # get the spent output to later check for utxo (should be spent by then)\n+        spent = '{}-{}'.format(json_obj['vin'][0]['txid'], json_obj['vin'][0]['vout'])\n         # get n of 0.1 outpoint\n         n = 0\n         for vout in json_obj['vout']:\n             if vout['value'] == 0.1:\n                 n = vout['n']\n+        spending = '{}-{}'.format(txid, n)\n \n-        json_request = '/'+txid+'-'+str(n)\n+        json_request = '/'+spending\n         json_string = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json')\n         json_obj = json.loads(json_string)\n-        assert_equal(len(json_obj['utxos']), 0) #there should be an outpoint because it has just added to the mempool\n+        assert_equal(len(json_obj['utxos']), 0) #there should be no outpoint because it has just added to the mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176478821",
      "id" : 176478821,
      "original_commit_id" : "eb0aad1c0b90893caadd1c96d93b3f2572301cf3",
      "original_position" : 46,
      "path" : "test/functional/interface_rest.py",
      "position" : 46,
      "pull_request_review_id" : 106189117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-25T08:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176478821",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176536870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176536870"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks!\r\nI agree, and would be happy to fix this issue (together with a general tidying-up of `interface_rest.py` tests) in a following PR.",
      "commit_id" : "eb0aad1c0b90893caadd1c96d93b3f2572301cf3",
      "created_at" : "2018-03-22T18:58:28Z",
      "diff_hunk" : "@@ -151,23 +151,48 @@ def run_test(self):\n         txid = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)\n         json_string = http_get_call(url.hostname, url.port, '/rest/tx/'+txid+self.FORMAT_SEPARATOR+\"json\")\n         json_obj = json.loads(json_string)\n-        vintx = json_obj['vin'][0]['txid'] # get the vin to later check for utxo (should be spent by then)\n+        # get the spent output to later check for utxo (should be spent by then)\n+        spent = '{}-{}'.format(json_obj['vin'][0]['txid'], json_obj['vin'][0]['vout'])\n         # get n of 0.1 outpoint\n         n = 0\n         for vout in json_obj['vout']:\n             if vout['value'] == 0.1:\n                 n = vout['n']\n+        spending = '{}-{}'.format(txid, n)\n \n-        json_request = '/'+txid+'-'+str(n)\n+        json_request = '/'+spending\n         json_string = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json')\n         json_obj = json.loads(json_string)\n-        assert_equal(len(json_obj['utxos']), 0) #there should be an outpoint because it has just added to the mempool\n+        assert_equal(len(json_obj['utxos']), 0) #there should be no outpoint because it has just added to the mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176536870",
      "id" : 176536870,
      "in_reply_to_id" : 176478821,
      "original_commit_id" : "eb0aad1c0b90893caadd1c96d93b3f2572301cf3",
      "original_position" : 46,
      "path" : "test/functional/interface_rest.py",
      "position" : 46,
      "pull_request_review_id" : 106258850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-22T18:58:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176536870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the review and the suggestion!\r\nI agree, and would be happy to fix this issue (together with a general tidying-up of `interface_rest.py` tests) in a following PR.",
      "created_at" : "2018-03-22T20:22:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375444680",
      "id" : 375444680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-22T20:23:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375444680",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176568629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176568629"
         }
      },
      "author_association" : "OWNER",
      "body" : "There's no need for an intermediary cache here anymore. You can make the lambda take a `CCoinsView&` instead, and either pass it `viewMempool` (here) or `*pcoinsTip` (below) directly.",
      "commit_id" : "9cb9af8c41e4a7abd6b3e011127c4274557ca7e4",
      "created_at" : "2018-03-22T20:52:42Z",
      "diff_hunk" : "@@ -487,26 +487,33 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n     std::vector<bool> hits;\n     bitmap.resize((vOutPoints.size() + 7) / 8);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-\n-        CCoinsView viewDummy;\n-        CCoinsViewCache view(&viewDummy);\n-\n-        CCoinsViewCache& viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-\n-        if (fCheckMemPool)\n-            view.SetBackend(viewMempool); // switch cache backend to db+mempool in case user likes to query mempool\n-\n-        for (size_t i = 0; i < vOutPoints.size(); i++) {\n-            bool hit = false;\n-            Coin coin;\n-            if (view.GetCoin(vOutPoints[i], coin) && !mempool.isSpent(vOutPoints[i])) {\n-                hit = true;\n-                outs.emplace_back(std::move(coin));\n+        auto process_utxos = [&vOutPoints, &outs, &hits](const CCoinsViewCache& view, const CTxMemPool& mempool) {\n+            for (const COutPoint& vOutPoint : vOutPoints) {\n+                bool hit = false;\n+                Coin coin;\n+                if (view.GetCoin(vOutPoint, coin) && !mempool.isSpent(vOutPoint)) {\n+                    hit = true;\n+                    outs.emplace_back(std::move(coin));\n+                }\n+                hits.push_back(hit);\n             }\n+        };\n+\n+        if (fCheckMemPool) {\n+            // use db+mempool as cache backend in case user likes to query mempool\n+            LOCK2(cs_main, mempool.cs);\n+            CCoinsViewCache& viewChain = *pcoinsTip;\n+            CCoinsViewMemPool viewMempool(&viewChain, mempool);\n+            CCoinsViewCache view(&viewMempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176568629",
      "id" : 176568629,
      "original_commit_id" : "eb0aad1c0b90893caadd1c96d93b3f2572301cf3",
      "original_position" : 38,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 106297437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-25T08:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176568629",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I agree, and would be happy to fix this issue (together with a general tidying-up of interface_rest.py tests) in a following PR.\r\n\r\nGreat! I already started tidying up the test here: https://github.com/jnewbery/bitcoin/tree/tidy_up_rest_test . I haven't opened a PR yet. Let me know what you think (and feel free to take the branch, modify as you see fit and open a PR if you want to take this on).",
      "created_at" : "2018-03-22T20:57:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375455058",
      "id" : 375455058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-22T20:57:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375455058",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176573437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176573437"
         }
      },
      "author_association" : "NONE",
      "body" : "You're right, thanks for the catch!\r\nWill amend the commit, and update this PR.",
      "commit_id" : "9cb9af8c41e4a7abd6b3e011127c4274557ca7e4",
      "created_at" : "2018-03-22T21:10:47Z",
      "diff_hunk" : "@@ -487,26 +487,33 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n     std::vector<bool> hits;\n     bitmap.resize((vOutPoints.size() + 7) / 8);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-\n-        CCoinsView viewDummy;\n-        CCoinsViewCache view(&viewDummy);\n-\n-        CCoinsViewCache& viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-\n-        if (fCheckMemPool)\n-            view.SetBackend(viewMempool); // switch cache backend to db+mempool in case user likes to query mempool\n-\n-        for (size_t i = 0; i < vOutPoints.size(); i++) {\n-            bool hit = false;\n-            Coin coin;\n-            if (view.GetCoin(vOutPoints[i], coin) && !mempool.isSpent(vOutPoints[i])) {\n-                hit = true;\n-                outs.emplace_back(std::move(coin));\n+        auto process_utxos = [&vOutPoints, &outs, &hits](const CCoinsViewCache& view, const CTxMemPool& mempool) {\n+            for (const COutPoint& vOutPoint : vOutPoints) {\n+                bool hit = false;\n+                Coin coin;\n+                if (view.GetCoin(vOutPoint, coin) && !mempool.isSpent(vOutPoint)) {\n+                    hit = true;\n+                    outs.emplace_back(std::move(coin));\n+                }\n+                hits.push_back(hit);\n             }\n+        };\n+\n+        if (fCheckMemPool) {\n+            // use db+mempool as cache backend in case user likes to query mempool\n+            LOCK2(cs_main, mempool.cs);\n+            CCoinsViewCache& viewChain = *pcoinsTip;\n+            CCoinsViewMemPool viewMempool(&viewChain, mempool);\n+            CCoinsViewCache view(&viewMempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176573437",
      "id" : 176573437,
      "in_reply_to_id" : 176568629,
      "original_commit_id" : "eb0aad1c0b90893caadd1c96d93b3f2572301cf3",
      "original_position" : 38,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 106303297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-25T08:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176573437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 5e2cfcba4a46a6d39f38f03dcd30543d259f181b",
      "created_at" : "2018-03-22T21:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375461695",
      "id" : 375461695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-22T21:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375461695",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jnewbery The branch looks great :)\r\nI will continue the development at https://github.com/romanz/bitcoin/commits/tidy_up_rest_test in the upcoming days.\r\nMuch appreciated, and thanks again!",
      "created_at" : "2018-03-22T21:39:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-375466352",
      "id" : 375466352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-25T09:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375466352",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176919689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176919689"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alternative:\r\n```cpp\r\nCoin coin;\r\nconst bool hit = !mempool.isSpent(vOutPoint) && view.GetCoin(vOutPoint, coin);\r\nhits.push_back(hit);\r\nif (hit) outs.emplace_back(std::move(coin));\r\n```\r\nAlso, cheapest condition to fail should come first, and I think `!isSpent` is the cheapest in both cases.",
      "commit_id" : "9cb9af8c41e4a7abd6b3e011127c4274557ca7e4",
      "created_at" : "2018-03-24T20:46:34Z",
      "diff_hunk" : "@@ -487,26 +487,31 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n     std::vector<bool> hits;\n     bitmap.resize((vOutPoints.size() + 7) / 8);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-\n-        CCoinsView viewDummy;\n-        CCoinsViewCache view(&viewDummy);\n-\n-        CCoinsViewCache& viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-\n-        if (fCheckMemPool)\n-            view.SetBackend(viewMempool); // switch cache backend to db+mempool in case user likes to query mempool\n-\n-        for (size_t i = 0; i < vOutPoints.size(); i++) {\n-            bool hit = false;\n-            Coin coin;\n-            if (view.GetCoin(vOutPoints[i], coin) && !mempool.isSpent(vOutPoints[i])) {\n-                hit = true;\n-                outs.emplace_back(std::move(coin));\n+        auto process_utxos = [&vOutPoints, &outs, &hits](const CCoinsView& view, const CTxMemPool& mempool) {\n+            for (const COutPoint& vOutPoint : vOutPoints) {\n+                bool hit = false;\n+                Coin coin;\n+                if (view.GetCoin(vOutPoint, coin) && !mempool.isSpent(vOutPoint)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176919689",
      "id" : 176919689,
      "original_commit_id" : "5e2cfcba4a46a6d39f38f03dcd30543d259f181b",
      "original_position" : 25,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 106710141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-25T08:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176919689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176933522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176933522"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for the suggestion!\r\nI have updated and rebased the PR.",
      "commit_id" : "9cb9af8c41e4a7abd6b3e011127c4274557ca7e4",
      "created_at" : "2018-03-25T08:56:00Z",
      "diff_hunk" : "@@ -487,26 +487,31 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n     std::vector<bool> hits;\n     bitmap.resize((vOutPoints.size() + 7) / 8);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-\n-        CCoinsView viewDummy;\n-        CCoinsViewCache view(&viewDummy);\n-\n-        CCoinsViewCache& viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-\n-        if (fCheckMemPool)\n-            view.SetBackend(viewMempool); // switch cache backend to db+mempool in case user likes to query mempool\n-\n-        for (size_t i = 0; i < vOutPoints.size(); i++) {\n-            bool hit = false;\n-            Coin coin;\n-            if (view.GetCoin(vOutPoints[i], coin) && !mempool.isSpent(vOutPoints[i])) {\n-                hit = true;\n-                outs.emplace_back(std::move(coin));\n+        auto process_utxos = [&vOutPoints, &outs, &hits](const CCoinsView& view, const CTxMemPool& mempool) {\n+            for (const COutPoint& vOutPoint : vOutPoints) {\n+                bool hit = false;\n+                Coin coin;\n+                if (view.GetCoin(vOutPoint, coin) && !mempool.isSpent(vOutPoint)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#discussion_r176933522",
      "id" : 176933522,
      "in_reply_to_id" : 176919689,
      "original_commit_id" : "5e2cfcba4a46a6d39f38f03dcd30543d259f181b",
      "original_position" : 25,
      "path" : "src/rest.cpp",
      "position" : null,
      "pull_request_review_id" : 106723110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12717",
      "updated_at" : "2018-03-25T08:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176933522",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 9cb9af8c41e4a7abd6b3e011127c4274557ca7e4.\r\n\r\nOnly differences are addressing @sipa's and @promag's review comments.\r\n\r\nmeta point - I'm not sure if this conflicted with master and needed rebase. In general it's better to avoid rebase if possible since it makes re-reviewing easier if old and new branches are from the same base commit.",
      "created_at" : "2018-03-26T15:42:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-376212070",
      "id" : 376212070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-26T15:42:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376212070",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "NONE",
      "body" : ">  In general it's better to avoid rebase if possible since it makes re-reviewing easier if old and new branches are from the same base commit.\r\n\r\nWill do, thanks for the tip!",
      "created_at" : "2018-03-26T17:45:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12717#issuecomment-376252029",
      "id" : 376252029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12717",
      "updated_at" : "2018-03-26T17:45:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376252029",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/9900?v=4",
         "events_url" : "https://api.github.com/users/romanz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/romanz/followers",
         "following_url" : "https://api.github.com/users/romanz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/romanz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/romanz",
         "id" : 9900,
         "login" : "romanz",
         "organizations_url" : "https://api.github.com/users/romanz/orgs",
         "received_events_url" : "https://api.github.com/users/romanz/received_events",
         "repos_url" : "https://api.github.com/users/romanz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/romanz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/romanz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/romanz"
      }
   }
]
