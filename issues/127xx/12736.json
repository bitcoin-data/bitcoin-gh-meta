{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Any RPC command called with the **wrong number of arguments** currently raise a `std::runtime_error` exception which is then mapped to a `RPC_MISC_ERROR` when executed from a `CRPCTable`.\r\n\r\nThis error code doesnât bring any value and should only be used when no other error codes make sense. \r\nHowever in this case, it could easily fall into `RPC_INVALID_REQUEST` case **or maybe `RPC_INVALID_PARAMETER`**?\r\n...just found out that, for example, Ethereum choose to map this to RPC_INVALID_PARAMETER:\r\nhttps://github.com/ethereum/go-ethereum/blob/master/rpc/errors.go#L47-L52\r\n> The current RPC http implementation would internally map `RPC_INVALID_REQUEST` to a `400` http code whereas `RPC_INVALID_PARAMETER` would still be mapped to a `500` as it previously was with the `RPC_MISC_ERROR` code.\r\n\r\nFurthermore, the current implementation also handle the `help` command by throwing and then catching a `std::exception` in [std::string CRPCTable::help](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/server.cpp#L181-L201). The flaw in this implementation is that any `JSONRPCError` thrown are just ignored, because `JSONRPCError` isnât an Exception.\r\nFor example in the case of `getinfo`, which is **deprecated**, a call to `help getinfo` would lead to an error whereas the help command is just doing its job.\r\n\r\nBy switching to a `JSONRPCError` this proposition would catch each `std::exception` and `JSONRPCError` when executing the help command. This preserve the main `help` command behaviour: to present the usage/help to the user without any error code. A test case has been added to ensure every help can be reached without throwing an error.\r\n\r\nA step ahead would be to remove the help command dependence to the error handling process. Each commands could just return the **help** message when called from the `help` command.",
   "closed_at" : "2018-04-12T07:09:50Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/568769?v=4",
      "events_url" : "https://api.github.com/users/lutangar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/lutangar/followers",
      "following_url" : "https://api.github.com/users/lutangar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/lutangar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/lutangar",
      "id" : 568769,
      "login" : "lutangar",
      "node_id" : "MDQ6VXNlcjU2ODc2OQ==",
      "organizations_url" : "https://api.github.com/users/lutangar/orgs",
      "received_events_url" : "https://api.github.com/users/lutangar/received_events",
      "repos_url" : "https://api.github.com/users/lutangar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/lutangar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/lutangar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/lutangar"
   },
   "comments" : 5,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12736/comments",
   "created_at" : "2018-03-20T15:04:09Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12736/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/12736",
   "id" : 306905578,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      },
      {
         "color" : "E6F6D6",
         "default" : false,
         "id" : 135961,
         "name" : "Refactoring",
         "node_id" : "MDU6TGFiZWwxMzU5NjE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12736/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTc2MjIwNzQ0",
   "number" : 12736,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/12736.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12736",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/12736.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12736"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "[RPC][Refactoring] Meaningful error code when called with wrong number of arguments",
   "updated_at" : "2018-04-12T07:09:50Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12736",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/568769?v=4",
      "events_url" : "https://api.github.com/users/lutangar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/lutangar/followers",
      "following_url" : "https://api.github.com/users/lutangar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/lutangar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/lutangar",
      "id" : 568769,
      "login" : "lutangar",
      "node_id" : "MDQ6VXNlcjU2ODc2OQ==",
      "organizations_url" : "https://api.github.com/users/lutangar/orgs",
      "received_events_url" : "https://api.github.com/users/lutangar/received_events",
      "repos_url" : "https://api.github.com/users/lutangar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/lutangar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/lutangar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/lutangar"
   }
}
