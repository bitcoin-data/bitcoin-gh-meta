[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Will test later.\n",
      "created_at" : "2016-08-19T20:05:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241121271",
      "id" : 241121271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-19T20:05:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241121271",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added the missing button PNGs now to git. This should fix the compile issue. \n",
      "created_at" : "2016-08-19T20:39:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241129031",
      "id" : 241129031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-19T20:39:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241129031",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice. Some people might want to see actual byte-size, weights, etc; probably will overflow the one-line-per-item paradigm quickly - maybe have a dropdown box to add stuff?\n",
      "created_at" : "2016-08-19T20:44:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241130183",
      "id" : 241130183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-19T20:44:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241130183",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes. Dropdown box could make sense. Adding a second graph below or on the right that just plots different data would probably also look good.\n",
      "created_at" : "2016-08-19T20:49:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241131493",
      "id" : 241131493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-19T20:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241131493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nit: Fonts appear larger on my system. Otherwise this looks great!\n\n![screenshot from 2016-08-19 23-15-51](https://cloud.githubusercontent.com/assets/6399679/17824558/076cf120-6663-11e6-9e96-f20299977782.png)\n",
      "created_at" : "2016-08-19T21:17:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241137612",
      "id" : 241137612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-19T21:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241137612",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75552952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75552952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Missing value. I think this is in satoshis. What about using BTC?\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-19T21:19:10Z",
      "diff_hunk" : "@@ -0,0 +1,446 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"mempoolstats.h\"\n+#include \"ui_mempoolstats.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiutil.h\"\n+#include \"stats/stats.h\"\n+\n+static const char *LABEL_FONT = \"Helvetica Neue\";\n+static int LABLE_TITLE_SIZE = 22;\n+static int LABLE_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+static QSize buttonSize(30,14);\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+void ClickableSwitchItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableSwitchItem::setState(bool state)\n+{\n+    if (state)\n+        setPixmap(QIcon(QString::fromStdString(\":/icons/button_on_\"+iconPrefix)).pixmap(buttonSize));\n+    else\n+        setPixmap(QIcon(\":/icons/button_off\").pixmap(buttonSize));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create lables (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABLE_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        dynMemUsageSwitch = new ClickableSwitchItem();\n+        scene->addItem(dynMemUsageSwitch);\n+        dynMemUsageSwitch->iconPrefix = \"blue\";\n+        connect(dynMemUsageSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        dynMemUsageItem = scene->addText(tr(\"Dynamic Memory Usage\"));\n+        dynMemUsageItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Bold));\n+\n+        txCountSwitch = new ClickableSwitchItem();\n+        scene->addItem(txCountSwitch);\n+        txCountSwitch->iconPrefix = \"red\";\n+        connect(txCountSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        txCountItem = scene->addText(\"Amount of Transactions\");\n+        txCountItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Bold));\n+\n+        minFeeSwitch = new ClickableSwitchItem();\n+        minFeeSwitch->iconPrefix = \"green\";\n+        scene->addItem(minFeeSwitch);\n+        connect(minFeeSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        minFeeItem = scene->addText(tr(\"MinRelayFee per KB\"));\n+        minFeeItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABLE_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABLE_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    dynMemUsageSwitch->setState(drawDynMemUsage);\n+    txCountSwitch->setState(drawTxCount);\n+    minFeeSwitch->setState(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes(vSamples.back().dynMemUsage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().txCount));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().minFeePerK));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75552952",
      "id" : 75552952,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 186,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75552952",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574239"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't find this icon\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T07:18:35Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574239",
      "id" : 75574239,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574239",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574270"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed,... this does not exists yet. Will create one.\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T07:19:47Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574270",
      "id" : 75574270,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574270",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "http://typicons.com/ has some chart icons ;)\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T07:20:47Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75574283",
      "id" : 75574283,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75574283",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Switched to \"Arial\" as font and added a auto-size-adjustment.\nAlso added the \"charts\" icon for the menu.\n",
      "created_at" : "2016-08-20T08:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241186848",
      "id" : 241186848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-20T08:20:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241186848",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nit: run optimize-pngs and mention the icons in assets_attribution?\n",
      "created_at" : "2016-08-20T08:27:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241187117",
      "id" : 241187117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-20T08:27:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241187117",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please remember to keep in mind licensing. typicons are CC-BY-3.0, which is a non-free license.\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T08:33:25Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575204",
      "id" : 75575204,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575204",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Huh, I recall he gave you permission to dual-license as MIT?\n\ndae0a89d4b66f08c83ccc8c20cf37521084b6257\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T08:41:13Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575286",
      "id" : 75575286,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575286",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@luke-jr: keep in mind that we have permission from the author to distribute them under MIT: https://github.com/bitcoin/bitcoin/issues/6367#issuecomment-118250990\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T08:41:23Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75575291",
      "id" : 75575291,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75575291",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Optimized the pngs and added them to the assets attribution file.\n",
      "created_at" : "2016-08-20T10:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241191271",
      "id" : 241191271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-20T10:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241191271",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK.\n",
      "created_at" : "2016-08-20T11:26:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241194279",
      "id" : 241194279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-20T11:26:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241194279",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/20167871?v=4",
         "events_url" : "https://api.github.com/users/Mendeleyef/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Mendeleyef/followers",
         "following_url" : "https://api.github.com/users/Mendeleyef/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Mendeleyef/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Mendeleyef",
         "id" : 20167871,
         "login" : "Mendeleyef",
         "organizations_url" : "https://api.github.com/users/Mendeleyef/orgs",
         "received_events_url" : "https://api.github.com/users/Mendeleyef/received_events",
         "repos_url" : "https://api.github.com/users/Mendeleyef/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Mendeleyef/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Mendeleyef/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Mendeleyef"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75583192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75583192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, forgot about that. Thanks for the reminder.\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-08-20T19:00:59Z",
      "diff_hunk" : "@@ -351,6 +354,11 @@ void BitcoinGUI::createActions()\n     // initially disable the debug window menu item\n     openRPCConsoleAction->setEnabled(false);\n \n+    showMempoolStatsAction = new QAction(platformStyle->TextColorIcon(\":/icons/mempoolstats\"), tr(\"&Mempool Statistics\"), this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r75583192",
      "id" : 75583192,
      "original_commit_id" : "7650b315cc2a30cc5f4d64c8d070b4ad534f95e1",
      "original_position" : 26,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75583192",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit1: The graph window is always drawn on top of the main window, even when the main window is active. It makes it annoying to use the rest of the GUI while this is open.\n\nNit2: The quantity labels for the Dynamic Memory Usage values on the left hand side of the graph are cramped and cut off some of the characters. See \"500.00 KB\" in the screenshot. It is like that for larger values once it gets into the 100MBs too.\n\n![mempoolstats](https://cloud.githubusercontent.com/assets/20916903/17840383/03383888-67c3-11e6-9bb9-851928121d1a.png)\n",
      "created_at" : "2016-08-21T23:21:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-241288852",
      "id" : 241288852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-21T23:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241288852",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/20916903?v=4",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure what I'm doing wrong but I've merged this and the graph is empty, and has been for an hour now... :-s i.e. Dynamic Memory Usage is stuck on 0 bytes, Amount of Txs also 0, MinRelayFee also zero.\n",
      "created_at" : "2016-08-24T09:40:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242009639",
      "id" : 242009639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-24T09:41:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242009639",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@rebroad: what does `getmempoolinfo` tells you? Are you in sync on mainnet (or testnet)?\n",
      "created_at" : "2016-08-24T09:41:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242009928",
      "id" : 242009928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-24T09:41:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242009928",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli problem solved - I had blocksonly=1 in the config file!! It's working really nicely now - great job!! I love how it can be resized and the period of time changed without the graph resetting (unlike the network traffic graph!). \r\n\r\nAlso, ACK",
      "created_at" : "2016-08-25T15:46:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242436260",
      "id" : 242436260,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI0MjQzNjI2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-04-23T07:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242436260",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Ah, just noticed, now that my graph has gone over 24 hours, that the \"Last Day\" options behaves as if \"All Data\" is selected. i.e. it doesn't crop to 24 hours.",
      "created_at" : "2016-08-25T15:54:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242439498",
      "id" : 242439498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-25T15:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242439498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "OS X screenshots:\n![init](https://cloud.githubusercontent.com/assets/863730/18006228/2c34dbd0-6bd1-11e6-85ee-c96f4025e4ca.png)\n![more-than-10](https://cloud.githubusercontent.com/assets/863730/18006229/2d2739de-6bd1-11e6-93ce-03891f85a19f.png)\n",
      "created_at" : "2016-08-26T13:08:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242730542",
      "id" : 242730542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-26T13:08:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242730542",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Using images for basically-a-checkbox gives a non-native look on every system. It looks like [we can just colour a QCheckBox](http://www.qtcentre.org/threads/4941-qCheckbox-back-ground-color)?\n",
      "created_at" : "2016-08-27T04:23:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-242895064",
      "id" : 242895064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-08-27T04:23:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242895064",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebase needed.\n\nConcept ACK\n\nAgree about checkboxes...\n",
      "created_at" : "2016-09-07T10:13:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-245236582",
      "id" : 245236582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-09-07T10:13:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/245236582",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of #8501\n",
      "created_at" : "2016-09-09T07:04:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-245836261",
      "id" : 245836261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-09-09T07:04:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/245836261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78162958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78162958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jonasschnelli What do you think about using `QCheckBox` with `setPallette()` as suggested by @luke-jr ?\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-09T11:04:35Z",
      "diff_hunk" : "@@ -234,6 +237,11 @@ RES_ICONS = \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/button_off.png \\\n+  qt/res/icons/button_on_blue.png \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78162958",
      "id" : 78162958,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 29,
      "path" : "src/Makefile.qt.include",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78162958",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you please do something with this long line? It is there ~3 times and does a simple thing - worth a better method to add a sample?\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:33:58Z",
      "diff_hunk" : "@@ -2837,6 +2844,9 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     for(unsigned int i=0; i < pblock->vtx.size(); i++)\n         txChanged.push_back(std::make_tuple(pblock->vtx[i], pindexNew, i));\n \n+    // update mempool stats\n+    CStats::DefaultStats()->addMempoolSample(mempool.size(), mempool.DynamicMemoryUsage(), mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904256",
      "id" : 78904256,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 49,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 107226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904256",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think Checkboxes are appropriate for now.\n\nBut we should consider using non-standard UI elements to improve the look and feel. I know, developers hate this. :-)\n\nBut have a look at https://github.com/bitcoin/bitcoin/pull/5896. I think people liked it because the look and feel was different then just \"Arial 12 and standard UI elements\".\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:36:18Z",
      "diff_hunk" : "@@ -234,6 +237,11 @@ RES_ICONS = \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/button_off.png \\\n+  qt/res/icons/button_on_blue.png \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904672",
      "id" : 78904672,
      "in_reply_to_id" : 78162958,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 29,
      "path" : "src/Makefile.qt.include",
      "position" : null,
      "pull_request_review_id" : 107602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904672",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904837"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm.. I think this line is reasonable? How would you improve it?\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:37:28Z",
      "diff_hunk" : "@@ -2837,6 +2844,9 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     for(unsigned int i=0; i < pblock->vtx.size(); i++)\n         txChanged.push_back(std::make_tuple(pblock->vtx[i], pindexNew, i));\n \n+    // update mempool stats\n+    CStats::DefaultStats()->addMempoolSample(mempool.size(), mempool.DynamicMemoryUsage(), mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78904837",
      "id" : 78904837,
      "in_reply_to_id" : 78904256,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 49,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 107746,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78904837",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78905024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78905024"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pass const ref. mempool only and do the rest in the method?\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:38:55Z",
      "diff_hunk" : "@@ -2837,6 +2844,9 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     for(unsigned int i=0; i < pblock->vtx.size(); i++)\n         txChanged.push_back(std::make_tuple(pblock->vtx[i], pindexNew, i));\n \n+    // update mempool stats\n+    CStats::DefaultStats()->addMempoolSample(mempool.size(), mempool.DynamicMemoryUsage(), mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78905024",
      "id" : 78905024,
      "in_reply_to_id" : 78904256,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 49,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 107906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78905024",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78905516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78905516"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like the current layering concept. IMO its preferable that the `stats.cpp` module has no knowledge over the `txmempool.h`'s classes, etc., I prefer to keep it as \"dump\" as possible.\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:42:17Z",
      "diff_hunk" : "@@ -2837,6 +2844,9 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     for(unsigned int i=0; i < pblock->vtx.size(); i++)\n         txChanged.push_back(std::make_tuple(pblock->vtx[i], pindexNew, i));\n \n+    // update mempool stats\n+    CStats::DefaultStats()->addMempoolSample(mempool.size(), mempool.DynamicMemoryUsage(), mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78905516",
      "id" : 78905516,
      "in_reply_to_id" : 78904256,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 49,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 108504,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78905516",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78906055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78906055"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`-Wshadow` warning:\n\n```\nqt/mempoolstats.cpp:351:16: warning: declaration shadows a local variable [-Wshadow]\n        qint64 step = secsTotal/amountOfLinesV;\n               ^\nqt/mempoolstats.cpp:240:11: note: previous declaration is here\n    qreal step = maxwidth/(double)vSamples.size();\n          ^\n1 warning generated.\n```\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:46:10Z",
      "diff_hunk" : "@@ -0,0 +1,452 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"mempoolstats.h\"\n+#include \"ui_mempoolstats.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiutil.h\"\n+#include \"stats/stats.h\"\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+static QSize buttonSize(30,14);\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+void ClickableSwitchItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableSwitchItem::setState(bool state)\n+{\n+    if (state)\n+        setPixmap(QIcon(QString::fromStdString(\":/icons/button_on_\"+iconPrefix)).pixmap(buttonSize));\n+    else\n+        setPixmap(QIcon(\":/icons/button_off\").pixmap(buttonSize));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        dynMemUsageSwitch = new ClickableSwitchItem();\n+        scene->addItem(dynMemUsageSwitch);\n+        dynMemUsageSwitch->iconPrefix = \"blue\";\n+        connect(dynMemUsageSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        dynMemUsageItem = scene->addText(tr(\"Dynamic Memory Usage\"));\n+        dynMemUsageItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        txCountSwitch = new ClickableSwitchItem();\n+        scene->addItem(txCountSwitch);\n+        txCountSwitch->iconPrefix = \"red\";\n+        connect(txCountSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        txCountItem = scene->addText(\"Amount of Transactions\");\n+        txCountItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        minFeeSwitch = new ClickableSwitchItem();\n+        minFeeSwitch->iconPrefix = \"green\";\n+        scene->addItem(minFeeSwitch);\n+        connect(minFeeSwitch, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        minFeeItem = scene->addText(tr(\"MinRelayFee per KB\"));\n+        minFeeItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    dynMemUsageSwitch->setState(drawDynMemUsage);\n+    txCountSwitch->setState(drawTxCount);\n+    minFeeSwitch->setState(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes(vSamples.back().dynMemUsage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().txCount));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().minFeePerK));\n+    }\n+\n+    // set dynamic label positions\n+    int maxValueSize = std::max(std::max(txCountValueItem->boundingRect().width(), dynMemUsageValueItem->boundingRect().width()), minFeeValueItem->boundingRect().width());\n+    maxValueSize = ceil(maxValueSize*0.13)*10; //use size steps of 10dip\n+\n+    int rightPaddingLabels = std::max(std::max(dynMemUsageItem->boundingRect().width(), txCountItem->boundingRect().width()), minFeeItem->boundingRect().width())+maxValueSize;\n+    int rightPadding = 10;\n+    dynMemUsageItem->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageItem->pos().y());\n+    dynMemUsageSwitch->setPos(dynMemUsageItem->pos().x()-buttonSize.width(), dynMemUsageItem->pos().y()+dynMemUsageSwitch->boundingRect().height()/3.0);\n+\n+    txCountItem->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageItem->pos().y()+dynMemUsageItem->boundingRect().height());\n+    txCountSwitch->setPos(txCountItem->pos().x()-buttonSize.width(), txCountItem->pos().y()+txCountSwitch->boundingRect().height()/3.0);\n+\n+    minFeeItem->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageItem->pos().y()+dynMemUsageItem->boundingRect().height()+txCountItem->boundingRect().height());\n+    minFeeSwitch->setPos(minFeeItem->pos().x()-buttonSize.width(), minFeeItem->pos().y()+minFeeSwitch->boundingRect().height()/3.0);\n+\n+    dynMemUsageValueItem->setPos(width()-dynMemUsageValueItem->boundingRect().width()-rightPadding, dynMemUsageItem->pos().y());\n+    txCountValueItem->setPos(width()-txCountValueItem->boundingRect().width()-rightPadding, txCountItem->pos().y());\n+    minFeeValueItem->setPos(width()-minFeeValueItem->boundingRect().width()-rightPadding, minFeeItem->pos().y());\n+\n+    titleItem->setPos(5,minFeeSwitch->pos().y()+minFeeSwitch->boundingRect().height()-titleItem->boundingRect().height()+10);\n+    titleLine->setLine(10, titleItem->pos().y()+titleItem->boundingRect().height(), width()-10, titleItem->pos().y()+titleItem->boundingRect().height());\n+\n+    // center the optional \"no data\" label\n+    noDataItem->setPos(width()/2.0-noDataItem->boundingRect().width()/2.0, height()/2.0);\n+\n+    // set the position of the filter icons\n+    static const int filterBottomPadding = 30;\n+    int totalWidth = last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+allDataLabel->boundingRect().width()+30;\n+    last10MinLabel->setPos((width()-totalWidth)/2.0,height()-filterBottomPadding);\n+    lastHourLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+10,height()-filterBottomPadding);\n+    lastDayLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+20,height()-filterBottomPadding);\n+    allDataLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+30,height()-filterBottomPadding);\n+\n+    // don't paint the grind/graph if there are no or only a signle sample\n+    if (vSamples.size() < 2)\n+    {\n+        noDataItem->setVisible(true);\n+        return;\n+    }\n+    noDataItem->setVisible(false);\n+\n+    int bottom = ui->graphicsView->size().height()-GRAPH_PADDING_BOTTOM;\n+    qreal maxwidth = ui->graphicsView->size().width()-GRAPH_PADDING_LEFT-GRAPH_PADDING_RIGHT;\n+    qreal maxheightG = ui->graphicsView->size().height()-GRAPH_PADDING_TOP-GRAPH_PADDING_TOP_LABEL-LABEL_HEIGHT;\n+    float paddingTopSizeFactor = 1.2;\n+    qreal step = maxwidth/(double)vSamples.size();\n+\n+    // make sure we skip samples that would be drawn narrower then 1px\n+    // larger window can result in drawing more samples\n+    int samplesStep = 1;\n+    if (step < 1)\n+        samplesStep = ceil(1/samplesStep);\n+\n+    // find maximum values\n+    int64_t maxDynMemUsage = 0;\n+    int64_t minDynMemUsage = std::numeric_limits<int64_t>::max();\n+    int64_t maxTxCount = 0;\n+    int64_t minTxCount = std::numeric_limits<int64_t>::max();\n+    int64_t maxMinFee = 0;\n+    uint32_t maxTimeDetla = vSamples.back().timeDelta-vSamples.front().timeDelta;\n+    for(const struct CStatsMempoolSample &sample : vSamples)\n+    {\n+        if (sample.dynMemUsage > maxDynMemUsage)\n+            maxDynMemUsage = sample.dynMemUsage;\n+\n+        if (sample.dynMemUsage < minDynMemUsage)\n+            minDynMemUsage = sample.dynMemUsage;\n+\n+        if (sample.txCount > maxTxCount)\n+            maxTxCount = sample.txCount;\n+\n+        if (sample.txCount < minTxCount)\n+            minTxCount = sample.txCount;\n+\n+        if (sample.minFeePerK > maxMinFee)\n+            maxMinFee = sample.minFeePerK;\n+    }\n+\n+    int64_t dynMemUsagelog10Val = pow(10.0f, floor(log10(maxDynMemUsage*paddingTopSizeFactor-minDynMemUsage)));\n+    int64_t topDynMemUsage = ceil((double)maxDynMemUsage*paddingTopSizeFactor/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+    int64_t bottomDynMemUsage = floor((double)minDynMemUsage/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+\n+    int64_t txCountLog10Val = pow(10.0f, floor(log10(maxTxCount*paddingTopSizeFactor-minTxCount)));\n+    int64_t topTxCount = ceil((double)maxTxCount*paddingTopSizeFactor/txCountLog10Val)*txCountLog10Val;\n+    int64_t bottomTxCount = floor((double)minTxCount/txCountLog10Val)*txCountLog10Val;\n+    \n+    qreal currentX = GRAPH_PADDING_LEFT;\n+    QPainterPath dynMemUsagePath(QPointF(currentX, bottom));\n+    QPainterPath txCountPath(QPointF(currentX, bottom));\n+    QPainterPath minFeePath(QPointF(currentX, bottom));\n+\n+    // draw the three possible paths\n+    for (mempoolSamples_t::iterator it = vSamples.begin(); it != vSamples.end(); it+=samplesStep)\n+    {\n+        const struct CStatsMempoolSample &sample = (*it);\n+        qreal xPos = maxTimeDetla > 0 ? maxwidth/maxTimeDetla*(sample.timeDelta-vSamples.front().timeDelta) : maxwidth/(double)vSamples.size();\n+        if (sample.timeDelta == vSamples.front().timeDelta)\n+        {\n+            dynMemUsagePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.dynMemUsage-bottomDynMemUsage));\n+            txCountPath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.txCount-bottomTxCount));\n+            minFeePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.minFeePerK);\n+        }\n+        else\n+        {\n+            dynMemUsagePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.dynMemUsage-bottomDynMemUsage));\n+            txCountPath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.txCount-bottomTxCount));\n+            minFeePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.minFeePerK);\n+        }\n+    }\n+\n+    // copy the path for the fill\n+    QPainterPath dynMemUsagePathFill(dynMemUsagePath);\n+\n+    // close the path for the fill\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT+maxwidth, bottom);\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT, bottom);\n+\n+    QPainterPath dynMemUsageGridPath(QPointF(currentX, bottom));\n+\n+    // draw horizontal grid\n+    int amountOfLinesH = 5;\n+    QFont gridFont;\n+    gridFont.setPointSize(8);\n+    for (int i=0; i < amountOfLinesH; i++)\n+    {\n+        qreal lY = bottom-i*(maxheightG/(amountOfLinesH-1));\n+        dynMemUsageGridPath.moveTo(GRAPH_PADDING_LEFT, lY);\n+        dynMemUsageGridPath.lineTo(GRAPH_PADDING_LEFT+maxwidth, lY);\n+\n+        size_t gridDynSize = (float)i*(topDynMemUsage-bottomDynMemUsage)/(amountOfLinesH-1) + bottomDynMemUsage;\n+        size_t gridTxCount = (float)i*(topTxCount-bottomTxCount)/(amountOfLinesH-1) + bottomTxCount;\n+\n+        QGraphicsTextItem *itemDynSize = scene->addText(GUIUtil::formatBytes(gridDynSize), gridFont);\n+        QGraphicsTextItem *itemTxCount = scene->addText(QString::number(gridTxCount), gridFont);\n+\n+        itemDynSize->setPos(GRAPH_PADDING_LEFT-itemDynSize->boundingRect().width(), lY-(itemDynSize->boundingRect().height()/2));\n+        itemTxCount->setPos(GRAPH_PADDING_LEFT+maxwidth, lY-(itemDynSize->boundingRect().height()/2));\n+        redrawItems.append(itemDynSize);\n+        redrawItems.append(itemTxCount);\n+    }\n+\n+    // draw vertical grid\n+    int amountOfLinesV = 4;\n+    QDateTime drawTime(fromDateTime);\n+    std::string fromS = fromDateTime.toString().toStdString();\n+    std::string toS = toDateTime.toString().toStdString();\n+    qint64 secsTotal = fromDateTime.secsTo(toDateTime);\n+    for (int i=0; i <= amountOfLinesV; i++)\n+    {\n+        qreal lX = i*(maxwidth/(amountOfLinesV));\n+        dynMemUsageGridPath.moveTo(GRAPH_PADDING_LEFT+lX, bottom);\n+        dynMemUsageGridPath.lineTo(GRAPH_PADDING_LEFT+lX, bottom-maxheightG);\n+\n+        QGraphicsTextItem *item = scene->addText(drawTime.toString(\"HH:mm\"), gridFont);\n+        item->setPos(GRAPH_PADDING_LEFT+lX-(item->boundingRect().width()/2), bottom);\n+        redrawItems.append(item);\n+        qint64 step = secsTotal/amountOfLinesV;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78906055",
      "id" : 78906055,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 351,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 334,
      "pull_request_review_id" : 109004,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78906055",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78906266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78906266"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`-Wshadow` warning:\n\n```\nstats/rpc_stats.cpp:65:42: warning: declaration shadows a variable in the global namespace [-Wshadow]\nvoid RegisterStatsRPCCommands(CRPCTable& tableRPC)\n                                         ^\n./rpc/server.h:172:18: note: previous declaration is here\nextern CRPCTable tableRPC;\n                 ^\n1 warning generated.\n```\n",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-09-15T07:47:29Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"rpc/server.h\"\n+#include \"stats/stats.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <stdint.h>\n+\n+#include <univalue.h>\n+\n+UniValue getmempoolstats(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw std::runtime_error(\n+            \"getmempoolstats\\n\"\n+            \"\\nReturns the collected mempool statictics (non-linear non-interpolated samples).\\n\"\n+            \"\\nResult:\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time_from\\\" : \\\"timestamp\\\",     (numeric) Timestamp, first sample\\n\"\n+            \"    \\\"time_to\\\"   : \\\"timestamp\\\",     (numeric) Timestamp, last sample\\n\"\n+            \"    \\\"samples\\\"   : [\\n\"\n+            \"                    [<delta_in_secs>,<tx_count>,<dynamic_mem_usage>,<min_fee_per_k>],\\n\"\n+            \"                    [<delta_in_secs>,<tx_count>,<dynamic_mem_usage>,<min_fee_per_k>],\\n\"\n+            \"                    ...\\n\"\n+            \"                  ]\\n\"\n+            \"  }\\n\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"getmempoolstats\", \"\") + HelpExampleRpc(\"getmempoolstats\", \"\"));\n+\n+    // get stats from the core stats model\n+    uint64_t timeFrom = 0;\n+    uint64_t timeTo = 0;\n+    mempoolSamples_t samples = CStats::DefaultStats()->mempoolGetValuesInRange(timeFrom, timeTo);\n+\n+    // use \"flat\" json encoding for performance reasons\n+    UniValue samplesObj(UniValue::VARR);\n+    for (struct CStatsMempoolSample& sample : samples) {\n+        UniValue singleSample(UniValue::VARR);\n+        singleSample.push_back(UniValue((uint64_t)sample.timeDelta));\n+        singleSample.push_back(UniValue(sample.txCount));\n+        singleSample.push_back(UniValue(sample.dynMemUsage));\n+        singleSample.push_back(UniValue(sample.minFeePerK));\n+        samplesObj.push_back(singleSample);\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"time_from\", timeFrom));\n+    result.push_back(Pair(\"time_to\", timeTo));\n+    result.push_back(Pair(\"samples\", samplesObj));\n+\n+    return result;\n+}\n+\n+static const CRPCCommand commands[] =\n+{\n+    //  category              name                      actor (function)         okSafeMode\n+    //  --------------------- ------------------------  -----------------------  ----------\n+        {\"stats\",             \"getmempoolstats\",        &getmempoolstats,        true},\n+\n+};\n+\n+void RegisterStatsRPCCommands(CRPCTable& tableRPC)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r78906266",
      "id" : 78906266,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 65,
      "path" : "src/stats/rpc_stats.cpp",
      "position" : null,
      "pull_request_review_id" : 109203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78906266",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I really like this!\n\nSuggestions:\n1. the menu item should read Mempool statistics (small s) to match other items in the menu.\n2. the window title should be the same (both title bar and top header - I think it is there only to balance the \"legenda\" on the right...) ;-)\n3. the graph itself in the window is not centered - it is a bit on the left side here.\n4. Esc should close the window.\n",
      "created_at" : "2016-09-15T09:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-247277075",
      "id" : 247277075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-09-25T10:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247277075",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebase needed.\n\nHmm, github shows \"Conflicting files\"...\n",
      "created_at" : "2016-09-25T10:22:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-249413944",
      "id" : 249413944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-09-25T10:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249413944",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've been testing this under various window managers. On mwm the title of the mempool window says \"bitcoin-qt\". Also, it's not its own window like the debug window is, but a child of the main bitcoin-qt window, so it cannot be minimised on its own, and is minimised whenever the main window is minimised.\n",
      "created_at" : "2016-10-16T07:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-254031553",
      "id" : 254031553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-10-16T07:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254031553",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @rebroad.\nI have plans to completely overhaul this PR during this week.\n",
      "created_at" : "2016-10-17T06:45:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-254125218",
      "id" : 254125218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-10-17T06:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254125218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli Needed a little rebasing... d7857e11b67db6342466b06016971a6343b29ddd\n",
      "created_at" : "2016-10-22T03:41:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-255505114",
      "id" : 255505114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-10-22T03:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255505114",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK, looks nice!\n",
      "created_at" : "2016-10-26T11:54:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-256325388",
      "id" : 256325388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-10-26T11:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/256325388",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ping @jonasschnelli Did you get to overhauling this PR?\n",
      "created_at" : "2016-11-07T07:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-258762499",
      "id" : 258762499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-07T07:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258762499",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ACK 7a7d631\nTested on Windows x64\nNit: Some elements overlay with my system font size and default window size\nMaybe we should add this as a Debug window tab?\n![GUI Screenshot](https://cloud.githubusercontent.com/assets/11365204/20248561/ee886e4c-a9e6-11e6-9e3d-6f40c3bc9d01.png)\n",
      "created_at" : "2016-11-13T20:23:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-260209935",
      "id" : 260209935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-13T20:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260209935",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/11365204?v=4",
         "events_url" : "https://api.github.com/users/Victorsueca/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Victorsueca/followers",
         "following_url" : "https://api.github.com/users/Victorsueca/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Victorsueca/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Victorsueca",
         "id" : 11365204,
         "login" : "Victorsueca",
         "organizations_url" : "https://api.github.com/users/Victorsueca/orgs",
         "received_events_url" : "https://api.github.com/users/Victorsueca/received_events",
         "repos_url" : "https://api.github.com/users/Victorsueca/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Victorsueca/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Victorsueca/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Victorsueca"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post overhaul OS X screenshots:\r\n![screen shot](https://cloud.githubusercontent.com/assets/863730/20589991/2576774c-b25b-11e6-9851-171b2e8f35c6.png)\r\n![screen shot 3](https://cloud.githubusercontent.com/assets/863730/20589993/27fbb464-b25b-11e6-8d20-51a448f01100.png)\r\n![screen shot 5](https://cloud.githubusercontent.com/assets/863730/20592539/12499dd0-b269-11e6-87c0-83b667170bb3.png)\r\n",
      "created_at" : "2016-11-24T09:12:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-262725811",
      "id" : 262725811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-24T09:12:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262725811",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89458472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89458472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Non-standard UI elements *ruin* the look and feel...",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-11-24T09:16:28Z",
      "diff_hunk" : "@@ -234,6 +237,11 @@ RES_ICONS = \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/button_off.png \\\n+  qt/res/icons/button_on_blue.png \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89458472",
      "id" : 89458472,
      "in_reply_to_id" : 78162958,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 29,
      "path" : "src/Makefile.qt.include",
      "position" : null,
      "pull_request_review_id" : 10003153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89458472",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89469638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89469638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure. That's probably a matter of taste.\r\nThe thing why I'd like to keep the non-standard UI elements is, that I'm using a `QGraphicScene` at this point. Adding a `QWidget` (checkbox) at this point breaks the flexibility of reusing the `QGraphicScene` and draw it in any scale.\r\n\r\nI think the checkbox could be different then the one thats currently used. And it probably should be draw internally and not use a PNG.",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-11-24T10:23:28Z",
      "diff_hunk" : "@@ -234,6 +237,11 @@ RES_ICONS = \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/button_off.png \\\n+  qt/res/icons/button_on_blue.png \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89469638",
      "id" : 89469638,
      "in_reply_to_id" : 78162958,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 29,
      "path" : "src/Makefile.qt.include",
      "position" : null,
      "pull_request_review_id" : 10014440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89469638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89547215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89547215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Because it's a matter of taste is precisely why it should use standard UI elements. The standard element should do all the drawing. If the user doesn't like their standard widgets, they can change them.",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-11-24T21:28:13Z",
      "diff_hunk" : "@@ -234,6 +237,11 @@ RES_ICONS = \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/button_off.png \\\n+  qt/res/icons/button_on_blue.png \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89547215",
      "id" : 89547215,
      "in_reply_to_id" : 78162958,
      "original_commit_id" : "d0d5c7d60f2b3aa716a9b4ce9cd9487ebe9bb659",
      "original_position" : 29,
      "path" : "src/Makefile.qt.include",
      "position" : null,
      "pull_request_review_id" : 10093282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89547215",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed the custom checkbox icons.\r\nThanks to `QGraphicsProxyWidget`, it's still flexible in Size.",
      "created_at" : "2016-11-25T10:36:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-262928335",
      "id" : 262928335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-25T10:36:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262928335",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is how it looks now on OSX:\r\n<img width=\"592\" alt=\"bildschirmfoto 2016-11-25 um 11 38 32\" src=\"https://cloud.githubusercontent.com/assets/178464/20622607/f7ad273a-b303-11e6-8941-1ccd11cd604d.png\">\r\n",
      "created_at" : "2016-11-25T10:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-262929017",
      "id" : 262929017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-25T10:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262929017",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89620288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89620288"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No button_* files now.",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-11-25T13:53:43Z",
      "diff_hunk" : "@@ -79,6 +80,7 @@ Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n        src/qt/res/icons/bitcoin.*\n+       src/qt/res/icons/button_*",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r89620288",
      "id" : 89620288,
      "original_commit_id" : "251ee281a315d2de061c575c9b6e4c6e3acc7eb5",
      "original_position" : 12,
      "path" : "contrib/debian/copyright",
      "position" : null,
      "pull_request_review_id" : 10165076,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89620288",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli Please address my comments here: https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-247277075",
      "created_at" : "2016-11-25T16:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-262990386",
      "id" : 262990386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-25T16:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262990386",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonasschnelli https://github.com/luke-jr/bitcoin/commit/ee121aa40fee4da9666d66c49cebad1b861b311d",
      "created_at" : "2016-11-26T12:35:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-263061131",
      "id" : 263061131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-26T12:35:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263061131",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the click-the-human-readable-timeframe was better, but I replaced it with a slider to match our bandwidth graph. Probably they should both be the same, whatever we go with (ie, replace the sliders together, in a subsequent PR).",
      "created_at" : "2016-11-27T07:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-263106878",
      "id" : 263106878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-11-27T07:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263106878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "More graph things are cool. But I think this data is basically worthless to users, if someone goes and makes and gives you a zillion minrelayfee transactions that will never get confirmed ... the graph will read maximum, but nothing has really changed for the user or the network.\r\n\r\nA stacked chart of mempool bytes at different feerates would be much more interesting and useful to users like how sipa's chart displays the utxo set http://bitcoin.sipa.be/utxo_size.png as it would make it possible to tell things that will get confirmed (bottom stacks of the graph) from noise (higher stacks).\r\n\r\n",
      "created_at" : "2016-12-04T22:04:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-264735147",
      "id" : 264735147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-12-04T22:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264735147",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell Showing memory utilization, especially in relation to minfeerelay is useful for anyone wanting to refine the algorithm for setting minfeerelay.\r\n\r\nI have set maxmempool to 144, i.e. 24 hours worth of 1MB blocks - in order to give me an indication of the minimum fee needed to keep a tx in the mempool for at least 24 hours - although not an indication for how much the fee needs to be to get it confirmed within 24 hours, admittedly.",
      "created_at" : "2016-12-05T01:06:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-264746929",
      "id" : 264746929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-12-05T01:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264746929",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the idea of the stacked chart. However I wanted to start with a simple graph to get in the fundamental stuff (stats core classes, drawing stuff). At the moment, the only insight into the mempool from the GUI you can get is the amount of transactions. IMO step after step.",
      "created_at" : "2016-12-05T13:10:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-264850016",
      "id" : 264850016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-12-05T13:10:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264850016",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> However I wanted to start with a simple graph to get in the fundamental stuff (stats core classes, drawing stuff).\r\n\r\nI tend to agree - one step at a time, scope creep before the initial merge will likely mean that this will never happen at all. \r\n(needs rebase)",
      "created_at" : "2016-12-08T12:16:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-265726728",
      "id" : 265726728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-12-08T12:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265726728",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "![screenshot at 2016-12-11 10 34 09](https://cloud.githubusercontent.com/assets/1530283/21077957/6680b5cc-bf8f-11e6-9bcd-3a5087436fa1.png)\r\n\r\n@laanwj spot on re scope creep. In this sense, I'd say ACK to merging it now.\r\n\r\nThe screenshot attached is a typical example of what it looks like after running for a week or so. One thing that becomes apparent is that the horizontal graph label points become useless - i.e. once it goes over 24 hours of duration, it would make sense to switch to date instead of time.",
      "created_at" : "2016-12-11T03:50:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-266258938",
      "id" : 266258938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2016-12-11T03:50:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266258938",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r93399178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93399178"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doing it this way doesn't update `-help`...",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2016-12-21T09:07:55Z",
      "diff_hunk" : "@@ -148,6 +148,9 @@ void OptionsModel::Init(bool resetSettings)\n     if (!SoftSetArg(\"-lang\", settings.value(\"language\").toString().toStdString()))\n         addOverriddenOption(\"-lang\");\n \n+    // Enable statistics by default\n+    SoftSetBoolArg(\"-statsenable\", true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r93399178",
      "id" : 93399178,
      "original_commit_id" : "251ee281a315d2de061c575c9b6e4c6e3acc7eb5",
      "original_position" : 5,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 13924417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2017-11-22T22:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93399178",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebase needed.\r\n\r\nI really really would like to see this included in the GUI in the next version!\r\n",
      "created_at" : "2017-02-22T21:42:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-281813515",
      "id" : 281813515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-02-22T21:42:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281813515",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, rebased (at least part of the way) in my `stats_rpc-0.14` and `stats_qt-0.14` branches.\r\n",
      "created_at" : "2017-02-23T00:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-281853675",
      "id" : 281853675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-02-23T00:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281853675",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is based on #8501 (core change with additional RPC command) which has to get right first.\r\nAnother solution would be to not depend on a core statistics \"module\" and therefore collect the stats in a GUI container only. Maybe this would be the better first step.",
      "created_at" : "2017-02-23T07:42:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-281918721",
      "id" : 281918721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-02-23T07:42:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281918721",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK needs rebase",
      "created_at" : "2017-02-23T23:45:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-282158856",
      "id" : 282158856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-02-23T23:45:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282158856",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The graphics are good, the design does not forget \r\nHere you can see the different designs of graphs\r\nhttp://www.bittbox.com/showcase/30-flat-analytics-ui-dashboards\r\n\r\nI like this one\r\n\r\n![](https://d13yacurqjgara.cloudfront.net/users/13307/screenshots/1719845/attachments/275847/Statistics_-_real_size.jpg)\r\nhttps://dribbble.com/shots/1719845-Statistics-General-trends",
      "created_at" : "2017-03-08T18:14:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-285121778",
      "id" : 285121778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-03-08T18:14:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285121778",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/10137?v=4",
         "events_url" : "https://api.github.com/users/ghost/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ghost/followers",
         "following_url" : "https://api.github.com/users/ghost/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ghost/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ghost",
         "id" : 10137,
         "login" : "ghost",
         "organizations_url" : "https://api.github.com/users/ghost/orgs",
         "received_events_url" : "https://api.github.com/users/ghost/received_events",
         "repos_url" : "https://api.github.com/users/ghost/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ghost/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ghost/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ghost"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Seems the discussion here bled out.\r\n\r\nI'd say please review the code, and then get it merged. Visual details etc can be changed later. Real-time statistics is one reason why people like to run their own nodes.",
      "created_at" : "2017-06-06T15:00:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-306513906",
      "id" : 306513906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-06-06T15:00:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306513906",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Needs rebase.",
      "created_at" : "2017-06-28T13:33:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-311661074",
      "id" : 311661074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-06-28T13:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311661074",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nI can't compile this ([log gist](https://gist.github.com/Sjors/f8edebd96e02c17c8d19701a3fc504cb)). I'll try again after the rebase.\r\n\r\n> A stacked chart of mempool bytes at different feerates would be much more interesting and useful\r\n\r\nAgreed.\r\n\r\nIt would be nice to have a little chart icon in the bottom right corner of the wallet (in a future PR).\r\n\r\nThat said, I also agree with:\r\n\r\n> Visual details etc can be changed later.\r\n\r\n\r\n",
      "created_at" : "2017-11-09T14:47:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-343176547",
      "id" : 343176547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-11-09T14:47:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343176547",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is based on https://github.com/bitcoin/bitcoin/pull/8501 and the question is, should it be Qt only (no Qt free stats collector) or should we try to get #8501 done?\r\n(will rebase both PRs soon)",
      "created_at" : "2017-11-09T18:54:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-343254609",
      "id" : 343254609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-11-09T18:54:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343254609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.\r\nIt's currently not Qt4 compatible due to a lambda signal connect (travis reported / working on it).",
      "created_at" : "2017-11-22T22:33:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-346490889",
      "id" : 346490889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-11-22T22:33:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346490889",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> It's currently not Qt4 compatible due to a lambda signal connect (travis reported / working on it).\r\n\r\nIf it's a lot of work, feel free to leave \"nice but not critical\" features such as this out when compiling with Qt4.",
      "created_at" : "2017-11-23T15:31:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-346647371",
      "id" : 346647371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-11-23T15:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346647371",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK with Qt5",
      "created_at" : "2017-12-15T00:53:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-351881404",
      "id" : 351881404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2017-12-15T00:53:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351881404",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6299681?v=4",
         "events_url" : "https://api.github.com/users/PierreRochard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PierreRochard/followers",
         "following_url" : "https://api.github.com/users/PierreRochard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PierreRochard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PierreRochard",
         "id" : 6299681,
         "login" : "PierreRochard",
         "organizations_url" : "https://api.github.com/users/PierreRochard/orgs",
         "received_events_url" : "https://api.github.com/users/PierreRochard/received_events",
         "repos_url" : "https://api.github.com/users/PierreRochard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PierreRochard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PierreRochard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PierreRochard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160122127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160122127"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: bump to 2018? ",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T11:29:36Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160122127",
      "id" : 160122127,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 1,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 1,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160122127",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160130240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160130240"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: `numberOfLinesV`",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:15:13Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        \n+        \n+        QCheckBox *cb0 = new QCheckBox(\"Dynamic Memory Usage\");\n+        cb0->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        dynMemUsageSwitch = scene->addWidget(cb0);\n+        connect(cb0, &QCheckBox::stateChanged, [cb0, this](){ drawDynMemUsage = cb0->isChecked(); drawChart(); });\n+        cb0->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb1 = new QCheckBox(\"Amount of Transactions\");\n+        cb1->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        txCountSwitch = scene->addWidget(cb1);\n+        scene->addItem(txCountSwitch);\n+        connect(cb1, &QCheckBox::stateChanged, [cb1, this](){ drawTxCount = cb1->isChecked(); drawChart(); });\n+        cb1->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb2 = new QCheckBox(\"MinRelayFee per KB\");\n+        cb2->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        minFeeSwitch = scene->addWidget(cb2);\n+        scene->addItem(minFeeSwitch);\n+        connect(cb2, &QCheckBox::stateChanged, [cb2, this](){ drawMinFee = cb2->isChecked(); drawChart(); });\n+        cb2->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    ((QCheckBox *)dynMemUsageSwitch->widget())->setChecked(drawDynMemUsage);\n+    ((QCheckBox *)txCountSwitch->widget())->setChecked(drawTxCount);\n+    ((QCheckBox *)minFeeSwitch->widget())->setChecked(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes((uint64_t)vSamples.back().m_dyn_mem_usage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().m_tx_count));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().m_min_fee_per_k));\n+    }\n+\n+    // set dynamic label positions\n+    int maxValueSize = std::max(std::max(txCountValueItem->boundingRect().width(), dynMemUsageValueItem->boundingRect().width()), minFeeValueItem->boundingRect().width());\n+    maxValueSize = ceil(maxValueSize*0.11)*10; //use size steps of 10dip\n+\n+    int rightPaddingLabels = std::max(std::max(dynMemUsageSwitch->boundingRect().width(), txCountSwitch->boundingRect().width()), minFeeSwitch->boundingRect().width())+maxValueSize;\n+    int rightPadding = 10;\n+    dynMemUsageSwitch->setPos(width()-rightPaddingLabels-rightPadding, 5);\n+    \n+    txCountSwitch->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageSwitch->pos().y()+dynMemUsageSwitch->boundingRect().height());\n+    \n+    minFeeSwitch->setPos(width()-rightPaddingLabels-rightPadding, txCountSwitch->pos().y()+txCountSwitch->boundingRect().height());\n+\n+    dynMemUsageValueItem->setPos(width()-dynMemUsageValueItem->boundingRect().width()-rightPadding, dynMemUsageSwitch->pos().y());\n+    txCountValueItem->setPos(width()-txCountValueItem->boundingRect().width()-rightPadding, txCountSwitch->pos().y());\n+    minFeeValueItem->setPos(width()-minFeeValueItem->boundingRect().width()-rightPadding, minFeeSwitch->pos().y());\n+\n+    titleItem->setPos(5,minFeeSwitch->pos().y()+minFeeSwitch->boundingRect().height()-titleItem->boundingRect().height()+10);\n+    titleLine->setLine(10, titleItem->pos().y()+titleItem->boundingRect().height(), width()-10, titleItem->pos().y()+titleItem->boundingRect().height());\n+\n+    // center the optional \"no data\" label\n+    noDataItem->setPos(width()/2.0-noDataItem->boundingRect().width()/2.0, height()/2.0);\n+\n+    // set the position of the filter icons\n+    static const int filterBottomPadding = 30;\n+    int totalWidth = last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+allDataLabel->boundingRect().width()+30;\n+    last10MinLabel->setPos((width()-totalWidth)/2.0,height()-filterBottomPadding);\n+    lastHourLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+10,height()-filterBottomPadding);\n+    lastDayLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+20,height()-filterBottomPadding);\n+    allDataLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+30,height()-filterBottomPadding);\n+\n+    // don't paint the grind/graph if there are no or only a signle sample\n+    if (vSamples.size() < 2)\n+    {\n+        noDataItem->setVisible(true);\n+        return;\n+    }\n+    noDataItem->setVisible(false);\n+\n+    int bottom = ui->graphicsView->size().height()-GRAPH_PADDING_BOTTOM;\n+    qreal maxwidth = ui->graphicsView->size().width()-GRAPH_PADDING_LEFT-GRAPH_PADDING_RIGHT;\n+    qreal maxheightG = ui->graphicsView->size().height()-GRAPH_PADDING_TOP-GRAPH_PADDING_TOP_LABEL-LABEL_HEIGHT;\n+    float paddingTopSizeFactor = 1.2;\n+    qreal step = maxwidth/(double)vSamples.size();\n+\n+    // make sure we skip samples that would be drawn narrower then 1px\n+    // larger window can result in drawing more samples\n+    int samplesStep = 1;\n+    if (step < 1)\n+        samplesStep = ceil(1/samplesStep);\n+\n+    // find maximum values\n+    int64_t maxDynMemUsage = 0;\n+    int64_t minDynMemUsage = std::numeric_limits<int64_t>::max();\n+    int64_t maxTxCount = 0;\n+    int64_t minTxCount = std::numeric_limits<int64_t>::max();\n+    int64_t maxMinFee = 0;\n+    uint32_t maxTimeDetla = vSamples.back().m_time_delta-vSamples.front().m_time_delta;\n+    for(const struct CStatsMempoolSample &sample : vSamples)\n+    {\n+        if (sample.m_dyn_mem_usage > maxDynMemUsage)\n+            maxDynMemUsage = sample.m_dyn_mem_usage;\n+\n+        if (sample.m_dyn_mem_usage < minDynMemUsage)\n+            minDynMemUsage = sample.m_dyn_mem_usage;\n+\n+        if (sample.m_tx_count > maxTxCount)\n+            maxTxCount = sample.m_tx_count;\n+\n+        if (sample.m_tx_count < minTxCount)\n+            minTxCount = sample.m_tx_count;\n+\n+        if (sample.m_min_fee_per_k > maxMinFee)\n+            maxMinFee = sample.m_min_fee_per_k;\n+    }\n+\n+    int64_t dynMemUsagelog10Val = pow(10.0f, floor(log10(maxDynMemUsage*paddingTopSizeFactor-minDynMemUsage)));\n+    int64_t topDynMemUsage = ceil((double)maxDynMemUsage*paddingTopSizeFactor/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+    int64_t bottomDynMemUsage = floor((double)minDynMemUsage/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+\n+    int64_t txCountLog10Val = pow(10.0f, floor(log10(maxTxCount*paddingTopSizeFactor-minTxCount)));\n+    int64_t topTxCount = ceil((double)maxTxCount*paddingTopSizeFactor/txCountLog10Val)*txCountLog10Val;\n+    int64_t bottomTxCount = floor((double)minTxCount/txCountLog10Val)*txCountLog10Val;\n+    \n+    qreal currentX = GRAPH_PADDING_LEFT;\n+    QPainterPath dynMemUsagePath(QPointF(currentX, bottom));\n+    QPainterPath txCountPath(QPointF(currentX, bottom));\n+    QPainterPath minFeePath(QPointF(currentX, bottom));\n+\n+    // draw the three possible paths\n+    for (mempoolSamples_t::iterator it = vSamples.begin(); it != vSamples.end(); it+=samplesStep)\n+    {\n+        const struct CStatsMempoolSample &sample = (*it);\n+        qreal xPos = maxTimeDetla > 0 ? maxwidth/maxTimeDetla*(sample.m_time_delta-vSamples.front().m_time_delta) : maxwidth/(double)vSamples.size();\n+        if (sample.m_time_delta == vSamples.front().m_time_delta)\n+        {\n+            dynMemUsagePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.m_dyn_mem_usage-bottomDynMemUsage));\n+            txCountPath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.m_tx_count-bottomTxCount));\n+            minFeePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.m_min_fee_per_k);\n+        }\n+        else\n+        {\n+            dynMemUsagePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.m_dyn_mem_usage-bottomDynMemUsage));\n+            txCountPath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.m_tx_count-bottomTxCount));\n+            minFeePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.m_min_fee_per_k);\n+        }\n+    }\n+\n+    // copy the path for the fill\n+    QPainterPath dynMemUsagePathFill(dynMemUsagePath);\n+\n+    // close the path for the fill\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT+maxwidth, bottom);\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT, bottom);\n+\n+    QPainterPath dynMemUsageGridPath(QPointF(currentX, bottom));\n+\n+    // draw horizontal grid\n+    int amountOfLinesH = 5;\n+    QFont gridFont;\n+    gridFont.setPointSize(8);\n+    for (int i=0; i < amountOfLinesH; i++)\n+    {\n+        qreal lY = bottom-i*(maxheightG/(amountOfLinesH-1));\n+        dynMemUsageGridPath.moveTo(GRAPH_PADDING_LEFT, lY);\n+        dynMemUsageGridPath.lineTo(GRAPH_PADDING_LEFT+maxwidth, lY);\n+\n+        size_t gridDynSize = (float)i*(topDynMemUsage-bottomDynMemUsage)/(amountOfLinesH-1) + bottomDynMemUsage;\n+        size_t gridTxCount = (float)i*(topTxCount-bottomTxCount)/(amountOfLinesH-1) + bottomTxCount;\n+\n+        QGraphicsTextItem *itemDynSize = scene->addText(GUIUtil::formatBytes(gridDynSize), gridFont);\n+        QGraphicsTextItem *itemTxCount = scene->addText(QString::number(gridTxCount), gridFont);\n+\n+        itemDynSize->setPos(GRAPH_PADDING_LEFT-itemDynSize->boundingRect().width(), lY-(itemDynSize->boundingRect().height()/2));\n+        itemTxCount->setPos(GRAPH_PADDING_LEFT+maxwidth, lY-(itemDynSize->boundingRect().height()/2));\n+        redrawItems.append(itemDynSize);\n+        redrawItems.append(itemTxCount);\n+    }\n+\n+    // draw vertical grid\n+    int amountOfLinesV = 4;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160130240",
      "id" : 160130240,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 320,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 320,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160130240",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160130361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160130361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Move grid drawing to a function?",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:16:01Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        \n+        \n+        QCheckBox *cb0 = new QCheckBox(\"Dynamic Memory Usage\");\n+        cb0->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        dynMemUsageSwitch = scene->addWidget(cb0);\n+        connect(cb0, &QCheckBox::stateChanged, [cb0, this](){ drawDynMemUsage = cb0->isChecked(); drawChart(); });\n+        cb0->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb1 = new QCheckBox(\"Amount of Transactions\");\n+        cb1->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        txCountSwitch = scene->addWidget(cb1);\n+        scene->addItem(txCountSwitch);\n+        connect(cb1, &QCheckBox::stateChanged, [cb1, this](){ drawTxCount = cb1->isChecked(); drawChart(); });\n+        cb1->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb2 = new QCheckBox(\"MinRelayFee per KB\");\n+        cb2->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        minFeeSwitch = scene->addWidget(cb2);\n+        scene->addItem(minFeeSwitch);\n+        connect(cb2, &QCheckBox::stateChanged, [cb2, this](){ drawMinFee = cb2->isChecked(); drawChart(); });\n+        cb2->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    ((QCheckBox *)dynMemUsageSwitch->widget())->setChecked(drawDynMemUsage);\n+    ((QCheckBox *)txCountSwitch->widget())->setChecked(drawTxCount);\n+    ((QCheckBox *)minFeeSwitch->widget())->setChecked(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes((uint64_t)vSamples.back().m_dyn_mem_usage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().m_tx_count));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().m_min_fee_per_k));\n+    }\n+\n+    // set dynamic label positions\n+    int maxValueSize = std::max(std::max(txCountValueItem->boundingRect().width(), dynMemUsageValueItem->boundingRect().width()), minFeeValueItem->boundingRect().width());\n+    maxValueSize = ceil(maxValueSize*0.11)*10; //use size steps of 10dip\n+\n+    int rightPaddingLabels = std::max(std::max(dynMemUsageSwitch->boundingRect().width(), txCountSwitch->boundingRect().width()), minFeeSwitch->boundingRect().width())+maxValueSize;\n+    int rightPadding = 10;\n+    dynMemUsageSwitch->setPos(width()-rightPaddingLabels-rightPadding, 5);\n+    \n+    txCountSwitch->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageSwitch->pos().y()+dynMemUsageSwitch->boundingRect().height());\n+    \n+    minFeeSwitch->setPos(width()-rightPaddingLabels-rightPadding, txCountSwitch->pos().y()+txCountSwitch->boundingRect().height());\n+\n+    dynMemUsageValueItem->setPos(width()-dynMemUsageValueItem->boundingRect().width()-rightPadding, dynMemUsageSwitch->pos().y());\n+    txCountValueItem->setPos(width()-txCountValueItem->boundingRect().width()-rightPadding, txCountSwitch->pos().y());\n+    minFeeValueItem->setPos(width()-minFeeValueItem->boundingRect().width()-rightPadding, minFeeSwitch->pos().y());\n+\n+    titleItem->setPos(5,minFeeSwitch->pos().y()+minFeeSwitch->boundingRect().height()-titleItem->boundingRect().height()+10);\n+    titleLine->setLine(10, titleItem->pos().y()+titleItem->boundingRect().height(), width()-10, titleItem->pos().y()+titleItem->boundingRect().height());\n+\n+    // center the optional \"no data\" label\n+    noDataItem->setPos(width()/2.0-noDataItem->boundingRect().width()/2.0, height()/2.0);\n+\n+    // set the position of the filter icons\n+    static const int filterBottomPadding = 30;\n+    int totalWidth = last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+allDataLabel->boundingRect().width()+30;\n+    last10MinLabel->setPos((width()-totalWidth)/2.0,height()-filterBottomPadding);\n+    lastHourLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+10,height()-filterBottomPadding);\n+    lastDayLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+20,height()-filterBottomPadding);\n+    allDataLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+30,height()-filterBottomPadding);\n+\n+    // don't paint the grind/graph if there are no or only a signle sample\n+    if (vSamples.size() < 2)\n+    {\n+        noDataItem->setVisible(true);\n+        return;\n+    }\n+    noDataItem->setVisible(false);\n+\n+    int bottom = ui->graphicsView->size().height()-GRAPH_PADDING_BOTTOM;\n+    qreal maxwidth = ui->graphicsView->size().width()-GRAPH_PADDING_LEFT-GRAPH_PADDING_RIGHT;\n+    qreal maxheightG = ui->graphicsView->size().height()-GRAPH_PADDING_TOP-GRAPH_PADDING_TOP_LABEL-LABEL_HEIGHT;\n+    float paddingTopSizeFactor = 1.2;\n+    qreal step = maxwidth/(double)vSamples.size();\n+\n+    // make sure we skip samples that would be drawn narrower then 1px\n+    // larger window can result in drawing more samples\n+    int samplesStep = 1;\n+    if (step < 1)\n+        samplesStep = ceil(1/samplesStep);\n+\n+    // find maximum values\n+    int64_t maxDynMemUsage = 0;\n+    int64_t minDynMemUsage = std::numeric_limits<int64_t>::max();\n+    int64_t maxTxCount = 0;\n+    int64_t minTxCount = std::numeric_limits<int64_t>::max();\n+    int64_t maxMinFee = 0;\n+    uint32_t maxTimeDetla = vSamples.back().m_time_delta-vSamples.front().m_time_delta;\n+    for(const struct CStatsMempoolSample &sample : vSamples)\n+    {\n+        if (sample.m_dyn_mem_usage > maxDynMemUsage)\n+            maxDynMemUsage = sample.m_dyn_mem_usage;\n+\n+        if (sample.m_dyn_mem_usage < minDynMemUsage)\n+            minDynMemUsage = sample.m_dyn_mem_usage;\n+\n+        if (sample.m_tx_count > maxTxCount)\n+            maxTxCount = sample.m_tx_count;\n+\n+        if (sample.m_tx_count < minTxCount)\n+            minTxCount = sample.m_tx_count;\n+\n+        if (sample.m_min_fee_per_k > maxMinFee)\n+            maxMinFee = sample.m_min_fee_per_k;\n+    }\n+\n+    int64_t dynMemUsagelog10Val = pow(10.0f, floor(log10(maxDynMemUsage*paddingTopSizeFactor-minDynMemUsage)));\n+    int64_t topDynMemUsage = ceil((double)maxDynMemUsage*paddingTopSizeFactor/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+    int64_t bottomDynMemUsage = floor((double)minDynMemUsage/dynMemUsagelog10Val)*dynMemUsagelog10Val;\n+\n+    int64_t txCountLog10Val = pow(10.0f, floor(log10(maxTxCount*paddingTopSizeFactor-minTxCount)));\n+    int64_t topTxCount = ceil((double)maxTxCount*paddingTopSizeFactor/txCountLog10Val)*txCountLog10Val;\n+    int64_t bottomTxCount = floor((double)minTxCount/txCountLog10Val)*txCountLog10Val;\n+    \n+    qreal currentX = GRAPH_PADDING_LEFT;\n+    QPainterPath dynMemUsagePath(QPointF(currentX, bottom));\n+    QPainterPath txCountPath(QPointF(currentX, bottom));\n+    QPainterPath minFeePath(QPointF(currentX, bottom));\n+\n+    // draw the three possible paths\n+    for (mempoolSamples_t::iterator it = vSamples.begin(); it != vSamples.end(); it+=samplesStep)\n+    {\n+        const struct CStatsMempoolSample &sample = (*it);\n+        qreal xPos = maxTimeDetla > 0 ? maxwidth/maxTimeDetla*(sample.m_time_delta-vSamples.front().m_time_delta) : maxwidth/(double)vSamples.size();\n+        if (sample.m_time_delta == vSamples.front().m_time_delta)\n+        {\n+            dynMemUsagePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.m_dyn_mem_usage-bottomDynMemUsage));\n+            txCountPath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.m_tx_count-bottomTxCount));\n+            minFeePath.moveTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.m_min_fee_per_k);\n+        }\n+        else\n+        {\n+            dynMemUsagePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topDynMemUsage-bottomDynMemUsage)*(sample.m_dyn_mem_usage-bottomDynMemUsage));\n+            txCountPath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/(topTxCount-bottomTxCount)*(sample.m_tx_count-bottomTxCount));\n+            minFeePath.lineTo(GRAPH_PADDING_LEFT+xPos, bottom-maxheightG/maxMinFee*sample.m_min_fee_per_k);\n+        }\n+    }\n+\n+    // copy the path for the fill\n+    QPainterPath dynMemUsagePathFill(dynMemUsagePath);\n+\n+    // close the path for the fill\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT+maxwidth, bottom);\n+    dynMemUsagePathFill.lineTo(GRAPH_PADDING_LEFT, bottom);\n+\n+    QPainterPath dynMemUsageGridPath(QPointF(currentX, bottom));\n+\n+    // draw horizontal grid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160130361",
      "id" : 160130361,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 297,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 297,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160130361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160131300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160131300"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Move the once-only stuff to another function?",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:22:40Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160131300",
      "id" : 160131300,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 88,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 88,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160131300",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160131435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160131435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Move the user interacting bits to another function?\r\n\r\nAlso, do these really need to get redrawn every time? I'm not worried about performance, just code complexity. Adding and removing UI elements where it's not needed might also make using the interface builder more difficult.\r\n  ",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:23:42Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        \n+        \n+        QCheckBox *cb0 = new QCheckBox(\"Dynamic Memory Usage\");\n+        cb0->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        dynMemUsageSwitch = scene->addWidget(cb0);\n+        connect(cb0, &QCheckBox::stateChanged, [cb0, this](){ drawDynMemUsage = cb0->isChecked(); drawChart(); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160131435",
      "id" : 160131435,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 98,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 98,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:39:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160131435",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160132858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160132858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Rename to `drawChartFrame()`? It draws a lot more than the chart.",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:31:54Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160132858",
      "id" : 160132858,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 81,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 81,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160132858",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160132957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160132957"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "drawEmptyChart()",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:32:32Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        \n+        \n+        QCheckBox *cb0 = new QCheckBox(\"Dynamic Memory Usage\");\n+        cb0->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        dynMemUsageSwitch = scene->addWidget(cb0);\n+        connect(cb0, &QCheckBox::stateChanged, [cb0, this](){ drawDynMemUsage = cb0->isChecked(); drawChart(); });\n+        cb0->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb1 = new QCheckBox(\"Amount of Transactions\");\n+        cb1->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        txCountSwitch = scene->addWidget(cb1);\n+        scene->addItem(txCountSwitch);\n+        connect(cb1, &QCheckBox::stateChanged, [cb1, this](){ drawTxCount = cb1->isChecked(); drawChart(); });\n+        cb1->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb2 = new QCheckBox(\"MinRelayFee per KB\");\n+        cb2->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        minFeeSwitch = scene->addWidget(cb2);\n+        scene->addItem(minFeeSwitch);\n+        connect(cb2, &QCheckBox::stateChanged, [cb2, this](){ drawMinFee = cb2->isChecked(); drawChart(); });\n+        cb2->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    ((QCheckBox *)dynMemUsageSwitch->widget())->setChecked(drawDynMemUsage);\n+    ((QCheckBox *)txCountSwitch->widget())->setChecked(drawTxCount);\n+    ((QCheckBox *)minFeeSwitch->widget())->setChecked(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes((uint64_t)vSamples.back().m_dyn_mem_usage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().m_tx_count));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().m_min_fee_per_k));\n+    }\n+\n+    // set dynamic label positions\n+    int maxValueSize = std::max(std::max(txCountValueItem->boundingRect().width(), dynMemUsageValueItem->boundingRect().width()), minFeeValueItem->boundingRect().width());\n+    maxValueSize = ceil(maxValueSize*0.11)*10; //use size steps of 10dip\n+\n+    int rightPaddingLabels = std::max(std::max(dynMemUsageSwitch->boundingRect().width(), txCountSwitch->boundingRect().width()), minFeeSwitch->boundingRect().width())+maxValueSize;\n+    int rightPadding = 10;\n+    dynMemUsageSwitch->setPos(width()-rightPaddingLabels-rightPadding, 5);\n+    \n+    txCountSwitch->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageSwitch->pos().y()+dynMemUsageSwitch->boundingRect().height());\n+    \n+    minFeeSwitch->setPos(width()-rightPaddingLabels-rightPadding, txCountSwitch->pos().y()+txCountSwitch->boundingRect().height());\n+\n+    dynMemUsageValueItem->setPos(width()-dynMemUsageValueItem->boundingRect().width()-rightPadding, dynMemUsageSwitch->pos().y());\n+    txCountValueItem->setPos(width()-txCountValueItem->boundingRect().width()-rightPadding, txCountSwitch->pos().y());\n+    minFeeValueItem->setPos(width()-minFeeValueItem->boundingRect().width()-rightPadding, minFeeSwitch->pos().y());\n+\n+    titleItem->setPos(5,minFeeSwitch->pos().y()+minFeeSwitch->boundingRect().height()-titleItem->boundingRect().height()+10);\n+    titleLine->setLine(10, titleItem->pos().y()+titleItem->boundingRect().height(), width()-10, titleItem->pos().y()+titleItem->boundingRect().height());\n+\n+    // center the optional \"no data\" label\n+    noDataItem->setPos(width()/2.0-noDataItem->boundingRect().width()/2.0, height()/2.0);\n+\n+    // set the position of the filter icons\n+    static const int filterBottomPadding = 30;\n+    int totalWidth = last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+allDataLabel->boundingRect().width()+30;\n+    last10MinLabel->setPos((width()-totalWidth)/2.0,height()-filterBottomPadding);\n+    lastHourLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+10,height()-filterBottomPadding);\n+    lastDayLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+20,height()-filterBottomPadding);\n+    allDataLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+30,height()-filterBottomPadding);\n+\n+    // don't paint the grind/graph if there are no or only a signle sample\n+    if (vSamples.size() < 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160132957",
      "id" : 160132957,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 212,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 212,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160132957",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160133100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160133100"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\nelse {\r\n  drawChart(vSamples, ...)\r\n}\r\n```",
      "commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "created_at" : "2018-01-08T12:33:23Z",
      "diff_hunk" : "@@ -0,0 +1,423 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/mempoolstats.h>\n+#include <qt/forms/ui_mempoolstats.h>\n+\n+#include <qt/clientmodel.h>\n+#include <qt/guiutil.h>\n+#include <stats/stats.h>\n+\n+static const char *LABEL_FONT = \"Arial\";\n+static int LABEL_TITLE_SIZE = 22;\n+static int LABEL_KV_SIZE = 12;\n+\n+static const int TEN_MINS = 600;\n+static const int ONE_HOUR = 3600;\n+static const int ONE_DAY = ONE_HOUR*24;\n+\n+static const int LABEL_LEFT_SIZE = 30;\n+static const int LABEL_RIGHT_SIZE = 30;\n+static const int GRAPH_PADDING_LEFT = 30+LABEL_LEFT_SIZE;\n+static const int GRAPH_PADDING_RIGHT = 30+LABEL_RIGHT_SIZE;\n+static const int GRAPH_PADDING_TOP = 10;\n+static const int GRAPH_PADDING_TOP_LABEL = 150;\n+static const int GRAPH_PADDING_BOTTOM = 50;\n+static const int LABEL_HEIGHT = 15;\n+\n+void ClickableTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event)\n+{\n+    Q_EMIT objectClicked(this);\n+}\n+\n+void ClickableTextItem::setEnabled(bool state)\n+{\n+    if (state)\n+        setDefaultTextColor(QColor(15,68,113, 250));\n+    else\n+        setDefaultTextColor(QColor(100,100,100, 200));\n+}\n+\n+MempoolStats::MempoolStats(QWidget *parent) :\n+QWidget(parent, Qt::Window),\n+clientModel(0),\n+titleItem(0),\n+scene(0),\n+drawTxCount(true),\n+drawMinFee(false),\n+drawDynMemUsage(true),\n+timeFilter(TEN_MINS),\n+ui(new Ui::MempoolStats)\n+{\n+    ui->setupUi(this);\n+    if (parent) {\n+        parent->installEventFilter(this);\n+        raise();\n+    }\n+\n+    // autoadjust font size\n+    QGraphicsTextItem testText(\"jY\"); //screendesign expected 27.5 pixel in width for this string\n+    testText.setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+    LABEL_TITLE_SIZE *= 27.5/testText.boundingRect().width();\n+    LABEL_KV_SIZE *= 27.5/testText.boundingRect().width();\n+\n+    scene = new QGraphicsScene();\n+    ui->graphicsView->setScene(scene);\n+    ui->graphicsView->setRenderHints(QPainter::Antialiasing | QPainter::SmoothPixmapTransform);\n+\n+    if (clientModel)\n+        drawChart();\n+}\n+\n+void MempoolStats::setClientModel(ClientModel *model)\n+{\n+    clientModel = model;\n+\n+    if (model)\n+        connect(model, SIGNAL(mempoolStatsDidUpdate()), this, SLOT(drawChart()));\n+}\n+\n+void MempoolStats::drawChart()\n+{\n+    if (!isVisible())\n+        return;\n+\n+    if (!titleItem)\n+    {\n+        // create labels (only once)\n+        titleItem = scene->addText(tr(\"Mempool Statistics\"));\n+        titleItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        titleLine = scene->addLine(0,0,100,100);\n+        titleLine->setPen(QPen(QColor(100,100,100, 200), 2, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin));\n+        \n+        \n+        QCheckBox *cb0 = new QCheckBox(\"Dynamic Memory Usage\");\n+        cb0->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        dynMemUsageSwitch = scene->addWidget(cb0);\n+        connect(cb0, &QCheckBox::stateChanged, [cb0, this](){ drawDynMemUsage = cb0->isChecked(); drawChart(); });\n+        cb0->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        dynMemUsageValueItem = scene->addText(\"N/A\");\n+        dynMemUsageValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb1 = new QCheckBox(\"Amount of Transactions\");\n+        cb1->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        txCountSwitch = scene->addWidget(cb1);\n+        scene->addItem(txCountSwitch);\n+        connect(cb1, &QCheckBox::stateChanged, [cb1, this](){ drawTxCount = cb1->isChecked(); drawChart(); });\n+        cb1->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        txCountValueItem = scene->addText(\"N/A\");\n+        txCountValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        QCheckBox *cb2 = new QCheckBox(\"MinRelayFee per KB\");\n+        cb2->setStyleSheet(\"background-color: rgb(255,255,255);\");\n+        minFeeSwitch = scene->addWidget(cb2);\n+        scene->addItem(minFeeSwitch);\n+        connect(cb2, &QCheckBox::stateChanged, [cb2, this](){ drawMinFee = cb2->isChecked(); drawChart(); });\n+        cb2->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        minFeeValueItem = scene->addText(tr(\"N/A\"));\n+        minFeeValueItem->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Bold));\n+\n+        noDataItem = scene->addText(tr(\"No Data available\"));\n+        noDataItem->setFont(QFont(LABEL_FONT, LABEL_TITLE_SIZE, QFont::Light));\n+        noDataItem->setDefaultTextColor(QColor(100,100,100, 200));\n+\n+        last10MinLabel = new ClickableTextItem(); last10MinLabel->setPlainText(tr(\"Last 10 min\"));\n+        scene->addItem(last10MinLabel);\n+        connect(last10MinLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        last10MinLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastHourLabel = new ClickableTextItem(); lastHourLabel->setPlainText(tr(\"Last Hour\"));\n+        scene->addItem(lastHourLabel);\n+        connect(lastHourLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastHourLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        lastDayLabel = new ClickableTextItem(); lastDayLabel->setPlainText(tr(\"Last Day\"));\n+        scene->addItem(lastDayLabel);\n+        connect(lastDayLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        lastDayLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+        allDataLabel = new ClickableTextItem(); allDataLabel->setPlainText(tr(\"All Data\"));\n+        scene->addItem(allDataLabel);\n+        connect(allDataLabel, SIGNAL(objectClicked(QGraphicsItem*)), this, SLOT(objectClicked(QGraphicsItem*)));\n+        allDataLabel->setFont(QFont(LABEL_FONT, LABEL_KV_SIZE, QFont::Light));\n+    }\n+\n+    // set button states\n+    ((QCheckBox *)dynMemUsageSwitch->widget())->setChecked(drawDynMemUsage);\n+    ((QCheckBox *)txCountSwitch->widget())->setChecked(drawTxCount);\n+    ((QCheckBox *)minFeeSwitch->widget())->setChecked(drawMinFee);\n+\n+    last10MinLabel->setEnabled((timeFilter == TEN_MINS));\n+    lastHourLabel->setEnabled((timeFilter == ONE_HOUR));\n+    lastDayLabel->setEnabled((timeFilter == ONE_DAY));\n+    allDataLabel->setEnabled((timeFilter == 0));\n+\n+    // remove the items which needs to be redrawn\n+    for (QGraphicsItem * item : redrawItems)\n+    {\n+        scene->removeItem(item);\n+        delete item;\n+    }\n+    redrawItems.clear();\n+\n+    // get the samples\n+    QDateTime toDateTime = QDateTime::currentDateTime();\n+    QDateTime fromDateTime = toDateTime.addSecs(-timeFilter); //-1h\n+    if (timeFilter == 0)\n+    {\n+        // disable filter if timeFilter == 0\n+        toDateTime.setTime_t(0);\n+        fromDateTime.setTime_t(0);\n+    }\n+\n+    mempoolSamples_t vSamples = clientModel->getMempoolStatsInRange(fromDateTime, toDateTime);\n+\n+    // set the values into the overview labels\n+    if (vSamples.size())\n+    {\n+        dynMemUsageValueItem->setPlainText(GUIUtil::formatBytes((uint64_t)vSamples.back().m_dyn_mem_usage));\n+        txCountValueItem->setPlainText(QString::number(vSamples.back().m_tx_count));\n+        minFeeValueItem->setPlainText(QString::number(vSamples.back().m_min_fee_per_k));\n+    }\n+\n+    // set dynamic label positions\n+    int maxValueSize = std::max(std::max(txCountValueItem->boundingRect().width(), dynMemUsageValueItem->boundingRect().width()), minFeeValueItem->boundingRect().width());\n+    maxValueSize = ceil(maxValueSize*0.11)*10; //use size steps of 10dip\n+\n+    int rightPaddingLabels = std::max(std::max(dynMemUsageSwitch->boundingRect().width(), txCountSwitch->boundingRect().width()), minFeeSwitch->boundingRect().width())+maxValueSize;\n+    int rightPadding = 10;\n+    dynMemUsageSwitch->setPos(width()-rightPaddingLabels-rightPadding, 5);\n+    \n+    txCountSwitch->setPos(width()-rightPaddingLabels-rightPadding, dynMemUsageSwitch->pos().y()+dynMemUsageSwitch->boundingRect().height());\n+    \n+    minFeeSwitch->setPos(width()-rightPaddingLabels-rightPadding, txCountSwitch->pos().y()+txCountSwitch->boundingRect().height());\n+\n+    dynMemUsageValueItem->setPos(width()-dynMemUsageValueItem->boundingRect().width()-rightPadding, dynMemUsageSwitch->pos().y());\n+    txCountValueItem->setPos(width()-txCountValueItem->boundingRect().width()-rightPadding, txCountSwitch->pos().y());\n+    minFeeValueItem->setPos(width()-minFeeValueItem->boundingRect().width()-rightPadding, minFeeSwitch->pos().y());\n+\n+    titleItem->setPos(5,minFeeSwitch->pos().y()+minFeeSwitch->boundingRect().height()-titleItem->boundingRect().height()+10);\n+    titleLine->setLine(10, titleItem->pos().y()+titleItem->boundingRect().height(), width()-10, titleItem->pos().y()+titleItem->boundingRect().height());\n+\n+    // center the optional \"no data\" label\n+    noDataItem->setPos(width()/2.0-noDataItem->boundingRect().width()/2.0, height()/2.0);\n+\n+    // set the position of the filter icons\n+    static const int filterBottomPadding = 30;\n+    int totalWidth = last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+allDataLabel->boundingRect().width()+30;\n+    last10MinLabel->setPos((width()-totalWidth)/2.0,height()-filterBottomPadding);\n+    lastHourLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+10,height()-filterBottomPadding);\n+    lastDayLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+20,height()-filterBottomPadding);\n+    allDataLabel->setPos((width()-totalWidth)/2.0+last10MinLabel->boundingRect().width()+lastHourLabel->boundingRect().width()+lastDayLabel->boundingRect().width()+30,height()-filterBottomPadding);\n+\n+    // don't paint the grind/graph if there are no or only a signle sample\n+    if (vSamples.size() < 2)\n+    {\n+        noDataItem->setVisible(true);\n+        return;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#discussion_r160133100",
      "id" : 160133100,
      "original_commit_id" : "63fb11652fd41783589ba55d68d5f8473f299b15",
      "original_position" : 216,
      "path" : "src/qt/mempoolstats.cpp",
      "position" : 216,
      "pull_request_review_id" : 87181795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8550",
      "updated_at" : "2018-01-08T12:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160133100",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "This has been lingering for a long time. I would prefer if it makes it in, of course, it has tons of concept ACKs (the most of any open PR, according to bitcoinacks). But otherwise should we close and put this up for grabs?",
      "created_at" : "2018-05-14T09:37:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-388756958",
      "id" : 388756958,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "updated_at" : "2018-05-14T09:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388756958",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Although it would be really nice to have, this has been inactive for very long.\r\nClosing and adding \"up for grabs\".",
      "created_at" : "2018-08-31T10:46:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-417626845",
      "id" : 417626845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzYyNjg0NQ==",
      "updated_at" : "2018-08-31T10:46:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417626845",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj A rebased version of this seems to be in Bitcoin Knots. Should I open a new pull request using this rebased version?",
      "created_at" : "2020-08-20T04:53:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-677065021",
      "id" : 677065021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzA2NTAyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T16:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677065021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This looks very nice. @rebroad I would review/test it if you pick it up.",
      "created_at" : "2020-08-20T13:30:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-677665645",
      "id" : 677665645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzY2NTY0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T13:31:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677665645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note that #8501 was updated after this, and in a conflicting way. In Knots, I'm using an older version of it.\r\n\r\nSo there is some work to be done, but it sounds like a good idea since @jonasschnelli seems to have abandoned it.\r\n\r\n(If you're not up to merging #8501 with this, maybe it'd be fine to use the older version in Knots and the code can be updated later when the RPC interface is added)",
      "created_at" : "2020-08-20T13:45:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-677673665",
      "id" : 677673665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzY3MzY2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T13:45:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677673665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto I guess this isn't up for grabs anymore since it's been picked up again by jonasschnelli over on the GUI repo",
      "created_at" : "2021-03-04T23:04:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-791012401",
      "id" : 791012401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MTAxMjQwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-04T23:04:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791012401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto This could still be up for grabs given that it was superior in various ways to the newer implementation - e.g. it could run in a separate window to the debug window - the timescales were changeable, and it also shows memory utilization, and fee filter.",
      "created_at" : "2021-03-26T16:18:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-808343657",
      "id" : 808343657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwODM0MzY1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T16:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808343657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@rebroad \r\n> @hebasto This could still be up for grabs given that it was superior in various ways to the newer implementation - e.g. it could run in a separate window to the debug window - the timescales were changeable, and it also shows memory utilization, and fee filter.\r\n\r\nThe \"Up for grabs\" label means \"nobody's working on it\", isn't it?",
      "created_at" : "2021-03-26T16:29:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-808354839",
      "id" : 808354839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwODM1NDgzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T16:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808354839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The \"Up for grabs\" label means \"nobody's working on it\", isn't it?\r\n\r\nYes. If you wanted to handle it in a different way, you should have picked it up yourself.",
      "created_at" : "2021-03-29T08:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-809187654",
      "id" : 809187654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTE4NzY1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T08:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809187654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Or leave a suggestion on the pull that picked it up ;)",
      "created_at" : "2021-03-29T08:56:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-809201534",
      "id" : 809201534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwOTIwMTUzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-29T08:56:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809201534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @rebroad\r\n> \r\n> > @hebasto This could still be up for grabs given that it was superior in various ways to the newer implementation - e.g. it could run in a separate window to the debug window - the timescales were changeable, and it also shows memory utilization, and fee filter.\r\n> \r\n> The \"Up for grabs\" label means \"nobody's working on it\", isn't it?\r\n\r\nYes, it appears that no one is working on this - the fee graph is a different feature - related, but not the same. I think the UpForGrabs label ought to remain until someone is working on this particular graph.\r\n\r\n@luke-jr are you still rebasing this?",
      "created_at" : "2021-05-12T08:22:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-839573001",
      "id" : 839573001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzOTU3MzAwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-12T08:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/839573001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A current rebase is here - https://github.com/rebroad/bitcoin/commit/3ecfd95bde4f649b345d3d15c9ffc0da15156bca",
      "created_at" : "2021-05-16T08:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8550#issuecomment-841784416",
      "id" : 841784416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8550",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTc4NDQxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T08:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841784416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]
