[
   {
      "author_association" : "MEMBER",
      "body" : "~Concept ACK, quick read looks good~ Ã°ÂÂÂ \r\nutACK https://github.com/bitcoin/bitcoin/pull/11707/commits/f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "created_at" : "2017-11-17T08:53:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#issuecomment-345182862",
      "id" : 345182862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11707",
      "updated_at" : "2017-11-17T10:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345182862",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK f0c4ab9",
      "created_at" : "2017-11-17T16:10:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#issuecomment-345286579",
      "id" : 345286579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11707",
      "updated_at" : "2017-11-17T16:10:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345286579",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151733695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151733695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: I generally prefer the \"early-return-syntax\" (like it was before). This saves some white space when indenting.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T16:46:46Z",
      "diff_hunk" : "@@ -138,6 +132,25 @@ def send_block_inv(self, blockhash):\n         msg.inv = [CInv(2, blockhash)]\n         self.connection.send_message(msg)\n \n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [CBlockHeader(b) for b in new_blocks]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list != []:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151733695",
      "id" : 151733695,
      "original_commit_id" : "f39d4bbd1e328cb04a6ddb133511385491a90d84",
      "original_position" : 39,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151733695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151734166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151734166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: loose hashtag from transforming comment into docstring.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T16:48:44Z",
      "diff_hunk" : "@@ -177,47 +196,26 @@ def check_last_announcement(self, headers=None, inv=None):\n             self.last_message.pop(\"headers\", None)\n         return success\n \n-    def wait_for_getdata(self, hash_list, timeout=60):\n-        if hash_list == []:\n-            return\n-\n-        test_function = lambda: \"getdata\" in self.last_message and [x.hash for x in self.last_message[\"getdata\"].inv] == hash_list\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def wait_for_block_announcement(self, block_hash, timeout=60):\n-        test_function = lambda: self.last_blockhash_announced == block_hash\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def send_header_for_blocks(self, new_blocks):\n-        headers_message = msg_headers()\n-        headers_message.headers = [CBlockHeader(b) for b in new_blocks]\n-        self.send_message(headers_message)\n-\n-    def send_getblocks(self, locator):\n-        getblocks_message = msg_getblocks()\n-        getblocks_message.locator.vHave = locator\n-        self.send_message(getblocks_message)\n-\n class SendHeadersTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n \n-    # mine count blocks and return the new tip\n     def mine_blocks(self, count):\n+        \"\"\"Mine count blocks and return the new tip.\"\"\"\n+\n         # Clear out last block announcement from each p2p listener\n         [x.clear_last_announcement() for x in self.nodes[0].p2ps]\n         self.nodes[0].generate(count)\n         return int(self.nodes[0].getbestblockhash(), 16)\n \n-    # mine a reorg that invalidates length blocks (replacing them with\n-    # length+1 blocks).\n-    # Note: we clear the state of our p2p connections after the\n-    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n-    # return the list of block hashes newly mined\n     def mine_reorg(self, length):\n+        \"\"\"Mine a reorg that invalidates length blocks (replacing them with # length+1 blocks).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151734166",
      "id" : 151734166,
      "original_commit_id" : "f39d4bbd1e328cb04a6ddb133511385491a90d84",
      "original_position" : 117,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151734166",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151766135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151766135"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Not sure what \"omitted from testing description below, this is our control\" means. Mind to clarify or remove?",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T19:10:27Z",
      "diff_hunk" : "@@ -4,7 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test behavior of headers messages to announce blocks.\n \n-Setup: \n+Setup:\n \n - Two nodes, two p2p connections to node0. One p2p connection should only ever\n   receive inv's (omitted from testing description below, this is our control).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151766135",
      "id" : 151766135,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 8,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151766135",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151766587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151766587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Mind to fixup the comment, since segwit is now always active in regtest?",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T19:12:20Z",
      "diff_hunk" : "@@ -132,97 +161,79 @@ def on_headers(self, conn, message):\n             message.headers[-1].calc_sha256()\n             self.last_blockhash_announced = message.headers[-1].sha256\n \n-    # Test whether the last announcement we received had the\n-    # right header or the right inv\n-    # inv and headers should be lists of block hashes\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_message.pop(\"inv\", None)\n+            self.last_message.pop(\"headers\", None)\n+\n     def check_last_announcement(self, headers=None, inv=None):\n-        expect_headers = headers if headers != None else []\n-        expect_inv = inv if inv != None else []\n+        \"\"\"Test whether the last announcement received had the right header or the right inv.\n+\n+        inv and headers should be lists of block hashes.\"\"\"\n+\n         test_function = lambda: self.block_announced\n         wait_until(test_function, timeout=60, lock=mininode_lock)\n+\n         with mininode_lock:\n             self.block_announced = False\n \n-            success = True\n             compare_inv = []\n             if \"inv\" in self.last_message:\n                 compare_inv = [x.hash for x in self.last_message[\"inv\"].inv]\n-            if compare_inv != expect_inv:\n-                success = False\n+            if inv is not None:\n+                assert_equal(compare_inv, inv)\n \n-            hash_headers = []\n+            compare_headers = []\n             if \"headers\" in self.last_message:\n-                # treat headers as a list of block hashes\n-                hash_headers = [ x.sha256 for x in self.last_message[\"headers\"].headers ]\n-            if hash_headers != expect_headers:\n-                success = False\n+                compare_headers = [x.sha256 for x in self.last_message[\"headers\"].headers]\n+            if headers is not None:\n+                assert_equal(compare_headers, headers)\n \n             self.last_message.pop(\"inv\", None)\n             self.last_message.pop(\"headers\", None)\n-        return success\n-\n-    def wait_for_getdata(self, hash_list, timeout=60):\n-        if hash_list == []:\n-            return\n-\n-        test_function = lambda: \"getdata\" in self.last_message and [x.hash for x in self.last_message[\"getdata\"].inv] == hash_list\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def wait_for_block_announcement(self, block_hash, timeout=60):\n-        test_function = lambda: self.last_blockhash_announced == block_hash\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def send_header_for_blocks(self, new_blocks):\n-        headers_message = msg_headers()\n-        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n-        self.send_message(headers_message)\n-\n-    def send_getblocks(self, locator):\n-        getblocks_message = msg_getblocks()\n-        getblocks_message.locator.vHave = locator\n-        self.send_message(getblocks_message)\n \n class SendHeadersTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n \n-    # mine count blocks and return the new tip\n     def mine_blocks(self, count):\n+        \"\"\"Mine count blocks and return the new tip.\"\"\"\n+\n         # Clear out last block announcement from each p2p listener\n         [x.clear_last_announcement() for x in self.nodes[0].p2ps]\n         self.nodes[0].generate(count)\n         return int(self.nodes[0].getbestblockhash(), 16)\n \n-    # mine a reorg that invalidates length blocks (replacing them with\n-    # length+1 blocks).\n-    # Note: we clear the state of our p2p connections after the\n-    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n-    # return the list of block hashes newly mined\n     def mine_reorg(self, length):\n-        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        \"\"\"Mine a reorg that invalidates length blocks (replacing them with # length+1 blocks).\n+\n+        Note: we clear the state of our p2p connections after the\n+        to-be-reorged-out blocks are mined, so that we don't break later tests.\n+        return the list of block hashes newly mined.\"\"\"\n+\n+        self.nodes[0].generate(length)  # make sure all invalidated blocks are node0's\n         sync_blocks(self.nodes, wait=0.1)\n         for x in self.nodes[0].p2ps:\n             x.wait_for_block_announcement(int(self.nodes[0].getbestblockhash(), 16))\n             x.clear_last_announcement()\n \n         tip_height = self.nodes[1].getblockcount()\n-        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height - (length - 1))\n         self.nodes[1].invalidateblock(hash_to_invalidate)\n-        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        all_hashes = self.nodes[1].generate(length + 1)  # Must be longer than the orig chain\n         sync_blocks(self.nodes, wait=0.1)\n         return [int(x, 16) for x in all_hashes]\n \n     def run_test(self):\n         # Setup the p2p connections and start up the network thread.\n-        inv_node = self.nodes[0].add_p2p_connection(TestNode())\n+        inv_node = self.nodes[0].add_p2p_connection(BaseNode())\n         # Set nServices to 0 for test_node, so no block download will occur outside of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151766587",
      "id" : 151766587,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 216,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151766587",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151769139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151769139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Are the default values required for `headers` and `inv`? For the case of `inv_node`, we must only ever send `inv`s and `headers==[]`. For the case of `test_node`, we should send `headers` and `inv==[]`s or `inv` and `headers==[]`. Though, it is not required for the protocol, so feel free to leave as is.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T19:23:45Z",
      "diff_hunk" : "@@ -132,97 +161,79 @@ def on_headers(self, conn, message):\n             message.headers[-1].calc_sha256()\n             self.last_blockhash_announced = message.headers[-1].sha256\n \n-    # Test whether the last announcement we received had the\n-    # right header or the right inv\n-    # inv and headers should be lists of block hashes\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_message.pop(\"inv\", None)\n+            self.last_message.pop(\"headers\", None)\n+\n     def check_last_announcement(self, headers=None, inv=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151769139",
      "id" : 151769139,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 110,
      "path" : "test/functional/sendheaders.py",
      "position" : 121,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151769139",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151769515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151769515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: test node, not inv node, broadcasts the block.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T19:25:35Z",
      "diff_hunk" : "@@ -339,16 +356,16 @@ def test_nonnull_locators(self, test_node, inv_node):\n                     # getdata requests (the check is further down)\n                     inv_node.send_header_for_blocks(blocks)\n                     inv_node.sync_with_ping()\n-                [ test_node.send_message(msg_block(x)) for x in blocks ]\n+                [test_node.send_message(msg_block(x)) for x in blocks]\n                 test_node.sync_with_ping()\n                 inv_node.sync_with_ping()\n                 # This block should not be announced to the inv node (since it also\n                 # broadcast it)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151769515",
      "id" : 151769515,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 351,
      "path" : "test/functional/sendheaders.py",
      "position" : 363,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151769515",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151771092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151771092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: is this required? check_last_announcement already includes the code of clear_last_announcement ",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T19:32:29Z",
      "diff_hunk" : "@@ -263,7 +266,10 @@ def test_null_locators(self, test_node):\n         test_node.send_get_headers(locator=[], hashstop=int(block.hash, 16))\n         test_node.sync_with_ping()\n         assert_equal(test_node.block_announced, False)\n+        inv_node.clear_last_announcement()\n         test_node.send_message(msg_block(block))\n+        inv_node.check_last_announcement(inv=[int(block.hash, 16)], headers=[])\n+        inv_node.clear_last_announcement()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151771092",
      "id" : 151771092,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 26,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77494162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151771092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, having the default arguments like this allows looser or stricter testing. If the function is called without both arguments, then the testing is looser. We can make it tighter by explicitly calling with one of the arguments set to an empty list.\r\n\r\nI think it's ok as is, but I'm also happy to change if you have a better suggestion.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:11:26Z",
      "diff_hunk" : "@@ -132,97 +161,79 @@ def on_headers(self, conn, message):\n             message.headers[-1].calc_sha256()\n             self.last_blockhash_announced = message.headers[-1].sha256\n \n-    # Test whether the last announcement we received had the\n-    # right header or the right inv\n-    # inv and headers should be lists of block hashes\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_message.pop(\"inv\", None)\n+            self.last_message.pop(\"headers\", None)\n+\n     def check_last_announcement(self, headers=None, inv=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801513",
      "id" : 151801513,
      "in_reply_to_id" : 151769139,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 110,
      "path" : "test/functional/sendheaders.py",
      "position" : 121,
      "pull_request_review_id" : 77575904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801513",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In this section of the test, both `test_node` and `inv_node` announce the new block.",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:13:33Z",
      "diff_hunk" : "@@ -339,16 +356,16 @@ def test_nonnull_locators(self, test_node, inv_node):\n                     # getdata requests (the check is further down)\n                     inv_node.send_header_for_blocks(blocks)\n                     inv_node.sync_with_ping()\n-                [ test_node.send_message(msg_block(x)) for x in blocks ]\n+                [test_node.send_message(msg_block(x)) for x in blocks]\n                 test_node.sync_with_ping()\n                 inv_node.sync_with_ping()\n                 # This block should not be announced to the inv node (since it also\n                 # broadcast it)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801895",
      "id" : 151801895,
      "in_reply_to_id" : 151769515,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 351,
      "path" : "test/functional/sendheaders.py",
      "position" : 363,
      "pull_request_review_id" : 77576356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801895",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:13:39Z",
      "diff_hunk" : "@@ -132,97 +161,79 @@ def on_headers(self, conn, message):\n             message.headers[-1].calc_sha256()\n             self.last_blockhash_announced = message.headers[-1].sha256\n \n-    # Test whether the last announcement we received had the\n-    # right header or the right inv\n-    # inv and headers should be lists of block hashes\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_message.pop(\"inv\", None)\n+            self.last_message.pop(\"headers\", None)\n+\n     def check_last_announcement(self, headers=None, inv=None):\n-        expect_headers = headers if headers != None else []\n-        expect_inv = inv if inv != None else []\n+        \"\"\"Test whether the last announcement received had the right header or the right inv.\n+\n+        inv and headers should be lists of block hashes.\"\"\"\n+\n         test_function = lambda: self.block_announced\n         wait_until(test_function, timeout=60, lock=mininode_lock)\n+\n         with mininode_lock:\n             self.block_announced = False\n \n-            success = True\n             compare_inv = []\n             if \"inv\" in self.last_message:\n                 compare_inv = [x.hash for x in self.last_message[\"inv\"].inv]\n-            if compare_inv != expect_inv:\n-                success = False\n+            if inv is not None:\n+                assert_equal(compare_inv, inv)\n \n-            hash_headers = []\n+            compare_headers = []\n             if \"headers\" in self.last_message:\n-                # treat headers as a list of block hashes\n-                hash_headers = [ x.sha256 for x in self.last_message[\"headers\"].headers ]\n-            if hash_headers != expect_headers:\n-                success = False\n+                compare_headers = [x.sha256 for x in self.last_message[\"headers\"].headers]\n+            if headers is not None:\n+                assert_equal(compare_headers, headers)\n \n             self.last_message.pop(\"inv\", None)\n             self.last_message.pop(\"headers\", None)\n-        return success\n-\n-    def wait_for_getdata(self, hash_list, timeout=60):\n-        if hash_list == []:\n-            return\n-\n-        test_function = lambda: \"getdata\" in self.last_message and [x.hash for x in self.last_message[\"getdata\"].inv] == hash_list\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def wait_for_block_announcement(self, block_hash, timeout=60):\n-        test_function = lambda: self.last_blockhash_announced == block_hash\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock)\n-        return\n-\n-    def send_header_for_blocks(self, new_blocks):\n-        headers_message = msg_headers()\n-        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n-        self.send_message(headers_message)\n-\n-    def send_getblocks(self, locator):\n-        getblocks_message = msg_getblocks()\n-        getblocks_message.locator.vHave = locator\n-        self.send_message(getblocks_message)\n \n class SendHeadersTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n \n-    # mine count blocks and return the new tip\n     def mine_blocks(self, count):\n+        \"\"\"Mine count blocks and return the new tip.\"\"\"\n+\n         # Clear out last block announcement from each p2p listener\n         [x.clear_last_announcement() for x in self.nodes[0].p2ps]\n         self.nodes[0].generate(count)\n         return int(self.nodes[0].getbestblockhash(), 16)\n \n-    # mine a reorg that invalidates length blocks (replacing them with\n-    # length+1 blocks).\n-    # Note: we clear the state of our p2p connections after the\n-    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n-    # return the list of block hashes newly mined\n     def mine_reorg(self, length):\n-        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        \"\"\"Mine a reorg that invalidates length blocks (replacing them with # length+1 blocks).\n+\n+        Note: we clear the state of our p2p connections after the\n+        to-be-reorged-out blocks are mined, so that we don't break later tests.\n+        return the list of block hashes newly mined.\"\"\"\n+\n+        self.nodes[0].generate(length)  # make sure all invalidated blocks are node0's\n         sync_blocks(self.nodes, wait=0.1)\n         for x in self.nodes[0].p2ps:\n             x.wait_for_block_announcement(int(self.nodes[0].getbestblockhash(), 16))\n             x.clear_last_announcement()\n \n         tip_height = self.nodes[1].getblockcount()\n-        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height - (length - 1))\n         self.nodes[1].invalidateblock(hash_to_invalidate)\n-        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        all_hashes = self.nodes[1].generate(length + 1)  # Must be longer than the orig chain\n         sync_blocks(self.nodes, wait=0.1)\n         return [int(x, 16) for x in all_hashes]\n \n     def run_test(self):\n         # Setup the p2p connections and start up the network thread.\n-        inv_node = self.nodes[0].add_p2p_connection(TestNode())\n+        inv_node = self.nodes[0].add_p2p_connection(BaseNode())\n         # Set nServices to 0 for test_node, so no block download will occur outside of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151801919",
      "id" : 151801919,
      "in_reply_to_id" : 151766587,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 216,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77576384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151801919",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure, reverted",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:15:40Z",
      "diff_hunk" : "@@ -138,6 +132,25 @@ def send_block_inv(self, blockhash):\n         msg.inv = [CInv(2, blockhash)]\n         self.connection.send_message(msg)\n \n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [CBlockHeader(b) for b in new_blocks]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list != []:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802205",
      "id" : 151802205,
      "in_reply_to_id" : 151733695,
      "original_commit_id" : "f39d4bbd1e328cb04a6ddb133511385491a90d84",
      "original_position" : 39,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77576744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802205",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not required. Now removed",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:15:49Z",
      "diff_hunk" : "@@ -263,7 +266,10 @@ def test_null_locators(self, test_node):\n         test_node.send_get_headers(locator=[], hashstop=int(block.hash, 16))\n         test_node.sync_with_ping()\n         assert_equal(test_node.block_announced, False)\n+        inv_node.clear_last_announcement()\n         test_node.send_message(msg_block(block))\n+        inv_node.check_last_announcement(inv=[int(block.hash, 16)], headers=[])\n+        inv_node.clear_last_announcement()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802227",
      "id" : 151802227,
      "in_reply_to_id" : 151771092,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 26,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77576775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802227",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've clarified the language slightly",
      "commit_id" : "9d42cc333139d7101a9223421d9eabcddfd0b025",
      "created_at" : "2017-11-17T22:15:58Z",
      "diff_hunk" : "@@ -4,7 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test behavior of headers messages to announce blocks.\n \n-Setup: \n+Setup:\n \n - Two nodes, two p2p connections to node0. One p2p connection should only ever\n   receive inv's (omitted from testing description below, this is our control).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#discussion_r151802252",
      "id" : 151802252,
      "in_reply_to_id" : 151766135,
      "original_commit_id" : "f0c4ab9a7034aca6be83fcb6cd8479cd19a196a2",
      "original_position" : 8,
      "path" : "test/functional/sendheaders.py",
      "position" : null,
      "pull_request_review_id" : 77576800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11707",
      "updated_at" : "2017-11-17T22:15:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151802252",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the comments @MarcoFalke . I've added a new commit to address them. Let me know if you'd like me to squash commits (it'd be slightly tedious to get the fixups into their appropriate commits, but I'm happy to do it if you want a cleaner git history).",
      "created_at" : "2017-11-17T22:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#issuecomment-345380974",
      "id" : 345380974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11707",
      "updated_at" : "2017-11-17T22:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345380974",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK 9d42cc333139d7101a9223421d9eabcddfd0b025. I think it is best to leave the fixup commit on its own, so that the previous review is not invalidated by changing the commit hashes.",
      "created_at" : "2017-11-18T22:31:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11707#issuecomment-345476370",
      "id" : 345476370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11707",
      "updated_at" : "2017-11-18T22:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345476370",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
