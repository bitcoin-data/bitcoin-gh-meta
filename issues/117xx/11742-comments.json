[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152313807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152313807"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fix alignment.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-21T15:43:14Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152313807",
      "id" : 152313807,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 14,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152313807",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO as it is this block is not needed.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-21T15:44:30Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314242",
      "id" : 152314242,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 53,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314242",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314577"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add test?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-21T15:45:30Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    {\n+        LOCK(cs_main);\n+        const CCoinsViewCache& view = *pcoinsTip;\n+        for (size_t o = 0; o < tx->vout.size(); o++) {\n+            bool is_tx_in_chain = !view.AccessCoin(COutPoint(tx_hash, o)).IsSpent();\n+            if (is_tx_in_chain) {\n+                result.push_back(Pair(\"allowed\", false));\n+                result.push_back(Pair(\"error\", \"transaction already in block chain\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152314577",
      "id" : 152314577,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 60,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152314577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152315829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152315829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Already default value. Or remove default value from declaration?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-21T15:49:16Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152315829",
      "id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 78156375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152315829",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note this is ATMPWT, not ATMP ;)",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:21:52Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644533",
      "id" : 152644533,
      "in_reply_to_id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 78539121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644533",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:22:06Z",
      "diff_hunk" : "@@ -988,6 +988,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152644588",
      "id" : 152644588,
      "in_reply_to_id" : 152313807,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 14,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78539175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152644588",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647067"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah!",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:32:58Z",
      "diff_hunk" : "@@ -4386,7 +4395,8 @@ bool LoadMempool(void)\n             if (nTime + nExpiryTimeout > nNow) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, mempool, state, tx, nullptr /* pfMissingInputs */, nTime,\n-                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */);\n+                                           nullptr /* plTxnReplaced */, false /* bypass_limits */, 0 /* nAbsurdFee */,\n+                                           nullptr /* test_accept */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647067",
      "id" : 152647067,
      "in_reply_to_id" : 152315829,
      "original_commit_id" : "fae1cbbc930e16b9257e83834346c9ce1c2f9f36",
      "original_position" : 64,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 78542049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647669"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Extra space.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:35:45Z",
      "diff_hunk" : "@@ -998,6 +1078,7 @@ static const CRPCCommand commands[] =\n     { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     {\"hexstring\",\"allowhighfees\"} },\n     { \"rawtransactions\",    \"combinerawtransaction\",  &combinerawtransaction,  {\"txs\"} },\n     { \"rawtransactions\",    \"signrawtransaction\",     &signrawtransaction,     {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+    { \"rawtransactions\",    \"testmempoolaccept\",      &testmempoolaccept,       {\"hexstring\",\"allowhighfees\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152647669",
      "id" : 152647669,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 91,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152647669",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648061"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Send?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:37:34Z",
      "diff_hunk" : "@@ -988,6 +988,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648061",
      "id" : 152648061,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 26,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648061",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648918"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "error? optional?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-11-22T18:41:37Z",
      "diff_hunk" : "@@ -988,6 +988,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (if any)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r152648918",
      "id" : 152648918,
      "original_commit_id" : "e0c1f055858792f51cc77b4f4b25ead9fe70b166",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 78542757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152648918",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155144465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155144465"
         }
      },
      "author_association" : "OWNER",
      "body" : "This first `const` has no effect.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T04:27:59Z",
      "diff_hunk" : "@@ -578,7 +578,7 @@ class CTxMemPool\n     /** Populate setDescendants with all in-mempool descendants of hash.\n      *  Assumes that setDescendants includes all in-mempool descendants of anything\n      *  already in it.  */\n-    void CalculateDescendants(txiter it, setEntries &setDescendants);\n+    void CalculateDescendants(const txiter it, setEntries& setDescendants) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155144465",
      "id" : 155144465,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 5,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 81413721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155144465",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am so happy about this, big concept ACK. Some tests would be nice.",
      "created_at" : "2017-12-06T04:57:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-349533704",
      "id" : 349533704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-06T04:57:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349533704",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice. Finally.\r\nutACK fa12a9481ea7d930c75f109f3c10b200db70e501\r\n\r\nA comment for the new parameter of `AcceptToMemoryPool` in `validation.h` would be nice.",
      "created_at" : "2017-12-06T07:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-349554127",
      "id" : 349554127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-06T07:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349554127",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155379057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379057"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems somewhat redundant to return the parameter as-is, no?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T22:21:15Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155379057",
      "id" : 155379057,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 17,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81689103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155379057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155382539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155382539"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ugh, I meannnnn, checking against pcoinsTip really sucks. Maybe just call ATMP and then check for the \"txn-already-known\" return? Or just return false (since its not \"accepted to mempool\", so I'd kinda expect that) and the rejection reason will be txn-already-known.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T22:37:29Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155382539",
      "id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81689103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155382539",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155388151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155388151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing `\\n`.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T23:05:32Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155388151",
      "id" : 155388151,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 24,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81699739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155388151",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155389515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155389515"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`when 'allowed' is false`",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T23:12:32Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155389515",
      "id" : 155389515,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81699739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155389515",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155391946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155391946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess this was borrowed from `sendrawtransaction`.\r\n\r\nThere, there is an extra test `bool fHaveMempool = mempool.exists(hashTx)`, \r\nbut it could be replaced by checking the ATMP error `txn-already-in-mempool`.\r\n\r\nHowever in other PR I recall @sipa said it was kind of bad thing to rely on these rejection reasons.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-06T23:25:35Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155391946",
      "id" : 155391946,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81704038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155391946",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, will rename this to `txid` and the parameter to `rawtx` to make clear that they are different.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-07T04:01:44Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426102",
      "id" : 155426102,
      "in_reply_to_id" : 155379057,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 17,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81742565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426102",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, this is mostly a convenience check to provide a helpful message in case the tx recently confirmed for whatever reason. Otherwise you'd be left with `missing_inputs`, which is correct but might not be helpful at first.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-07T04:05:09Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155426418",
      "id" : 155426418,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 81742905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155426418",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155654315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155654315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On a second thought, I don't think it makes sense to have the blockchain check here. Will return false as suggested by @TheBlueMatt ",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-07T22:04:06Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"hex\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+    const CCoinsViewCache& view = *pcoinsTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r155654315",
      "id" : 155654315,
      "in_reply_to_id" : 155382539,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 54,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82009765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155654315",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156117353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156117353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is no new line to indicate a paragraph, which groups the rpcs into two logical sections.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-11T16:06:51Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156117353",
      "id" : 156117353,
      "in_reply_to_id" : 155388151,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 24,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82543126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156117353",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156119690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156119690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, fixed.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-11T16:14:23Z",
      "diff_hunk" : "@@ -992,6 +992,86 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"hexstring\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"hex\\\"            (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed'==false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r156119690",
      "id" : 156119690,
      "in_reply_to_id" : 155389515,
      "original_commit_id" : "fa12a9481ea7d930c75f109f3c10b200db70e501",
      "original_position" : 19,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 82545999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156119690",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed the unused imports to make travis green.",
      "created_at" : "2017-12-14T04:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-351606057",
      "id" : 351606057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-14T04:31:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351606057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "can someone remind me why this one is acceptable while the other ~dozen attempts have failed?",
      "created_at" : "2017-12-19T14:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352776951",
      "id" : 352776951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T14:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352776951",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs  Revelant history https://github.com/bitcoin/bitcoin/pull/7552 from @laanwj \r\n\r\nI think this one can work because it has a better name. `verifyrawtransaction` is complex because there is lot's of bike-shed about the args and what `verifying` means. The meaning of `testmempoolaccept` is obvious and can't be misinterpreted, nor would it make sense to have more parameters.",
      "created_at" : "2017-12-19T16:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352812398",
      "id" : 352812398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T16:32:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352812398",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157811719"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157811719"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I understand this is reflected in sendraw as well, but humor me: what times is state not `IsInvalid` but it would reject it?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T16:50:56Z",
      "diff_hunk" : "@@ -992,6 +992,78 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept \\\"rawtx\\\" ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"rawtx\\\"          (string, required) The hex string of the raw transaction)\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"\\\"signedhex\\\"\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"txid\", tx_hash.GetHex()));\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+    assert(!res);\n+    result.push_back(Pair(\"allowed\", test_accept_res));\n+    if (!test_accept_res) {\n+        if (state.IsInvalid()) {\n+            result.push_back(Pair(\"reject-reason\", strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason())));\n+        } else if (missing_inputs) {\n+            result.push_back(Pair(\"reject-reason\", \"Missing inputs\"));\n+        } else {\n+            result.push_back(Pair(\"reject-reason\", state.GetRejectReason()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157811719",
      "id" : 157811719,
      "original_commit_id" : "2df0c25133544e38314d9a4e25c2996dff660be0",
      "original_position" : 69,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84516065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157811719",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs Previous pulls were:\r\n\r\n* #11201: Solves the general case (a list of transactions), but ended up in a state of {WIP, needs review, will revisit later}. Haven't checked what is actually missing there.\r\n* #7552: Also solves the general case (a list of transactions), but tried to implement some tx pool checking logic in a separate function. Then people raised concerns that this might result in unwanted behavior. (I.e. `verifytransaction` tells you everything is fine, but your mempool rejects). Also ended in a state {WIP, needs review, will revisit later}...\r\n\r\nI think this pull (`testmempoolaccept`) nicely exploits the existing checks for consensus/standardness that are called in ATMP, without touching too much of validation code. A future pull can extend this rpc to take lists of more than one raw transaction and feed them into an ephemeral mempool (e.g. based on the current mempool).",
      "created_at" : "2017-12-19T18:18:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352842691",
      "id" : 352842691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T22:40:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352842691",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "conceptACK, seems useful and more accessible/convenient than current alternatives",
      "created_at" : "2017-12-19T21:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352889141",
      "id" : 352889141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-19T21:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352889141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/5269298?v=4",
         "events_url" : "https://api.github.com/users/greenaddress/events{/privacy}",
         "followers_url" : "https://api.github.com/users/greenaddress/followers",
         "following_url" : "https://api.github.com/users/greenaddress/following{/other_user}",
         "gists_url" : "https://api.github.com/users/greenaddress/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/greenaddress",
         "id" : 5269298,
         "login" : "greenaddress",
         "organizations_url" : "https://api.github.com/users/greenaddress/orgs",
         "received_events_url" : "https://api.github.com/users/greenaddress/received_events",
         "repos_url" : "https://api.github.com/users/greenaddress/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/greenaddress/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/greenaddress"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903120"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903120"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Type: consesus.\r\n\r\nNit, s/our/the.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:26:27Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903120",
      "id" : 157903120,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 11,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903120",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903192"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, just `See sendrawtransaction.`",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:26:56Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903192",
      "id" : 157903192,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 12,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903192",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`RPC_INVALID_PARAMETER` instead? Type is already correct (it's an array at least).",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:28:56Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Array must contain exactly one raw transaction for now\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903468",
      "id" : 157903468,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 43,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903468",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, remove empty line.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:31:24Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157903858",
      "id" : 157903858,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 59,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903858",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904116"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, upper case `Rejection`.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:33:15Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904116",
      "id" : 157904116,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 23,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904116",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904308"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove? Below there is `request.params[0].get_array()` and `request.params[1].get_bool()`.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:34:41Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904308",
      "id" : 157904308,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 41,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 41,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904308",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904697"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, we could avoid loose locks, I mean, it's more clear where the lock/unlock happens:\r\n```cpp\r\n{\r\n    LOCK(cs_main);\r\n    bool res = AcceptToMemoryPool(...);\r\n    assert(!res);\r\n}\r\n```",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:37:41Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904697",
      "id" : 157904697,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 68,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904697",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904991"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, not sure if relevant at all, but this format doesn't match with others. How about `missing-inputs`?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-19T23:40:14Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+    assert(!res);\n+    result_0.pushKV(\"allowed\", test_accept_res);\n+    if (!test_accept_res) {\n+        if (state.IsInvalid()) {\n+            result_0.pushKV(\"reject-reason\", strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n+        } else if (missing_inputs) {\n+            result_0.pushKV(\"reject-reason\", \"Missing inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r157904991",
      "id" : 157904991,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 76,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 84624056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157904991",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158146832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158146832"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That is the way we do it everywhere. I assume the rational is to fail early and provide useful feedback instead of accepting/processing each parameter separately and leaving any later ones unchecked.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-20T21:57:26Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158146832",
      "id" : 158146832,
      "in_reply_to_id" : 157904308,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 41,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 41,
      "pull_request_review_id" : 84910452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158146832",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158149047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149047"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The error would be different thought. I don't think failing a bit later is that bad. This also doesn't work well with polymorphic arguments. At the end we have a mix of these, so I tend to use univalue getters to validate. We could add support to throw if any extra parameter is not get/validated.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-20T22:07:55Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158149047",
      "id" : 158149047,
      "in_reply_to_id" : 157904308,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 41,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 41,
      "pull_request_review_id" : 84912960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158149047",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158150949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158150949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, the error is different in that the RPCTypeCheck will tell you what the wrong type was, which is useful.\r\nI fail to see how the edge case of polymorphic arguments is relevant to this pull request.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2017-12-20T22:17:11Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r158150949",
      "id" : 158150949,
      "in_reply_to_id" : 157904308,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 41,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 41,
      "pull_request_review_id" : 84915138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158150949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to address @promag's feedback.",
      "created_at" : "2017-12-20T22:17:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-353198895",
      "id" : 353198895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2017-12-20T22:17:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353198895",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK",
      "created_at" : "2018-02-16T17:03:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-366295632",
      "id" : 366295632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-02-16T17:03:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366295632",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks like tests are failing because `getnewaddress` has changed to default to p2sh-segwit, changing virtual tx size, and some of the fail cases dealing with large txs are no longer triggered. I was able to get everything passing again [with trivial changes](https://github.com/bitcoin/bitcoin/commit/5a85844327e6a63992bf7d70ae4ccafe44749349) but you may want to tweak those numbers to line up with expected boundaries. \r\n\r\nTests also pass again if specifically using \"legacy\" addresses like:\r\n```\r\nnode.getnewaddress(\"\", \"legacy\")\r\n```\r\n\r\nPerhaps the test can be updated to handle both cases?",
      "created_at" : "2018-03-05T18:20:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-370513470",
      "id" : 370513470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-06T02:36:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370513470",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172912255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172912255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not use the return value, instead of modifying a pointer?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-07T17:00:25Z",
      "diff_hunk" : "@@ -934,6 +937,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             }\n         }\n \n+        if (test_accept) {\n+            *test_accept = true;\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172912255",
      "id" : 172912255,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 102011913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172912255",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172983875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172983875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pushKV actually doesn't work with bool... :/\r\n\r\nGuess we need push_back(Pair()) for this.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-07T21:03:54Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+        assert(!res);\n+    }\n+    result_0.pushKV(\"allowed\", test_accept_res);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172983875",
      "id" : 172983875,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 71,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 102096293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172983875",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172989095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172989095"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr What do you mean with \"doesn't work\"? It's used in a lot of places.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-07T21:23:42Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+        assert(!res);\n+    }\n+    result_0.pushKV(\"allowed\", test_accept_res);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r172989095",
      "id" : 172989095,
      "in_reply_to_id" : 172983875,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 71,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 102102719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172989095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173055377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173055377"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Accepting/returning a list here makes no sense. Just batch request...",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-08T03:38:48Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173055377",
      "id" : 173055377,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 9,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 102179260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173055377",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173180604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173180604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it is possible to test transactions that depend on each other through a batch request.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-08T14:52:26Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173180604",
      "id" : 173180604,
      "in_reply_to_id" : 173055377,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 9,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 102325685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173180604",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173181052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173181052"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should work on master, at least: fa1388edb17fc9eca097d93542f8d5db5aa0cf17",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-08T14:53:45Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+        assert(!res);\n+    }\n+    result_0.pushKV(\"allowed\", test_accept_res);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173181052",
      "id" : 173181052,
      "in_reply_to_id" : 172983875,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 71,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 102326179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173181052",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173181399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173181399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To keep the interface clear. It wasn't accepted to the memory pool, which is what the return value of ATMP denotes.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-08T14:54:52Z",
      "diff_hunk" : "@@ -934,6 +937,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             }\n         }\n \n+        if (test_accept) {\n+            *test_accept = true;\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173181399",
      "id" : 173181399,
      "in_reply_to_id" : 172912255,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 102326588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173181399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It was accepted, just not added... Acceptance is exactly what you're testing here. IMO the interface is less clear the way you have it.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-11T19:10:47Z",
      "diff_hunk" : "@@ -934,6 +937,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             }\n         }\n \n+        if (test_accept) {\n+            *test_accept = true;\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665663",
      "id" : 173665663,
      "in_reply_to_id" : 172912255,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 102892534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665663",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665682"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see logic in this PR to actually handle such dependencies either...?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-11T19:11:29Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665682",
      "id" : 173665682,
      "in_reply_to_id" : 173055377,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 9,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 102892553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665682",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can't assume the bundled univalue is being used (we really shouldn't be bundling it at all).",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-11T19:12:01Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+        assert(!res);\n+    }\n+    result_0.pushKV(\"allowed\", test_accept_res);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665700",
      "id" : 173665700,
      "in_reply_to_id" : 172983875,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 71,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 102892567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since this problem exists already in master, #12666 seems like the best path forward.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-11T19:12:27Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        bool res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, &test_accept_res);\n+        assert(!res);\n+    }\n+    result_0.pushKV(\"allowed\", test_accept_res);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173665708",
      "id" : 173665708,
      "in_reply_to_id" : 172983875,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 71,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 102892577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173665708",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173690686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173690686"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is explicitely checked to be size of 1 for now. I think it is reasonable to allow this to be improved in a future PR.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-12T03:58:27Z",
      "diff_hunk" : "@@ -1024,6 +1024,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r173690686",
      "id" : 173690686,
      "in_reply_to_id" : 173055377,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 9,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 102919194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173690686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke can you rebase? I am very interested into having this for new release, will review and test.",
      "created_at" : "2018-03-12T04:00:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-372187989",
      "id" : 372187989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-12T04:00:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372187989",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Will review after rebase, many have interest in this functionality.",
      "created_at" : "2018-03-23T16:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375715352",
      "id" : 375715352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-23T16:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375715352",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176911803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176911803"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. Fixed",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-24T15:16:19Z",
      "diff_hunk" : "@@ -934,6 +937,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             }\n         }\n \n+        if (test_accept) {\n+            *test_accept = true;\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176911803",
      "id" : 176911803,
      "in_reply_to_id" : 172912255,
      "original_commit_id" : "faa03a6dad9c2d86d3a1f592247e9aab0ffd291b",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 106701741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T15:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176911803",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@conscott Thanks for looking at this. I have replaced the magic numbers in the test with formulas to fix the issue and make the code more readable.",
      "created_at" : "2018-03-24T15:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375897079",
      "id" : 375897079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-24T15:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375897079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@NicolasDorier @instagibbs Rebased",
      "created_at" : "2018-03-24T15:18:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375897106",
      "id" : 375897106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-24T15:18:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375897106",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Needs release note.\r\n\r\nutACK b55555d.",
      "created_at" : "2018-03-24T16:29:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375905692",
      "id" : 375905692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-24T16:29:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375905692",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176913624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176913624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, wrong alignment.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-24T16:30:37Z",
      "diff_hunk" : "@@ -1134,6 +1134,87 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176913624",
      "id" : 176913624,
      "original_commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "original_position" : 15,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 15,
      "pull_request_review_id" : 106703631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T16:30:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176913624",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176913734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176913734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, missing test for second argument type and also tests for missing/extra arguments.",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-24T16:34:21Z",
      "diff_hunk" : "@@ -992,6 +992,88 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates our consesus or policy rules.\\n\"\n+            \"\\nAlso see sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176913734",
      "id" : 176913734,
      "in_reply_to_id" : 157904308,
      "original_commit_id" : "fa82ebf6cdb74697d1f8c9ce3fb3999b61382ba3",
      "original_position" : 41,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 41,
      "pull_request_review_id" : 106703716,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-24T16:35:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176913734",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK",
      "created_at" : "2018-03-24T20:00:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375920790",
      "id" : 375920790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-24T20:00:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375920790",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176928149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176928149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo `test_accpet`",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-03-25T04:07:56Z",
      "diff_hunk" : "@@ -1134,6 +1134,87 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");\n+    }\n+\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    }\n+    CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+    const uint256& tx_hash = tx->GetHash();\n+\n+    CAmount max_raw_tx_fee = ::maxTxFee;\n+    if (!request.params[1].isNull() && request.params[1].get_bool()) {\n+        max_raw_tx_fee = 0;\n+    }\n+\n+    UniValue result(UniValue::VARR);\n+    UniValue result_0(UniValue::VOBJ);\n+    result_0.pushKV(\"txid\", tx_hash.GetHex());\n+\n+    CValidationState state;\n+    bool missing_inputs;\n+    bool test_accept_res;\n+    {\n+        LOCK(cs_main);\n+        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accpet */ true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r176928149",
      "id" : 176928149,
      "original_commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "original_position" : 68,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 68,
      "pull_request_review_id" : 106718126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "updated_at" : "2018-03-25T04:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176928149",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`AcceptToMemoryPool`\r\n`AcceptToMemoryPoolWithTime`\r\n`AcceptToMemoryPoolWorker`\r\n\r\nHave the following parameter in common\r\n\r\n`test_accept, nAbsurdFee, bypass_limits, nAcceptTime`\r\n\r\nIt would be fine to extract this into a structure like `CAcceptToMemoryPoolOptions` rather than adding yet one more parameter.\r\n\r\nAnyway, not blocking,\r\nCodeReview ACK, will test soon.",
      "created_at" : "2018-03-25T04:14:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-375944254",
      "id" : 375944254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-25T04:14:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375944254",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I can do that refactoring in a follow up pr, if people think that is helpful.",
      "created_at" : "2018-03-29T15:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-377268071",
      "id" : 377268071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-29T15:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377268071",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fun-Fact: I just realized an identical implementation was committed in https://github.com/gfanti/bitcoin/commit/7148d4bdfb018235f6be9969148a277ef3fecf9d a year ago. (Not including rpc changes and tests)",
      "created_at" : "2018-03-30T20:16:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-377612842",
      "id" : 377612842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-03-30T20:16:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377612842",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/11742/commits/b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2018-04-02T13:53:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-377933721",
      "id" : 377933721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-04-02T13:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377933721",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Post-merge utACK https://github.com/bitcoin/bitcoin/pull/11742/commits/b55555da3e25a47f1e7fced7f09d4f0bf8198624\r\n\r\nChange looks useful and well implemented. The tests are great! In some sense it's sad that the functional tests you've introduced for this particular RPC call are the only place where we're testing basic mempool rejection logic (e.g. `scriptsig-not-pushonly`, `multi-op-return`), but it's great that we've got explicit tests for those cases now.",
      "created_at" : "2018-04-02T15:06:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-377950276",
      "id" : 377950276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-04-02T15:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377950276",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "yes, forgot to mention the tests were very extensive and impressive",
      "created_at" : "2018-04-02T18:28:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-378002849",
      "id" : 378002849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-04-02T18:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378002849",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "post merge fast review ack. +1 on this being interesting for the tests alone, even if nobody was going to use it (but I know some people will, and I remember concept acking something very similar before, for traceability, https://github.com/bitcoin/bitcoin/pull/7552 ).\r\n",
      "created_at" : "2018-04-03T02:31:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-378108468",
      "id" : 378108468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11742",
      "updated_at" : "2018-04-03T02:31:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378108468",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r469407681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469407681"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hey @MarcoFalke, sorry for the throwback, but was there a plan have `testmempoolaccept` accept multiple transactions at some point?",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2020-08-12T17:01:47Z",
      "diff_hunk" : "@@ -1134,6 +1134,87 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r469407681",
      "id" : 469407681,
      "line" : 1176,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNzY4MQ==",
      "original_commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "original_line" : 1176,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 43,
      "pull_request_review_id" : 466106152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T17:01:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469407681",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r469507857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469507857"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, see https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352842691",
      "commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "created_at" : "2020-08-12T20:02:41Z",
      "diff_hunk" : "@@ -1134,6 +1134,87 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     return hashTx.GetHex();\n }\n \n+UniValue testmempoolaccept(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            // clang-format off\n+            \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n+            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n+            \"\\nSee sendrawtransaction call.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. [\\\"rawtxs\\\"]       (array, required) An array of hex strings of raw transactions.\\n\"\n+            \"                                        Length must be one for now.\\n\"\n+            \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n+            \"                            Length is exactly one for now.\\n\"\n+            \" {\\n\"\n+            \"  \\\"txid\\\"           (string) The transaction hash in hex\\n\"\n+            \"  \\\"allowed\\\"        (boolean) If the mempool allows this tx to be inserted\\n\"\n+            \"  \\\"reject-reason\\\"  (string) Rejection string (only present when 'allowed' is false)\\n\"\n+            \" }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            \"\\nTest acceptance of the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n+            // clang-format on\n+            );\n+    }\n+\n+    ObserveSafeMode();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VBOOL});\n+    if (request.params[0].get_array().size() != 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Array must contain exactly one raw transaction for now\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11742#discussion_r469507857",
      "id" : 469507857,
      "in_reply_to_id" : 469407681,
      "line" : 1176,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwNzg1Nw==",
      "original_commit_id" : "b55555da3e25a47f1e7fced7f09d4f0bf8198624",
      "original_line" : 1176,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 43,
      "pull_request_review_id" : 466231790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11742",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T20:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469507857",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
