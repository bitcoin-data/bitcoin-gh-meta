{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Reported by @rustyrussell on irc:\r\n\r\n    <rusty> Latest master branch, bitcoind in regtest mode:\r\n    bitcoind: validation.cpp:4203: void CheckBlockIndex(const Consensus::Params&): Assertion `(pindexFirstNeverProcessed != nullptr) == (pindex->nChainTx == 0)' failed.\r\n    <rusty> Pretty sure that was a .bitcoind dir from an older bitcoind.\r\n\r\nI can reproduce this error with the following simple test case:\r\n\r\n    class RustyAssertTest(BitcoinTestFramework):\r\n        def set_test_params(self):\r\n            self.num_nodes = 1\r\n            self.setup_clean_chain = True\r\n\r\n        def run_test(self):\r\n            self.log.info(\"initialise chain by activating segwit\")\r\n            self.restart_node(0, [\"-vbparams=segwit:0:999999999999\"])\r\n            self.nodes[0].generate(500)\r\n            assert_equal(get_bip9_status(self.nodes[0], 'segwit')['status'], 'active')\r\n\r\n            self.log.info(\"restart with segwit always active\")\r\n            self.restart_node(0)\r\n\r\nor by hand by running:\r\n\r\n    $ rm -rf ~/.bitcoin/regtest\r\n    $ ./bitcoind -regtest -vbparams=segwit:0:999999999999 -daemon\r\n    $ ./bitcoin-cli -regtest generate 500\r\n    $ ./bitcoin-cli -regtest stop\r\n    $ ./bitcoind -regtest\r\n    bitcoind: validation.cpp:4213: void CheckBlockIndex(const Consensus::Params&): Assertion `(pindexFirstNeverProcessed != nullptr) == (pindex->nChainTx == 0)' failed.\r\n    Aborted\r\n\r\nI believe what's happening is:\r\n\r\n * bitcoind is invoking RewindBlockIndex at startup, and seeing that segwit is immediately active (due to #11389), but it doesn't have witness data stored (because the blocks were generated with segwit only activating following bip9)\r\n * so the blocks are disconnected and then their validity is reduced, by setting nTx and nChainTx both to 0\r\n * once that's done, RewindBlockIndex calls CheckBlockIndex which is where the assertion fails\r\n * pindexFirstNeverProcessed gets set quickly, because nTx is mostly 0, and it stays set provided there's a subnode, of which there should be plenty\r\n * the assertion then fails when it hits a block where nChainTx != 0\r\n * and that happens as soon as it gets to a block where segwit had activated under bip9 rules: since segwit had activated, that block was stored with witness data, and the validation reduction didn't occur, leaving nChainTx as whatever it had been -- this should be block 433 on regtest i think (144 blocks of started, 144 blocks active voting, 144 blocks locked in, and 1 block active)\r\n\r\nI don't think this bug can be hit on mainnet or testnet -- running an old client will either not recognise segwit at all and never store any witness data (so nChainTx won't be non-zero), or will see segwit started at the exact same block the current client does (so won't reduce the validation of any blocks). It also shouldn't impact most future bip 9 (or similar) deployments, as most of those presumably won't need to change the storage format.\r\n\r\nSo I think this might just warrant a cleaner error message rather than handling it properly. Perhaps RewindBlockIndex's test should change from:\r\n\r\n    if (IsWitnessEnabled(pprev) && !BLOCK_OPT_WITNESS && !chainActive) { ... }\r\n\r\nto something like:\r\n\r\n    if (IsWitnessEnabled(pprev)) {\r\n        if (!BLOCK_OPT_WITNESS && !chainActive) {\r\n            ...\r\n        } else if (BLOCK_OPT_WITNESS && pprev->nChainTx == 0) {\r\n            LogPrintf(\"segwit activation height has changed, cannot reuse blockchain\");\r\n            return false;\r\n        }\r\n    }\r\n",
   "closed_at" : "2020-04-27T00:39:04Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11782/comments",
   "created_at" : "2017-11-28T10:41:36Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11782/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/11782",
   "id" : 277336361,
   "labels" : [
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11782/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUyNzczMzYzNjE=",
   "number" : 11782,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Assertion failure in validation.cpp:4203 (re: pindexFirstNeverProcessed)",
   "updated_at" : "2020-04-27T00:39:04Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11782",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
      "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ajtowns/followers",
      "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ajtowns",
      "id" : 127186,
      "login" : "ajtowns",
      "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
      "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
      "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
      "repos_url" : "https://api.github.com/users/ajtowns/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ajtowns"
   }
}
