{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This PR is a proof of concept for using a [LLVM](https://llvm.org/) & [LLD](https://lld.llvm.org/) based toolchain for macOS builds. Much work has recently been done on a [new Mach-O backend](https://reviews.llvm.org/rG03f43b3aca3) for LLD and as of LLVM 13 it will become [the default backend](https://reviews.llvm.org/D95204). Initially this was going to [happen in LLVM 12](https://lists.llvm.org/pipermail/llvm-dev/2021-January/147665.html).\r\n\r\nGiven that LLVM 13 is currently main, the changes here swap our native_clang package (should probably be renamed to native_llvm) from downloading a prebuilt Clang + LLVM, to building the necessary components (clang, lld, libcxx, libcxxabi) of LLVM ourselves. Note that this takes some time, (~40m for me on an 8 core machine), so if you'd rather skip that, there are notes on using Clang-13 on Debian experimental below. If / when we actually did this, we would download and use a release build similar to how we do now.\r\n\r\nWith the changes in this PR I'm able to everything compile and link everything (except `bitcoin-qt` and `libbitcoinconsensus.dylib`, however both are solvable). Using Clang 13 on Debian experimental I'm about to compile and link everything. The binaries produced run OK when taken to a macOS (10.15) system.\r\n\r\n### Benefits\r\n* Less complicated macOS toolchain.\r\n* No longer beholden to Apple releasing it's [source](https://opensource.apple.com/source/) for [cctools](https://opensource.apple.com/source/cctools/), [ld64](https://opensource.apple.com/source/ld64/) & [libtapi](https://opensource.apple.com/source/tapi/).\r\n* No more reliance on third parties to modify those sources for us. i.e [apple-libtapi](https://github.com/tpoechtrager/apple-libtapi), [cctools-port](https://github.com/tpoechtrager/cctools-port) (cctools + ld64).\r\n\r\n### Caveats\r\nLLD does not yet support all of the link options we use. You will likely see warnings similar to:\r\n```bash\r\nld64.lld: warning: Option `-bind_at_load` is not yet implemented. Stay tuned...\r\n```\r\n\r\nThere is an issue when configuring Qt in depends with the changes in this PR:\r\n```bash\r\nProject ERROR: failed to parse default search paths from compiler output\r\n```\r\nThis is no doubt solvable, I just haven't spent long investigating.\r\n\r\nThere is also an issue building libbitcoinconsensus:\r\n```bash\r\nld64.lld: warning: Option '-keep_private_externs' is not yet implemented. Stay tuned...\r\nld64.lld: warning: Option '-r' is not yet implemented. Stay tuned...\r\nld64.lld: error: undefined symbol: _main\r\nclang-13: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\nNo doubt also solvable, given linking works with `lld-13` on Debian, or a case of waiting for upstream.\r\n\r\n### This PR\r\n```bash\r\n# assuming SDK available in depends/SDKs\r\nmake -C depends/ HOST=x86_64-apple-darwin18 NO_QT=1 -j9\r\n\r\n./autogen.sh\r\nCONFIG_SITE=/home/ubuntu/bitcoin/depends/x86_64-apple-darwin18/share/config.site ./configure CXXFLAGS=\"-fuse-ld=lld -Wc,-fuse-ld=lld\"\r\nmake -j9\r\n\r\n# file src/bitcoind\r\nsrc/bitcoind: Mach-O 64-bit x86_64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|WEAK_DEFINES|BINDS_TO_WEAK|PIE|HAS_TLV_DESCRIPTORS>\r\n```\r\n### Debian Experimental with Clang 13\r\n```bash\r\ndocker run -it debian:experimental /bin/bash\r\n\r\n# copy in SDK\r\ndocker cp Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers container_name:/bitcoin/depends/SDKs\r\n```\r\n\r\n```bash\r\napt update && apt upgrade\r\n\r\n# note: still need g++ for at least native_b2\r\napt install git curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libz-dev python3-setuptools libtinfo5 xorriso bzip2 patch xz-utils g++ pkg-config automake libtool\r\n\r\napt install clang-13 lld-13\r\nupdate-alternatives --install /usr/bin/clang clang $(which clang-13) 100\r\nupdate-alternatives --install /usr/bin/clang++ clang++ $(which clang++-13) 100\r\n\r\n# clang --version\r\nDebian clang version 13.0.0-++20210418105309+a0898f0cecc7-1~exp1\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n\r\ngit clone https://github.com/bitcoin/bitcoin\r\ncd bitcoin\r\nmake -C depends/ HOST=x86_64-apple-darwin18 FORCE_USE_SYSTEM_CLANG=1 -j9\r\n\r\n./autogen.sh\r\nCONFIG_SITE=/bitcoin/depends/x86_64-apple-darwin18/share/config.site ./configure CXXFLAGS=\"-fuse-ld=lld -Wc,-fuse-ld=lld\"\r\nmake -j9 V=1\r\n\r\n# file src/qt/bitcoin-qt\r\nsrc/qt/bitcoin-qt: Mach-O 64-bit x86_64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|WEAK_DEFINES|BINDS_TO_WEAK|PIE|HAS_TLV_DESCRIPTORS>\r\n# file src/.libs/libbitcoinconsensus.0.dylib\r\nsrc/.libs/libbitcoinconsensus.0.dylib: Mach-O 64-bit x86_64 dynamically linked shared library, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|WEAK_DEFINES|BINDS_TO_WEAK|NO_REEXPORTED_DYLIBS>\r\n```\r\n\r\n### libtool gymnastics\r\n\r\nNote the use of `-Wc,-fuse-ld=lld` in the c/cxxflags. This is to pass `-fuse-ld=lld` through to libtool, which normally [strips](https://www.gnu.org/software/libtool/manual/html_node/Compile-mode.html) [compile](https://www.gnu.org/software/libtool/manual/html_node/Compile-mode.html) / link flags before building libraries, and would otherwise end up trying to use GNU `ld`, which won't work. This can no doubt be solved more gracefully and/or handle automatically if we started building this way.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21778/comments",
   "created_at" : "2021-04-26T07:40:29Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21778/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/21778",
   "id" : 867374557,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "660000",
         "default" : false,
         "description" : "",
         "id" : 234879,
         "name" : "macOS",
         "node_id" : "MDU6TGFiZWwyMzQ4Nzk=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/macOS"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21778/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NjIzMDU1NDQ4",
   "number" : 21778,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/21778.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21778",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/21778.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21778"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "POC: LLVM 13 & LLD based macOS toolchain",
   "updated_at" : "2021-04-26T07:40:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21778",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
