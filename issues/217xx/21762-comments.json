[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21178 (test: run mempool_reorg.py even with wallet disabled by DariusParvin)\n* #21014 (test: Run mempool_accept.py even with wallet disabled by stackman27)\n* #20889 (test: ensure any failing method in MiniWallet leaves no side-effects by mjdietzx)\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-23T11:18:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-825588394",
      "id" : 825588394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNTU4ODM5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-23T11:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825588394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "- I really like the implementation of `sendrawtransaction` in https://github.com/bitcoin/bitcoin/pull/21762/commits/fa1bedb4944b513a3c9184ad549f58bfbe69e20e. I can close https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622339199 in favor of this, right?\r\n- Also like the implementation of `create_self_transfer` and how it's used ð in https://github.com/bitcoin/bitcoin/pull/21762/commits/fa085b470a9647f3b261f506b46f4e7ca2baf0b0\r\n- I'm confused and still trying to understand what's really going on here https://github.com/bitcoin/bitcoin/pull/21762/commits/fa29382ab23d52b86bfda8a267195b6c51b713c2. I see why the original implementation was really confusing (no coins ever mined to `ADDRESS_BCRT1_P2WSH_OP_TRUE` although the code makes you expect that to happen). But I don't really get why the assertion changes from `250` to `248` assuming it wasn't already failing. And I also don't understand why it fits into this PR. Any explanation here could help me get to an ACK quicker\r\n- Nice speedup results in https://github.com/bitcoin/bitcoin/pull/21762/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67. Am I correct that `wallet.generate(200)` is what is slowing these `MiniWallet` tests down? And that the approach you use here would be the gold standard for other `MiniWallet` tests going forward?",
      "created_at" : "2021-04-28T17:02:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828621492",
      "id" : 828621492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyODYyMTQ5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-28T17:02:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828621492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But I don't really get why the assertion changes from 250 to 248 assuming it wasn't already failing. And I also don't understand why it fits into this PR. Any explanation here could help me get to an ACK quicker\r\n\r\nI don't know either why the assertion is there, but the value changes because the block size changes due to the scriptPubKey (size) change.\r\n\r\n> Am I correct that wallet.generate(200) is what is slowing these MiniWallet tests down? And that the approach you use here would be the gold standard for other MiniWallet tests going forward?\r\n\r\nYes, `generate` will take time under valgrind, so using the cache when possible will help with a speed-up. Though it is not always possible to use the cache.",
      "created_at" : "2021-04-28T17:10:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828627167",
      "id" : 828627167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyODYyNzE2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-28T17:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828627167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622387960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622387960"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't really like this pattern. The method name `sync_blocks` seems confusing because I wouldn't expect a state change (`self._utxos`) by this method. It seems this would have to be used very carefully, with knowledge of `MiniWallet`'s internals to avoid bugs. For example, if `scan_blocks` is called multiple times with any overlapping blocks, then we'll start to get duplicate utxos in `self._utxos` (maybe this should be a set instead of a list)? \r\n\r\nIn general I also don't really like how `self._utxos` is sorted (in `send_self_transfer` by value), while here it isn't sorted but will have an implicit ordering based on when/how `scan_blocks` is called, and then based on order of blocks/vouts inside `scan_blocks`. There's just a lot of different ways it's ordered and we are always relying on that ordering\r\n\r\nI'm gonna think this through, don't think this should hold up this PR. But at least I can start the discussion and see what you think / if this can be improved.",
      "commit_id" : "fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "created_at" : "2021-04-28T17:21:37Z",
      "diff_hunk" : "@@ -20,40 +20,41 @@\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n \n     def run_test(self):\n         wallet = MiniWallet(self.nodes[0])\n \n-        wallet.generate(200)\n-        chain_height = self.nodes[0].getblockcount()\n-        assert_equal(chain_height, 200)\n+        # Invalidate two blocks, so that miniwallet has access to a coin that will mature in the next block\n+        chain_height = 198\n+        self.nodes[0].invalidateblock(self.nodes[0].getblockhash(chain_height + 1))\n+        assert_equal(chain_height, self.nodes[0].getblockcount())\n \n         # Coinbase at height chain_height-100+1 ok in mempool, should\n         # get mined. Coinbase at height chain_height-100+2 is\n         # too immature to spend.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 103)]\n-        coinbase_txids = [self.nodes[0].getblock(h)['tx'][0] for h in b]\n-        utxo_101 = wallet.get_utxo(txid=coinbase_txids[0])\n-        utxo_102 = wallet.get_utxo(txid=coinbase_txids[1])\n+        wallet.scan_blocks(start=chain_height - 100 + 1, num=1)\n+        utxo_mature = wallet.get_utxo()\n+        wallet.scan_blocks(start=chain_height - 100 + 2, num=1)\n+        utxo_immature = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622387960",
      "id" : 622387960,
      "line" : 38,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjM4Nzk2MA==",
      "original_commit_id" : "fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "original_line" : 38,
      "original_position" : 27,
      "original_start_line" : 35,
      "path" : "test/functional/mempool_spend_coinbase.py",
      "position" : 27,
      "pull_request_review_id" : 647331385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21762",
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-28T17:21:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622387960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "crACK https://github.com/bitcoin/bitcoin/pull/21762/commits/fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "created_at" : "2021-04-28T17:22:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#issuecomment-828635867",
      "id" : 828635867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyODYzNTg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-28T17:22:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828635867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622390418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622390418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree. Do you have specific suggestions to improve that pass with all existing tests? Feel free to ping me for review.",
      "commit_id" : "fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "created_at" : "2021-04-28T17:24:43Z",
      "diff_hunk" : "@@ -20,40 +20,41 @@\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n \n     def run_test(self):\n         wallet = MiniWallet(self.nodes[0])\n \n-        wallet.generate(200)\n-        chain_height = self.nodes[0].getblockcount()\n-        assert_equal(chain_height, 200)\n+        # Invalidate two blocks, so that miniwallet has access to a coin that will mature in the next block\n+        chain_height = 198\n+        self.nodes[0].invalidateblock(self.nodes[0].getblockhash(chain_height + 1))\n+        assert_equal(chain_height, self.nodes[0].getblockcount())\n \n         # Coinbase at height chain_height-100+1 ok in mempool, should\n         # get mined. Coinbase at height chain_height-100+2 is\n         # too immature to spend.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 103)]\n-        coinbase_txids = [self.nodes[0].getblock(h)['tx'][0] for h in b]\n-        utxo_101 = wallet.get_utxo(txid=coinbase_txids[0])\n-        utxo_102 = wallet.get_utxo(txid=coinbase_txids[1])\n+        wallet.scan_blocks(start=chain_height - 100 + 1, num=1)\n+        utxo_mature = wallet.get_utxo()\n+        wallet.scan_blocks(start=chain_height - 100 + 2, num=1)\n+        utxo_immature = wallet.get_utxo()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21762#discussion_r622390418",
      "id" : 622390418,
      "in_reply_to_id" : 622387960,
      "line" : 38,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjM5MDQxOA==",
      "original_commit_id" : "fa40eb5b6bfd151912c58d61771f6a6528f44e67",
      "original_line" : 38,
      "original_position" : 27,
      "original_start_line" : 35,
      "path" : "test/functional/mempool_spend_coinbase.py",
      "position" : 27,
      "pull_request_review_id" : 647334350,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21762",
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-28T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622390418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
