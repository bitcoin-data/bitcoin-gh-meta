[
   {
      "author_association" : "MEMBER",
      "body" : "agree that this is aesthetically misleading. to brainstorm,\r\n\r\nwhat do you think about this for when the conditionals are short enough:\r\n```\r\nif (IsThisTrue() || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n```\r\n\r\nand this for when they are longer:\r\n```\r\nif (IsThisTrue() \r\n || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n\r\n```\r\n",
      "created_at" : "2021-04-20T17:55:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823483247",
      "id" : 823483247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzQ4MzI0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T17:55:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823483247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, I think single-line if-conditions are already fine. And for multi-line conditions I am looking for something that works with clang-format, ideally. Right now I manually put the opening `{` on a new line, which will be undone the next time I call clang-format.\r\n\r\nOne hack would be to use double `(())` around the condition.\r\n\r\n\r\n```cpp\r\n    if ((nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\r\n         nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE)) {\r\n        BOOST_CHECK_EQUAL(min_activation_height, 0);\r\n        return;\r\n    }\r\n",
      "created_at" : "2021-04-20T18:50:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823520331",
      "id" : 823520331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzUyMDMzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T18:50:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823520331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For multi-line if conditions I personally prefer this way, where I add newline after first `(` and before last `)`, so that it's better division between last line of condition and first line of code in if block.\r\n```C++\r\n    if (\r\n        nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\r\n        nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE\r\n    ) {\r\n        BOOST_CHECK_EQUAL(min_activation_height, 0);\r\n        return;\r\n    }\r\n```\r\n\r\nBut have no idea how that works with clang-format.",
      "created_at" : "2021-04-20T19:02:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823527645",
      "id" : 823527645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzUyNzY0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T19:02:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823527645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How about placing the boolean operator at the start of the new line:\r\n\r\n```\r\n    if (IsThisTrue()\r\n        || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n```\r\n\r\nThis is recommended by the GNU coding standards (https://www.gnu.org/prep/standards/html_node/Formatting.html):\r\n\r\n> When you split an expression into multiple lines, split it before an operator, not after one. Here is the right way:\r\n>\r\n> ```\r\n> if (foo_this_is_long && bar > win (x, y, z)\r\n>     && remaining_condition)\r\n> ```\r\n>\r\n> Try to avoid having two operators of different precedence at the same level of indentation. For example, donât write this:\r\n>\r\n> ```\r\n> mode = (inmode[j] == VOIDmode\r\n>         || GET_MODE_SIZE (outmode[j]) > GET_MODE_SIZE (inmode[j])\r\n>         ? outmode[j] : inmode[j]);\r\n> ```\r\n>\r\n> Instead, use extra parentheses so that the indentation shows the nesting:\r\n>\r\n> ```\r\n> mode = ((inmode[j] == VOIDmode\r\n>          || (GET_MODE_SIZE (outmode[j]) > GET_MODE_SIZE (inmode[j])))\r\n>         ? outmode[j] : inmode[j]);\r\n> ```\r\n>\r\n> [...]\r\n\r\nGoogle C++ standards just say \"When you have a boolean expression that is longer than the standard line length, be consistent in how you break up the lines.\" (https://google.github.io/styleguide/cppguide.html#Boolean_Expressions)\r\n\r\nA bit more discussion here: https://news.ycombinator.com/item?id=7975386",
      "created_at" : "2021-04-26T10:20:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826712189",
      "id" : 826712189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjcxMjE4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:20:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826712189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "That could be set via `BreakBeforeBinaryOperators` in clang-format",
      "created_at" : "2021-04-26T10:35:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826722697",
      "id" : 826722697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjcyMjY5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826722697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is recommended by the GNU coding standards (https://www.gnu.org/prep/standards/html_node/Formatting.html):\r\n\r\nAgree (after first attempting to write things in a way that avoids the need for multi-line conditionals). ",
      "created_at" : "2021-04-26T10:56:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826737793",
      "id" : 826737793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjczNzc5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826737793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Has open-brace-on-new-line already been ruled out for multi-line conditions?\r\n\r\n```c++\r\nif (short_condition) trivial_action();\r\n\r\nif (short_condition) {\r\n    complex();\r\n    action();\r\n}\r\n\r\nif (one_complicated_condition\r\n    && another_complicated_condition)\r\n{\r\n    trivial_or_complex_action();\r\n}\r\n```\r\n\r\nSpecifying `BraceWrapping: AfterControlStatement: MultiLine` stops clang-format from undoing that style, I think -- but we'd need to set `ColumnLimit:` to something for it to actually stop you from putting an open brace at the end of a multiline if.",
      "created_at" : "2021-05-13T10:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-840467432",
      "id" : 840467432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDQ2NzQzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T10:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840467432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Right now I manually put the opening { on a new line, which will be undone the next time I call clang-format.\r\n\r\nAnother hack would be to add `//` at the end of the `if`. In combination with `BreakBeforeBinaryOperators: NonAssignment` clang-format wouldn't change this any more:\r\n\r\n```cpp\r\nif (nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE\r\n    || nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE) //\r\n{\r\n    BOOST_CHECK_EQUAL(min_activation_height, 0);\r\n    return;\r\n}\r\n```\r\nI couldn't get `BraceWrapping: AfterControlStatement` working with that.",
      "created_at" : "2021-05-29T17:27:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-850868981",
      "id" : 850868981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDg2ODk4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-29T17:27:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850868981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't this discussion irrelevant with the current unlimited line length (`ColumnLimit: 0`)? For me, no matter how I break the line manually, clang-format joins all the lines into a single line (unlimitedly long one). Also it never decides to break a long line.\r\n\r\nOtherwise, I like @jnewbery's [suggestion above](https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826712189). `BreakBeforeBinaryOperators: true` does just that.",
      "created_at" : "2021-07-29T14:42:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-889205197",
      "id" : 889205197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5841ADHN",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T14:42:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889205197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Has open-brace-on-new-line already been ruled out for multi-line conditions?\r\n\r\nNo. I wasn't aware of this option. Thanks for suggesting. Fixed in #23216.\r\n\r\n> For me, no matter how I break the line manually, clang-format joins all the lines into a single line (unlimitedly long one).\r\n\r\nI can't reproduce. Does this happen with the example \"dirty\" diff in https://github.com/bitcoin/bitcoin/pull/23216#issue-753033469 ? Which version of clang-format are you using?",
      "created_at" : "2021-10-07T10:18:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-937654841",
      "id" : 937654841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII584343o5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937654841/reactions"
      },
      "updated_at" : "2021-10-07T10:18:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937654841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I played a bit with this. It looks like clang-format would join lines only sometimes. Not always, as I was thinking before. For example, with the current config, the following:\r\n\r\n```cpp\r\n    // Example1\r\n    if (m_connman.ShouldRunInactivityChecks(node_to) && peer.m_ping_nonce_sent \r\n        && now > peer.m_ping_start.load() + std::chrono::seconds{TIMEOUT_INTERVAL}) {\r\n```\r\n\r\nis joined into a single line:\r\n\r\n```cpp\r\n    if (m_connman.ShouldRunInactivityChecks(node_to) && peer.m_ping_nonce_sent && now > peer.m_ping_start.load() + std::chrono::seconds{TIMEOUT_INTERVAL}) {\r\n```\r\n\r\nBut this remains unchanged:\r\n\r\n```cpp\r\n    // Example2\r\n    if (m_connman.ShouldRunInactivityChecks(node_to) && peer.m_ping_nonce_sent &&\r\n        now > peer.m_ping_start.load() + std::chrono::seconds{TIMEOUT_INTERVAL}) {\r\n```\r\n\r\nI guess this is due to `BreakBeforeBinaryOperators: false`. If I change that to `true`, then Example1 remains unchanged while Example2 is joined into a single line.\r\n\r\n> Does this happen with the example \"dirty\" diff...\r\n\r\nNo, because it breaks after `&&`.\r\n\r\n> Which version of clang-format are you using?\r\n\r\nTried with 12 and 14.\r\n\r\nIt looks like manually inserted line breaks, if they do not violate some rules, are respected and not removed. If they violate e.g. `BreakBeforeBinaryOperators` then they are removed and lines joined.",
      "created_at" : "2021-10-07T12:47:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-937758762",
      "id" : 937758762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII58435RAq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937758762/reactions"
      },
      "updated_at" : "2021-10-07T12:47:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937758762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Specifying BraceWrapping: AfterControlStatement: MultiLine stops clang-format from undoing that style, I think -- but we'd need to set ColumnLimit: to something for it to actually stop you from putting an open brace at the end of a multiline if.\r\n\r\n> Isn't this discussion irrelevant with the current unlimited line length (ColumnLimit: 0)?\r\n\r\nRight, the column limit needs to be set first before looking into this.",
      "created_at" : "2021-10-08T13:42:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-938653878",
      "id" : 938653878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII58438ri2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938653878/reactions"
      },
      "updated_at" : "2021-10-08T13:42:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938653878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FWIW, I run a shell wrapper of clang-format that:\r\n\r\n* Changes `ColumnLimit` from 0 to 100 in `src/.clang-format`\r\n* Runs the real clang-format\r\n* Restores the original `src/.clang-format` (so that I don't commit it accidentally)\r\n\r\nThe unlimited line length creates too many problems for me, so I solve it locally. Have been afraid to raise the topic publicly :fire:",
      "created_at" : "2021-10-08T14:00:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-938666955",
      "id" : 938666955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII58438uvL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 2,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938666955/reactions"
      },
      "updated_at" : "2021-10-08T14:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938666955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> FWIW, I run a shell wrapper of clang-format that:\r\n\r\nSame.\r\n\r\nThis is the patch I use. (150 is also the limit on the GitHub web view)\r\n\r\n\r\n```diff\r\ndiff --git a/src/.clang-format b/src/.clang-format\r\nindex 791b3b8f9f..8da3baf34a 100644\r\n--- a/src/.clang-format\r\n+++ b/src/.clang-format\r\n@@ -17,10 +17,11 @@ BreakBeforeBinaryOperators: false\r\n BreakBeforeBraces: Custom\r\n BraceWrapping:\r\n   AfterClass: true\r\n+  AfterControlStatement: MultiLine\r\n   AfterFunction: true\r\n BreakBeforeTernaryOperators: false\r\n BreakConstructorInitializersBeforeComma: false\r\n-ColumnLimit:     0\r\n+ColumnLimit:     150\r\n CommentPragmas:  '^ IWYU pragma:'\r\n ConstructorInitializerAllOnOneLineOrOnePerLine: false\r\n ConstructorInitializerIndentWidth: 4\r\n",
      "created_at" : "2021-11-14T08:39:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-968247990",
      "id" : 968247990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5845tkq2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968247990/reactions"
      },
      "updated_at" : "2021-11-14T08:39:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968247990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> 150 is also the limit on the GitHub web view\r\n\r\nI'm pretty sure that GitHub's limit depends on your monitor and fonts used. For me a diff on github can have 156 characters. I've created a little project to see the line lengths: https://github.com/martinus/github-character-length\r\n\r\nI would very much appreciate it if we could add a reasonable default `ColumnLimit` to the `.clang-format`. I'm fine with anything in the range 80-150. I usually use around 130 or so.",
      "created_at" : "2021-11-14T11:35:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-968273396",
      "id" : 968273396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5845tq30",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968273396/reactions"
      },
      "updated_at" : "2021-11-14T11:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968273396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, I meant the GitHub line limit with an unlimited monitor. Locally I get 153 chars for https://github.com/martinus/github-character-length/pull/2/files",
      "created_at" : "2021-11-14T11:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-968276778",
      "id" : 968276778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5845trsq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968276778/reactions"
      },
      "updated_at" : "2021-11-14T11:59:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968276778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For me:\r\n\r\nDiff, unified view: 129\r\nDiff, split view: 62\r\nComment in PR: 80\r\n\r\nbut yes, it quickly changes if I zoom in/out (ctrl + +/-). I think Github's sh**y web UI, that could as well change, shouldn't be a deciding factor for `ColumnLimit` in `.clang-format`.",
      "created_at" : "2021-11-15T13:33:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-968915600",
      "id" : 968915600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5845wHqQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968915600/reactions"
      },
      "updated_at" : "2021-11-15T13:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968915600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It shouldn't be important what the exact limit is, as it is only used to format *touched* code, not reformat the whole codebase. If there is a reason, it can always be adjusted. Though, initially it shouldn't be reduced too much, since it is currently unlimited.",
      "created_at" : "2021-11-15T13:39:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-968919980",
      "id" : 968919980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "IC_kwDOABII5845wIus",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968919980/reactions"
      },
      "updated_at" : "2021-11-15T13:39:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968919980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
