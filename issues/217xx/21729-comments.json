[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps this can be used as a starting point.\r\n\r\nIt should most probably be ported to Python to become portable, maintainable and readable.\r\n\r\nTested under Linux. I don't think it will work under macOS (BSD `file` and `stat` differences), but I don't have any Mac to test on :)\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\nexport LC_ALL=C\r\n\r\nALLOWED_PERMISSION_NON_EXECUTABLES=644\r\nALLOWED_PERMISSION_EXECUTABLES=755\r\nALLOWED_FILENAME_REGEXP='^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$'\r\n\r\nset -e\r\n\r\n# cd to root folder of git repo for git ls-files to work properly\r\ncd \"$(dirname $0)/../..\" || exit 1\r\n\r\nREPO_FILES=$(git ls-files)\r\n\r\nif grep -vE \"${ALLOWED_FILENAME_REGEXP}\" <<< \"${REPO_FILES}\"; then\r\n    echo \"^ There exists filenames in the repo which do not match the allowed filename regexp ${ALLOWED_FILENAME_REGEXP}. Failing.\"\r\n    exit 1\r\nfi\r\n\r\nEXIT_CODE=0\r\n\r\nNON_STANDARD_PERMISSION_FILENAME_PAIRS=$(find ${REPO_FILES} \\! -perm ${ALLOWED_PERMISSION_NON_EXECUTABLES} -printf \"%m:%p\\n\")\r\nfor PERMISSION_FILENAME_PAIR in ${NON_STANDARD_PERMISSION_FILENAME_PAIRS}; do\r\n    PERMISSION=$(cut -f1 -d: <<< \"${PERMISSION_FILENAME_PAIR}\")\r\n    FILENAME=$(cut -f2 -d: <<< \"${PERMISSION_FILENAME_PAIR}\")\r\n    if [[ ${PERMISSION} == \"${ALLOWED_PERMISSION_EXECUTABLES}\" ]]; then\r\n        SHEBANG=$(head -c2 \"${FILENAME}\")\r\n        if [[ ${SHEBANG} == \"#!\" ]]; then\r\n            continue\r\n        fi\r\n        echo \"Error: File ${FILENAME} has permission ${ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \\\"chmod ${ALLOWED_PERMISSION_NON_EXECUTABLES} ${FILENAME}\\\" to make it non-executable.\"\r\n        EXIT_CODE=1\r\n    else\r\n        echo \"Error: File ${FILENAME} has unexpected permission ${PERMISSION}. Do \\\"chmod ${ALLOWED_PERMISSION_NON_EXECUTABLES} ${FILENAME}\\\" (if non-executable) or \\\"chmod ${ALLOWED_PERMISSION_EXECUTABLES} ${FILENAME}\\\" (if executable).\"\r\n        EXIT_CODE=1\r\n    fi\r\ndone\r\n\r\nexit ${EXIT_CODE}\r\n```",
      "created_at" : "2021-04-19T13:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-822480824",
      "id" : 822480824,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMjQ4MDgyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-19T13:48:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822480824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`if [ -x filename ]` is a portable (in a POSIX sense) way to check the executable flag of a file.",
      "created_at" : "2021-04-19T14:25:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-822508578",
      "id" : 822508578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMjUwODU3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-19T14:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822508578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Here is a first pass at a python version\r\n\r\n```python3\r\n#!/usr/bin/env python3\r\n# Copyright (c) 2021 The Bitcoin Core developers\r\n# Distributed under the MIT software license, see the accompanying\r\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\r\n\"\"\"\r\nThis checks that all files in the repository have correct names and permissions\r\n\"\"\"\r\n\r\nimport os\r\nimport re\r\nimport sys\r\nfrom subprocess import check_output\r\n\r\nALLOWED_PERMISSION_NON_EXECUTABLES = 644\r\nALLOWED_PERMISSION_EXECUTABLES = 755\r\nALLOWED_FILENAME_REGEXP = '^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$'\r\nCMD_REPO_FILES = 'git ls-files'\r\n\r\n\r\ndef check_files():\r\n    files = check_output(CMD_REPO_FILES, shell=True).decode('utf8').strip().split('\\n')\r\n    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\r\n    for file in files:\r\n        # Check file name\r\n        if not filename_regex.match(file):\r\n            print(f\"'{file}' does not not match the allowed filename regexp. Failing.\")\r\n            sys.exit(1)\r\n\r\n        # Check file permissions\r\n        file_perms = int(oct(os.stat(file).st_mode)[-3:])\r\n        if file_perms == ALLOWED_PERMISSION_EXECUTABLES:\r\n            shebang = open(file, \"r\").readline(2)\r\n            if shebang == '#!':\r\n                continue\r\n            print(f\"File '{file}' has permission {ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \\\"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\\\" to make it non-executable.\")\r\n            sys.exit(1)\r\n        elif file_perms == ALLOWED_PERMISSION_NON_EXECUTABLES:\r\n            continue\r\n        else:\r\n            print(f\"File '{file}' has unexpected permission {file_perms}. Do \\\"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\\\" (if non-executable) or \\\"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\\\" (if executable).\")\r\n            sys.exit(1)\r\n\r\n\r\ndef main():\r\n    check_files()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```",
      "created_at" : "2021-04-20T01:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-822899389",
      "id" : 822899389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMjg5OTM4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T01:31:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822899389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "You likely already found this in your testing @practicalswift, but it seems that https://github.com/bitcoin/bitcoin/blob/master/contrib/gitian-descriptors/assign_DISTNAME currently is executable, but missing a shebang line. I could not find any other files with an issue.\r\n\r\nLet me know if the above looks anywhere close to acceptable, and I will look into what I need to do to open a proper PR. It would be my first code contribution to Bitcoin Core :)",
      "created_at" : "2021-04-20T01:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-822907088",
      "id" : 822907088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMjkwNzA4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T01:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822907088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@windsok \r\n\r\nNice! Your Python script is portable, maintainable and readable which cannot be said about my hacky `bash` script :) Thanks for taking on the task!\r\n\r\nName is say `test/lint/lint-file-permissions.py` and call it from a shell wrapper `test/lint/lint-file-permissions.sh` (to make it automatically invoked by `test/lint/lint-all.sh`) like this â¦\r\n\r\n```sh\r\n#!/usr/bin/env bash\r\n\r\nexport LC_ALL=C\r\n\r\nset -e\r\ncd \"$(dirname $0)/../..\"\r\ntest/lint/lint-file-permissions.py\r\n```\r\n\r\nâ¦ and we should be ready to go! I'm ready to review :)\r\n",
      "created_at" : "2021-04-20T07:44:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823056118",
      "id" : 823056118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzA1NjExOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T07:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823056118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@windsok\r\n\r\nBelow is a small diff which addresses three small nits - feel free to use or ignore :)\r\n\r\n* Now prints all errors encountered (instead exiting after the first error is encountered)\r\n* Now opening files in mode `rb` instead of `r` in order to not fail on non-ASCII files (locale dependent)\r\n* Now prints the allowed filename regexp in case of a non-allowed filename to make remedy easier\r\n\r\n```diff\r\ndiff --git a/test/lint/lint-file-permissions.py b/test/lint/lint-file-permissions.py\r\nindex eb4021fc3..78278e27b 100755\r\n--- a/test/lint/lint-file-permissions.py\r\n+++ b/test/lint/lint-file-permissions.py\r\n@@ -21,29 +21,31 @@ CMD_REPO_FILES = 'git ls-files'\r\n def check_files():\r\n     files = check_output(CMD_REPO_FILES, shell=True).decode('utf8').strip().split('\\n')\r\n     filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\r\n+    exit_code = 0\r\n     for file in files:\r\n         # Check file name\r\n         if not filename_regex.match(file):\r\n-            print(f\"'{file}' does not not match the allowed filename regexp. Failing.\")\r\n-            sys.exit(1)\r\n+            print(f\"'{file}' does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\")\r\n+            exit_code = 1\r\n\r\n         # Check file permissions\r\n         file_perms = int(oct(os.stat(file).st_mode)[-3:])\r\n         if file_perms == ALLOWED_PERMISSION_EXECUTABLES:\r\n-            shebang = open(file, \"r\").readline(2)\r\n-            if shebang == '#!':\r\n+            shebang = open(file, \"rb\").read(2)\r\n+            if shebang == b'#!':\r\n                 continue\r\n             print(f\"File '{file}' has permission {ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \\\"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\\\" to make it non-executable.\")\r\n-            sys.exit(1)\r\n+            exit_code = 1\r\n         elif file_perms == ALLOWED_PERMISSION_NON_EXECUTABLES:\r\n             continue\r\n         else:\r\n             print(f\"File '{file}' has unexpected permission {file_perms}. Do \\\"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\\\" (if non-executable) or \\\"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\\\" (if executable).\")\r\n-            sys.exit(1)\r\n+            exit_code = 1\r\n+    return exit_code\r\n\r\n\r\n def main():\r\n-    check_files()\r\n+    sys.exit(check_files())\r\n\r\n\r\n if __name__ == \"__main__\":\r\n```\r\n\r\nDon't forget to run `black` on the file before submitting the PR :)",
      "created_at" : "2021-04-20T07:52:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823061710",
      "id" : 823061710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzA2MTcxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T10:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823061710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It might be good to also check that files with the bang *do* have the +x flag set. See also https://github.com/bitcoin/bitcoin/pull/16807/files#r345547050",
      "created_at" : "2021-04-20T10:10:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823154773",
      "id" : 823154773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzE1NDc3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T10:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823154773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It might be good to also check that files with the bang _do_ have the +x flag set. See also https://github.com/bitcoin/bitcoin/pull/16807/files#r345547050\r\n\r\n+1\r\n\r\n@windsok, `git grep -lI '^#!'` might be helpful to quickly get a list of the 305 shebang files in the repo :)",
      "created_at" : "2021-04-20T10:29:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823166144",
      "id" : 823166144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzE2NjE0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T10:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823166144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks @MarcoFalke & @practicalswift ! I will do all of this and get a PR together :)\r\n\r\nI also noticed that we have this existing lint test which is checking that executable `.sh` and `.py` files have a specific shebang line. I am thinking that it probably makes sense to also move these tests into this new python test file, so that all similar tests are located in the same test file. Does that make sense to you?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/test/lint/lint-shebang.sh",
      "created_at" : "2021-04-20T15:51:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823391335",
      "id" : 823391335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzM5MTMzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T15:51:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823391335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "We also have this existing lint test which is checking filenames in the repo. I am thinking that we should probably either also consolidate this test into the new python test file, or we should remove the filename checking and leave the new tests to be purely related to permissions and shebang lines?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/test/lint/lint-filenames.sh",
      "created_at" : "2021-04-20T19:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823542338",
      "id" : 823542338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzU0MjMzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T19:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823542338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@windsok\r\n\r\nGood idea!\r\n\r\nGenerally: the more linting functionality we can move from non-maintainable shell scripts to maintainable Python scripts the better :)",
      "created_at" : "2021-04-20T19:44:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823552890",
      "id" : 823552890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzU1Mjg5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T19:44:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823552890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've opened up a draft PR here: https://github.com/bitcoin/bitcoin/pull/21740\r\n\r\nVery happy to receive any feedback, and will make change accordingly.\r\n\r\nThanks! :) ",
      "created_at" : "2021-04-21T01:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21729#issuecomment-823715602",
      "id" : 823715602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21729",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzcxNTYwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-21T01:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823715602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   }
]
