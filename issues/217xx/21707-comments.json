[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615841194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615841194"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, here and line 202\r\n```suggestion\r\n        assert full_outbound_peer.getaddr_received\r\n```",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-19T13:20:08Z",
      "diff_hunk" : "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615841194",
      "id" : 615841194,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTg0MTE5NA==",
      "original_commit_id" : "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "original_line" : 162,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 638858189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615841194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615842564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615842564"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We can now use Python f-strings for interpolation (here and e.g. line 70 above).\r\n```suggestion\r\n            a = f\"{first_octet}.{second_octet}.1.1\"\r\n```",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-19T13:21:51Z",
      "diff_hunk" : "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615842564",
      "id" : 615842564,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTg0MjU2NA==",
      "original_commit_id" : "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "original_line" : 177,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 638858189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615842564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617089977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617089977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n\t\tself.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\r\n```",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-20T23:04:24Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617089977",
      "id" : 617089977,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA4OTk3Nw==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 127,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617089977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617091871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617091871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same as previous,\r\n\r\n```suggestion\r\n\t\tself.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\r\n```",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-20T23:09:52Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617091871",
      "id" : 617091871,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5MTg3MQ==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 132,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617091871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617092786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617092786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't know about this endpoint, nice :) ",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-20T23:12:12Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)\n+            self.nodes[0].addpeeraddress(a, 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617092786",
      "id" : 617092786,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5Mjc4Ng==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 177,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 181,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617092786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617093266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617093266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this change from 30 min to 5 min makes more sense as part of the 2nd commit, \"[test] Extract setting up addr message into a helper\"",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-20T23:13:45Z",
      "diff_hunk" : "@@ -78,7 +78,7 @@ def setup_addr_msg(self, num):\n     def send_addr_msg(self, source, msg, receivers):\n         source.send_and_ping(msg)\n         # pop m_next_addr_send timer\n-        self.mocktime += 30 * 60",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617093266",
      "id" : 617093266,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5MzI2Ng==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 81,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617093266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617095257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617095257"
         }
      },
      "author_association" : "MEMBER",
      "body" : "is this `sync_with_ping()` necessary?  ",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-20T23:19:24Z",
      "diff_hunk" : "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617095257",
      "id" : 617095257,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5NTI1Nw==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 146,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617095257",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617150779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617150779"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/further/subsequent? later? \r\n\r\nmy brain keeps thinking \"further\" relates to how far the message propagates through network nodes. ",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T02:07:26Z",
      "diff_hunk" : "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617150779",
      "id" : 617150779,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzE1MDc3OQ==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 138,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 640497083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617150779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617850478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617850478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:20:44Z",
      "diff_hunk" : "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617850478",
      "id" : 617850478,
      "in_reply_to_id" : 615841194,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MDQ3OA==",
      "original_commit_id" : "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "original_line" : 162,
      "original_position" : 166,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641489170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617850478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851426"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "TIL, nice. Changed the two occurrences where the line is touched anyway.",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:22:30Z",
      "diff_hunk" : "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851426",
      "id" : 617851426,
      "in_reply_to_id" : 615842564,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTQyNg==",
      "original_commit_id" : "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "original_line" : 177,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641490479,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851714"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:23:03Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851714",
      "id" : 617851714,
      "in_reply_to_id" : 617089977,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTcxNA==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 127,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641490869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851824"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:23:16Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851824",
      "id" : 617851824,
      "in_reply_to_id" : 617091871,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTgyNA==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 132,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641491025,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853447"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Actually, I copied this block from `p2p_getaddr_caching.py` :smile:",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:26:11Z",
      "diff_hunk" : "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)\n+            self.nodes[0].addpeeraddress(a, 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853447",
      "id" : 617853447,
      "in_reply_to_id" : 617092786,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MzQ0Nw==",
      "original_commit_id" : "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "original_line" : 177,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 181,
      "pull_request_review_id" : 641493158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853696"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done, I agree.",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:26:39Z",
      "diff_hunk" : "@@ -78,7 +78,7 @@ def setup_addr_msg(self, num):\n     def send_addr_msg(self, source, msg, receivers):\n         source.send_and_ping(msg)\n         # pop m_next_addr_send timer\n-        self.mocktime += 30 * 60",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853696",
      "id" : 617853696,
      "in_reply_to_id" : 617093266,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MzY5Ng==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 81,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641493494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "changed the wording",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:26:57Z",
      "diff_hunk" : "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853893",
      "id" : 617853893,
      "in_reply_to_id" : 617150779,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1Mzg5Mw==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 138,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641493742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617859647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617859647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, the sync is done in `send_addr_msg` in the next line. Removed.",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-21T20:36:54Z",
      "diff_hunk" : "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617859647",
      "id" : 617859647,
      "in_reply_to_id" : 617095257,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1OTY0Nw==",
      "original_commit_id" : "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "original_line" : 146,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : null,
      "pull_request_review_id" : 641501203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T20:36:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617859647",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack , @amitiuttarwar Thanks a lot for the reviews! I addressed all comments above.\r\n\r\n> the commit message for [6041280](https://github.com/bitcoin/bitcoin/commit/604128088ebf7ea0ce795c9683e32ee40daac7ed) says \"[test] Extract setting up addr message into a helper\", but it really extracts _sending_ addr message, with the previous commit extracting the set up. this was my fault, but I just noticed it now \r\n\r\nI changed the commit message and also added a note why mocktime is changed in this commit.\r\n \r\n> RE commit [6eb3024](https://github.com/bitcoin/bitcoin/commit/6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba) adding coverage for the ignore-first-message-from-outbound-peer: since this is the current behavior, it seems reasonable to add coverage (and thanks for adding the explanation), but just want to mention that I find this bitcoin core behavior super weird and think we should consider changing it. Either bitcoin core should be consistent with itself and propagate those initial self announcements, or it shouldn't self announce at all. From researching the addr behavior of alternative clients for #21528, I saw that a lot of nodes just do one early self-advertisement, so its unfortunate if bitcoin core nodes are just black-holing that as a side effect of getaddr logic. This is all out of scope of this PR but I'm mentioning since the test coverage highlights the behavior.\r\n\r\n I agree, the `fGetAddr` flag preventing this was initially meant to prevent relaying GETADDR responses - at some time the typical order of messages must have changed, and now it typically affects self-announcements. I discovered this unintended behavior during #19794, which would have removed it. \r\n\r\nI [closed](https://github.com/bitcoin/bitcoin/pull/19794#issuecomment-692916364) that PR and didn't open a follow-up as originally planned because after reading additional BIP155 discussion (especially [this](https://github.com/bitcoin/bips/pull/907#issuecomment-692894687) post by sipa) I realized that even addrs that are part extraordinarily small GETADDR responses <=10 wouldn't get relayed due to  the 10min recency limit anyway (and if they are recent enough, why not relay them?). The [suggestion](https://github.com/bitcoin/bitcoin/pull/19794#issuecomment-691184578) of keeping the flag around and making sure that it would apply to GETADDR responses again didn't really convince me anymore after that. (as opposed to just removing the flag and relying on the content of the addr messages themselves instead of timing)",
      "created_at" : "2021-04-21T21:13:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#issuecomment-824361280",
      "id" : 824361280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21707",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNDM2MTI4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-21T21:13:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824361280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620085210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620085210"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason not to use the `send_addr_msg()` helper here?",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-26T08:35:27Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620085210",
      "id" : 620085210,
      "line" : 209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDA4NTIxMA==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 209,
      "original_position" : 213,
      "original_start_line" : 206,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 213,
      "pull_request_review_id" : 644403028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : 206,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-26T08:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620085210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620568642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620568642"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I missed this when combining test commits from different branches. \r\n@amitiuttarwar would you like to apply this refactor in  #21528 when you touch the test again?",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-26T18:59:51Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620568642",
      "id" : 620568642,
      "in_reply_to_id" : 620085210,
      "line" : 209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDU2ODY0Mg==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 209,
      "original_position" : 213,
      "original_start_line" : 206,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 213,
      "pull_request_review_id" : 645018957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : 206,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-26T18:59:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620568642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621048952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621048952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This fails:\r\n\r\n* https://cirrus-ci.com/task/4959397244829696?logs=ci#L6318",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-27T09:46:35Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621048952",
      "id" : 621048952,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTA0ODk1Mg==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 142,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 146,
      "pull_request_review_id" : 645657256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-27T09:46:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621048952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621078686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621078686"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The expected addr message is sent directly after the assert has failed, so it looks like a timing issue:\r\n` node0 2021-04-27T06:55:10.562357Z (mocktime: 2021-04-27T07:10:08Z) [net.cpp:2967] [PushMessage] sending addr (61 bytes) peer=9 ` (https://cirrus-ci.com/task/4959397244829696?logs=ci#L6320)\r\nWith `AVG_ADDRESS_BROADCAST_INTERVAL=30s`, I thought that a mocktime of 5 mins should be plenty to prevent Poisson timer fails - I think it's not that.\r\nPossibly, there needs to be an additional wait after the mocktime to give the node more time to actually send out the addr message?\r\n\r\nI'll look into this more closely later today!",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-27T10:28:08Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621078686",
      "id" : 621078686,
      "in_reply_to_id" : 621048952,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTA3ODY4Ng==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 142,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 146,
      "pull_request_review_id" : 645693787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-27T10:28:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621078686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621110409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621110409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed in #21785",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-27T11:16:30Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621110409",
      "id" : 621110409,
      "in_reply_to_id" : 621048952,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTExMDQwOQ==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 142,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 146,
      "pull_request_review_id" : 645732146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-27T11:16:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621110409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r622778884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622778884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in #21785",
      "commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "created_at" : "2021-04-29T06:54:39Z",
      "diff_hunk" : "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r622778884",
      "id" : 622778884,
      "in_reply_to_id" : 620085210,
      "line" : 209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc3ODg4NA==",
      "original_commit_id" : "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_line" : 209,
      "original_position" : 213,
      "original_start_line" : 206,
      "path" : "test/functional/p2p_addr_relay.py",
      "position" : 213,
      "pull_request_review_id" : 647864153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
      "side" : "RIGHT",
      "start_line" : 206,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-29T06:54:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622778884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
