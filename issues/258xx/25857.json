{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "During IBD, sometimes I get this crash reported by gbd:\r\n\r\n```\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\r\n#1  0x00007fffff0c5537 in __GI_abort () at abort.c:79\r\n#2  0x00000000080949d8 in CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at coins.cpp:307\r\n#3  0x00000000083b0153 in CCoinsViewCache::FetchCoin (this=0x88b26a0, outpoint=...) at coins.cpp:46\r\n#4  0x00000000083b033a in CCoinsViewCache::GetCoin (this=<optimized out>, outpoint=..., coin=...) at coins.cpp:59\r\n#5  0x00000000083b0153 in CCoinsViewCache::FetchCoin (this=0x7fff3338f1c0, outpoint=...) at coins.cpp:46\r\n#6  0x000000000829fa5a in CCoinsViewCache::HaveCoin (outpoint=..., this=0x7fff3338f1c0) at coins.cpp:160\r\n#7  CCoinsViewCache::HaveInputs (tx=..., this=<optimized out>) at coins.cpp:265\r\n#8  CCoinsViewCache::HaveInputs (tx=..., this=0x7fff3338f1c0) at coins.cpp:261\r\n#9  Consensus::CheckTxInputs (tx=..., state=..., inputs=..., nSpendHeight=661434, txfee=@0x7fff3338dcd0: 0) at consensus/tx_verify.cpp:171\r\n#10 0x00000000085559f0 in CChainState::ConnectBlock(CBlock const&, BlockValidationState&, CBlockIndex*, CCoinsViewCache&, bool) [clone .constprop.0] (this=this@entry=0x88acfa0, block=..., state=...,\r\n    pindex=<optimized out>, pindex@entry=0xa6f0238, view=..., fJustCheck=fJustCheck@entry=false) at validation.cpp:2186\r\n#11 0x000000000827b79c in CChainState::ConnectTip (disconnectpool=..., connectTrace=<synthetic pointer>..., pblock=std::shared_ptr<const CBlock> (empty) = {...}, pindexNew=0xa6f0238, state=...,\r\n    this=0x88acfa0) at validation.cpp:2720\r\n#12 CChainState::ActivateBestChainStep (connectTrace=..., fInvalidFound=<optimized out>, pblock=..., pindexMostWork=<optimized out>, state=..., this=<optimized out>) at validation.cpp:2883\r\n#13 CChainState::ActivateBestChain (this=0x88acfa0, state=..., pblock=std::shared_ptr<const CBlock> (empty) = {...}) at validation.cpp:3010\r\n#14 0x000000000818ed7a in node::ThreadImport (chainman=..., vImportFiles=..., args=..., mempool_path=...) at node/blockstorage.cpp:887\r\n#15 0x00000000081199f2 in operator() (__closure=0x7fff2c000b60) at init.cpp:1575\r\n#16 std::__invoke_impl<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> (__f=...) at /usr/include/c++/10/bits/invoke.h:60\r\n#17 std::__invoke_r<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()>&> (__fn=...) at /usr/include/c++/10/bits/invoke.h:110\r\n#18 std::_Function_handler<void(), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> >::_M_invoke(const std::_Any_data &) (__functor=...)\r\n    at /usr/include/c++/10/bits/std_function.h:291\r\n#19 0x00000000084331c4 in std::function<void ()>::operator()() const (this=0x7fff3338fe50) at /usr/include/c++/10/bits/std_function.h:622\r\n#20 util::TraceThread(char const*, std::function<void ()>) (thread_name=<optimized out>, thread_func=...) at util/thread.cpp:19\r\n#21 0x00000000081197cb in std::__invoke_impl<void, void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > (\r\n    __f=@0x13344fe8: 0x8433080 <util::TraceThread(char const*, std::function<void ()>)>) at /usr/include/c++/10/bits/invoke.h:60\r\n#22 std::__invoke<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > (\r\n    __fn=@0x13344fe8: 0x8433080 <util::TraceThread(char const*, std::function<void ()>)>) at /usr/include/c++/10/bits/invoke.h:95\r\n#23 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > >::_M_invoke<0, 1, 2> (\r\n    this=0x13344fb8) at /usr/include/c++/10/thread:264\r\n#24 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > >::operator() (\r\n    this=0x13344fb8) at /usr/include/c++/10/thread:271\r\n#25 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::<lambda()> > > >::_M_run(void) (this=0x13344fb0) at /usr/include/c++/10/thread:215\r\n#26 0x00007fffff4beed0 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#27 0x00007fffff796ea7 in start_thread (arg=<optimized out>) at pthread_create.c:477\r\n#28 0x00007fffff19ddef in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n```\r\n\r\nLast logs displayed (running bitcoind with -debug=all) before the crash when running inside gdb (with current sources sync'ed from this git repo).\r\n\r\n```\r\n2022-08-16T08:41:08.970168Z [loadblk] [validationinterface.cpp:199] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 fork block hash=000000000000000000035e2d3a32a3249d4db7ef6c89db3a9f5d8e5111046285 (in IBD=true)\r\n2022-08-16T08:41:08.970455Z [scheduler] [validationinterface.cpp:227] [operator()] [validation] BlockConnected: block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 block height=661432\r\n2022-08-16T08:41:08.982873Z [loadblk] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 12.38ms [1.19s (14.02ms/blk)]\r\n2022-08-16T08:41:08.985121Z [loadblk] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 2.00ms [0.19s (2.20ms/blk)]\r\n2022-08-16T08:41:08.985349Z [loadblk] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.23ms [0.02s (0.23ms/blk)]\r\n2022-08-16T08:41:09.695210Z [loadblk] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1308 transactions: 709.85ms (0.543ms/tx, 0.113ms/txin) [47.74s (555.09ms/blk)]\r\n2022-08-16T08:41:09.695478Z [loadblk] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 6271 txins: 710.13ms (0.113ms/txin) [47.76s (555.36ms/blk)]\r\n2022-08-16T08:41:09.695698Z [loadblk] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.22ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.695895Z [loadblk] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.20ms [0.02s (0.19ms/blk)]\r\n2022-08-16T08:41:09.696274Z [loadblk] [validationinterface.cpp:251] [BlockChecked] [validation] BlockChecked: block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 state=Valid\r\n2022-08-16T08:41:09.696475Z [loadblk] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 713.62ms [48.01s (558.28ms/blk)]\r\n2022-08-16T08:41:09.702334Z [loadblk] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 5.86ms [0.64s (7.47ms/blk)]\r\n2022-08-16T08:41:09.702531Z [loadblk] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.20ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.703023Z [loadblk] [validation.cpp:2511] [UpdateTipLog] UpdateTip: new best=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 height=661433 version=0x20006000 log2_work=92.516788 tx=596277697 date='2020-12-15T05:08:04Z' progress=0.788542 cache=79.7MiB(606180txo)\r\n2022-08-16T08:41:09.703239Z [loadblk] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.71ms [0.08s (0.95ms/blk)]\r\n2022-08-16T08:41:09.703429Z [loadblk] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 732.76ms [49.95s (580.77ms/blk)]\r\n2022-08-16T08:41:09.703618Z [loadblk] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs\r\n2022-08-16T08:41:09.703806Z [loadblk] [validationinterface.cpp:227] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 block height=661433\r\n2022-08-16T08:41:09.704008Z [loadblk] [validationinterface.cpp:199] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=0000000000000000000b5996770f8489d67422b9797569fc4f7ff78d06029943 fork block hash=00000000000000000007797ea03040a6ce4bbba93edc0797be66593f342b0e80 (in IBD=true)\r\n2022-08-16T08:41:09.711612Z [loadblk] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 7.41ms [1.20s (13.94ms/blk)]\r\n2022-08-16T08:41:09.713156Z [loadblk] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 1.24ms [0.19s (2.19ms/blk)]\r\n2022-08-16T08:41:09.713345Z [loadblk] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.19ms [0.02s (0.22ms/blk)]\r\n2022-08-16T08:41:09.723584Z [loadblk] [dbwrapper.h:250] [Read] LevelDB read failure: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n2022-08-16T08:41:09.723798Z [loadblk] [dbwrapper.cpp:246] [HandleError] Fatal LevelDB error: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n2022-08-16T08:41:09.723998Z [loadblk] [dbwrapper.cpp:247] [HandleError] You can use -debug=leveldb to get more complete diagnostic messages\r\n2022-08-16T08:41:09.724248Z [loadblk] [noui.cpp:43] [noui_ThreadSafeMessageBox] Error: Error reading from database, shutting down.\r\nError: Error reading from database, shutting down.\r\n2022-08-16T08:41:09.724697Z [loadblk] [coins.cpp:302] [GetCoin] Error reading from database: Fatal LevelDB error: Corruption: block checksum mismatch: /mnt/g/bitcoin/chainstate/308716.ldb\r\n\r\nThread 15 \"b-loadblk\" received signal SIGABRT, Aborted.\r\n[Switching to Thread 0x7fff32f60700 (LWP 14607)]\r\n__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\r\n50      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb)\r\n```\r\nRunning on Debian Running on Debian bullseye InRelease (with all current apt updates).\r\n\r\nNote that restarting bitcoind (with -checklevel=4 -checkblock=6) just restarts from a recent height, and does not detect any corruption, it processes a few dozens of blocks for a couple of minutes and crashes again. Retrying restarts from the same blockheight.\r\n\r\nI've checked the leveldb with external tools, and did not find any corruption or missing index in the key indexes, or any incorrect sort of keys in the 6 levels, or any corruption with dummy/partial records in the journal or sorted indexes.",
   "closed_at" : "2022-08-23T06:39:57Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/comments",
   "created_at" : "2022-08-16T08:44:45Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/25857",
   "id" : 1340015683,
   "labels" : [
      {
         "color" : "f7c6c7",
         "default" : false,
         "description" : null,
         "id" : 323697996,
         "name" : "Data corruption",
         "node_id" : "MDU6TGFiZWwzMjM2OTc5OTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585P3wRD",
   "number" : 25857,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857/timeline",
   "title" : "IBD core dumped during recursive call to CCoinsViewCache::FetchCoin (while connecting best chain tip)",
   "updated_at" : "2022-08-23T06:39:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25857",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1387035?v=4",
      "events_url" : "https://api.github.com/users/verdy-p/events{/privacy}",
      "followers_url" : "https://api.github.com/users/verdy-p/followers",
      "following_url" : "https://api.github.com/users/verdy-p/following{/other_user}",
      "gists_url" : "https://api.github.com/users/verdy-p/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/verdy-p",
      "id" : 1387035,
      "login" : "verdy-p",
      "node_id" : "MDQ6VXNlcjEzODcwMzU=",
      "organizations_url" : "https://api.github.com/users/verdy-p/orgs",
      "received_events_url" : "https://api.github.com/users/verdy-p/received_events",
      "repos_url" : "https://api.github.com/users/verdy-p/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/verdy-p/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/verdy-p/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/verdy-p"
   }
}
