[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [S3RK](https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456850195), [theStack](https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1327223431), [achow101](https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1457199020) |\n| Concept ACK | [Xekyo](https://github.com/bitcoin/bitcoin/pull/25806#pullrequestreview-1304212477) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26720](https://github.com/bitcoin/bitcoin/pull/26720) (wallet: coin selection, don't return results that exceed the max allowed weight by furszy)\n* [#25982](https://github.com/bitcoin/bitcoin/pull/25982) (wallet: Guard against undefined behaviour by yancyribbens)\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#23475](https://github.com/bitcoin/bitcoin/pull/23475) (wallet: add config to prioritize a solution that doesn't create change in coin selection by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-08-09T05:46:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1208941748",
      "id" : 1208941748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585IDvy0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208941748/reactions"
      },
      "updated_at" : "2023-03-06T23:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208941748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-17T00:43:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1217313081",
      "id" : 1217313081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585Ijrk5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217313081/reactions"
      },
      "updated_at" : "2022-08-17T00:43:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217313081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024610915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024610915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CoinSelectionParams`'s `rng_fast` member is a reference and you're using a stack object, this will create a dangling reference.",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:33:38Z",
      "diff_hunk" : "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(type, {COutPoint(wtx.GetHash(), 0),\n+                       txout,\n+                       depth,\n+                       CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                       /*spendable=*/ true,\n+                       /*solvable=*/ true,\n+                       /*safe=*/ true,\n+                       wtx.GetTxTime(),\n+                       is_from_me,\n+                       fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(bool avoid_partial_spends)\n+{\n+    FastRandomContext rand{};\n+    return CoinSelectionParams{\n+            rand,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024610915",
      "id" : 1024610915,
      "line" : 65,
      "node_id" : "PRRC_kwDOABII5849ElJj",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 65,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 65,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024610915/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024610915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611478"
         }
      },
      "author_association" : "MEMBER",
      "body" : "prefer enum class",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:34:44Z",
      "diff_hunk" : "@@ -229,11 +235,41 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    std::vector<OutputGroup> positive_group;\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/**\n+* Stores several 'Groups' whose\n+* were filtered by different output type\n+*/\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum InsertGroupType {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611478",
      "id" : 1024611478,
      "line" : 259,
      "node_id" : "PRRC_kwDOABII5849ElSW",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 259,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 71,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611478/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use structured binding",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:35:18Z",
      "diff_hunk" : "@@ -416,28 +416,35 @@ std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet)\n     return result;\n }\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only)\n+FilteredOutputGroups GroupOutputs(const CWallet& wallet,\n+                          const CoinsResult& coins,\n+                          const CoinSelectionParams& coin_sel_params,\n+                          const std::vector<CoinEligibilityFilter>& filters)\n {\n-    std::vector<OutputGroup> groups_out;\n+    FilteredOutputGroups filtered_groups;\n \n+    // Allowing partial spends means no grouping. Each COutput gets its own OutputGroup\n     if (!coin_sel_params.m_avoid_partial_spends) {\n-        // Allowing partial spends  means no grouping. Each COutput gets its own OutputGroup.\n-        for (const COutput& output : outputs) {\n-            // Skip outputs we cannot spend\n-            if (!output.spendable) continue;\n-\n-            size_t ancestors, descendants;\n-            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n-\n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n-\n-            // Check the OutputGroup's eligibility. Only add the eligible ones.\n-            if (positive_only && group.GetSelectionAmount() <= 0) continue;\n-            if (group.m_outputs.size() > 0 && group.EligibleForSpending(filter)) groups_out.push_back(group);\n+        for (const auto& coins_by_type : coins.coins) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024611786",
      "id" : 1024611786,
      "line" : 428,
      "node_id" : "PRRC_kwDOABII5849ElXK",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 428,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 30,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024611786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612246"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const auto& push_output_groups = [&](const ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {\r\n```",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:36:10Z",
      "diff_hunk" : "@@ -474,39 +477,69 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             group = &groups.back();\n         }\n \n-        // Add the output to group\n-        group->Insert(output, ancestors, descendants, positive_only);\n+        // Filter for positive only before adding the output to group\n+        if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n+            group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n+        }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& coins_by_type : coins.coins) {\n+        for (const COutput& output : coins_by_type.second) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;\n+\n+            size_t ancestors, descendants;\n+            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n+\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_groups_map, coin_sel_params, /*positive_only=*/ false);\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_positive_groups_map,\n+                          coin_sel_params, /*positive_only=*/ true);\n+        }\n     }\n \n-    // Now we go through the entire map and pull out the OutputGroups\n-    for (const auto& spk_and_groups_pair: spk_to_groups_map) {\n-        const std::vector<OutputGroup>& groups_per_spk= spk_and_groups_pair.second;\n+    // Now we go through the entire maps and pull out the OutputGroups\n+    const auto& push_output_groups = [&](ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612246",
      "id" : 1024612246,
      "line" : 503,
      "node_id" : "PRRC_kwDOABII5849EleW",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 503,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 109,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612246/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612600"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use structured binding",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:36:52Z",
      "diff_hunk" : "@@ -474,39 +477,69 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             group = &groups.back();\n         }\n \n-        // Add the output to group\n-        group->Insert(output, ancestors, descendants, positive_only);\n+        // Filter for positive only before adding the output to group\n+        if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n+            group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n+        }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& coins_by_type : coins.coins) {\n+        for (const COutput& output : coins_by_type.second) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;\n+\n+            size_t ancestors, descendants;\n+            wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n+\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_groups_map, coin_sel_params, /*positive_only=*/ false);\n+            group_outputs(output, coins_by_type.first, ancestors, descendants, spk_to_positive_groups_map,\n+                          coin_sel_params, /*positive_only=*/ true);\n+        }\n     }\n \n-    // Now we go through the entire map and pull out the OutputGroups\n-    for (const auto& spk_and_groups_pair: spk_to_groups_map) {\n-        const std::vector<OutputGroup>& groups_per_spk= spk_and_groups_pair.second;\n+    // Now we go through the entire maps and pull out the OutputGroups\n+    const auto& push_output_groups = [&](ScriptPubKeyToOutgroup& groups_map ,bool positive_only) {\n+        for (const auto& spk_and_groups_pair: groups_map) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612600",
      "id" : 1024612600,
      "line" : 504,
      "node_id" : "PRRC_kwDOABII5849Elj4",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 504,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 110,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612600/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612836"
         }
      },
      "author_association" : "MEMBER",
      "body" : "wallet is unused",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:37:20Z",
      "diff_hunk" : "@@ -517,40 +550,39 @@ std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAm\n     // If we can't fund the transaction from any individual OutputType, run coin selection one last time\n     // over all available coins, which would allow mixing\n     if (allow_mixed_output_types) {\n-        if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params)}) {\n+        if (auto result{ChooseSelectionResult(wallet, nTargetValue, groups.all_groups, coin_selection_params)}) {\n             return result;\n         }\n     }\n     // Either mixing is not allowed and we couldn't find a solution from any single OutputType, or mixing was allowed and we still couldn't\n     // find a solution using all available coins\n-    return std::nullopt;\n+    return util::Error();\n };\n \n-std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins, const CoinSelectionParams& coin_selection_params)\n+util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, Groups& groups,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024612836",
      "id" : 1024612836,
      "line" : 562,
      "node_id" : "PRRC_kwDOABII5849Elnk",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 562,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 183,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612836/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024612836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need for temporary object, same around this line.\r\n```suggestion\r\n            ordered_filters.emplace_back(0, 1, 2);\r\n```",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:38:39Z",
      "diff_hunk" : "@@ -614,54 +646,54 @@ std::optional<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coi\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n-    std::optional<SelectionResult> res = [&] {\n-        // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n-        // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n-        // Allow mixing only if no solution from any single output type can be found\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r2;\n-\n+    util::Result<SelectionResult> res = [&] {\n+        // Ordered filters\n+        std::vector<CoinEligibilityFilter> ordered_filters{\n+                // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n+                // confirmations on outputs received from other wallets and only spend confirmed change.\n+                CoinEligibilityFilter(1, 6, 0),\n+                CoinEligibilityFilter(1, 1, 0),\n+        };\n+        // Only allow mixed output types on filters added prior to this point\n+        unsigned int index_for_allow_mixed_output_types = ordered_filters.size();\n         // Fall back to using zero confirmation change (but with as few ancestors in the mempool as\n         // possible) if we cannot fund the transaction otherwise.\n         if (wallet.m_spend_zero_conf_change) {\n-            if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, 2), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;\n-            if (auto r4{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r4;\n-            }\n-            if (auto r5{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r5;\n-            }\n+            ordered_filters.emplace_back(CoinEligibilityFilter(0, 1, 2));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613519",
      "id" : 1024613519,
      "line" : 662,
      "node_id" : "PRRC_kwDOABII5849ElyP",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 662,
      "original_position" : 278,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 278,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613519/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use emplace_back\r\n```suggestion\r\n        txNew.vin.emplace_back(coin->outpoint, CScript(), nSequence);\r\n```",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:39:09Z",
      "diff_hunk" : "@@ -925,7 +958,7 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     // behavior.\"\n     const uint32_t nSequence{coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : CTxIn::MAX_SEQUENCE_NONFINAL};\n     for (const auto& coin : selected_coins) {\n-        txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n+        txNew.vin.push_back(CTxIn(coin->outpoint, CScript(), nSequence));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024613782",
      "id" : 1024613782,
      "line" : 961,
      "node_id" : "PRRC_kwDOABII5849El2W",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 961,
      "original_position" : 364,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 364,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613782/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024613782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024614454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024614454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use structured binding",
      "commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "created_at" : "2022-11-16T23:40:20Z",
      "diff_hunk" : "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1024614454",
      "id" : 1024614454,
      "line" : 45,
      "node_id" : "PRRC_kwDOABII5849EmA2",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 45,
      "pull_request_review_id" : 1183479857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024614454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-16T23:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1024614454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025259484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025259484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oops, good catch ðð¼ ",
      "commit_id" : "fd9cfdac4b966b7b197a7d717d35c066f37ddfa2",
      "created_at" : "2022-11-17T14:22:26Z",
      "diff_hunk" : "@@ -0,0 +1,230 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     OutputType type,\n+                     CWallet& wallet,\n+                     const CScript& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = dest;\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(type, {COutPoint(wtx.GetHash(), 0),\n+                       txout,\n+                       depth,\n+                       CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                       /*spendable=*/ true,\n+                       /*solvable=*/ true,\n+                       /*safe=*/ true,\n+                       wtx.GetTxTime(),\n+                       is_from_me,\n+                       fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(bool avoid_partial_spends)\n+{\n+    FastRandomContext rand{};\n+    return CoinSelectionParams{\n+            rand,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025259484",
      "id" : 1025259484,
      "in_reply_to_id" : 1024610915,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII5849HDfc",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 64,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 64,
      "pull_request_review_id" : 1184411785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025259484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-17T14:22:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025259484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025260624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025260624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good eye, this let me remove the `AttemptSelection` wallet arg too.",
      "commit_id" : "fd9cfdac4b966b7b197a7d717d35c066f37ddfa2",
      "created_at" : "2022-11-17T14:23:21Z",
      "diff_hunk" : "@@ -517,40 +550,39 @@ std::optional<SelectionResult> AttemptSelection(const CWallet& wallet, const CAm\n     // If we can't fund the transaction from any individual OutputType, run coin selection one last time\n     // over all available coins, which would allow mixing\n     if (allow_mixed_output_types) {\n-        if (auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params)}) {\n+        if (auto result{ChooseSelectionResult(wallet, nTargetValue, groups.all_groups, coin_selection_params)}) {\n             return result;\n         }\n     }\n     // Either mixing is not allowed and we couldn't find a solution from any single OutputType, or mixing was allowed and we still couldn't\n     // find a solution using all available coins\n-    return std::nullopt;\n+    return util::Error();\n };\n \n-std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins, const CoinSelectionParams& coin_selection_params)\n+util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, Groups& groups,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025260624",
      "id" : 1025260624,
      "in_reply_to_id" : 1024612836,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5849HDxQ",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 562,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1184413529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025260624/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-17T14:23:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025260624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025265189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025265189"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I actually didn't make this change on purpose to minimize the diff burden inside the same commit. Would prefer to do it in a different commit to make reviewers' life a bit easier (adding the args names there too).",
      "commit_id" : "fd9cfdac4b966b7b197a7d717d35c066f37ddfa2",
      "created_at" : "2022-11-17T14:26:58Z",
      "diff_hunk" : "@@ -614,54 +646,54 @@ std::optional<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coi\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n-    std::optional<SelectionResult> res = [&] {\n-        // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n-        // confirmations on outputs received from other wallets and only spend confirmed change.\n-        if (auto r1{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 6, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/false)}) return r1;\n-        // Allow mixing only if no solution from any single output type can be found\n-        if (auto r2{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(1, 1, 0), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r2;\n-\n+    util::Result<SelectionResult> res = [&] {\n+        // Ordered filters\n+        std::vector<CoinEligibilityFilter> ordered_filters{\n+                // If possible, fund the transaction with confirmed UTXOs only. Prefer at least six\n+                // confirmations on outputs received from other wallets and only spend confirmed change.\n+                CoinEligibilityFilter(1, 6, 0),\n+                CoinEligibilityFilter(1, 1, 0),\n+        };\n+        // Only allow mixed output types on filters added prior to this point\n+        unsigned int index_for_allow_mixed_output_types = ordered_filters.size();\n         // Fall back to using zero confirmation change (but with as few ancestors in the mempool as\n         // possible) if we cannot fund the transaction otherwise.\n         if (wallet.m_spend_zero_conf_change) {\n-            if (auto r3{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, 2), available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) return r3;\n-            if (auto r4{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r4;\n-            }\n-            if (auto r5{AttemptSelection(wallet, value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2),\n-                                   available_coins, coin_selection_params, /*allow_mixed_output_types=*/true)}) {\n-                return r5;\n-            }\n+            ordered_filters.emplace_back(CoinEligibilityFilter(0, 1, 2));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025265189",
      "id" : 1025265189,
      "in_reply_to_id" : 1024613519,
      "line" : 655,
      "node_id" : "PRRC_kwDOABII5849HE4l",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 655,
      "original_position" : 278,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 271,
      "pull_request_review_id" : 1184420038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025265189/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-17T14:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025265189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025266473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025266473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "agree but it's unrelated to the commit changes. Let's better leave it for another PR.",
      "commit_id" : "fd9cfdac4b966b7b197a7d717d35c066f37ddfa2",
      "created_at" : "2022-11-17T14:27:59Z",
      "diff_hunk" : "@@ -925,7 +958,7 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     // behavior.\"\n     const uint32_t nSequence{coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : CTxIn::MAX_SEQUENCE_NONFINAL};\n     for (const auto& coin : selected_coins) {\n-        txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n+        txNew.vin.push_back(CTxIn(coin->outpoint, CScript(), nSequence));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1025266473",
      "id" : 1025266473,
      "in_reply_to_id" : 1024613782,
      "line" : 954,
      "node_id" : "PRRC_kwDOABII5849HFMp",
      "original_commit_id" : "ae41a8b0f48b7c0b523b7f3634c2b220355518be",
      "original_line" : 954,
      "original_position" : 364,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 357,
      "pull_request_review_id" : 1184421918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025266473/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-17T14:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1025266473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-06T11:31:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339184066",
      "id" : 1339184066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585P0lPC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339184066/reactions"
      },
      "updated_at" : "2022-12-06T11:31:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339184066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "PR description needs be updated to remove the \"this is built on\", for the already-merged PR. Although, given `Footnote; this PR is still a WIP:` in the PR description, maybe this should also be a draft (that would better communicate the WIP intent than a footnote in description)? If it's no-longer WIP, please update the PR description to remove that as well. Can be done along with the next rebase.",
      "created_at" : "2022-12-06T17:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339719566",
      "id" : 1339719566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585P2n-O",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339719566/reactions"
      },
      "updated_at" : "2022-12-06T17:25:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339719566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-06T17:58:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339760122",
      "id" : 1339760122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585P2x36",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339760122/reactions"
      },
      "updated_at" : "2022-12-06T17:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339760122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> PR description needs be updated to remove the \"this is built on\", for the already-merged PR. \r\n\r\nremoved, thanks.\r\n\r\n> Although, given `Footnote; this PR is still a WIP:` in the PR description, maybe this should also be a draft (that would better communicate the WIP intent than a footnote in description)? If it's no-longer WIP, please update the PR description to remove that as well. Can be done along with the next rebase.\r\n\r\nyeah. This one is on my current working-path. I'm planning to update the PR description soon.\r\nSince yesterday, have been working on https://github.com/bitcoin/bitcoin/pull/26560#discussion_r1038307694 which will make this PR a bit smaller.",
      "created_at" : "2022-12-06T18:19:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1339788475",
      "id" : 1339788475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585P24y7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339788475/reactions"
      },
      "updated_at" : "2022-12-06T18:19:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339788475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081433547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081433547"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: \r\n```suggestion\r\n    size_t typesCount() const { return groups_by_type.size(); }\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T15:26:34Z",
      "diff_hunk" : "@@ -237,11 +243,41 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    std::vector<OutputGroup> positive_group;\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.\n+    void push(const OutputGroup& group, OutputType type, InsertGroupType insert_type);\n+    // Retrieves 'Groups' filtered by type\n+    std::optional<Groups> find(OutputType type);\n+    // Different output types count\n+    int typesCount() { return groups_by_type.size(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081433547",
      "id" : 1081433547,
      "line" : 276,
      "node_id" : "PRRC_kwDOABII585AdV3L",
      "original_commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "original_line" : 276,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 63,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081433547/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T16:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081433547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081460601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081460601"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Somewhat unrelated, it would be nice to extract this function in test utils.\r\n\r\n```\r\ngrep -FnrIi 'std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());' src/wallet/test\r\nsrc/wallet/test/coinselector_tests.cpp:306:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:329:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:352:        std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:417:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:727:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:749:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/coinselector_tests.cpp:1058:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\nsrc/wallet/test/group_outputs_tests.cpp:20:    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T15:44:39Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081460601",
      "id" : 1081460601,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585Adcd5",
      "original_commit_id" : "6df2b735b6ad1e744b2ecceeee10fb36a6673fd6",
      "original_line" : 26,
      "original_position" : 26,
      "original_start_line" : 18,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 26,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081460601/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 18,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-19T16:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081460601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081472167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081472167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could avoid some dereferences. \r\n```suggestion\r\n        const COutput& out = *coin;\r\n        waste += out.GetFee() - out.long_term_fee;\r\n        selected_effective_value += use_effective_value ? out.GetEffectiveValue() : out.txout.nValue;() : out.txout.nValue;\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T15:52:58Z",
      "diff_hunk" : "@@ -375,17 +372,53 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n-CAmount GetSelectionWaste(const std::set<COutput>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)\n+{\n+    auto it_by_type = groups_by_type.find(type);\n+    if (it_by_type == groups_by_type.end()) return std::nullopt;\n+    return it_by_type->second;\n+}\n+\n+CAmount GetSelectionWaste(const std::set<std::shared_ptr<COutput>>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n {\n     // This function should not be called with empty inputs as that would mean the selection failed\n     assert(!inputs.empty());\n \n     // Always consider the cost of spending an input now vs in the future.\n     CAmount waste = 0;\n     CAmount selected_effective_value = 0;\n-    for (const COutput& coin : inputs) {\n-        waste += coin.GetFee() - coin.long_term_fee;\n-        selected_effective_value += use_effective_value ? coin.GetEffectiveValue() : coin.txout.nValue;\n+    for (const auto& coin : inputs) {\n+        waste += coin->GetFee() - coin->long_term_fee;\n+        selected_effective_value += use_effective_value ? coin->GetEffectiveValue() : coin->txout.nValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081472167",
      "id" : 1081472167,
      "line" : 421,
      "node_id" : "PRRC_kwDOABII585AdfSn",
      "original_commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "original_line" : 421,
      "original_position" : 80,
      "original_start_line" : 420,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 80,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081472167/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 420,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-19T16:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081472167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081487125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081487125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit\r\n```suggestion\r\n        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, /*positive_only=*/true );\r\n        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, /*positive_only=*/false );\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T16:03:58Z",
      "diff_hunk" : "@@ -521,8 +521,11 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n {\n     // Run coin selection on each OutputType and compute the Waste Metric\n     std::vector<SelectionResult> results;\n-    for (const auto& it : available_coins.coins) {\n-        auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, it.second, coin_selection_params)};\n+    for (const auto& [type, coins] : available_coins.coins) {\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081487125",
      "id" : 1081487125,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Adi8V",
      "original_commit_id" : "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "original_line" : 527,
      "original_position" : 9,
      "original_start_line" : 526,
      "path" : "src/wallet/spend.cpp",
      "position" : 9,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081487125/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-19T16:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081487125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081488029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081488029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: same as above (comment before value)",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T16:04:41Z",
      "diff_hunk" : "@@ -536,31 +539,33 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n     // over all available coins, which would allow mixing.\n     // If TypesCount() <= 1, there is nothing to mix.\n     if (allow_mixed_output_types && available_coins.TypesCount() > 1) {\n-        return ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params);\n+        const auto& all = available_coins.All();\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081488029",
      "id" : 1081488029,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AdjKd",
      "original_commit_id" : "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "original_line" : 545,
      "original_position" : 22,
      "original_start_line" : 544,
      "path" : "src/wallet/spend.cpp",
      "position" : 22,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081488029/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-19T16:25:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081488029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081492353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081492353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3\r\nnit\r\n```suggestion\r\nvoid OutputGroups::Push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T16:07:44Z",
      "diff_hunk" : "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081492353",
      "id" : 1081492353,
      "line" : 375,
      "node_id" : "PRRC_kwDOABII585AdkOB",
      "original_commit_id" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 4,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081492353/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T16:25:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081492353",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081495662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081495662"
         }
      },
      "author_association" : "MEMBER",
      "body" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3\r\nnit\r\n```suggestion\r\nstd::optional<Groups> OutputGroups::Find(OutputType type)\r\n```",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-19T16:09:52Z",
      "diff_hunk" : "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1081495662",
      "id" : 1081495662,
      "line" : 404,
      "node_id" : "PRRC_kwDOABII585AdlBu",
      "original_commit_id" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "original_line" : 404,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 33,
      "pull_request_review_id" : 1262031533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081495662/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T16:25:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081495662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082046728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082046728"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Great catch!\r\nCleaned inside https://github.com/bitcoin/bitcoin/pull/26720#issuecomment-1397832543.",
      "commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "created_at" : "2023-01-20T01:58:46Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082046728",
      "id" : 1082046728,
      "in_reply_to_id" : 1081460601,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585AfrkI",
      "original_commit_id" : "6df2b735b6ad1e744b2ecceeee10fb36a6673fd6",
      "original_line" : 26,
      "original_position" : 26,
      "original_start_line" : 18,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 26,
      "pull_request_review_id" : 1262885478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082046728/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 18,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-20T01:58:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082046728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This lines were just moved from one place to another (tried to not change them to make the review easier), and are later removed inside [b187c3a](https://github.com/bitcoin/bitcoin/pull/25806/commits/b187c3a7e79aa8768196353a809a4d03996e44a4).",
      "commit_id" : "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "created_at" : "2023-01-20T13:18:36Z",
      "diff_hunk" : "@@ -521,8 +521,11 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n {\n     // Run coin selection on each OutputType and compute the Waste Metric\n     std::vector<SelectionResult> results;\n-    for (const auto& it : available_coins.coins) {\n-        auto result{ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, it.second, coin_selection_params)};\n+    for (const auto& [type, coins] : available_coins.coins) {\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, coins, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526038",
      "id" : 1082526038,
      "in_reply_to_id" : 1081487125,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AhglW",
      "original_commit_id" : "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "original_line" : 527,
      "original_position" : 9,
      "original_start_line" : 526,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1263565764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526038/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-20T13:18:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same answer as above :)",
      "commit_id" : "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "created_at" : "2023-01-20T13:18:54Z",
      "diff_hunk" : "@@ -536,31 +539,33 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n     // over all available coins, which would allow mixing.\n     // If TypesCount() <= 1, there is nothing to mix.\n     if (allow_mixed_output_types && available_coins.TypesCount() > 1) {\n-        return ChooseSelectionResult(wallet, nTargetValue, eligibility_filter, available_coins.All(), coin_selection_params);\n+        const auto& all = available_coins.All();\n+        Groups groups;\n+        groups.positive_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, true /* positive_only */);\n+        groups.mixed_group = GroupOutputs(wallet, all, coin_selection_params, eligibility_filter, false /* positive_only */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082526370",
      "id" : 1082526370,
      "in_reply_to_id" : 1081488029,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ahgqi",
      "original_commit_id" : "62ed8f6a23825ff08ae30d0b3ea17b0afe678cee",
      "original_line" : 545,
      "original_position" : 22,
      "original_start_line" : 544,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1263566203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-20T13:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082526370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082530196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082530196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "created_at" : "2023-01-20T13:22:25Z",
      "diff_hunk" : "@@ -375,17 +372,53 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n-CAmount GetSelectionWaste(const std::set<COutput>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)\n+{\n+    auto it_by_type = groups_by_type.find(type);\n+    if (it_by_type == groups_by_type.end()) return std::nullopt;\n+    return it_by_type->second;\n+}\n+\n+CAmount GetSelectionWaste(const std::set<std::shared_ptr<COutput>>& inputs, CAmount change_cost, CAmount target, bool use_effective_value)\n {\n     // This function should not be called with empty inputs as that would mean the selection failed\n     assert(!inputs.empty());\n \n     // Always consider the cost of spending an input now vs in the future.\n     CAmount waste = 0;\n     CAmount selected_effective_value = 0;\n-    for (const COutput& coin : inputs) {\n-        waste += coin.GetFee() - coin.long_term_fee;\n-        selected_effective_value += use_effective_value ? coin.GetEffectiveValue() : coin.txout.nValue;\n+    for (const auto& coin : inputs) {\n+        waste += coin->GetFee() - coin->long_term_fee;\n+        selected_effective_value += use_effective_value ? coin->GetEffectiveValue() : coin->txout.nValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1082530196",
      "id" : 1082530196,
      "in_reply_to_id" : 1081472167,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AhhmU",
      "original_commit_id" : "325f171145771e5ff3a4c7e7eb0966728709370b",
      "original_line" : 421,
      "original_position" : 80,
      "original_start_line" : 420,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1263570862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082530196/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-20T13:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082530196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089055672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089055672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use the just-below-boundary value of 5 here\r\n```suggestion\r\n            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\r\n```",
      "commit_id" : "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "created_at" : "2023-01-27T14:56:23Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089055672",
      "id" : 1089055672,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII585A6au4",
      "original_commit_id" : "17bd243dfa050516900098dc8c2ff3171df740f7",
      "original_line" : 176,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 176,
      "pull_request_review_id" : 1272840693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089055672/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T14:57:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089055672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089056734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089056734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could just-above-boundary value of 101 here\r\n```suggestion\r\n    for (unsigned long i = 0; i < 101; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\r\n```",
      "commit_id" : "fc7b504d334da32fa559e04cc8a4d7205d66f2af",
      "created_at" : "2023-01-27T14:57:20Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < 130; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089056734",
      "id" : 1089056734,
      "line" : 211,
      "node_id" : "PRRC_kwDOABII585A6a_e",
      "original_commit_id" : "17bd243dfa050516900098dc8c2ff3171df740f7",
      "original_line" : 205,
      "original_position" : 205,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 205,
      "pull_request_review_id" : 1272840693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089056734/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T14:57:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089056734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307058"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "c0e427467acab37976d7560be9ea29607ee4e1cc",
      "created_at" : "2023-01-27T18:51:09Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307058",
      "id" : 1089307058,
      "in_reply_to_id" : 1089055672,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585A7YGy",
      "original_commit_id" : "17bd243dfa050516900098dc8c2ff3171df740f7",
      "original_line" : 176,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1273273813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307058/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T18:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307116"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "c0e427467acab37976d7560be9ea29607ee4e1cc",
      "created_at" : "2023-01-27T18:51:13Z",
      "diff_hunk" : "@@ -0,0 +1,224 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node, const ArgsManager& m_args)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args, CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node, m_args);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/2);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < 130; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1089307116",
      "id" : 1089307116,
      "in_reply_to_id" : 1089056734,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585A7YHs",
      "original_commit_id" : "17bd243dfa050516900098dc8c2ff3171df740f7",
      "original_line" : 205,
      "original_position" : 205,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1273273968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307116/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T18:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089307116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096555682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096555682"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: at this point one could already pass the `groups` parameter by-reference rather than by-value (it is done later in eca918dd17739036cbb2430a4fc2a5a785d88fb6 though anyways) : \r\n```suggestion\r\nutil::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups& groups, const CoinSelectionParams& coin_selection_params);\r\n```",
      "commit_id" : "c0e427467acab37976d7560be9ea29607ee4e1cc",
      "created_at" : "2023-02-04T16:21:03Z",
      "diff_hunk" : "@@ -132,18 +132,15 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                    The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue              The target value\n- * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  groups                    The struct containing the outputs grouped by script and divided by (1) positive only outputs and (2) all outputs (positive + negative).\n  * param@[in]  coin_selection_params     Parameters for the coin selection\n  * returns                               If successful, a SelectionResult containing the input set\n  *                                       If failed, returns (1) an empty error message if the target was not reached (general \"Insufficient funds\")\n  *                                                  or (2) an specific error message if there was something particularly wrong (e.g. a selection\n  *                                                  result that surpassed the tx max weight size).\n  */\n-util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n-                        const CoinSelectionParams& coin_selection_params);\n+util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups groups, const CoinSelectionParams& coin_selection_params);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096555682",
      "id" : 1096555682,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BXByi",
      "original_commit_id" : "feeae53b0e28331de36afeaa7deec466b5082166",
      "original_line" : 143,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 17,
      "pull_request_review_id" : 1284087299,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096555682/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-04T16:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096555682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096558215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096558215"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC, for all possible `insert_types`, something is inserted both in the `by type` groups and `all groups` container. The `and/or` seems to apply for the `positive_group`/`mixed_group`? Suggestion:\r\n```suggestion\r\n    // Depending on the 'insert_type', appends the output group into the `positive_group`\r\n    // and/or the 'mixed_group' for both the `by type` groups and the `all groups` container.\r\n```",
      "commit_id" : "c0e427467acab37976d7560be9ea29607ee4e1cc",
      "created_at" : "2023-02-04T16:41:30Z",
      "diff_hunk" : "@@ -247,6 +248,27 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096558215",
      "id" : 1096558215,
      "line" : 271,
      "node_id" : "PRRC_kwDOABII585BXCaH",
      "original_commit_id" : "eca918dd17739036cbb2430a4fc2a5a785d88fb6",
      "original_line" : 266,
      "original_position" : 27,
      "original_start_line" : 265,
      "path" : "src/wallet/coinselection.h",
      "position" : 27,
      "pull_request_review_id" : 1284087299,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096558215/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 270,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-04T16:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096558215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096814328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096814328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sure, will re-order it so the change appears when `Groups` are introduced and not later.",
      "commit_id" : "4343835a23290f2cd34404821494303cc75ce86e",
      "created_at" : "2023-02-05T21:46:56Z",
      "diff_hunk" : "@@ -132,18 +132,15 @@ util::Result<SelectionResult> AttemptSelection(const CWallet& wallet, const CAmo\n  * Multiple coin selection algorithms will be run and the input set that produces the least waste\n  * (according to the waste metric) will be chosen.\n  *\n- * param@[in]  wallet                    The wallet which provides solving data for the coins\n  * param@[in]  nTargetValue              The target value\n- * param@[in]  eligilibity_filter        A filter containing rules for which coins are allowed to be included in this selection\n- * param@[in]  available_coins           The struct of coins, organized by OutputType, available for selection prior to filtering\n+ * param@[in]  groups                    The struct containing the outputs grouped by script and divided by (1) positive only outputs and (2) all outputs (positive + negative).\n  * param@[in]  coin_selection_params     Parameters for the coin selection\n  * returns                               If successful, a SelectionResult containing the input set\n  *                                       If failed, returns (1) an empty error message if the target was not reached (general \"Insufficient funds\")\n  *                                                  or (2) an specific error message if there was something particularly wrong (e.g. a selection\n  *                                                  result that surpassed the tx max weight size).\n  */\n-util::Result<SelectionResult> ChooseSelectionResult(const CWallet& wallet, const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, const std::vector<COutput>& available_coins,\n-                        const CoinSelectionParams& coin_selection_params);\n+util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue, Groups groups, const CoinSelectionParams& coin_selection_params);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096814328",
      "id" : 1096814328,
      "in_reply_to_id" : 1096555682,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BYA74",
      "original_commit_id" : "feeae53b0e28331de36afeaa7deec466b5082166",
      "original_line" : 143,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : null,
      "pull_request_review_id" : 1284357530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096814328/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-05T21:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096814328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818963"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pushed",
      "commit_id" : "4343835a23290f2cd34404821494303cc75ce86e",
      "created_at" : "2023-02-05T22:22:06Z",
      "diff_hunk" : "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818963",
      "id" : 1096818963,
      "in_reply_to_id" : 1081492353,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BYCET",
      "original_commit_id" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1284362527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818963/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-05T22:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818975"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pushed",
      "commit_id" : "4343835a23290f2cd34404821494303cc75ce86e",
      "created_at" : "2023-02-05T22:22:13Z",
      "diff_hunk" : "@@ -372,6 +372,42 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::push(const OutputGroup& group, OutputType type, InsertGroupType insert_type)\n+{\n+    if (group.m_outputs.empty()) return;\n+\n+    switch (insert_type) {\n+        case InsertGroupType::ONLY_POSITIVE:\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups_by_type[type].positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::MIXED_GROUPS:\n+            groups_by_type[type].mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+            break;\n+        case InsertGroupType::BOTH:\n+            Groups& groups = groups_by_type[type];\n+\n+            groups.mixed_group.emplace_back(group);\n+            all_groups.mixed_group.emplace_back(group);\n+\n+            // Positive only filtered group\n+            if (group.GetSelectionAmount() <= 0) return;\n+            groups.positive_group.emplace_back(group);\n+            all_groups.positive_group.emplace_back(group);\n+            break;\n+    }\n+}\n+\n+std::optional<Groups> OutputGroups::find(OutputType type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096818975",
      "id" : 1096818975,
      "in_reply_to_id" : 1081495662,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BYCEf",
      "original_commit_id" : "5a7ad35fb682446efb55f93b2f2f07eadd8fc0e3",
      "original_line" : 399,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1284362551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818975/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-05T22:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096818975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096819125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096819125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, thanks!.\r\nAside from the method doc re-phrasing, have re-worked the area, so it's clear what the `push` method does on each scenario.",
      "commit_id" : "4343835a23290f2cd34404821494303cc75ce86e",
      "created_at" : "2023-02-05T22:23:15Z",
      "diff_hunk" : "@@ -247,6 +248,27 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;\n+\n+    enum class InsertGroupType {\n+        ONLY_POSITIVE, // Insert only to `positive_group`\n+        MIXED_GROUPS, // Insert only to `mixed_group`\n+        BOTH // Insert to `positive_group` and `mixed_group`\n+    };\n+\n+    // Depending on the 'insert_type', appends the output group into the 'by type' groups\n+    // and/or the 'all groups' container.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1096819125",
      "id" : 1096819125,
      "in_reply_to_id" : 1096558215,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BYCG1",
      "original_commit_id" : "eca918dd17739036cbb2430a4fc2a5a785d88fb6",
      "original_line" : 266,
      "original_position" : 27,
      "original_start_line" : 265,
      "path" : "src/wallet/coinselection.h",
      "position" : null,
      "pull_request_review_id" : 1284362692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096819125/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-05T22:23:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096819125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sounds good @theStack ðð¼, pushed.",
      "created_at" : "2023-02-09T22:00:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1424892417",
      "id" : 1424892417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585U7iIB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424892417/reactions"
      },
      "updated_at" : "2023-02-09T22:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424892417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-13T21:45:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1428731690",
      "id" : 1428731690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585VKLcq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428731690/reactions"
      },
      "updated_at" : "2023-02-13T21:45:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1428731690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1110370140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110370140"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and everywhere in this commit, the `positive_only` check is redundant because `Â¬A â¨ A â§ B = Â¬A â¨ B`\r\n\r\n```suggestion\r\n            if (!positive_only || output.GetEffectiveValue() > 0) {\r\n```",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-17T21:11:38Z",
      "diff_hunk" : "@@ -417,13 +417,14 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             size_t ancestors, descendants;\n             wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n \n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n+            // If 'positive_only' is set, filter for positive only before adding the coin\n+            if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1110370140",
      "id" : 1110370140,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CLudc",
      "original_commit_id" : "9c523c5612b6eb56d25eefac511e47ee82f4f737",
      "original_line" : 421,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 8,
      "pull_request_review_id" : 1304212477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110370140/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-23T18:27:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110370140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. started review",
      "created_at" : "2023-02-21T08:47:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1438070020",
      "id" : 1438070020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585VtzUE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1438070020/reactions"
      },
      "updated_at" : "2023-02-21T08:47:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1438070020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1113985558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1113985558"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe the separation between positive and mixed group is an implementation detail of particular coin selection algorithms. We can contrast it with `CoinEligibilityFilter` and `OutputType` grouping which are algorithm independent. Therefore I propose to not separate positive outputs at the grouping stage.\r\n\r\nRather filter negative/positive groups  as close to the particular coin selection algo as possible, e.g. in `ChooseSelectionResult`. This will significantly simplify the code by removing extra nesting of structs and multiple `if` statements. I expect computation overhead of iterating over groups to remove negative UTXos to be negligible, but maybe I'm wrong.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-22T08:28:36Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1113985558",
      "id" : 1113985558,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585CZhIW",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1308739083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1113985558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-22T08:28:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1113985558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114930512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114930512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hmm, that would make the avoid partial spends flow even uglier, plus I don't think that that will be negligible for big wallets (+50k UTXOs wallets).\r\n\r\nThe later removal of negative UTXOs will leave APS full groups with less than 100 entries, which will force us to re-order groups so they are full again (moving UTXOs from one group to another), then if the wallet does not include partial groups, will need to discard those groups too.\r\nSo making this changes would actually introduce more code than what we currently have with few nested structs (whose creation is scoped only to `GroupOutputs`). I mean, we would need to have one APS procedure inside `GroupOutputs` and another reorder + removal APS procedure inside `ChooseSelectionResult`.\r\n\r\nAbout the computation overhead:\r\nIn the worst case scenario, the wallet executes `ChooseSelectionResult` 5 times in each of the 8 `AttemptSelection` calls.\r\nSo, it could end up performing the traverse + re-order + removal 40 times.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-22T20:39:39Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114930512",
      "id" : 1114930512,
      "in_reply_to_id" : 1113985558,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585CdH1Q",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1310169552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114930512/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-22T21:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114930512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114969240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114969240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah k ðð¼, will do the change if need to re-touch to not invalidate the other reviews only for this small redundancy.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-22T21:19:12Z",
      "diff_hunk" : "@@ -417,13 +417,14 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n             size_t ancestors, descendants;\n             wallet.chain().getTransactionAncestry(output.outpoint.hash, ancestors, descendants);\n \n-            // Make an OutputGroup containing just this output\n-            OutputGroup group{coin_sel_params};\n-            group.Insert(output, ancestors, descendants, positive_only);\n+            // If 'positive_only' is set, filter for positive only before adding the coin\n+            if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1114969240",
      "id" : 1114969240,
      "in_reply_to_id" : 1110370140,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CdRSY",
      "original_commit_id" : "9c523c5612b6eb56d25eefac511e47ee82f4f737",
      "original_line" : 421,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 8,
      "pull_request_review_id" : 1310250569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114969240/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-22T21:19:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114969240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1118460580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1118460580"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure this is how APS works. When we remove negative UTXOs we assess the whole group and not each UTXO individually, so you don't need to regroup anything after filtering negative groups.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-27T09:10:17Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1118460580",
      "id" : 1118460580,
      "in_reply_to_id" : 1113985558,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585Cqlqk",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1315163858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1118460580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-27T09:10:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1118460580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119204773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119204773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I'm not sure this is how APS works. When we remove negative UTXOs we assess the whole group and not each UTXO individually, so you don't need to regroup anything after filtering negative groups.\r\n\r\nNo wait, that would leave negative UTXOs in positive-only groups if the sum of the positive UTXOs surpasses the sum of the negative ones.\r\n\r\nCurrently, a \"positive-only group\" is essentially a container who stores only positive UTXOs. Not a mix of UTXOs which values sum is positive. That is different conceptually and something that, at least for now, we are not allowing.\r\n\r\nCheck master, inside `OutputGroup::Insert` method, first line. We reject individual negative UTXOs when the container only stores positive-only UTXOs.\r\n\r\nThe only way to create positive-groups out of mixed groups is to traverse each group UTXOs set and remove the negative ones. Then, if the group has less than a 100 entries and there are other groups corresponding to the same script (after doing the same removal on those groups), the wallet need to re-order them so only full groups are provided to the selection algorithms (if the avoid partial groups flag is enabled).\r\n\r\nAside from that, performance wise, I still think that performing the negative UTXOs removal later on the process will introduce a non-negligible overhead in big wallets.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-27T19:21:58Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119204773",
      "id" : 1119204773,
      "in_reply_to_id" : 1113985558,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585CtbWl",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1316287432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119204773/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-27T19:23:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119204773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119252440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119252440"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're right, thanks for the explanation. This comment could be resolved. ",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-02-27T20:02:20Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1119252440",
      "id" : 1119252440,
      "in_reply_to_id" : 1113985558,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585Ctm_Y",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1316346787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119252440/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-27T20:02:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1119252440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121297405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121297405"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: While we are at it, what do you think about passing `wallet.chain()` instead of whole wallet object?",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-01T07:54:34Z",
      "diff_hunk" : "@@ -106,7 +106,14 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n  */\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+* Group coins by the provided filters.\n+*/\n+OutputGroups GroupOutputs(const CWallet& wallet,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121297405",
      "id" : 1121297405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C1aP9",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 112,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 8,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121297405/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121297405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121298272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121298272"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: this is redundant, we shouldn't have non-spendable coins here at all. They has to be filtered in `AvailableCoins`",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-01T07:55:17Z",
      "diff_hunk" : "@@ -467,28 +467,49 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n         if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n             group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n         }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& [type, outs] : coins.coins) {\n+        for (const COutput& output : outs) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121298272",
      "id" : 1121298272,
      "line" : 481,
      "node_id" : "PRRC_kwDOABII585C1adg",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 477,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 84,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121298272/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121298272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121303672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121303672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I'd prefer just having two methods for positive only and for all groups. For me this would be cleaner code instead of controlling the flow with bool params.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-01T07:59:51Z",
      "diff_hunk" : "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121303672",
      "id" : 1121303672,
      "line" : 375,
      "node_id" : "PRRC_kwDOABII585C1bx4",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 4,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121303672/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121303672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121328934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121328934"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The comment is wrong",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-01T08:20:52Z",
      "diff_hunk" : "@@ -249,6 +250,21 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121328934",
      "id" : 1121328934,
      "line" : 261,
      "node_id" : "PRRC_kwDOABII585C1h8m",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 256,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 15,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121328934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121328934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121336522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121336522"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure why this is needed",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-01T08:26:28Z",
      "diff_hunk" : "@@ -193,6 +193,11 @@ struct CoinEligibilityFilter\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_ancestors) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants, bool include_partial) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants), m_include_partial_groups(include_partial) {}\n+\n+    bool operator<(const CoinEligibilityFilter& other) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1121336522",
      "id" : 1121336522,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII585C1jzK",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 197,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 5,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121336522/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121336522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122739758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122739758"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: it'd be great if we can disambiguate the term `mixed`. Now it applies to both a) mixed type groups b) mixed effects value group",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T08:23:01Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122739758",
      "id" : 1122739758,
      "line" : 255,
      "node_id" : "PRRC_kwDOABII585C66Yu",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 255,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 42,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122739758/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122739758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122748374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122748374"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `All` groups is somewhat misleading here, because these are actually filtered groups, but for all output types. Unfortunately, I don't have better suggestion yet.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T08:31:23Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122748374",
      "id" : 1122748374,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585C68fW",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 264,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 51,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122748374/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122748374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122749611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122749611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Judging from the name it's not clear what's the difference between `Groups` and `OutputGroups`",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T08:32:35Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1122749611",
      "id" : 1122749611,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585C68yr",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1319203680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122749611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122749611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 0bb90cabc8e2c6bbbc3c52ec1170e725435b625d modulo tests.\r\n\r\nI believe this PR is a good improvement over status quo.\r\n\r\nThe biggest worry I have now it somewhat ambiguous terminology:\r\n- `mixed` groups could mean mixed type or mixed effective value\r\n-  `all` groups not always refers to actually all groups, but filtered by `CoinEligibiltyFilter`\r\n- two structs `Groups` vs `OutputGroups`\r\n\r\nI don't have better suggestion as of now, so it's not blocking. I'll think more and come back if I have some ideas. Maybe @Xekyo the master of terminology have some ideas.",
      "created_at" : "2023-03-02T08:35:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1451488906",
      "id" : 1451488906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585Wg_aK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451488906/reactions"
      },
      "updated_at" : "2023-03-02T08:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451488906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123258118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123258118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wrote it in that way before but changed it due a previous code review suggestion (previous [diff](https://github.com/bitcoin/bitcoin/compare/4343835a23290f2cd34404821494303cc75ce86e..5246cc1098e5409e986c1f215bc88eb44cec62f8)). I'm not fan of bool args neither but, at least here, I would be ok either way.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T15:12:22Z",
      "diff_hunk" : "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123258118",
      "id" : 1123258118,
      "in_reply_to_id" : 1121303672,
      "line" : 375,
      "node_id" : "PRRC_kwDOABII585C848G",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 4,
      "pull_request_review_id" : 1322023829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123258118/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T15:12:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123258118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123260283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123260283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yes, I didn't remove it just to make the diff smaller. This was already there.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T15:13:42Z",
      "diff_hunk" : "@@ -467,28 +467,49 @@ std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<C\n         if (!positive_only || (positive_only && output.GetEffectiveValue() > 0)) {\n             group->Insert(std::make_shared<COutput>(output), ancestors, descendants);\n         }\n+    };\n+\n+    ScriptPubKeyToOutgroup spk_to_groups_map;\n+    ScriptPubKeyToOutgroup spk_to_positive_groups_map;\n+    for (const auto& [type, outs] : coins.coins) {\n+        for (const COutput& output : outs) {\n+            // Skip outputs we cannot spend\n+            if (!output.spendable) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123260283",
      "id" : 1123260283,
      "in_reply_to_id" : 1121298272,
      "line" : 481,
      "node_id" : "PRRC_kwDOABII585C85d7",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 477,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 84,
      "pull_request_review_id" : 1322027332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123260283/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T15:13:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123260283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123270988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123270988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What are you referring with \"mixed type groups\"?\r\n\r\nThe `mixed` term is only used inside the `Groups` structure, and reflects a vector of `OutputGroup` that may contain positive and negative UTXOs.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T15:20:18Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123270988",
      "id" : 1123270988,
      "in_reply_to_id" : 1122739758,
      "line" : 255,
      "node_id" : "PRRC_kwDOABII585C88FM",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 255,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 42,
      "pull_request_review_id" : 1322041279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123270988/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T15:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123270988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123295722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123295722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The \"filter\" term usage here in the comment is wrong. For what corresponds to this struct, the `all` term just refers to the combination of all inserted groups. Same as we do in the `CoinsResult::All` method.\r\nThe filtering process, nor what is inserted (whether is filtered or not), is not responsibility of this struct.\r\n\r\nIt's just a container that keeps track of `Groups` by type and the caches the combination of all of them.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T15:35:28Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123295722",
      "id" : 1123295722,
      "in_reply_to_id" : 1122748374,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585C9CHq",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 264,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 51,
      "pull_request_review_id" : 1322073031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123295722/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T15:35:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123295722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123305653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123305653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "for the `FilteredOutputGroups` map. `std::map` keys requires a comparator or a hash function.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T15:41:18Z",
      "diff_hunk" : "@@ -193,6 +193,11 @@ struct CoinEligibilityFilter\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_ancestors) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants) {}\n     CoinEligibilityFilter(int conf_mine, int conf_theirs, uint64_t max_ancestors, uint64_t max_descendants, bool include_partial) : conf_mine(conf_mine), conf_theirs(conf_theirs), max_ancestors(max_ancestors), max_descendants(max_descendants), m_include_partial_groups(include_partial) {}\n+\n+    bool operator<(const CoinEligibilityFilter& other) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123305653",
      "id" : 1123305653,
      "in_reply_to_id" : 1121336522,
      "line" : 197,
      "node_id" : "PRRC_kwDOABII585C9Ei1",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 197,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 5,
      "pull_request_review_id" : 1322085351,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123305653/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T15:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123305653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123314932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123314932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "maybe we could change `Groups` to `GroupsByEffectiveValue`? \r\n\r\nI prefer the struct rather than having an ugly std::pair or a typedef:\r\n`typedef std::pair<std::vector<OutputGroup>, std::vector<OutputGroup>> GroupsByEffectiveValue`",
      "commit_id" : "ae0dd2becd4fa01666793c3f48e8725d5e585c30",
      "created_at" : "2023-03-02T15:47:12Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123314932",
      "id" : 1123314932,
      "in_reply_to_id" : 1122749611,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585C9Gz0",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1322096962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123314932/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T21:13:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123314932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123363865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123363865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T16:15:31Z",
      "diff_hunk" : "@@ -249,6 +250,21 @@ struct Groups {\n     std::vector<OutputGroup> mixed_group;\n };\n \n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123363865",
      "id" : 1123363865,
      "in_reply_to_id" : 1121328934,
      "line" : 261,
      "node_id" : "PRRC_kwDOABII585C9SwZ",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 256,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 15,
      "pull_request_review_id" : 1322161398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123363865/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T16:15:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123363865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123369441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123369441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean, it would be slower but could also be created on-demand:\r\n```c++\r\nGroups OutputGroups::All()\r\n{\r\n    Groups ret;\r\n    for (const auto& [type, groups_vec] : groups_by_type) {\r\n        ret.positive_group.insert(ret.positive_group.begin(), groups_vec.positive_group.begin(), groups_vec.positive_group.end());\r\n        ret.mixed_group.insert(ret.mixed_group.begin(), groups_vec.mixed_group.begin(), groups_vec.mixed_group.end());\r\n    }\r\n    return ret;\r\n}\r\n```",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T16:19:15Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123369441",
      "id" : 1123369441,
      "in_reply_to_id" : 1122748374,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585C9UHh",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 264,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 51,
      "pull_request_review_id" : 1322168304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123369441/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T16:19:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123369441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123661658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123661658"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah could do that, but we wouldn't win much really. The commit that touches\r\nthis method signature is the biggest one of the PR, so we would add more diff\r\nfor no real gain.\r\n\r\nBetter to leave it for the next PR on the line. I have few that will come right after\r\nthis one anyway.",
      "commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "created_at" : "2023-03-02T20:32:14Z",
      "diff_hunk" : "@@ -106,7 +106,14 @@ const CTxOut& FindNonChangeParentOutput(const CWallet& wallet, const COutPoint&\n  */\n std::map<CTxDestination, std::vector<COutput>> ListCoins(const CWallet& wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n \n-std::vector<OutputGroup> GroupOutputs(const CWallet& wallet, const std::vector<COutput>& outputs, const CoinSelectionParams& coin_sel_params, const CoinEligibilityFilter& filter, bool positive_only);\n+/**\n+* Group coins by the provided filters.\n+*/\n+OutputGroups GroupOutputs(const CWallet& wallet,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123661658",
      "id" : 1123661658,
      "in_reply_to_id" : 1121297405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C-bda",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 112,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.h",
      "position" : 8,
      "pull_request_review_id" : 1322565586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123661658/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T20:32:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123661658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123685274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123685274"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok understood it (talked via DM), the `mixed` term is also used for the `allow_mixed_output_types` flag. Which is not from this PR.\r\nWe could change that boolean to `only_select_coins_by_type` and forget about the \"mixed\" term there in a follow-up.",
      "commit_id" : "ae0dd2becd4fa01666793c3f48e8725d5e585c30",
      "created_at" : "2023-03-02T20:56:55Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123685274",
      "id" : 1123685274,
      "in_reply_to_id" : 1122739758,
      "line" : 255,
      "node_id" : "PRRC_kwDOABII585C-hOa",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 255,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 42,
      "pull_request_review_id" : 1322604229,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123685274/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T22:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123685274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @S3RK for the review.\r\n\r\nUpdated per feedback ([small diff](https://github.com/bitcoin/bitcoin/compare/0bb90cabc8e2c6bbbc3c52ec1170e725435b625d..ae0dd2becd4fa01666793c3f48e8725d5e585c30)), tackled the following points that made sense for me to include here:\r\n\r\n* Renamed `OutputGroups` to `OutputGroupTypeMap` to reflect what the struct really does and differentiate it from the inner struct.\r\n* Corrected the `OutputGroups`, now `OutputGroupTypeMap`, members comments.\r\n* And tackled @Xekyoâs unneeded check.\r\n\r\nI think that while we all agree that this work is functionality and structurally sound, we can move forward.\r\nAnd tackle any new naming discussion in a follow-up work.",
      "created_at" : "2023-03-02T22:56:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1452678639",
      "id" : 1452678639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585Wlh3v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452678639/reactions"
      },
      "updated_at" : "2023-03-02T22:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452678639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123825816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123825816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ended up renaming `OutputGroups` to `OutputGroupTypeMap` to reflect what the struct really does and differentiate it from the inner struct.",
      "commit_id" : "ae0dd2becd4fa01666793c3f48e8725d5e585c30",
      "created_at" : "2023-03-02T22:57:13Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123825816",
      "id" : 1123825816,
      "in_reply_to_id" : 1122749611,
      "line" : 251,
      "node_id" : "PRRC_kwDOABII585C_DiY",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 251,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 38,
      "pull_request_review_id" : 1322820202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123825816/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T22:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123825816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123826202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123826202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed the \"filter\" comment mention.",
      "commit_id" : "ae0dd2becd4fa01666793c3f48e8725d5e585c30",
      "created_at" : "2023-03-02T22:57:37Z",
      "diff_hunk" : "@@ -237,11 +243,37 @@ struct OutputGroup\n         m_subtract_fee_outputs(params.m_subtract_fee_outputs)\n     {}\n \n-    void Insert(const COutput& output, size_t ancestors, size_t descendants, bool positive_only);\n+    void Insert(const std::shared_ptr<COutput>& output, size_t ancestors, size_t descendants);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n     CAmount GetSelectionAmount() const;\n };\n \n+struct Groups {\n+    // Stores 'OutputGroup' containing only positive UTXOs (value > 0).\n+    std::vector<OutputGroup> positive_group;\n+    // Stores 'OutputGroup' which may contain both positive and negative UTXOs.\n+    std::vector<OutputGroup> mixed_group;\n+};\n+\n+/** Stores several 'Groups' whose were mapped by output type. */\n+struct OutputGroups\n+{\n+    // Map filters to output groups.\n+    std::map<OutputType, Groups> groups_by_type;\n+    // All groups, no filters\n+    Groups all_groups;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1123826202",
      "id" : 1123826202,
      "in_reply_to_id" : 1122748374,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585C_Doa",
      "original_commit_id" : "0bb90cabc8e2c6bbbc3c52ec1170e725435b625d",
      "original_line" : 264,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.h",
      "position" : 51,
      "pull_request_review_id" : 1322821129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123826202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T22:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123826202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased due silent merge conflicts with #26889.\r\nReady to go now.",
      "created_at" : "2023-03-03T21:36:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1454159231",
      "id" : 1454159231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585WrLV_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1454159231/reactions"
      },
      "updated_at" : "2023-03-03T21:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1454159231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126088720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126088720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this is slightly confusing because I'd expect the number to go one up from the previous case (from 3 => 4).\r\n\r\nThe test is passing, because you flipped `positive_only` and now excluded negative group is balanced by the group for `dest7`.\r\n\r\nI'd suggest keeping `positive_only=false` and bumping the numbers",
      "commit_id" : "1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4",
      "created_at" : "2023-03-06T08:38:01Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    uint16_t NUM_SINGLE_ENTRIES = 101;\n+    for (unsigned long i = 0; i < NUM_SINGLE_ENTRIES; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\n+        addCoin(group_verifier.coins_pool, *wallet, dest7, 9 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    // Exclude partial groups must have no changes from this round and the previous one (point 6)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126088720",
      "id" : 1126088720,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585DHsAQ",
      "original_commit_id" : "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "original_line" : 210,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 210,
      "pull_request_review_id" : 1325727381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126088720/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T09:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126088720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126099320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126099320"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Commit message is now inconsistent with the code. Either drop the details of test cases or update them.",
      "commit_id" : "1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4",
      "created_at" : "2023-03-06T08:48:04Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126099320",
      "id" : 1126099320,
      "line" : 207,
      "node_id" : "PRRC_kwDOABII585DHul4",
      "original_commit_id" : "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "original_line" : 201,
      "original_position" : 201,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 201,
      "pull_request_review_id" : 1325727381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126099320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T09:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126099320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4 (also reviewed the tests)",
      "created_at" : "2023-03-06T09:08:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1455748229",
      "id" : 1455748229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585WxPSF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1455748229/reactions"
      },
      "updated_at" : "2023-03-06T09:08:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1455748229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126122594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126122594"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The reason why I suggested this change is because it's hard to explain why we need a `insert_mixed` flag. Why don't we just always add groups to `mixed` vector? I understand that's because of how aps works, but just looking at this method it's mysterious.",
      "commit_id" : "1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4",
      "created_at" : "2023-03-06T09:09:50Z",
      "diff_hunk" : "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126122594",
      "id" : 1126122594,
      "in_reply_to_id" : 1121303672,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DH0Ri",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1325727381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126122594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T09:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126122594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "well, this method is just a push function. It doesn't have to tell anything about the context where it is used. The struct is basically a map container with a cache, it doesn't need to explain how APS works.\r\n\r\nIf you are strong over the bool args usage, that would be the argument to make the changes for me.",
      "commit_id" : "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "created_at" : "2023-03-06T13:01:48Z",
      "diff_hunk" : "@@ -372,6 +372,28 @@ CAmount OutputGroup::GetSelectionAmount() const\n     return m_subtract_fee_outputs ? m_value : effective_value;\n }\n \n+void OutputGroups::Push(const OutputGroup& group, OutputType type, bool insert_positive, bool insert_mixed)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384700",
      "id" : 1126384700,
      "in_reply_to_id" : 1121303672,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DI0Q8",
      "original_commit_id" : "a43ee00dd9d2763a54a78368e1788a0216a28b59",
      "original_line" : 375,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1326177580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384700/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T13:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sounds good, pushed",
      "commit_id" : "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "created_at" : "2023-03-06T13:02:00Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created\n+    // ###########################################################################################\n+\n+    const CTxDestination dest7 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    uint16_t NUM_SINGLE_ENTRIES = 101;\n+    for (unsigned long i = 0; i < NUM_SINGLE_ENTRIES; i++) { // OUTPUT_GROUP_MAX_ENTRIES{100}\n+        addCoin(group_verifier.coins_pool, *wallet, dest7, 9 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    // Exclude partial groups must have no changes from this round and the previous one (point 6)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126384935",
      "id" : 1126384935,
      "in_reply_to_id" : 1126088720,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DI0Un",
      "original_commit_id" : "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "original_line" : 210,
      "original_position" : 210,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1326178147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T13:03:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126384935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126387031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126387031"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pushed, thanks",
      "commit_id" : "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "created_at" : "2023-03-06T13:03:52Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <wallet/coinselection.h>\n+#include <wallet/spend.h>\n+#include <wallet/wallet.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(group_outputs_tests, TestingSetup)\n+\n+static int nextLockTime = 0;\n+\n+static std::shared_ptr<CWallet> NewWallet(const node::NodeContext& m_node)\n+{\n+    std::unique_ptr<CWallet> wallet = std::make_unique<CWallet>(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet->LoadWallet();\n+    LOCK(wallet->cs_wallet);\n+    wallet->SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    wallet->SetupDescriptorScriptPubKeyMans();\n+    return wallet;\n+}\n+\n+static void addCoin(CoinsResult& coins,\n+                     CWallet& wallet,\n+                     const CTxDestination& dest,\n+                     const CAmount& nValue,\n+                     bool is_from_me,\n+                     CFeeRate fee_rate = CFeeRate(0),\n+                     int depth = 6)\n+{\n+    CMutableTransaction tx;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = nValue;\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(dest);\n+\n+    const uint256& txid = tx.GetHash();\n+    LOCK(wallet.cs_wallet);\n+    auto ret = wallet.mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(txid), std::forward_as_tuple(MakeTransactionRef(std::move(tx)), TxStateInactive{}));\n+    assert(ret.second);\n+    CWalletTx& wtx = (*ret.first).second;\n+    const auto& txout = wtx.tx->vout.at(0);\n+    coins.Add(*Assert(OutputTypeFromDestination(dest)),\n+              {COutPoint(wtx.GetHash(), 0),\n+                   txout,\n+                   depth,\n+                   CalculateMaximumSignedInputSize(txout, &wallet, /*coin_control=*/nullptr),\n+                   /*spendable=*/ true,\n+                   /*solvable=*/ true,\n+                   /*safe=*/ true,\n+                   wtx.GetTxTime(),\n+                   is_from_me,\n+                   fee_rate});\n+}\n+\n+ CoinSelectionParams makeSelectionParams(FastRandomContext& rand, bool avoid_partial_spends)\n+{\n+    return CoinSelectionParams{\n+            rand,\n+            /*change_output_size=*/ 0,\n+            /*change_spend_size=*/ 0,\n+            /*min_change_target=*/ CENT,\n+            /*effective_feerate=*/ CFeeRate(0),\n+            /*long_term_feerate=*/ CFeeRate(0),\n+            /*discard_feerate=*/ CFeeRate(0),\n+            /*tx_noinputs_size=*/ 0,\n+            /*avoid_partial=*/ avoid_partial_spends,\n+    };\n+}\n+\n+class GroupVerifier\n+{\n+public:\n+    std::shared_ptr<CWallet> wallet{nullptr};\n+    CoinsResult coins_pool;\n+    FastRandomContext rand;\n+\n+    void GroupVerify(const CoinEligibilityFilter& filter,\n+                     bool avoid_partial_spends,\n+                     bool positive_only,\n+                     int expected_size)\n+    {\n+        std::vector<OutputGroup> groups = GroupOutputs(*wallet,\n+                                                       coins_pool.All(),\n+                                                       makeSelectionParams(rand, avoid_partial_spends),\n+                                                       filter,\n+                                                       positive_only);\n+        BOOST_CHECK_EQUAL(groups.size(), expected_size);\n+    }\n+\n+    void GroupAndVerify(const CoinEligibilityFilter& filter,\n+                        int expected_with_partial_spends_size,\n+                        int expected_without_partial_spends_size,\n+                        bool positive_only)\n+    {\n+        // First avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/false, positive_only,  expected_with_partial_spends_size);\n+        // Second don't avoid partial spends\n+        GroupVerify(filter, /*avoid_partial_spends=*/true, positive_only, expected_without_partial_spends_size);\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(outputs_grouping_tests)\n+{\n+    const auto& wallet = NewWallet(m_node);\n+    GroupVerifier group_verifier;\n+    group_verifier.wallet = wallet;\n+\n+    const CoinEligibilityFilter& BASIC_FILTER{1, 6, 0};\n+\n+    // #################################################################################\n+    // 10 outputs from different txs going to the same script\n+    // 1) if partial spends is enabled --> must not be grouped\n+    // 2) if partial spends is not enabled --> must be grouped into a single OutputGroup\n+    // #################################################################################\n+\n+    unsigned long GROUP_SIZE = 10;\n+    const CTxDestination dest = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest, 10 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+                                  /*expected_with_partial_spends_size=*/ GROUP_SIZE,\n+                                  /*expected_without_partial_spends_size=*/ 1,\n+                                  /*positive_only=*/ true);\n+\n+    // ####################################################################################\n+    // 3) 10 more UTXO are added with a different script --> must be grouped into a single\n+    //    group for avoid partial spends and 10 different output groups for partial spends\n+    // ####################################################################################\n+\n+    const CTxDestination dest2 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    for (unsigned long i = 0; i < GROUP_SIZE; i++) {\n+        addCoin(group_verifier.coins_pool, *wallet, dest2, 5 * COIN, /*is_from_me=*/true);\n+    }\n+\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // ################################################################################\n+    // 4) Now add a negative output --> which will be skipped if \"positive_only\" is set\n+    // ################################################################################\n+\n+    const CTxDestination dest3 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest3, 1, true, CFeeRate(100));\n+    BOOST_CHECK(group_verifier.coins_pool.coins[OutputType::BECH32].back().GetEffectiveValue() <= 0);\n+\n+    // First expect no changes with \"positive_only\" enabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2,\n+            /*expected_without_partial_spends_size=*/ 2,\n+            /*positive_only=*/ true);\n+\n+    // Then expect changes with \"positive_only\" disabled\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 5) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"not mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest4 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest4, 6 * COIN,\n+            /*is_from_me=*/false, CFeeRate(0), /*depth=*/5);\n+\n+    // Expect no changes from this round and the previous one (point 4)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+\n+    // ##############################################################################\n+    // 6) Try to add a non-eligible UTXO (due not fulfilling the min depth target for\n+    //    \"mine\" UTXOs) --> it must not be added to any group\n+    // ##############################################################################\n+\n+    const CTxDestination dest5 = *Assert(wallet->GetNewDestination(OutputType::BECH32, \"\"));\n+    addCoin(group_verifier.coins_pool, *wallet, dest5, 6 * COIN,\n+            /*is_from_me=*/true, CFeeRate(0), /*depth=*/0);\n+\n+    // Expect no changes from this round and the previous one (point 5)\n+    group_verifier.GroupAndVerify(BASIC_FILTER,\n+            /*expected_with_partial_spends_size=*/ GROUP_SIZE * 2 + 1,\n+            /*expected_without_partial_spends_size=*/ 3,\n+            /*positive_only=*/ false);\n+\n+    // ###########################################################################################\n+    // 7) Surpass the OUTPUT_GROUP_MAX_ENTRIES and verify that a second partial group gets created",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1126387031",
      "id" : 1126387031,
      "in_reply_to_id" : 1126099320,
      "line" : 207,
      "node_id" : "PRRC_kwDOABII585DI01X",
      "original_commit_id" : "7f39f0612d847d2e1a24494a9d023c6e7f6b2cd7",
      "original_line" : 207,
      "original_position" : 201,
      "original_start_line" : null,
      "path" : "src/wallet/test/group_outputs_tests.cpp",
      "position" : 207,
      "pull_request_review_id" : 1326182689,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126387031/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T13:03:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126387031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated per feedback, thanks S3RK ðð¼.\r\n\r\n[Small diff](https://github.com/bitcoin/bitcoin/compare/1cfed6ce6cd8c9f9f1e93662ff8f92cd5a5b91c4..6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44), changes are in the last test scenario and the test commit message.\r\n\r\n",
      "created_at" : "2023-03-06T13:06:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456099290",
      "id" : 1456099290,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585Wyk_a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456099290/reactions"
      },
      "updated_at" : "2023-03-06T13:06:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456099290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ReACK 6a302d4\r\nThanks for addressing feedback",
      "created_at" : "2023-03-06T19:43:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1456850195",
      "id" : 1456850195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585W1cUT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456850195/reactions"
      },
      "updated_at" : "2023-03-06T19:43:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1456850195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "created_at" : "2023-03-06T23:19:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#issuecomment-1457199020",
      "id" : 1457199020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
      "node_id" : "IC_kwDOABII585W2xes",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457199020/reactions"
      },
      "updated_at" : "2023-03-06T23:19:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457199020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1161893162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161893162"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        if (!positive_only || (coin.GetEffectiveValue() > 0)) {\r\n```",
      "commit_id" : "6a302d40dfcc33b15bf27a1d3fcc04bfd3cbda44",
      "created_at" : "2023-04-10T16:54:06Z",
      "diff_hunk" : "@@ -29,8 +29,10 @@ static void GroupCoins(FuzzedDataProvider& fuzzed_data_provider, const std::vect\n     auto output_group = OutputGroup(coin_params);\n     bool valid_outputgroup{false};\n     for (auto& coin : coins) {\n-        output_group.Insert(coin, /*ancestors=*/0, /*descendants=*/0, positive_only);\n-        // If positive_only was specified, nothing may have been inserted, leading to an empty output group\n+        if (!positive_only || (positive_only && coin.GetEffectiveValue() > 0)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806#discussion_r1161893162",
      "id" : 1161893162,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585FQRUq",
      "original_commit_id" : "06ec8f992890cac69cd0fd20224aa51fa311a181",
      "original_line" : 32,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/coinselection.cpp",
      "position" : 6,
      "pull_request_review_id" : 1377824610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161893162/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T17:14:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161893162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   }
]
