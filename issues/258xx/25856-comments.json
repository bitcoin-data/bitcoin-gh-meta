[
   {
      "author_association" : "MEMBER",
      "body" : "In what situation are we creating empty output taprtrees? It seems like the only way this can happen is if a PSBT created by something else is being processed. In that case, we should reject the empty taptree during parsing rather than accepting the ostensibly bad PSBT and silently dropping the bad field. The general principle for PSBT is if it came in or if we filled the field internally, then it should be serialized. So changing the serialization in this way is incorrect IMO. Rather we should not accept empty taptrees and make it impossible to add one to the psbt in our own processing.",
      "created_at" : "2022-08-16T05:17:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1216157795",
      "id" : 1216157795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IfRhj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216157795/reactions"
      },
      "updated_at" : "2022-08-16T05:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216157795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is a script you can run to generate the bad behavior. It is not using any external tools.\r\n\r\nI am indifferent on if the empty TapTree is not serialized, or if it is an Option null.\r\n\r\n```sh\r\nADDR=$(./bitcoin-cli -signet getnewaddress \"\" bech32m)\r\nTXID=$(./bitcoin-cli -signet send \"{\\\"$ADDR\\\":20}\" | jq '.txid' | xargs echo)\r\nVOUT=$(./bitcoin-cli -signet gettransaction $TXID true true | jq \"(.decoded.vout | map(select(.scriptPubKey.address == \\\"$ADDR\\\")))[].n\")\r\nINPUT=\"[{\\\"txid\\\":\\\"$TXID\\\",\\\"vout\\\":$VOUT}]\"\r\nADDR2=$(./bitcoin-cli -signet getnewaddress \"\" bech32m)\r\nPSBT=$(./bitcoin-cli -signet walletcreatefundedpsbt \"$INPUT\" \"[{\\\"$ADDR2\\\": 0.1}]\" | jq \".psbt\" | xargs echo)\r\necho \"PSBT IS: \" $PSBT\r\n```\r\n\r\n\r\non master:\r\n\r\n```\r\ncHNidP8BAIkCAAAAAapfm08b0MipBvW9thL06f8rMbeazW7TIa0W9plHj4WoAAAAAAD9////AoCWmAAAAAAAIlEgC+blBlIP1iijRWxqjw1u9H02sqr7y8fno6/LdnvGqPl895x2AAAAACJRIM5wyjSexMbADl4K+AI1/68zyaDlE7guKvrEDUAjwqU1AAAAAAABASsAlDV3AAAAACJRIDfCpO/CIAqc0JKgBhsCfaPGdyroYtmH+4gQK/Mnn72UIRZGOixxmh9h2gqDIecYHcQHRa8w+Sokc//iDiqXz7uMGRkAHzYIzlYAAIABAACAAAAAgAAAAABhAAAAARcgRjoscZofYdoKgyHnGB3EB0WvMPkqJHP/4g4ql8+7jBkAAQUg1YCB33LpmkGemw3ncz7fcnjhL/bBG/PjH8vpgr2L3cUBBgAhB9WAgd9y6ZpBnpsN53M+33J44S/2wRvz4x/L6YK9i93FGQAfNgjOVgAAgAEAAIAAAACAAAAAAGIAAAAAAQUg9jMNus8cd+GAosBk9wn+pNP9wn7A+jy2Vq0cy+siJ8wBBgAhB/YzDbrPHHfhgKLAZPcJ/qTT/cJ+wPo8tlatHMvrIifMGQAfNgjOVgAAgAEAAIAAAACAAQAAAFEBAAAA\r\n```\r\n\r\nwith this patch\r\n\r\n```\r\ncHNidP8BAIkCAAAAATpwsU9MR76awftD8FkbSHpWSl7aXJShh0Zt/Qhs2nxxAAAAAAD9////AoCWmAAAAAAAIlEgXVnPV8AvZ8aaQrx5yD9j3f/2sC5HyZRFZSiAmJpNTMx895x2AAAAACJRINESxWA49wL5zMro5bHRFQs1uYXY/rkh7YHWo8ryt4pNAAAAAAABASsAlDV3AAAAACJRIGnS8YOeOIEB3SGewSxxyHAVyL1G1hKZpzDMNablWo/hIRaSI43XyWhcnQ9kvKrZQuFwJhg/MtXjsYIoywerZApowBkAHzYIzlYAAIABAACAAAAAgAAAAABdAAAAARcgkiON18loXJ0PZLyq2ULhcCYYPzLV47GCKMsHq2QKaMAAAQUgyUyJb6VUpCjCmi7Z1CGvPn6K3BFlzxPpsJ3szGn4eQMhB8lMiW+lVKQowpou2dQhrz5+itwRZc8T6bCd7Mxp+HkDGQAfNgjOVgAAgAEAAIAAAACAAAAAAF4AAAAAAQUgsx/g/7PwwPDAdHz2Qvl1IHuYKRppAYZoSAqyyEU9DXohB7Mf4P+z8MDwwHR89kL5dSB7mCkaaQGGaEgKsshFPQ16GQAfNgjOVgAAgAEAAIAAAACAAQAAAEkBAAAA\r\n\r\n```\r\n\r\n\r\ndecoded master:\r\n\r\n```json\r\n{\r\n  \"tx\": {\r\n    \"txid\": \"aae4ec9b7a539b7ac60ad39dda5c3a537aaf5c2b42f744343f1c110af156d0fa\",\r\n    \"hash\": \"aae4ec9b7a539b7ac60ad39dda5c3a537aaf5c2b42f744343f1c110af156d0fa\",\r\n    \"version\": 2,\r\n    \"size\": 137,\r\n    \"vsize\": 137,\r\n    \"weight\": 548,\r\n    \"locktime\": 0,\r\n    \"vin\": [\r\n      {\r\n        \"txid\": \"a8858f4799f616ad21d36ecd9ab7312bffe9f412b6bdf506a9c8d01b4f9b5faa\",\r\n        \"vout\": 0,\r\n        \"scriptSig\": {\r\n          \"asm\": \"\",\r\n          \"hex\": \"\"\r\n        },\r\n        \"sequence\": 4294967293\r\n      }\r\n    ],\r\n    \"vout\": [\r\n      {\r\n        \"value\": 0.10000000,\r\n        \"n\": 0,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 0be6e506520fd628a3456c6a8f0d6ef47d36b2aafbcbc7e7a3afcb767bc6a8f9\",\r\n          \"desc\": \"rawtr(0be6e506520fd628a3456c6a8f0d6ef47d36b2aafbcbc7e7a3afcb767bc6a8f9)#sfw45af0\",\r\n          \"hex\": \"51200be6e506520fd628a3456c6a8f0d6ef47d36b2aafbcbc7e7a3afcb767bc6a8f9\",\r\n          \"address\": \"tb1pp0nw2pjjpltz3g69d34g7rtw737ndv42l09u0ear4l9hv77x4rusu9dad7\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      },\r\n      {\r\n        \"value\": 19.89998460,\r\n        \"n\": 1,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 ce70ca349ec4c6c00e5e0af80235ffaf33c9a0e513b82e2afac40d4023c2a535\",\r\n          \"desc\": \"rawtr(ce70ca349ec4c6c00e5e0af80235ffaf33c9a0e513b82e2afac40d4023c2a535)#sydncjf5\",\r\n          \"hex\": \"5120ce70ca349ec4c6c00e5e0af80235ffaf33c9a0e513b82e2afac40d4023c2a535\",\r\n          \"address\": \"tb1peecv5dy7cnrvqrj7ptuqyd0l4ueung89zwuzu2h6csx5qg7z556sjz72rf\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"global_xpubs\": [\r\n  ],\r\n  \"psbt_version\": 0,\r\n  \"proprietary\": [\r\n  ],\r\n  \"unknown\": {\r\n  },\r\n  \"inputs\": [\r\n    {\r\n      \"witness_utxo\": {\r\n        \"amount\": 20.00000000,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 37c2a4efc2200a9cd092a0061b027da3c6772ae862d987fb88102bf3279fbd94\",\r\n          \"desc\": \"rawtr(37c2a4efc2200a9cd092a0061b027da3c6772ae862d987fb88102bf3279fbd94)#ryczaytf\",\r\n          \"hex\": \"512037c2a4efc2200a9cd092a0061b027da3c6772ae862d987fb88102bf3279fbd94\",\r\n          \"address\": \"tb1pxlp2fm7zyq9fe5yj5qrpkqna50r8w2hgvtvc07ugzq4lxfulhk2qlkpf56\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      },\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"463a2c719a1f61da0a8321e7181dc40745af30f92a2473ffe20e2a97cfbb8c19\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/0/97\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ],\r\n      \"taproot_internal_key\": \"463a2c719a1f61da0a8321e7181dc40745af30f92a2473ffe20e2a97cfbb8c19\"\r\n    }\r\n  ],\r\n  \"outputs\": [\r\n    {\r\n      \"taproot_internal_key\": \"d58081df72e99a419e9b0de7733edf7278e12ff6c11bf3e31fcbe982bd8bddc5\",\r\n      \"taproot_tree\": [\r\n      ],\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"d58081df72e99a419e9b0de7733edf7278e12ff6c11bf3e31fcbe982bd8bddc5\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/0/98\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"taproot_internal_key\": \"f6330dbacf1c77e180a2c064f709fea4d3fdc27ec0fa3cb656ad1ccbeb2227cc\",\r\n      \"taproot_tree\": [\r\n      ],\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"f6330dbacf1c77e180a2c064f709fea4d3fdc27ec0fa3cb656ad1ccbeb2227cc\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/1/337\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"fee\": 0.00001540\r\n}\r\n```\r\n\r\ndecode patched\r\n\r\n```json\r\n{\r\n  \"tx\": {\r\n    \"txid\": \"4e7d1ab0ae861c82a973c23bf13cebf24ce3af009c591a4169ea56b95e72b92a\",\r\n    \"hash\": \"4e7d1ab0ae861c82a973c23bf13cebf24ce3af009c591a4169ea56b95e72b92a\",\r\n    \"version\": 2,\r\n    \"size\": 137,\r\n    \"vsize\": 137,\r\n    \"weight\": 548,\r\n    \"locktime\": 0,\r\n    \"vin\": [\r\n      {\r\n        \"txid\": \"717cda6c08fd6d4687a1945cda5e4a567a481b59f043fbc19abe474c4fb1703a\",\r\n        \"vout\": 0,\r\n        \"scriptSig\": {\r\n          \"asm\": \"\",\r\n          \"hex\": \"\"\r\n        },\r\n        \"sequence\": 4294967293\r\n      }\r\n    ],\r\n    \"vout\": [\r\n      {\r\n        \"value\": 0.10000000,\r\n        \"n\": 0,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 5d59cf57c02f67c69a42bc79c83f63ddfff6b02e47c99445652880989a4d4ccc\",\r\n          \"desc\": \"rawtr(5d59cf57c02f67c69a42bc79c83f63ddfff6b02e47c99445652880989a4d4ccc)#qa5395xa\",\r\n          \"hex\": \"51205d59cf57c02f67c69a42bc79c83f63ddfff6b02e47c99445652880989a4d4ccc\",\r\n          \"address\": \"tb1pt4vu747q9anudxjzh3uus0mrmhlldvpwglyeg3t99zqf3xjdfnxqpsn99y\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      },\r\n      {\r\n        \"value\": 19.89998460,\r\n        \"n\": 1,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 d112c56038f702f9cccae8e5b1d1150b35b985d8feb921ed81d6a3caf2b78a4d\",\r\n          \"desc\": \"rawtr(d112c56038f702f9cccae8e5b1d1150b35b985d8feb921ed81d6a3caf2b78a4d)#z88xvjpv\",\r\n          \"hex\": \"5120d112c56038f702f9cccae8e5b1d1150b35b985d8feb921ed81d6a3caf2b78a4d\",\r\n          \"address\": \"tb1p6yfv2cpc7up0nnx2arjmr5g4pv6mnpwcl6ujrmvp663u4u4h3fxsrqclw3\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"global_xpubs\": [\r\n  ],\r\n  \"psbt_version\": 0,\r\n  \"proprietary\": [\r\n  ],\r\n  \"unknown\": {\r\n  },\r\n  \"inputs\": [\r\n    {\r\n      \"witness_utxo\": {\r\n        \"amount\": 20.00000000,\r\n        \"scriptPubKey\": {\r\n          \"asm\": \"1 69d2f1839e388101dd219ec12c71c87015c8bd46d61299a730cc35a6e55a8fe1\",\r\n          \"desc\": \"rawtr(69d2f1839e388101dd219ec12c71c87015c8bd46d61299a730cc35a6e55a8fe1)#lcncmzh8\",\r\n          \"hex\": \"512069d2f1839e388101dd219ec12c71c87015c8bd46d61299a730cc35a6e55a8fe1\",\r\n          \"address\": \"tb1pd8f0rqu78zqsrhfpnmqjcuwgwq2u302x6cffnfeses66de263lss3w2r37\",\r\n          \"type\": \"witness_v1_taproot\"\r\n        }\r\n      },\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"92238dd7c9685c9d0f64bcaad942e17026183f32d5e3b18228cb07ab640a68c0\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/0/93\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ],\r\n      \"taproot_internal_key\": \"92238dd7c9685c9d0f64bcaad942e17026183f32d5e3b18228cb07ab640a68c0\"\r\n    }\r\n  ],\r\n  \"outputs\": [\r\n    {\r\n      \"taproot_internal_key\": \"c94c896fa554a428c29a2ed9d421af3e7e8adc1165cf13e9b09deccc69f87903\",\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"c94c896fa554a428c29a2ed9d421af3e7e8adc1165cf13e9b09deccc69f87903\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/0/94\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"taproot_internal_key\": \"b31fe0ffb3f0c0f0c0747cf642f975207b98291a69018668480ab2c8453d0d7a\",\r\n      \"taproot_bip32_derivs\": [\r\n        {\r\n          \"pubkey\": \"b31fe0ffb3f0c0f0c0747cf642f975207b98291a69018668480ab2c8453d0d7a\",\r\n          \"master_fingerprint\": \"1f3608ce\",\r\n          \"path\": \"m/86'/1'/0'/1/329\",\r\n          \"leaf_hashes\": [\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"fee\": 0.00001540\r\n}\r\n```",
      "created_at" : "2022-08-16T17:44:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1216955206",
      "id" : 1216955206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IiUNG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216955206/reactions"
      },
      "updated_at" : "2022-08-16T17:44:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216955206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(I also find the empty leaf_hashes field a bit sus, but couldn't find anything in the spec around if they are allowed to be empty)",
      "created_at" : "2022-08-16T17:46:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1216957192",
      "id" : 1216957192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IiUsI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216957192/reactions"
      },
      "updated_at" : "2022-08-16T17:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216957192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On further research, I do think this is the correct behavior, but the issue is that the field name m_tap_tree should be refactored (in follow up work?) to be m_taproot_builder, because it is the builder (which also contains the pubkey if key-only). The \"true\" field of tap_tree is *only* available when derived from taproot_builder by calling the function to check for presence of branches.\r\n\r\nThus there is no \"stopping this issue at the source\", it's just a logic bug in serializing of PSBT from core.",
      "created_at" : "2022-08-16T18:13:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1216984700",
      "id" : 1216984700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IibZ8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216984700/reactions"
      },
      "updated_at" : "2022-08-16T18:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216984700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the correct behavior is to change `PSBTOutput::FromSignatureData` to only fill in `m_tap_tree` when `SignatureData.tr_builder` has a merkle root. We should also check that the tree is not empty when deserializing\r\n\r\nAlso I think the `decdepsbt` change is strictly incorrect. If the field is there and we did not fail parsing, then we need to output it when decoding. Otherwise we cannot trust `decodepsbt` for tests to be sure that unexpected fields do not sneak in.\r\n\r\nThis could also use a test.",
      "created_at" : "2022-08-16T18:52:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1217021084",
      "id" : 1217021084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IikSc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217021084/reactions"
      },
      "updated_at" : "2022-08-16T18:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217021084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added a patch to prevent invalid deserialization. I think that with that patch, the approach used here is sufficient because not deserializing an empty Tap Tree is something that can, now, only be the result of an internal logic error.\r\n\r\nW.r.t. \"preventing it at the source\", I tried this patch independent of any others, but it didn't seem to work. Maybe you can figure out where the bad state is coming from?\r\n\r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 9bcbe1cee..f6a67be5a 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -885,20 +885,28 @@ class TRDescriptor final : public DescriptorImpl\r\n protected:\r\n     std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\r\n     {\r\n-        TaprootBuilder builder;\r\n+        std::optional<TaprootBuilder> builder;\r\n         assert(m_depths.size() == scripts.size());\r\n         for (size_t pos = 0; pos < m_depths.size(); ++pos) {\r\n-            builder.Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\r\n+            if (!builder.has_value()) {\r\n+                builder = TaprootBuilder{};\r\n+            }\r\n+            builder->Add(m_depths[pos], scripts[pos], TAPROOT_LEAF_TAPSCRIPT);\r\n         }\r\n-        if (!builder.IsComplete()) return {};\r\n+        if (builder && !builder->IsComplete()) return {};\r\n         assert(keys.size() == 1);\r\n         XOnlyPubKey xpk(keys[0]);\r\n         if (!xpk.IsFullyValid()) return {};\r\n-        builder.Finalize(xpk);\r\n-        WitnessV1Taproot output = builder.GetOutput();\r\n-        out.tr_trees[output] = builder;\r\n-        out.pubkeys.emplace(keys[0].GetID(), keys[0]);\r\n-        return Vector(GetScriptForDestination(output));\r\n+        if (builder) {\r\n+            builder->Finalize(xpk);\r\n+            WitnessV1Taproot output = builder->GetOutput();\r\n+            out.tr_trees[output] = *builder;\r\n+            out.pubkeys.emplace(keys[0].GetID(), keys[0]);\r\n+            return Vector(GetScriptForDestination(output));\r\n+        } else {\r\n+            out.pubkeys.emplace(keys[0].GetID(), keys[0]);\r\n+            return Vector(GetScriptForDestination(WitnessV1Taproot(xpk)));\r\n+        }\r\n     }\r\n     bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const override\r\n     {\r\n```",
      "created_at" : "2022-08-16T19:15:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1217057714",
      "id" : 1217057714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585IitOy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217057714/reactions"
      },
      "updated_at" : "2022-08-16T19:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217057714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Alternative in #25858",
      "created_at" : "2022-08-16T20:15:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1217114888",
      "id" : 1217114888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585Ii7MI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217114888/reactions"
      },
      "updated_at" : "2022-08-16T20:15:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217114888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25877](https://github.com/bitcoin/bitcoin/pull/25877) (refactor: Do not use CScript for tapleaf scripts until the tapleaf version is known by roconnor-blockstream)\n* [#25858](https://github.com/bitcoin/bitcoin/pull/25858) (psbt: Only include PSBT_OUT_TAP_TREE when the output has a script path by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-08-17T07:49:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1217616226",
      "id" : 1217616226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585Ik1li",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217616226/reactions"
      },
      "updated_at" : "2022-08-20T20:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217616226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Going to close this in favour of #25858 for now, as it seems that PR has a number of concept/approach ACKs (including from @JeremyRubin). Jeremy please let me know if this is incorrect.",
      "created_at" : "2022-09-14T09:49:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25856#issuecomment-1246514622",
      "id" : 1246514622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25856",
      "node_id" : "IC_kwDOABII585KTE2-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246514622/reactions"
      },
      "updated_at" : "2022-09-14T09:49:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1246514622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
