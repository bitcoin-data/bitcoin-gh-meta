[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RE: people who want to see the big picture:\n\nA design document for libconsensus would be a much more efficient way for people like me to get the big picture. And seeing the API you're aiming for would be really nifty, too.\n",
      "created_at" : "2015-03-26T16:07:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-86595172",
      "id" : 86595172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NTk1MTcy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/86595172/reactions"
      },
      "updated_at" : "2015-03-26T16:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/86595172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I'm trying to separate what could get into the next libconsensus relatively easily from what will require some API discussion first. I was planning on just writing to the mailing list for the later, but having an editable document in the wiki or somewhere with the whole proposed API (even if it has question marks in some functions) will probably be better.\nI will do that after I reorganize the code in 2 or 3 clear stages.\n",
      "created_at" : "2015-03-28T10:36:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-87203127",
      "id" : 87203127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MjAzMTI3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87203127/reactions"
      },
      "updated_at" : "2015-03-28T10:36:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87203127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated the PR text with something more descriptive, including a PR where there's actually an API to judge. I'm not very happy with it as it is myself, because it ends with a little bit of a hack to get rid of the chain.o dependency. But it should serve to get an idea of the kind of API I would like to propose, at least for VerifyBlockHeader.\n",
      "created_at" : "2015-04-10T14:57:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-91583801",
      "id" : 91583801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkxNTgzODAx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91583801/reactions"
      },
      "updated_at" : "2015-04-10T14:57:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91583801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, some big-picture design questions I have after spending a few minutes looking through the blizzard of commits:\n\nWhy factor out CBlockIndexBase and add a PrevIndexGetter everywhere?\n\nThat seems like a weird hybrid way of doing things. Why the move away from blockindex->pprev ? Is there a problem with memory management or storing pointers?\nIf there is, then I'd expect to just store uint256 hashes, and when a pointer to a CBlockIndexBase is needed have some GetBlockHeader(hash) or GetBlockIndex(hash) function(s).\n\nOr if you're trying to save memory not storing a prevHash-- why not just have GetPrevBlock(parent_hash) as part of the API? Are you worried it would be too slow?\n\nOn a higher level:  what is libconsensus supposed to be do versus not do? I'm gathering it is to encapsulate all of the validation logic, but leave storing/managing all the data up to higher layers. How are the layers supposed to be connected-- pass in lookup functions to the libconsensus methods, as needed? Register lookup methods at startup?  (that tends to create a friendlier API, in my opinion, but maybe one that is harder to test)\n",
      "created_at" : "2015-04-10T15:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-91597588",
      "id" : 91597588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkxNTk3NTg4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91597588/reactions"
      },
      "updated_at" : "2015-04-10T15:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91597588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why factor out CBlockIndexBase and add a PrevIndexGetter everywhere?\n\nWell, that's the particular interface I chose to replace CBlockIndex. I don't like much myself but I wanted to give an example of a C API at the end of #5995. As explained there, that's the last thing is done (there) to help people replace those last 2 commits with their own proposal.\nBut we can start to prepare that removing all other dependencies that are not CBlockIndex first.\n\n> Why the move away from blockindex->pprev ? Is there a problem with memory management or storing pointers?\n\nWell, maybe we want to expose a struct with pprev directly in the C API. That's what needs discussion, how are other codebases using libconsensus expected to feed VerifyBlockHeader with chain index data. I think the function pointer I chose is quite flexible. Maybe another codebase maintains a dictionary nHeight -> blockHeader and other codebases give a pointer to a function that takes the height index, substracts one and looks in that dictionary.\nIt's just an idea. What is clear is that we cannot expose CBlockIndex as a C++ class to the C API.\n\n> If there is, then I'd expect to just store uint256 hashes, and when a pointer to a CBlockIndexBase is needed have some GetBlockHeader(hash) or GetBlockIndex(hash) function(s).\n\n That's another solution that in fact I like more, and then other implementations could replace that getter with whatever they want. But this will also require more changes than my little hack.\n\n> Or if you're trying to save memory not storing a prevHash-- why not just have GetPrevBlock(parent_hash) as part of the API? Are you worried it would be too slow?\n\nYeah, if it wasn't for the extra memory of storing prevHash we should already have a common base for CBlockIndex and CBlockHeader. The other suggestions are possible too, that's the kind of discussion I would like to have in #5995 .\n\n> On a higher level: what is libconsensus supposed to be do versus not do? I'm gathering it is to encapsulate all of the validation logic, but leave storing/managing all the data up to higher layers.\n\nThat's what I envision as well. Although, @luke-jr for example thinks that we should also expose a validation + basic storage library. In any case that would be something to do later.\n\n> How are the layers supposed to be connected-- pass in lookup functions to the libconsensus methods, as needed? Register lookup methods at startup? (that tends to create a friendlier API, in my opinion, but maybe one that is harder to test)\n\nYes, I think having lookup function pointers as parameters of the validation functions is what makes more sense. It is very flexible for other implementations and it allows bitcoin core to adapt to that without necessarily having to radically change its internal structures.\n\nThe question is which function pointers should replace CBlockIndex and CCoinsViewCache.\nI think everything else will be mostly uncontroversial.\n",
      "created_at" : "2015-04-10T16:19:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-91606456",
      "id" : 91606456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkxNjA2NDU2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91606456/reactions"
      },
      "updated_at" : "2015-04-10T16:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91606456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I realized this is mostly unreadable until something similar to #6051 is merged.\nI will close this for now but I will still maintain the list of dependencies.\n",
      "created_at" : "2015-04-23T00:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5946#issuecomment-95372487",
      "id" : 95372487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDk1MzcyNDg3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/95372487/reactions"
      },
      "updated_at" : "2015-04-23T00:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/95372487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
