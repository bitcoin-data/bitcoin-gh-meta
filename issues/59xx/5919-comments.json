[
   {
      "body" : "@tnull: i think it would be good to give a more detailed commit message.",
      "created_at" : "2015-03-17T19:18:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82548425",
      "id" : 82548425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-17T19:18:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82548425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "ACK on replacing 1000 with a constant where appropriate.\r\n\r\nNACK on the naming. `MAX_ADDR_TO_SEND` in net.h is clear, using `ADDRMAN_GETADDR_MAX` everywhere less so.\r\n\r\nAs for unifying them, I tend to say no unless there is a clear problem. Remember that there are various filtering steps that reduce the size of the list, for example to remove addresses already known, so starting off with 1000 entries may result in much less than 1000 being returned.\r\n",
      "created_at" : "2015-03-18T09:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82831017",
      "id" : 82831017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T09:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82831017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@jonasschnelli Amended the commit to have a better message.\r\n@laanwj Thats true, `MAX_ADDR_TO_SEND` is better, however, I didn't want to introduce circular dependencies, or modify many files for this first minimal patch, before I didn't hear from the developers. `MAX_ADDR_TO_SEND` can't be used in addrman.h/.cpp, while `ADDRMAN_GETADDR_MAX` is available in net.h, if we include addrman.h in it (instead of net.cpp).\r\nOn less than 1000 addresses being returned: the same can be true for 2500...\r\n\r\nAdditionally, there is an other problem in the filtering I discovered: When nodes announce their `addr` for the first time, don't get elected trickle node, and then want to answer a `getaddr`-message, couldn't it happen, that their queued `addr`-message gets overwritten and therefore never gets flooded?",
      "created_at" : "2015-03-18T11:16:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82908021",
      "id" : 82908021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T11:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82908021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/521467?v=3",
         "events_url" : "https://api.github.com/users/tnull/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tnull/followers",
         "following_url" : "https://api.github.com/users/tnull/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tnull/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tnull",
         "id" : 521467,
         "login" : "tnull",
         "organizations_url" : "https://api.github.com/users/tnull/orgs",
         "received_events_url" : "https://api.github.com/users/tnull/received_events",
         "repos_url" : "https://api.github.com/users/tnull/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tnull/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tnull/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tnull"
      }
   },
   {
      "body" : "> On less than 1000 addresses being returned: the same can be true for 2500...\r\n\r\nBut with a smaller probability.",
      "created_at" : "2015-03-18T12:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82939537",
      "id" : 82939537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T12:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82939537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Also, the 1000 number is part of the protocol implementation, the 2500 is from addrman. I don't think that changing a number in addrman should have an effect on protocol behaviour, so it seems weird to use addrman's constant inside net.",
      "created_at" : "2015-03-18T12:43:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82953398",
      "id" : 82953398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T12:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82953398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> But with a smaller probability.\r\n\r\nOf course! I argue that the concept of checking and reducing the set of addrs multiple times is flawed and since it's creating a new vector every time should introduce a good amount of overhead. But probably you're right, if the concept stays the same, it'll be better to leave it at 2500. ",
      "created_at" : "2015-03-18T12:43:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82953534",
      "id" : 82953534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T12:44:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82953534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/521467?v=3",
         "events_url" : "https://api.github.com/users/tnull/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tnull/followers",
         "following_url" : "https://api.github.com/users/tnull/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tnull/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tnull",
         "id" : 521467,
         "login" : "tnull",
         "organizations_url" : "https://api.github.com/users/tnull/orgs",
         "received_events_url" : "https://api.github.com/users/tnull/received_events",
         "repos_url" : "https://api.github.com/users/tnull/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tnull/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tnull/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tnull"
      }
   },
   {
      "body" : "Well, the concept is not changing here, just the number, so I'm commenting on that :)\r\n\r\nHave you measured the overhead? Without measurements from a profiler that show that this is actually a big time sink for a node, I wouldn't worry about it.\r\n",
      "created_at" : "2015-03-18T12:48:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82954447",
      "id" : 82954447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T12:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82954447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> I don't think that changing a number in addrman should have an effect on protocol behaviour, so it seems weird to use addrman's constant inside net.\r\n\r\nTrue again. Maybe this request can be closed, maybe I'll send another one just replacing some of the hardcoded \"1000\" number with `MAX_ADDR_TO_SEND` constant.\r\n\r\nDoes anyone have thoughts on the issue of the possibility that initial `addr`-messages get overwritten in the queue by `PushAddress()` and therefore never get sent?",
      "created_at" : "2015-03-18T12:48:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-82954508",
      "id" : 82954508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-18T12:48:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/82954508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/521467?v=3",
         "events_url" : "https://api.github.com/users/tnull/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tnull/followers",
         "following_url" : "https://api.github.com/users/tnull/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tnull/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tnull",
         "id" : 521467,
         "login" : "tnull",
         "organizations_url" : "https://api.github.com/users/tnull/orgs",
         "received_events_url" : "https://api.github.com/users/tnull/received_events",
         "repos_url" : "https://api.github.com/users/tnull/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tnull/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tnull/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tnull"
      }
   },
   {
      "body" : "You mean that the node's self-advertisement may get lost? I don't think that is a huge issue. It will re-advertise and for some peer, at some point it's bound to get through. Some unpredictability in getaddr may even be desirable to break assumptions about the returned data.\r\n",
      "created_at" : "2015-03-19T11:27:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-83518174",
      "id" : 83518174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-19T11:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83518174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Ok, I understand if you think this is no huge issue. However, I fail to see how this unpredictability would be desirable (on top of randomizing returned addresses). \r\nClosing this request now, thanks for your time! :)",
      "created_at" : "2015-03-20T10:28:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5919#issuecomment-83982284",
      "id" : 83982284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5919",
      "updated_at" : "2015-03-20T10:28:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/83982284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/521467?v=3",
         "events_url" : "https://api.github.com/users/tnull/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tnull/followers",
         "following_url" : "https://api.github.com/users/tnull/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tnull/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tnull",
         "id" : 521467,
         "login" : "tnull",
         "organizations_url" : "https://api.github.com/users/tnull/orgs",
         "received_events_url" : "https://api.github.com/users/tnull/received_events",
         "repos_url" : "https://api.github.com/users/tnull/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tnull/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tnull/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tnull"
      }
   }
]
