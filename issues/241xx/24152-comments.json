[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24007](https://github.com/bitcoin/bitcoin/pull/24007) ([mempool] allow tx replacement by smaller witness by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-26T00:08:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1021726430",
      "id" : 1021726430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII58485k7e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021726430/reactions"
      },
      "updated_at" : "2022-04-03T19:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021726430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802669892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fee-bump **for** transaction B",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T13:38:53Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802669892",
      "id" : 802669892,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584v18VE",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 29,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802723149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's not really clear at this point of the document what \"deduplication\" means - I think both removal of transaction already in the mempool, and removal of package txs that would also get accepted individually. The *Rationale* section on this only mentions the first. Maybe add an explanation/pointer to the following section.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T14:31:46Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802723149",
      "id" : 802723149,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII584v2JVN",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 64,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 8,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802799166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now that a PackageMempoolAcceptResult with empty `m_tx_results` is returned if the fee is too low, the `tx_pool_standard` fuzz test needs an update, because it [asserts](https://github.com/bitcoin/bitcoin/blob/5e8e0b3d7f6055e326bda61e60712b530e8920f0/src/test/fuzz/tx_pool.cpp#L242) non-emptiness.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T15:39:09Z",
      "diff_hunk" : "@@ -1199,6 +1211,21 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&\n+        !CheckFeeRate(m_total_vsize, m_total_modified_fees, placeholder_state)) {\n+        package_state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-fee-too-low\");\n+        return PackageMempoolAcceptResult(package_state, package_feerate, {});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802799166",
      "id" : 802799166,
      "line" : 1240,
      "node_id" : "PRRC_kwDOABII584v2b4-",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 1226,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802851282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this sentence confused me at first because it seems to describe the very use case of CPFP where a high fee of a child does impact the consideration of a parent - maybe \"insufficient fees of children should...\"",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:24:46Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802851282",
      "id" : 802851282,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII584v2onS",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 87,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 31,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802858141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "shouldn't this be \"A's fees cannot help B\"?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:29:52Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of\n+children should have no impact on the consideration of their parents, since they are not necessary\n+for the parents to be mined. More generally, if transaction B is not needed in order for transaction\n+A to be mined, B's fees cannot help A. In a child-with-parents package, simply excluding any parent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802858141",
      "id" : 802858141,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584v2qSd",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 90,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 34,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802872913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could `m_total_modified_fees` and  `m_total_vsize` just be local variables? They seem to be used only in `MemPoolAccept::AcceptMultipleTransactions`.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:43:22Z",
      "diff_hunk" : "@@ -649,6 +656,10 @@ class MemPoolAccept\n \n     CChainState& m_active_chainstate;\n \n+    // Used to calculate package feerate.\n+    CAmount m_total_modified_fees;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802872913",
      "id" : 802872913,
      "line" : 674,
      "node_id" : "PRRC_kwDOABII584v2t5R",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 660,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 40,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802952279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, most examples seem to designate a parent as A and its child as B (which I like, because that corresponds to time-order, first A, then B), but this seems to be reversed? I believe a few lines below, the convention I'm suggesting is followed, (A is parent, B is child). Also, should \"transaction B\" be \"transaction for B\"?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:07:18Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802952279",
      "id" : 802952279,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584v3BRX",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 29,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802954740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is okay, but when I first read this, I had no idea what \"modified\" meant (only learning later that the `prioritisetransaction` RPC does the modifying); perhaps \"modified\" can be dropped? I think it's implicit. Or maybe briefly mention the RPC here.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:10:16Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802954740",
      "id" : 802954740,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII584v3B30",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 63,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 7,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802955759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's unclear to me what \"deduplication\" means here. I thought a package, by definition, contains no duplicate transactions.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:11:30Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802955759",
      "id" : 802955759,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII584v3CHv",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 64,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 8,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803135521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"However, this should not allow parents to pay for children\"\r\n\r\nThis reads to me like \"parents must not pay for children\". When it is more (to my understanding), parents must be validated first before considering children. If the parent(s) is accepted into the mempool first a low fee child can later join them as part of a sufficient fee package but a low fee child must not prevent a sufficient fee parent from being accepted into the mempool. That's right yeah?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T22:17:13Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803135521",
      "id" : 803135521,
      "line" : 710,
      "node_id" : "PRRC_kwDOABII584v3uAh",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 710,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 249,
      "pull_request_review_id" : 878118993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T22:17:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nBuilt on MacOS Big Sur, ran unit tests (diagrams from [PR review club](https://bitcoincore.reviews/24152) are helpful here illustrating each unit test). Ideally I'd play around with these but just read through and ran them today. Didn't run the fuzz tests but the fuzzer seems to be failing on the CI.\r\n\r\nI asked about DoS vectors for CPFP in today's PR review club as that seems the greatest hurdle to get over for updated RBF rules and package RBF but seem to be less of a concern with CPFP (?). Not sure whether the CPFP carve out rule needs to be tweaked when CPFPing within a package?\r\n\r\nGreat to see this series of PRs progress. \r\n\r\n",
      "created_at" : "2022-02-09T22:50:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1034278526",
      "id" : 1034278526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII5849pdZ-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034278526/reactions"
      },
      "updated_at" : "2022-02-09T22:51:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034278526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803207380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "i agree as a design principle that backwards-compatibility of transaction relay policy is worthwhile.\r\n\r\nThat said, we might have in the future to make exceptions to that principle, where a transaction/package might be relayed across non-upgraded nodes though rejected by upgraded nodes. E.g I'm thinking if replace-by-feerate is deployed instead of replace-by-fee, you might have a (2000 sats; 10 sat/vB) transaction replacing a (5000 sats; 5 sat/vB) already-in-mempool one (even if we can envision some transition period with dual-support).\r\n\r\nThus I'm suggesting to enlighten the wording here, \"As a principle, backwards-compatibility of transaction relay policy is prioritized\", \"we prevent non-programmed restriction of policy\". Especially as all those questions of policy loosening/tightening and how the project operates them are relatively young, I think it's cautious to be more formal in the phrasing. Thereby avoiding in the future ecosystems users to claim an adamant stability of Core policy rules, like in the zero-conf/full-rbf past polemics.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T00:39:42Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of\n+children should have no impact on the consideration of their parents, since they are not necessary\n+for the parents to be mined. More generally, if transaction B is not needed in order for transaction\n+A to be mined, B's fees cannot help A. In a child-with-parents package, simply excluding any parent\n+transactions that meet feerate requirements individually is sufficient to ensure this.\n+\n+*Rationale*: For backwards-compatibility of transaction relay policy, it's important that package",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803207380",
      "id" : 803207380,
      "line" : 93,
      "node_id" : "PRRC_kwDOABII584v3_jU",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 93,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 37,
      "pull_request_review_id" : 878210505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T00:54:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803208009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From checking `prioritisetransaction` documentation, I think it's a valid behavior to subtract fees from a transaction, thus altering `ProcessNewPackage` result. If you think it's a case worthy to cover.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T00:41:05Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803208009",
      "id" : 803208009,
      "line" : 693,
      "node_id" : "PRRC_kwDOABII584v3_tJ",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 693,
      "original_position" : 232,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 232,
      "pull_request_review_id" : 878210505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T00:54:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803499685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803499685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea! I will add a test for this.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T10:02:45Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803499685",
      "id" : 803499685,
      "in_reply_to_id" : 803208009,
      "line" : 693,
      "node_id" : "PRRC_kwDOABII584v5G6l",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 693,
      "original_position" : 232,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 232,
      "pull_request_review_id" : 878595870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803499685/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T10:02:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803499685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803506080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803506080"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks the help ",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T10:09:52Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803506080",
      "id" : 803506080,
      "in_reply_to_id" : 802669892,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584v5Ieg",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 29,
      "pull_request_review_id" : 878604821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803506080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T10:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803506080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94844282?v=4",
         "events_url" : "https://api.github.com/users/Sagor2214/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sagor2214/followers",
         "following_url" : "https://api.github.com/users/Sagor2214/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sagor2214/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sagor2214",
         "id" : 94844282,
         "login" : "Sagor2214",
         "node_id" : "U_kgDOBac1eg",
         "organizations_url" : "https://api.github.com/users/Sagor2214/orgs",
         "received_events_url" : "https://api.github.com/users/Sagor2214/received_events",
         "repos_url" : "https://api.github.com/users/Sagor2214/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sagor2214/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sagor2214/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sagor2214"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803511729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803511729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Our goals are:\r\n\r\n(1) If the child's feerate is too low to be accepted, the parent's fees should not be able to pay for it. A parent should not pay for a child, because the child is not necessary for the parent to be mined.\r\n\r\n(2) If the child's feerate is too low to be accepted, that should not prevent the parent from being accepted. A child's fees should not harm its parent, because the child is not necessary for the parent to be mined.\r\n\r\nValidating the parents individually first is _how_ we achieve these goals. It is not the goal itself.\r\n\r\n> This reads to me like \"parents must not pay for children\". When it is more (to my understanding), parents must be validated first before considering children.\r\n\r\nThis is a reversal of the goal/implementation relationship. We install seatbelts in the car (implementation) so that drivers are protected in accidents (goal). The goal is not to install seatbelts for no reason, it's to protect drivers.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T10:16:06Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803511729",
      "id" : 803511729,
      "in_reply_to_id" : 803135521,
      "line" : 710,
      "node_id" : "PRRC_kwDOABII584v5J2x",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 710,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 249,
      "pull_request_review_id" : 878612319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803511729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T10:16:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803511729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803543706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803543706"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok thanks. I understand why we'd want goal 2. What's the rationale for goal 1? Introduces too much complexity by reaching into the mempool to assess things not yet in the mempool? The parent is already in the mempool and what is in the mempool (parent) shouldn't impact what isn't in the mempool (child)?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T10:52:15Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803543706",
      "id" : 803543706,
      "in_reply_to_id" : 803135521,
      "line" : 710,
      "node_id" : "PRRC_kwDOABII584v5Rqa",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 710,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 249,
      "pull_request_review_id" : 878655662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803543706/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T10:52:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803543706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803552783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803552783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, I guess that is convention now: ancestors < descendants alphanumerically.",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T11:02:48Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803552783",
      "id" : 803552783,
      "in_reply_to_id" : 802952279,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584v5T4P",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 878672854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803552783/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T11:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803552783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803557914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803557914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A parent should not pay for its child, because the child is not necessary for the parent to be mined. We get a better feerate if we just include the parent by itself.",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T11:08:00Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803557914",
      "id" : 803557914,
      "in_reply_to_id" : 803135521,
      "line" : 733,
      "node_id" : "PRRC_kwDOABII584v5VIa",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 733,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 272,
      "pull_request_review_id" : 878679025,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803557914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T11:08:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803557914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803560027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803560027"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or maybe because in the process of a child (subsidized by a parent) being accepted into the mempool the parent could be mined on its own and then the child would need to be kicked out the mempool? ",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T11:10:01Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803560027",
      "id" : 803560027,
      "in_reply_to_id" : 803135521,
      "line" : 733,
      "node_id" : "PRRC_kwDOABII584v5Vpb",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 733,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 272,
      "pull_request_review_id" : 878681224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803560027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T11:10:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803560027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803563613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803563613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We shouldn't accept the child into the mempool if it doesn't meet the minimum feerate.",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T11:13:24Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803563613",
      "id" : 803563613,
      "in_reply_to_id" : 803135521,
      "line" : 733,
      "node_id" : "PRRC_kwDOABII584v5Whd",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 733,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 272,
      "pull_request_review_id" : 878684919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803563613/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T11:13:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803563613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803570323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803570323"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah its a miner's economic interest argument. Ok gotcha, makes sense. Thanks",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T11:20:22Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803570323",
      "id" : 803570323,
      "in_reply_to_id" : 803135521,
      "line" : 733,
      "node_id" : "PRRC_kwDOABII584v5YKT",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 733,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 272,
      "pull_request_review_id" : 878692821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803570323/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T11:20:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803570323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803610838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes good point, changed now. I originally added it as a member variable so we could reuse it in `PackageRBFChecks()` in the future, but we'll cross that bridge when we get there.",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T12:12:49Z",
      "diff_hunk" : "@@ -649,6 +656,10 @@ class MemPoolAccept\n \n     CChainState& m_active_chainstate;\n \n+    // Used to calculate package feerate.\n+    CAmount m_total_modified_fees;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803610838",
      "id" : 803610838,
      "in_reply_to_id" : 802872913,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584v5iDW",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 660,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 878750098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610838/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T12:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803610953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ooooh good catch",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T12:13:00Z",
      "diff_hunk" : "@@ -1199,6 +1211,21 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&\n+        !CheckFeeRate(m_total_vsize, m_total_modified_fees, placeholder_state)) {\n+        package_state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-fee-too-low\");\n+        return PackageMempoolAcceptResult(package_state, package_feerate, {});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803610953",
      "id" : 803610953,
      "in_reply_to_id" : 802799166,
      "line" : 1236,
      "node_id" : "PRRC_kwDOABII584v5iFJ",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 1236,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 81,
      "pull_request_review_id" : 878750274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T12:13:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803610953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803611173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added explanation",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T12:13:18Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803611173",
      "id" : 803611173,
      "in_reply_to_id" : 802954740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584v5iIl",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 63,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 878750597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611173/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T12:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803611542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree, added a sentence at the beginning to this effect.",
      "commit_id" : "9ff00abeef609a84693ab6baa6c9e09bd1c46bab",
      "created_at" : "2022-02-10T12:13:48Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of\n+children should have no impact on the consideration of their parents, since they are not necessary\n+for the parents to be mined. More generally, if transaction B is not needed in order for transaction\n+A to be mined, B's fees cannot help A. In a child-with-parents package, simply excluding any parent\n+transactions that meet feerate requirements individually is sufficient to ensure this.\n+\n+*Rationale*: For backwards-compatibility of transaction relay policy, it's important that package",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803611542",
      "id" : 803611542,
      "in_reply_to_id" : 803207380,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584v5iOW",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 93,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 878751085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611542/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T12:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803611542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @ariard @mzumsande @LarryRuane @michaelfolkson! Addressed your review comments. Clarified the documentation, adjusted the fuzz/tx_pool, and added the test for negative prioritisation.",
      "created_at" : "2022-02-10T12:15:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1034853086",
      "id" : 1034853086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII5849rpre",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034853086/reactions"
      },
      "updated_at" : "2022-02-10T12:15:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034853086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-02-11T08:09:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1035964288",
      "id" : 1035964288,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII5849v4-A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035964288/reactions"
      },
      "updated_at" : "2022-02-11T08:09:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035964288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-02-12T23:19:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1037566659",
      "id" : 1037566659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII58492ALD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1037566659/reactions"
      },
      "updated_at" : "2022-02-12T23:19:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1037566659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-02-22T09:46:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1047609416",
      "id" : 1047609416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584-cUBI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047609416/reactions"
      },
      "updated_at" : "2022-02-22T09:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047609416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2022-02-22T09:55:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1047617839",
      "id" : 1047617839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584-cWEv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047617839/reactions"
      },
      "updated_at" : "2022-02-22T09:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047617839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812421159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812421159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/backwards/backward/g ; s/compatibile/compatible/g (though ofc compatibility exists) ?",
      "commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "created_at" : "2022-02-22T22:41:36Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and\n+package validation is used for the transactions that failed. Since package feerate is only\n+calculated using transactions that are not in the mempool, this implementation detail affects the\n+outcome of package validation.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping: transaction B is a\n+\"legitimate\" fee-bump for transaction A only if B is a descendant of A and has a *higher* feerate\n+than A. We want to prevent \"parents pay for children\" behavior; fees of parents should not help\n+their children, since the parents can be mined without the child.  More generally, if transaction A\n+is not needed in order for transaction B to be mined, A's fees cannot help B. In a\n+child-with-parents package, simply excluding any parent transactions that meet feerate requirements\n+individually is sufficient to ensure this.\n+\n+*Rationale*: We must not allow a low-feerate child to prevent its parent from being accepted; fees\n+of children should not negatively impact their parents, since they are not necessary for the parents\n+to be mined. More generally, if transaction B is not needed in order for transaction A to be mined,\n+B's fees cannot harm A. In a child-with-parents package, simply validating parents individually\n+first is sufficient to ensure this.\n+\n+*Rationale*: As a principle, we want to avoid accidentally restricting policy in order to be\n+backwards-compatibile for users and applications that rely on p2p transaction relay. Concretely,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812421159",
      "id" : 812421159,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII584wbJAn",
      "original_commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "original_line" : 116,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 45,
      "pull_request_review_id" : 890450201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812421159/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T23:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812421159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812442247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812442247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the `TxValidationState` could be inspected here. If the failure cannot be assigned to the feerate check, the package validation could fail early ? Otherwise if you have a package of 25th component and the latest is faultive, we might validate twice the first 24 ones. Once here, the other one in `AcceptMultipleTransactions` and this could be avoid.\r\n\r\nAm I correct ?\r\n\r\nIf yes, I think it's always good to minimize our DoS surface. Though I'm unsure if the difference would be significant between the two implementations.",
      "commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "created_at" : "2022-02-22T23:21:35Z",
      "diff_hunk" : "@@ -1338,18 +1376,33 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812442247",
      "id" : 812442247,
      "line" : 1380,
      "node_id" : "PRRC_kwDOABII584wbOKH",
      "original_commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "original_line" : 1380,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 135,
      "pull_request_review_id" : 890450201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812442247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T23:37:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812442247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812449465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812449465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIUC `txns_new` is empty only if all submitted package transactions are accepted. Not because transactions are consensus-invalid, I'm unsure if the comment is accurate with the latest version of the code ?",
      "commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "created_at" : "2022-02-22T23:37:18Z",
      "diff_hunk" : "@@ -1338,18 +1376,33 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);\n+            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                // The transaction succeeded on its own and is now in the mempool. Don't include it\n+                // in package validation, because its fees should only be \"used\" once.\n+                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n+                results.emplace(wtxid, single_res);\n+            } else {\n+                txns_new.push_back(tx);\n+            }\n         }\n     }\n \n     // Nothing to do if the entire package has already been submitted.\n-    if (txns_new.empty()) return PackageMempoolAcceptResult(package_state, std::move(results));\n+    // Also quit now if any of the transactions was consensus-invalid because package validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r812449465",
      "id" : 812449465,
      "line" : 1393,
      "node_id" : "PRRC_kwDOABII584wbP65",
      "original_commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "original_line" : 1393,
      "original_position" : 149,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 149,
      "pull_request_review_id" : 890450201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812449465/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T23:37:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812449465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r813033268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Correct - if the failure isn't feerate or missing inputs (i.e. the child, or the parents could depend on each other), then there's nothing package validation can do. I had this in the original version and took it out, but you're right that it's safer to have here. I've added it back in the latest push.",
      "commit_id" : "a70175076a5f85391a089607f6a19a58f173d4a1",
      "created_at" : "2022-02-23T15:45:00Z",
      "diff_hunk" : "@@ -1338,18 +1376,33 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r813033268",
      "id" : 813033268,
      "in_reply_to_id" : 812442247,
      "line" : 1381,
      "node_id" : "PRRC_kwDOABII584wdec0",
      "original_commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "original_line" : 1381,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 136,
      "pull_request_review_id" : 891280687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033268/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-23T15:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r813033741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah sorry, leftover comment",
      "commit_id" : "a70175076a5f85391a089607f6a19a58f173d4a1",
      "created_at" : "2022-02-23T15:45:27Z",
      "diff_hunk" : "@@ -1338,18 +1376,33 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);\n+            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                // The transaction succeeded on its own and is now in the mempool. Don't include it\n+                // in package validation, because its fees should only be \"used\" once.\n+                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n+                results.emplace(wtxid, single_res);\n+            } else {\n+                txns_new.push_back(tx);\n+            }\n         }\n     }\n \n     // Nothing to do if the entire package has already been submitted.\n-    if (txns_new.empty()) return PackageMempoolAcceptResult(package_state, std::move(results));\n+    // Also quit now if any of the transactions was consensus-invalid because package validation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r813033741",
      "id" : 813033741,
      "in_reply_to_id" : 812449465,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584wdekN",
      "original_commit_id" : "9001b9ab2ef4dd7c185f8055fe90bbac66c295c5",
      "original_line" : 1393,
      "original_position" : 149,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 891281360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033741/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-23T15:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813033741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the fuzzer issue, added a commit for quitting early if transactions fail for reasons other than policy or missing inputs.",
      "created_at" : "2022-02-23T15:49:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1048925167",
      "id" : 1048925167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584-hVPv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1048925167/reactions"
      },
      "updated_at" : "2022-02-23T15:49:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1048925167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "pinging @ariard @darosior @LarryRuane @mzumsande if you have time to take another look? :)",
      "created_at" : "2022-03-08T09:45:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1061590410",
      "id" : 1061590410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584_RpWK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061590410/reactions"
      },
      "updated_at" : "2022-03-08T09:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061590410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-10T16:14:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1064232846",
      "id" : 1064232846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584_bueO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064232846/reactions"
      },
      "updated_at" : "2022-03-10T16:14:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064232846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2022-03-11T11:41:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1065036238",
      "id" : 1065036238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII584_eynO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065036238/reactions"
      },
      "updated_at" : "2022-03-11T11:41:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065036238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824676230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824676230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "drop the comma, as the dependent clause has no subject\r\n```suggestion\r\n(\"deduplicated\") and are thus excluded from this calculation.\r\n```",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:38:18Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824676230",
      "id" : 824676230,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII584xJ4-G",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 81,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 10,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824676230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824676230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824677991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824677991"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n(`minRelayTxFee`) and the dynamic mempool minimum feerate, the total package feerate is used instead of\r\n```",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:40:50Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824677991",
      "id" : 824677991,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584xJ5Zn",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 84,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 13,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824677991/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824677991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824678812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824678812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nthe individual feerate. The individual transactions are allowed to be below the feerate requirements if\r\n```",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:42:02Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824678812",
      "id" : 824678812,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584xJ5mc",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 85,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 14,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824678812/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824678812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824679515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824679515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"Two\" is written out in the same paragraph (instead of 2), so s/0/zero/.\r\n```suggestion\r\nthe package meets the feerate requirements. For example, the parent(s) in the package can have zero\r\n```",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:43:04Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824679515",
      "id" : 824679515,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584xJ5xb",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 86,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 15,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824679515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824679515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824681566"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824681566"
         }
      },
      "author_association" : "MEMBER",
      "body" : "L2 (layer two) isn't previously defined in this document, so perhaps something like\r\n```suggestion\r\nmeeting minimum fees on its own. This would allow applications building on Bitcoin Core to adjust their fees at broadcast time\r\n```\r\nAlso, both sentences begin with \"This...\"; it may be good to replace the first one with \"The package feerate can be thought of...\" ",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:45:33Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824681566",
      "id" : 824681566,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584xJ6Re",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 90,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 19,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824681566/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824681566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824690922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824690922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "getting stuck/pinned -> becoming stuck or pinned",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T12:58:53Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824690922",
      "id" : 824690922,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII584xJ8jq",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 91,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 20,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824690922/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824690922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824694411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824694411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "prefer active voice: s/it's important that package validation does not/package validation must not/ (ignore if you disagree)",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T13:04:14Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and\n+package validation is used for the transactions that failed. Since package feerate is only\n+calculated using transactions that are not in the mempool, this implementation detail affects the\n+outcome of package validation.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping: transaction B is a\n+\"legitimate\" fee-bump for transaction A only if B is a descendant of A and has a *higher* feerate\n+than A. We want to prevent \"parents pay for children\" behavior; fees of parents should not help\n+their children, since the parents can be mined without the child.  More generally, if transaction A\n+is not needed in order for transaction B to be mined, A's fees cannot help B. In a\n+child-with-parents package, simply excluding any parent transactions that meet feerate requirements\n+individually is sufficient to ensure this.\n+\n+*Rationale*: We must not allow a low-feerate child to prevent its parent from being accepted; fees\n+of children should not negatively impact their parents, since they are not necessary for the parents\n+to be mined. More generally, if transaction B is not needed in order for transaction A to be mined,\n+B's fees cannot harm A. In a child-with-parents package, simply validating parents individually\n+first is sufficient to ensure this.\n+\n+*Rationale*: As a principle, we want to avoid accidentally restricting policy in order to be\n+backwards-compatibile for users and applications that rely on p2p transaction relay. Concretely,\n+it's important that package validation does not prevent the acceptance of a transaction that would",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824694411",
      "id" : 824694411,
      "line" : 117,
      "node_id" : "PRRC_kwDOABII584xJ9aL",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 117,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 46,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824694411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824694411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824702177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824702177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "22bf054\r\n- prefer absolute references to cs_main in new code\r\n- use `size_t` type for `size()` (or `auto`), same for line 216\r\n```diff\r\n-    LOCK(cs_main);\r\n-    unsigned int expected_pool_size = m_node.mempool->size();\r\n+    LOCK(::cs_main);\r\n+    size_t expected_pool_size{m_node.mempool->size()};\r\n```\r\n",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T13:15:17Z",
      "diff_hunk" : "@@ -568,6 +587,205 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824702177",
      "id" : 824702177,
      "line" : 604,
      "node_id" : "PRRC_kwDOABII584xJ_Th",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 604,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 132,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824702177/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824702177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824704838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824704838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "22bf054eee6bfc7148bb40150d648b0dcf0db44b nit, this is the only non-const `expected_feerate` in the test and it can be const too\r\n```suggestion\r\n        const CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\r\n```",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T13:18:58Z",
      "diff_hunk" : "@@ -568,6 +587,205 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824704838",
      "id" : 824704838,
      "line" : 593,
      "node_id" : "PRRC_kwDOABII584xJ_9G",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 593,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 121,
      "pull_request_review_id" : 907163525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824704838/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824704838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824734826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824734826"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll change to \"contracting applications.\" I specifically mean contracting applications that negotiate fees + sign with counterparties long before broadcast time",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-11T13:56:49Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r824734826",
      "id" : 824734826,
      "in_reply_to_id" : 824681566,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584xKHRq",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 90,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 19,
      "pull_request_review_id" : 907248070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824734826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824734826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r832772623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832772623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nImplementation Note: Transactions within a package are always feerate-validated individually first, and\r\n```\r\n\"feerate-validated\" may prevent readers from thinking you're referring to transaction consensus validation.",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-23T02:01:25Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r832772623",
      "id" : 832772623,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII584xoxoP",
      "original_commit_id" : "7e758fa192eba3458c92724559567b7b4c7a35a6",
      "original_line" : 96,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 25,
      "pull_request_review_id" : 918083714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832772623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-23T03:39:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832772623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r832775358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832775358"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"... used for the transactions that failed.\" This is a bit vague for me, and maybe that's okay since this is a high-level document. But let me try to describe what this actually means at a high level (without looking at the code), Pythonically:\r\n```python\r\n# Create a new package (t-sorted list of transactions) from the incoming package\r\nnew_package = []\r\nfor tx in package:\r\n    if has_parent(new_package, tx) or not feerate_okay(tx):\r\n        new_package.append(tx)\r\nfee_validate(new_package)\r\n```\r\nConsider the most trivial (and useful) case, child pays for parent. Here, parent A has a low feerate, and its child B has a high feerate, `package` is `[A, B]`. The first loop iteration looks at A, and asks: does A have a parent (within `new_package`)? No -- `new_package` is empty. So then we check A's feerate. It's not okay, so we add A to `new_package`. The second loop iteration considers B. Does it have a parent in `new_package`? Yes, so add it to `new_package` (no need to check its feerate). So `new_package` ends up `[A, B]`, so we evaluate that and it likely passes.\r\n\r\nLet's consider the reverse case, parent pays for child. Here, parent A has a high feerate, and B has a low feerate. Again, `package` is `[A, B]`. The first loop iteration finds that A does not have a parent (in `new_package`), so we check A's feerate. It is okay, so we _don't_ add A to the result list. The second loop checks B; it does not have a parent in `new_package`, so we check its feerate. It's not okay, so we add it to `new_package`, which becomes `[B]`. We check this package feerate and it fails. So parent A was not able to pay for child B, which is what we want.\r\n\r\nNote that any `package` transactions that are _not_ in `new_package` (in this second example, A) have passed their individual feerate test, so there is no need to check them again.\r\n\r\nI think this algorithm generalizes to an arbitrary package DAG but I'm not completely sure.",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-23T02:08:14Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and\n+package validation is used for the transactions that failed. Since package feerate is only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r832775358",
      "id" : 832775358,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII584xoyS-",
      "original_commit_id" : "7e758fa192eba3458c92724559567b7b4c7a35a6",
      "original_line" : 97,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 26,
      "pull_request_review_id" : 918083714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832775358/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-23T03:39:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/832775358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r833290916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833290916"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't agree; we *are* validating the transaction fully. I don't think \"feerate-validate\" is a commonly used term so could be even more confusing.",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-23T13:49:41Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r833290916",
      "id" : 833290916,
      "in_reply_to_id" : 832772623,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII584xqwKk",
      "original_commit_id" : "7e758fa192eba3458c92724559567b7b4c7a35a6",
      "original_line" : 96,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 25,
      "pull_request_review_id" : 918810550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833290916/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-23T13:49:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833290916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r833309768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833309768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Your description is correct at a high level, and is what I intend to communicate to the reader. To be nitpicky, we'll add transactions to the package for *any* policy reason, not just feerate, since `TxValidationResult` doesn't specify whether it's a fee-related or other policy issue.\r\n\r\n> I think this algorithm generalizes to an arbitrary package DAG but I'm not completely sure.\r\n\r\nWhile I wish this were true, there are cases where it doesn't work - see [example Q2](https://gist.github.com/glozow/dc4e9d5c5b14ade7cdfac40f43adb18a#always-try-individual-submission-first) in the package mempool accept gist. This is why the package-child-with-unconfirmed-parents restriction is so important. ",
      "commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "created_at" : "2022-03-23T14:05:45Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and\n+package validation is used for the transactions that failed. Since package feerate is only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r833309768",
      "id" : 833309768,
      "in_reply_to_id" : 832775358,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII584xq0xI",
      "original_commit_id" : "7e758fa192eba3458c92724559567b7b4c7a35a6",
      "original_line" : 97,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 26,
      "pull_request_review_id" : 918836947,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833309768/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-23T14:19:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833309768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836867916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836867916"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, preferable?\r\n```\r\nif (submission_result.m_state.IsValid()) assert(submission_result.m_package_feerate.has_value());\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-28T21:31:55Z",
      "diff_hunk" : "@@ -1380,18 +1394,31 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);\n+            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                // The transaction succeeded on its own and is now in the mempool. Don't include it\n+                // in package validation, because its fees should only be \"used\" once.\n+                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n+                results.emplace(wtxid, single_res);\n+            } else {\n+                txns_new.push_back(tx);\n+            }\n         }\n     }\n \n     // Nothing to do if the entire package has already been submitted.\n-    if (txns_new.empty()) return PackageMempoolAcceptResult(package_state, std::move(results));\n+    if (txns_new.empty()) {\n+        // No package feerate when no package validation was done.\n+        return PackageMempoolAcceptResult(package_state, std::move(results));\n+    }\n     // Validate the (deduplicated) transactions as a package.\n     auto submission_result = AcceptMultipleTransactions(txns_new, args);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results) {\n         submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res);\n     }\n+    if (submission_result.m_state.IsValid()) assert(submission_result.m_package_feerate != std::nullopt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836867916",
      "id" : 836867916,
      "line" : 1408,
      "node_id" : "PRRC_kwDOABII584x4ZdM",
      "original_commit_id" : "aaa60951caafc1af3876bcd253aeb411c3a36423",
      "original_line" : 1408,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 188,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836867916/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836867916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836869087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836869087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "22bf054eee6bfc7148bb40150d648b0dcf0db44b nit, and similar elsewhere\r\n```suggestion\r\n    BOOST_CHECK(result_parent_child.m_package_feerate.has_value());\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-28T21:33:43Z",
      "diff_hunk" : "@@ -98,7 +98,9 @@ BOOST_FIXTURE_TEST_CASE(package_validation_tests, TestChain100Setup)\n     BOOST_CHECK(it_child != result_parent_child.m_tx_results.end());\n     BOOST_CHECK_MESSAGE(it_child->second.m_state.IsValid(),\n                         \"Package validation unexpectedly failed: \" << it_child->second.m_state.GetRejectReason());\n-\n+    BOOST_CHECK(result_parent_child.m_package_feerate != std::nullopt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836869087",
      "id" : 836869087,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x4Zvf",
      "original_commit_id" : "22bf054eee6bfc7148bb40150d648b0dcf0db44b",
      "original_line" : 101,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836869087/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836869087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836874350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836874350"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    // zero-fee parent and fee=1 child package\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-28T21:42:11Z",
      "diff_hunk" : "@@ -568,6 +587,205 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836874350",
      "id" : 836874350,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x4bBu",
      "original_commit_id" : "22bf054eee6bfc7148bb40150d648b0dcf0db44b",
      "original_line" : 612,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836874350/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/836874350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837728551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837728551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n[`prioritisetransaction`](https://developer.bitcoin.org/reference/rpc/prioritisetransaction.html)) divided by the total virtual size of all transactions in the package.\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-29T17:26:03Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837728551",
      "id" : 837728551,
      "line" : 79,
      "node_id" : "PRRC_kwDOABII584x7rkn",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 79,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 8,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837728551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837728551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837764524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837764524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should we check the feerate for this package? I think this is the only one missing in this file.\r\n```\r\nBOOST_CHECK(submit_witness2.m_package_feerate == std::nullopt);\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-29T18:06:17Z",
      "diff_hunk" : "@@ -399,6 +411,9 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n \n+        // Child2 would have been validated individually.\n+        BOOST_CHECK(submit_witness1.m_package_feerate == std::nullopt);\n+\n         const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n                                                        {ptx_parent, ptx_child2}, /*test_accept=*/ false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837764524",
      "id" : 837764524,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584x70Ws",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 418,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837764524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837764524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837796811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837796811"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, maybe just (I'm more old-school) ... but it does lose the `const`, and I don't know if our style guide allows one-line loops (but it should!)\r\n```suggestion\r\n    int64_t m_total_vsize{0};\r\n    for (const auto& ws : workspaces) m_total_vsize += ws.m_vsize;\r\n```",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-03-29T18:43:20Z",
      "diff_hunk" : "@@ -1231,20 +1254,35 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    const auto m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), int64_t{0},\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r837796811",
      "id" : 837796811,
      "line" : 1235,
      "node_id" : "PRRC_kwDOABII584x78PL",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 1235,
      "original_position" : 89,
      "original_start_line" : 1260,
      "path" : "src/validation.cpp",
      "position" : 89,
      "pull_request_review_id" : 923777051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837796811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1234,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-29T19:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/837796811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-01T08:32:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1085605414",
      "id" : 1085605414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585AtQYm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1085605414/reactions"
      },
      "updated_at" : "2022-04-01T08:32:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1085605414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840810355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840810355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I disagree. I prefer being able to assign this to a const. I don't see anything wrong with using `std::accumulate`.",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:04:50Z",
      "diff_hunk" : "@@ -1231,20 +1254,35 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    const auto m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), int64_t{0},\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840810355",
      "id" : 840810355,
      "in_reply_to_id" : 837796811,
      "line" : 1235,
      "node_id" : "PRRC_kwDOABII584yHb9z",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 1235,
      "original_position" : 89,
      "original_start_line" : 1260,
      "path" : "src/validation.cpp",
      "position" : 89,
      "pull_request_review_id" : 929264730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840810355/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1234,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-01T18:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840810355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and addressed @jonatack and @LarryRuane's comments",
      "created_at" : "2022-04-01T18:36:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1086215631",
      "id" : 1086215631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585AvlXP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086215631/reactions"
      },
      "updated_at" : "2022-04-01T18:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086215631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832492"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:37:07Z",
      "diff_hunk" : "@@ -399,6 +411,9 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n \n+        // Child2 would have been validated individually.\n+        BOOST_CHECK(submit_witness1.m_package_feerate == std::nullopt);\n+\n         const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n                                                        {ptx_parent, ptx_child2}, /*test_accept=*/ false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832492",
      "id" : 840832492,
      "in_reply_to_id" : 837764524,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yHhXs",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 418,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 929295535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832492/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-01T18:37:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed all of them to `has_value()`",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:37:31Z",
      "diff_hunk" : "@@ -1380,18 +1394,31 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);\n+            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                // The transaction succeeded on its own and is now in the mempool. Don't include it\n+                // in package validation, because its fees should only be \"used\" once.\n+                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n+                results.emplace(wtxid, single_res);\n+            } else {\n+                txns_new.push_back(tx);\n+            }\n         }\n     }\n \n     // Nothing to do if the entire package has already been submitted.\n-    if (txns_new.empty()) return PackageMempoolAcceptResult(package_state, std::move(results));\n+    if (txns_new.empty()) {\n+        // No package feerate when no package validation was done.\n+        return PackageMempoolAcceptResult(package_state, std::move(results));\n+    }\n     // Validate the (deduplicated) transactions as a package.\n     auto submission_result = AcceptMultipleTransactions(txns_new, args);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results) {\n         submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res);\n     }\n+    if (submission_result.m_state.IsValid()) assert(submission_result.m_package_feerate != std::nullopt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832748",
      "id" : 840832748,
      "in_reply_to_id" : 836867916,
      "line" : 1408,
      "node_id" : "PRRC_kwDOABII584yHhbs",
      "original_commit_id" : "aaa60951caafc1af3876bcd253aeb411c3a36423",
      "original_line" : 1408,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 188,
      "pull_request_review_id" : 929295923,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-01T18:37:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:37:46Z",
      "diff_hunk" : "@@ -568,6 +587,205 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832906",
      "id" : 840832906,
      "in_reply_to_id" : 824704838,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yHheK",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 593,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 929296148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832906/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-01T18:37:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, noted",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:37:55Z",
      "diff_hunk" : "@@ -568,6 +587,205 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840832990",
      "id" : 840832990,
      "in_reply_to_id" : 824702177,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yHhfe",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 604,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 929296284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832990/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-01T18:37:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840832990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840833129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840833129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Took all the doc comments ð ",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-01T18:38:08Z",
      "diff_hunk" : "@@ -72,3 +72,48 @@ test accepts):\n      a competing package or transaction with a mutated witness, even though the two\n      same-txid-different-witness transactions are conflicting and cannot replace each other, the\n      honest package should still be considered for acceptance.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees (base fees + any fee delta from\n+`prioritisetransaction`) divided by the total virtual size of all transactions in the package.\n+If any transactions in the package are already in the mempool, they are not submitted again\n+(\"deduplicated\"), and thus excluded from this calculation.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+Implementation Note: Transactions within a package are always validated individually first, and\n+package validation is used for the transactions that failed. Since package feerate is only\n+calculated using transactions that are not in the mempool, this implementation detail affects the\n+outcome of package validation.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping: transaction B is a\n+\"legitimate\" fee-bump for transaction A only if B is a descendant of A and has a *higher* feerate\n+than A. We want to prevent \"parents pay for children\" behavior; fees of parents should not help\n+their children, since the parents can be mined without the child.  More generally, if transaction A\n+is not needed in order for transaction B to be mined, A's fees cannot help B. In a\n+child-with-parents package, simply excluding any parent transactions that meet feerate requirements\n+individually is sufficient to ensure this.\n+\n+*Rationale*: We must not allow a low-feerate child to prevent its parent from being accepted; fees\n+of children should not negatively impact their parents, since they are not necessary for the parents\n+to be mined. More generally, if transaction B is not needed in order for transaction A to be mined,\n+B's fees cannot harm A. In a child-with-parents package, simply validating parents individually\n+first is sufficient to ensure this.\n+\n+*Rationale*: As a principle, we want to avoid accidentally restricting policy in order to be\n+backwards-compatibile for users and applications that rely on p2p transaction relay. Concretely,\n+it's important that package validation does not prevent the acceptance of a transaction that would",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r840833129",
      "id" : 840833129,
      "in_reply_to_id" : 824694411,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yHhhp",
      "original_commit_id" : "dc0b2d3fa375ec0641bd2075a99be0383d1129ee",
      "original_line" : 117,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : null,
      "pull_request_review_id" : 929296465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840833129/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-01T18:38:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840833129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review ACK a7017507\r\n\r\nModifications since last review are extending `ATMPArgs` private ctor extension with `m_package_feerates` and changes in the unit tests.",
      "created_at" : "2022-04-03T17:27:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1086913299",
      "id" : 1086913299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585AyPsT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086913299/reactions"
      },
      "updated_at" : "2022-04-03T17:28:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086913299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @darosior @t-bast ",
      "created_at" : "2022-04-03T18:40:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1086925127",
      "id" : 1086925127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585AySlH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086925127/reactions"
      },
      "updated_at" : "2022-04-03T18:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086925127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Out of scope for now but dropped a message on the gist itself https://gist.github.com/glozow/dc4e9d5c5b14ade7cdfac40f43adb18a\r\n\r\nI see no reason for this(possibly wrongly perceived) shortfall to stop incremental improvements",
      "created_at" : "2022-04-04T15:05:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1087673261",
      "id" : 1087673261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A1JOt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087673261/reactions"
      },
      "updated_at" : "2022-04-04T15:05:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087673261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r841866469"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841866469"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you touch up, this one still could be changed (the test calls have been changed).",
      "commit_id" : "157a7bb547abc90a8bbb595cdee8eaac9c3300c9",
      "created_at" : "2022-04-04T15:22:06Z",
      "diff_hunk" : "@@ -1380,18 +1394,31 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             results.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n             // Transaction does not already exist in the mempool.\n-            txns_new.push_back(tx);\n+            // Try submitting the transaction on its own.\n+            const auto single_res = AcceptSingleTransaction(tx, single_args);\n+            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                // The transaction succeeded on its own and is now in the mempool. Don't include it\n+                // in package validation, because its fees should only be \"used\" once.\n+                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n+                results.emplace(wtxid, single_res);\n+            } else {\n+                txns_new.push_back(tx);\n+            }\n         }\n     }\n \n     // Nothing to do if the entire package has already been submitted.\n-    if (txns_new.empty()) return PackageMempoolAcceptResult(package_state, std::move(results));\n+    if (txns_new.empty()) {\n+        // No package feerate when no package validation was done.\n+        return PackageMempoolAcceptResult(package_state, std::move(results));\n+    }\n     // Validate the (deduplicated) transactions as a package.\n     auto submission_result = AcceptMultipleTransactions(txns_new, args);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results) {\n         submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res);\n     }\n+    if (submission_result.m_state.IsValid()) assert(submission_result.m_package_feerate != std::nullopt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r841866469",
      "id" : 841866469,
      "in_reply_to_id" : 836867916,
      "line" : 1408,
      "node_id" : "PRRC_kwDOABII584yLdzl",
      "original_commit_id" : "aaa60951caafc1af3876bcd253aeb411c3a36423",
      "original_line" : 1408,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 188,
      "pull_request_review_id" : 930562955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841866469/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-04T15:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841866469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Out of scope for now but dropped a message on the gist itself\n\nWill respond on the gist. I don't think it's relevant to packages actually.",
      "created_at" : "2022-04-04T15:30:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1087704320",
      "id" : 1087704320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A1Q0A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087704320/reactions"
      },
      "updated_at" : "2022-04-04T15:30:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087704320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Rebased and addressed @jonatack and @LarryRuane's comments\r\n\r\nThanks, suggestion for future, make the rebase and address-review-comments two separate force-pushes for easier review.",
      "created_at" : "2022-04-04T15:56:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1087731272",
      "id" : 1087731272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A1XZI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087731272/reactions"
      },
      "updated_at" : "2022-04-04T15:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087731272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r842038926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842038926"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As fas as I can see, the main difference to the `SingleAccept` parameters is that `m_allow_bip125_replacement` is false here, because it is taken from the `PackageTestAccept` or `PackageChildWithParents` parameters. \r\n\r\nIf a transaction is no longer subject to package validation because it is valid on its own, is it still necessary to disallow RBF? This seems to slightly conflict with the philosophy that \"package validation should not prevent the acceptance of a transaction that would otherwise be policy-valid on its own\".",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-04T18:43:45Z",
      "diff_hunk" : "@@ -508,6 +508,19 @@ class MemPoolAccept\n             };\n         }\n \n+        /** Parameters for a single transaction within a package. */\n+        static ATMPArgs SingleInPackageAccept(const ATMPArgs& package_args) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r842038926",
      "id" : 842038926,
      "line" : 512,
      "node_id" : "PRRC_kwDOABII584yMH6O",
      "original_commit_id" : "d347aca4446a9f4ae2d717c0adadf6aaf3bd6875",
      "original_line" : 512,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 930808243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842038926/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-04T20:50:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842038926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r842048301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842048301"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we currently can't call `AcceptMultipleTransactions()` and get to this point without having `m_package_feerates` set (at least no test breaks if I add an assert for it) - is there a future use case for that or should there be an assert or Assume?",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-04T18:56:11Z",
      "diff_hunk" : "@@ -1205,20 +1215,35 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    const auto m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), int64_t{0},\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    const auto m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), CAmount{0},\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r842048301",
      "id" : 842048301,
      "line" : 1240,
      "node_id" : "PRRC_kwDOABII584yMKMt",
      "original_commit_id" : "9f9038dc9545cc7fdbc7059b12e0402ff02746ad",
      "original_line" : 1240,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 94,
      "pull_request_review_id" : 930808243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842048301/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-04T20:50:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842048301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Code Review ACK https://github.com/bitcoin/bitcoin/commit/a70175076a5f85391a089607f6a19a58f173d4a1\r\n\r\n@ariard seems you ACKed an old commit? A rebase + small changes since then, should be pretty easy to review `git range-diff a701750...157a7bb`",
      "created_at" : "2022-04-04T19:56:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1087953513",
      "id" : 1087953513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A2Npp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087953513/reactions"
      },
      "updated_at" : "2022-04-04T19:56:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087953513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843315053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843315053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, good point. I don't have a good reason as to why BIP125 should ever be disallowed here. Will change it to true for `SingleInPackageAccept`",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-05T22:33:57Z",
      "diff_hunk" : "@@ -508,6 +508,19 @@ class MemPoolAccept\n             };\n         }\n \n+        /** Parameters for a single transaction within a package. */\n+        static ATMPArgs SingleInPackageAccept(const ATMPArgs& package_args) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843315053",
      "id" : 843315053,
      "in_reply_to_id" : 842038926,
      "line" : 512,
      "node_id" : "PRRC_kwDOABII584yQ_dt",
      "original_commit_id" : "d347aca4446a9f4ae2d717c0adadf6aaf3bd6875",
      "original_line" : 512,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 932588000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843315053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T22:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843315053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843317502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843317502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, we always have `m_package_feerates` on when we call `AcceptMultipleTransactions`. I imagined turning it off for `testmempoolaccept` with multiple transactions ~but didn't actually come up with a good reason to do that. I think i will delete this condition from here~\r\n\r\nEDIT: I now remember why I wanted to turn off package feerates for testmempoolaccept; it's because those are not restricted by child-with-parents. Sorry for the confusion. Yes, this should be here; the correct fix was to set `m_package_feerates=false` for `ATMPArgs::PackageTestAccept`.",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-05T22:39:18Z",
      "diff_hunk" : "@@ -1205,20 +1215,35 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    const auto m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), int64_t{0},\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    const auto m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), CAmount{0},\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843317502",
      "id" : 843317502,
      "in_reply_to_id" : 842048301,
      "line" : 1240,
      "node_id" : "PRRC_kwDOABII584yRAD-",
      "original_commit_id" : "9f9038dc9545cc7fdbc7059b12e0402ff02746ad",
      "original_line" : 1240,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 94,
      "pull_request_review_id" : 932591096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843317502/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T22:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843317502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In response to @mzumsande's (very good) questions, I have made these 2 changes:\r\n\r\n`ATMPArgs::PackageTestAccept.m_package_feerates=false` because there is no child-with-parents restriction (it accepts completely independent transactions), which means package feerate isn't very meaningful and we shouldn't use it in `CheckFeeRate()`.\r\n\r\n`ATMPArgs::SingleInPackageAccept.m_allow_bip125_replacement=true` because RBF should be allowed for the individual transactions.\r\n\r\nAlso addressed @LarryRuane's https://github.com/bitcoin/bitcoin/pull/24152#discussion_r836867916 which I forgot to address last time.",
      "created_at" : "2022-04-05T22:58:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1089490321",
      "id" : 1089490321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A8E2R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1089490321/reactions"
      },
      "updated_at" : "2022-04-05T22:58:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1089490321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843333003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843333003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed - it was a mistake to make `ATMPArgs::PackageTestAccept.m_package_feerates=true` in the original code",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-05T22:59:26Z",
      "diff_hunk" : "@@ -1205,20 +1215,35 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    const auto m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), int64_t{0},\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    const auto m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), CAmount{0},\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843333003",
      "id" : 843333003,
      "in_reply_to_id" : 842048301,
      "line" : 1240,
      "node_id" : "PRRC_kwDOABII584yRD2L",
      "original_commit_id" : "9f9038dc9545cc7fdbc7059b12e0402ff02746ad",
      "original_line" : 1240,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 94,
      "pull_request_review_id" : 932620126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843333003/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T22:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843333003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843352843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843352843"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If the idea is that everything should be just as if this was a single transaction, why introduce a separate `SingleInPackageAccept` function at all, instead of just creating a `SingleAccept()` ATMPArgs set?",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-05T23:50:50Z",
      "diff_hunk" : "@@ -508,6 +508,19 @@ class MemPoolAccept\n             };\n         }\n \n+        /** Parameters for a single transaction within a package. */\n+        static ATMPArgs SingleInPackageAccept(const ATMPArgs& package_args) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r843352843",
      "id" : 843352843,
      "in_reply_to_id" : 842038926,
      "line" : 512,
      "node_id" : "PRRC_kwDOABII584yRIsL",
      "original_commit_id" : "d347aca4446a9f4ae2d717c0adadf6aaf3bd6875",
      "original_line" : 512,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 932645723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843352843/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T23:50:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/843352843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "changes are the aforementioned `ATMPArgs::PackageTestAccept.m_package_feerates=false` \r\n, `ATMPArgs::SingleInPackageAccept.m_allow_bip125_replacement=true`, and the has_value change.\r\n\r\nreACK https://github.com/bitcoin/bitcoin/pull/24152/commits/9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-06T15:03:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1090376715",
      "id" : 1090376715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585A_dQL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090376715/reactions"
      },
      "updated_at" : "2022-04-06T15:03:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090376715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r844252288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844252288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I just figured it would be safer to have a constructor converting package-to-single ATMPArgs. There also is a difference (albeit small) - `SingleInPackageAccept` should never have `bypass_limits=true`, so I don't want the caller to have the option to set it.",
      "commit_id" : "9bebf35e269b2a918df27708565ecd0c5bd3f116",
      "created_at" : "2022-04-06T18:20:30Z",
      "diff_hunk" : "@@ -508,6 +508,19 @@ class MemPoolAccept\n             };\n         }\n \n+        /** Parameters for a single transaction within a package. */\n+        static ATMPArgs SingleInPackageAccept(const ATMPArgs& package_args) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r844252288",
      "id" : 844252288,
      "in_reply_to_id" : 842038926,
      "line" : 512,
      "node_id" : "PRRC_kwDOABII584yUkSA",
      "original_commit_id" : "d347aca4446a9f4ae2d717c0adadf6aaf3bd6875",
      "original_line" : 512,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 933914912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844252288/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-06T18:20:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844252288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 9bebf35e269b2a918df27708565ecd0c5bd3f116 \r\nI am not extremely experienced with this area of code, but all changes make sense to me.\r\nI verified via git range-diff that the only changes compared to my review from yesterday are those explained above (ATMPArgs and std::optional changes).",
      "created_at" : "2022-04-06T23:39:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1090928415",
      "id" : 1090928415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585BBj8f",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090928415/reactions"
      },
      "updated_at" : "2022-04-06T23:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1090928415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post-Merge Review ACK 9bebf35e\r\n\r\nChanges since last ACK are turning `m_packages_feerates` to `false` for `PackageTestAccept` and authorizing bip 125 replacement for `SingleInPackageAccept`. ",
      "created_at" : "2022-04-12T18:39:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1097071793",
      "id" : 1097071793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII585BY_yx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097071793/reactions"
      },
      "updated_at" : "2022-04-12T18:39:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097071793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
