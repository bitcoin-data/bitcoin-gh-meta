[
   {
      "author_association" : "MEMBER",
      "body" : "Restarted the ARM CI, which failed due to an intermittent download issue.\r\n[Failure in the fuzzer ci](https://github.com/bitcoin/bitcoin/pull/24106/checks?check_run_id=4877279481):\r\n```bash\r\nINFO: Seed: 4040717080\r\nINFO: Loaded 1 modules   (722258 inline 8-bit counters): 722258 [0x55ae9f2bf690, 0x55ae9f36fbe2), \r\nINFO: Loaded 1 PC tables (722258 PCs): 722258 [0x55ae9f36fbe8,0x55ae9fe75108), \r\nINFO:     4124 files found in /tmp/cirrus-ci-build/ci/scratch/qa-assets/fuzz_seed_corpus/script\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 4124 min: 1b max: 3146072b total: 220237367b rss: 162Mb\r\nfuzz: test/fuzz/script.cpp:62: void script_fuzz_target(FuzzBufferType): Assertion `which_type == TxoutType::NONSTANDARD || which_type == TxoutType::NULL_DATA || which_type == TxoutType::MULTISIG' failed.\r\n==19805== ERROR: libFuzzer: deadly signal\r\n```",
      "created_at" : "2022-01-20T07:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017193125",
      "id" : 1017193125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848oSKl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017193125/reactions"
      },
      "updated_at" : "2022-01-20T07:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017193125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Restarted the ARM CI, which failed due to an intermittent download issue. [Failure in the fuzzer ci](https://github.com/bitcoin/bitcoin/pull/24106/checks?check_run_id=4877279481):\r\n> \r\n> ```shell\r\n> INFO: Seed: 4040717080\r\n> INFO: Loaded 1 modules   (722258 inline 8-bit counters): 722258 [0x55ae9f2bf690, 0x55ae9f36fbe2), \r\n> INFO: Loaded 1 PC tables (722258 PCs): 722258 [0x55ae9f36fbe8,0x55ae9fe75108), \r\n> INFO:     4124 files found in /tmp/cirrus-ci-build/ci/scratch/qa-assets/fuzz_seed_corpus/script\r\n> INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\n> INFO: seed corpus: files: 4124 min: 1b max: 3146072b total: 220237367b rss: 162Mb\r\n> fuzz: test/fuzz/script.cpp:62: void script_fuzz_target(FuzzBufferType): Assertion `which_type == TxoutType::NONSTANDARD || which_type == TxoutType::NULL_DATA || which_type == TxoutType::MULTISIG' failed.\r\n> ==19805== ERROR: libFuzzer: deadly signal\r\n> ```\r\n\r\nThanks, the fuzzing issue should be fixed with the latest forced-push.",
      "created_at" : "2022-01-20T08:51:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017246162",
      "id" : 1017246162,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848ofHS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017246162/reactions"
      },
      "updated_at" : "2022-01-20T08:51:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017246162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK as-is, I'm afraid.\n\nThis new policy can be used to hurt batch withdrawals. Imagine a user withdrawing funds from an exchange, specifying an bech32m address for a point not on the curve. With this policy, the entire transaction will be rejected, including any other addresses the other outputs of the transactions were trying to pay.\n\nIf we really want to push for this, I think far more is necessary:\n* Discuss a change like this on the mailinglist and with industry.\n* Start by rejecting such outputs in our address parser.\n* Get other address parsers (including open source libraries, and potential closed-source ones) to do the same.\n* Finally, decide to introduce a policy to actually mark these nonstandard, perhaps with a delay so other software can start doing this consistently.\n\nAnything else, I'm afraid, will hurt bech32m adoption even more, as reports of stuck withdrawals may cause organizations to choose to not adopt it at all.",
      "created_at" : "2022-01-20T13:20:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017498437",
      "id" : 1017498437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848pctF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017498437/reactions"
      },
      "updated_at" : "2022-01-20T13:20:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017498437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This type of protection is something we've discussed many times in the past in various forms, and we've generally avoided adding footgun protections like this, with the reasoning being that the set of things that a transaction creator might do to burn funds is simply too great for this approach to make sense.  \r\n\r\nMoreover, there's an additional cost to these protections, which is that users participating in batch payment protocols (perhaps a coinjoin, or maybe an exchange withdrawal) can cause operational problems for others if transactions which would have been relayed in the past would no longer be relayed -- eg if one user supplies an address to a batched-output transaction process, and we then make such an address policy-invalid, then that might cause headaches for everyone else, as the resulting transaction relays less well and/or fails to be mined.  To avoid it, the transaction creator/process would need to be made aware of the new restriction, too. \r\n\r\nI think the principle we've settled on historically is that we'd like to standardize the set of checks that transaction creators might run on a given address to precisely the things that are defined in the various BIPs that define what a valid P2PKH, P2SH, or bech32(m) address is, so that there is certainty on the network around what addresses people can be using, and leave it to the users creating addresses to be creating valid ones.",
      "created_at" : "2022-01-20T13:22:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017500023",
      "id" : 1017500023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848pdF3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017500023/reactions"
      },
      "updated_at" : "2022-01-20T13:22:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017500023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For reference, https://github.com/bitcoin/bitcoin/pull/15846 was the previous discussion, which also includes a link to the IRC discussion.\r\n\r\nMaybe it could make sense to add a line or two as documentation?\r\n\r\nEdit: And a fuzz test:\r\n\r\n\r\n```diff\r\ndiff --git a/src/test/fuzz/script.cpp b/src/test/fuzz/script.cpp\r\nindex eb170aab76..8524822f96 100644\r\n--- a/src/test/fuzz/script.cpp\r\n+++ b/src/test/fuzz/script.cpp\r\n@@ -55,12 +55,19 @@ FUZZ_TARGET_INIT(script, initialize_script)\r\n     }\r\n \r\n     TxoutType which_type;\r\n-    bool is_standard_ret = IsStandard(script, which_type);\r\n+    const bool is_standard_ret{IsStandard(script, which_type)};\r\n     if (!is_standard_ret) {\r\n         assert(which_type == TxoutType::NONSTANDARD ||\r\n                which_type == TxoutType::NULL_DATA ||\r\n                which_type == TxoutType::MULTISIG);\r\n     }\r\n+    {\r\n+        int v;\r\n+        std::vector<uint8_t> p;\r\n+        if (script.IsWitnessProgram(v, p)) {\r\n+            assert(is_standard_ret);\r\n+        }\r\n+    }\r\n     if (which_type == TxoutType::NONSTANDARD) {\r\n         assert(!is_standard_ret);\r\n     }\r\n",
      "created_at" : "2022-01-20T13:42:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017516859",
      "id" : 1017516859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848phM7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017516859/reactions"
      },
      "updated_at" : "2022-01-20T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017516859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "If such a policy was implemented, would the CPU time required to verify all segwit v1 pubkeys be negligible? What ballpark are we talking about?",
      "created_at" : "2022-01-20T15:37:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017634021",
      "id" : 1017634021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848p9zl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017634021/reactions"
      },
      "updated_at" : "2022-01-20T15:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017634021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530071?v=4",
         "events_url" : "https://api.github.com/users/kallerosenbaum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallerosenbaum/followers",
         "following_url" : "https://api.github.com/users/kallerosenbaum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallerosenbaum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallerosenbaum",
         "id" : 1530071,
         "login" : "kallerosenbaum",
         "node_id" : "MDQ6VXNlcjE1MzAwNzE=",
         "organizations_url" : "https://api.github.com/users/kallerosenbaum/orgs",
         "received_events_url" : "https://api.github.com/users/kallerosenbaum/received_events",
         "repos_url" : "https://api.github.com/users/kallerosenbaum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallerosenbaum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallerosenbaum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallerosenbaum"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallerosenbaum A benchmark would be useful, but my ballpark estimate would be in the order of 3+ microseconds on modern desktop x86_64 CPUs. The current implementation of XOnlyPubkey actually fully decompresses the public key, which isn't necessary. A more optimized implementation (using code already available in libsecp, but not exposed through its API) could probably speed it up by a factor 2x-3x still.\r\n\r\nThat said, I still think this is a bad idea to introduce as a policy. It may make sense in address decoding though (just as a warning), but there performance isn't that critical.",
      "created_at" : "2022-01-20T15:44:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017640301",
      "id" : 1017640301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848p_Vt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017640301/reactions"
      },
      "updated_at" : "2022-01-21T15:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017640301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa thanks. 100,000 segwit v1 outputs per hour would cost at least in the order of 0.1s CPU per hour, then, given your mentioned optimizations. (Note, I'm not suggesting this policy is a good idea)",
      "created_at" : "2022-01-20T15:57:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017653707",
      "id" : 1017653707,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848qCnL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017653707/reactions"
      },
      "updated_at" : "2022-01-20T15:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017653707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530071?v=4",
         "events_url" : "https://api.github.com/users/kallerosenbaum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallerosenbaum/followers",
         "following_url" : "https://api.github.com/users/kallerosenbaum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallerosenbaum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallerosenbaum",
         "id" : 1530071,
         "login" : "kallerosenbaum",
         "node_id" : "MDQ6VXNlcjE1MzAwNzE=",
         "organizations_url" : "https://api.github.com/users/kallerosenbaum/orgs",
         "received_events_url" : "https://api.github.com/users/kallerosenbaum/received_events",
         "repos_url" : "https://api.github.com/users/kallerosenbaum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallerosenbaum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallerosenbaum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallerosenbaum"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa @sdaftuar: Good points, I agree that this policy change could lead to problems in batching transactions and similar scenarios that I haven't thought about, potentially hindering adoption. My initial assumption would be that exchanges are professional enough to know what they are doing and are able to fix such a potential problem quite quickly if it comes up (rather than going a step backwards and removing bech32m support completely), but probably that is too optimistic.\r\n\r\nWhat I think _can_ be easily done though is to at least warn the user in RPCs like `verifyaddress` etc. if the address output contains an invalid x-only pubkey. This is the first address type that can be verifiably unspendable (previously it was just hashes encoded), so the concept is new, but we could introduce an `unspendable` field in the result or similar.",
      "created_at" : "2022-01-21T12:35:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018468101",
      "id" : 1018468101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848tJcF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018468101/reactions"
      },
      "updated_at" : "2022-01-21T12:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018468101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My initial assumption would be that exchanges are professional enough to know what they are doing\r\n\r\nExchanges can't even decode *valid* addresses (https://bitcoin.stackexchange.com/a/111441/3576), so expecting them to implement an ever-changing list of heuristics to detect valid addresses that hold an \"invalid\" payload seems overly optimistic.\r\n\r\n> This is the first address type that can be verifiably unspendable\r\n\r\nNo, the same is possible with v0 bech32 addresses: https://github.com/bitcoin/bitcoin/blob/e3ce019667fba2ec50a59814a26566fb67fa9125/src/script/interpreter.cpp#L1914 . Potentially others as well if you know what was wrapped into a script-hash, see #23486.\r\n\r\n> verifyaddress\r\n\r\nAdding a field to `validateaddress`/`decodescript` seems ok, understanding that this can only ever be a heuristic and not something to rely on.",
      "created_at" : "2022-01-21T13:36:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018511189",
      "id" : 1018511189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848tT9V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018511189/reactions"
      },
      "updated_at" : "2022-01-21T13:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018511189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Exchanges can't even decode valid addresses (https://bitcoin.stackexchange.com/a/111441/3576), so expecting them to implement an ever-changing list of heuristics to detect valid addresses that hold an \"invalid\" payload seems overly optimistic.\r\n\r\nI agree that my assumption w.r.t. to exchange competence is overly optimistic, though I neither think the list would be \"ever-changing\" nor that it even needs a heuristic (see last paragraph below). Addresses so far only encode either hashes or pub-keys; hashes are neutral, for pub-keys the only way to be verifiably unspendable is if they are not on the curve.\r\n\r\n> > This is the first address type that can be verifiably unspendable\r\n> \r\n> No, the same is possible with v0 bech32 addresses:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/e3ce019667fba2ec50a59814a26566fb67fa9125/src/script/interpreter.cpp#L1914\r\n\r\n\r\nFair enough, though v0 bech32 addresses with witness program sizes other than 20 or 32 bytes don't match a specific output type and thus were never treated as standard in the first place. Let me rephrase: \"This is the first address-encoded output script type that can be verifiably unspendable.\"  (I think previously this was only possible for P2PK and bare multisig, but those didn't have an address format).\r\n\r\n> Potentially others as well if you know what was wrapped into a script-hash, see #23486.\r\n\r\nYes, but that was not the point of this PR / discussion. I'm assuming that we don't know anything other than the output script.\r\n\r\n> Adding a field to `validateaddress`/`decodescript` seems ok, understanding that this can only ever be a heuristic and not something to rely on.\r\n\r\nNot sure why you would call this heuristic, as in this specific case there are no \"smart guesses\" or probabilities involved. If the x-only pubkey is not on the curve, then there is verifiably no chance this output can ever be spent. I.e. the `unspendable` result flag would only be set if we are sure about it, without any sophisticated heuristics involved. (This does of course not mean that all outputs where the `unspendable` flag is not set, _are_ spendable; there is no way to guarantee that).\r\n\r\n",
      "created_at" : "2022-01-21T15:32:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018615363",
      "id" : 1018615363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848ttZD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018615363/reactions"
      },
      "updated_at" : "2022-01-21T15:32:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018615363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry, I wrongly assumed that v0 witness programs of sizes without attached meaning are standard (`WITNESS_UNKNOWN`). In fact they are mapped to `NONSTANDARD`, and thus not relayed as you point out. However, all other witness programs, including v1 programs of sizes different than the taproot output size are treated standard (`WITNESS_UNKNOWN`). They should also be relayed, see #15846.\r\n\r\nFor those, it is impossible to run any checks because the meaning of the program payloads isn't known yet. However, as transactions with those outputs are standard today and are relayed, you may end up populating your address book with (let's say v2) addresses. This is by design, so that users of an exchange can start using a new witness version before the exchange updates its backend nodes to understand the new witness version. Once the exchange updates the backend to understand the new rules, they might find that some addresses or past payouts are unspendable. With \"heuristic\" I meant that even an exchange that always runs the latest software can not protect against this, as a user today might go ahead and request a payout to a witness program that they assume to be unspendable in the future, based on a draft of the next soft fork. Or to quote your words: \"(This does of course not mean that all outputs where the unspendable flag is not set, are spendable; there is no way to guarantee that).\"\r\n\r\n",
      "created_at" : "2022-01-21T16:23:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018660851",
      "id" : 1018660851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848t4fz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018660851/reactions"
      },
      "updated_at" : "2022-01-21T16:23:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018660851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Yeah, thought V0 witness outputs with payloads of sizes other than 20/32 are a special case, as those are even *consensus* unspendable (and thus BIP173 says to treat them as invalid). In retrospect, I think that was a mistake (the fact that they're consensus unspendable).",
      "created_at" : "2022-01-21T16:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018663849",
      "id" : 1018663849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848t5Op",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018663849/reactions"
      },
      "updated_at" : "2022-01-21T16:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018663849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke: Thanks for clarifying, that makes sense. IIUC, the conclusion of this is, all output scripts that are treated as standard by now, will/should be treated as standard forever (particularly, all v1+ segwit outputs for the future), and we only ever extend the set, but likely never reduce it?",
      "created_at" : "2022-01-21T19:35:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018802441",
      "id" : 1018802441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5848ubEJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018802441/reactions"
      },
      "updated_at" : "2022-01-21T19:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018802441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closing this PR, since this approach would introduce many potential problems (as pointed out in https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017498437, https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1017500023, https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1018660851).",
      "created_at" : "2022-01-28T14:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24106#issuecomment-1024256639",
      "id" : 1024256639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24106",
      "node_id" : "IC_kwDOABII5849DOp_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024256639/reactions"
      },
      "updated_at" : "2022-01-28T14:09:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1024256639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
