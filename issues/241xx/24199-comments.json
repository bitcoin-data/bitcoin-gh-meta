[
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK. Prefer recursive locks over fragile assumptions about the rest of the codebase.",
      "created_at" : "2022-01-31T03:58:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025353705",
      "id" : 1025353705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849Hafp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025353705/reactions"
      },
      "updated_at" : "2022-01-31T03:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025353705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept NACK. Prefer recursive locks over fragile assumptions about the rest of the codebase.\r\n\r\nMy point was that the lock isn't needed to be recursively taken during serialization since the data is copied before serialization.",
      "created_at" : "2022-01-31T07:54:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025464313",
      "id" : 1025464313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H1f5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025464313/reactions"
      },
      "updated_at" : "2022-01-31T07:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025464313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Specifically, I don't think we should need `NO_THREAD_SAFETY_ANALYSIS` - surely there's a better way?",
      "created_at" : "2022-01-31T08:16:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025479698",
      "id" : 1025479698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H5QS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025479698/reactions"
      },
      "updated_at" : "2022-01-31T08:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025479698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree but didn't see how to update the fuzz tests to do it -- happy to update with suggestions.",
      "created_at" : "2022-01-31T08:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025482990",
      "id" : 1025482990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H6Du",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025482990/reactions"
      },
      "updated_at" : "2022-01-31T08:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025482990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To me it looks like that it is not just the tests that would be problematic:\r\n\r\n1. This `CDBBatch::Write()` call would internally invoke the `CDiskBlockIndex` serialization method:\r\nhttps://github.com/bitcoin/bitcoin/blob/5e49b2a2529adc737175ebdcbf312635c52b05f6/src/txdb.cpp#L280\r\n\r\n2. This `CDBIterator::GetValue()` call would internally invoke the `CDiskBlockIndex` deserialization method:\r\nhttps://github.com/bitcoin/bitcoin/blob/5e49b2a2529adc737175ebdcbf312635c52b05f6/src/txdb.cpp#L309\r\n\r\nBoth `Write()` and `GetValue()` are too generic and we can't tag them as requiring `cs_main` or acquire `cs_main` from within them.\r\n\r\nSo, we have some methods in the (non-test) code that invoke `CDiskBlockIndex` ser/deser and can't acquire `cs_main` or require their callers to acquire it.",
      "created_at" : "2022-03-07T14:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1060769137",
      "id" : 1060769137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII584_Og1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1060769137/reactions"
      },
      "updated_at" : "2022-03-07T14:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1060769137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Drop lock and thread safety analysis in CDiskBlockIndex serialization\" (0e052eb04fa07fc4915c11faa8866ab759365dc4)\r\n\r\nIt'd be nice to do this without disabling thread safety checks. Though I can see it would require more work, and maybe better to do separately or as a followup. (IMO ideally we would have a linter to make sure every `NO_THREAD_SAFETY_ANALYSIS` usage was accompanied by a link to a github issue where we could discuss the plan to reenable thread safety checks.)\r\n\r\nIn this case it looks like most obvious way of removing `NO_THREAD_SAFETY_ANALYSIS` would be to replace public guarded variables with private unguarded variables, changing:\r\n\r\n```c++\r\npublic:\r\n    int nFile GUARDED_BY(::cs_main){0};\r\n    unsigned int nDataPos GUARDED_BY(::cs_main){0};\r\n    unsigned int nUndoPos GUARDED_BY(::cs_main){0};\r\n    uint32_t nStatus GUARDED_BY(::cs_main){0};\r\n```\r\n\r\nto:\r\n\r\n```c++\r\nprivate:\r\n    int m_file_num = 0;\r\n    unsigned int m_data_pos = 0;\r\n    unsigned int m_undo_pos = 0;\r\n    uint32_t m_status = 0;\r\n```\r\n\r\nAnd add `EXCLUSIVE_LOCKS_REQUIRED` accessor methods as needed to ensure variables are always accessed with the right locks held.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-08T18:16:41Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074",
      "id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584w_dc6",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 903405458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-08T18:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822371673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, how would that be different than the current code?\r\n\r\ncurrent: `LOCK(cs_main); read nStatus`\r\nproposed: `LOCK(cs_main); call GetNStatus()`\r\n\r\nand the ser/deser methods would still need to acquire `cs_main`, no?\r\n\r\nThe access to all `nStatus`/`nDataPos`/`nUndoPos` from within ser/deser has to happen in one atomic block. I mean that this is not ok:\r\n```\r\nlock\r\nread nStatus\r\nunlock\r\nlock\r\nread nDataPos\r\nunlock\r\n```\r\nit has to be\r\n```\r\nlock\r\nread nStatus\r\nread nDataPos\r\nunlock\r\n```",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T07:54:18Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822371673",
      "id" : 822371673,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBGVZ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 903977548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T07:54:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822390873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All `CDiskBlockIndex` are short-lived copied data on the stack, shared with no other thread, so they don't need any locks. If there is a missing lock then it can at most be missed while copying the data.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T08:20:54Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822390873",
      "id" : 822390873,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBLBZ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904004358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T08:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822470287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky, now I see your point - to change the members of the parent class `CBlockIndex` to be not-tagged as guarded by `cs_main` and change them to private, in the hopes that the methods that touch them respect the implicit guarding. Then, access them without guarding from the child class `CDiskBlockIndex`. I do not like this much because the members in `CBlockIndex` need to be guarded, but will be without a `GUARDED_BY()` tag. Hmm...\r\n\r\n@MarcoFalke, I did not realize this before, thanks for pointing it out!\r\n> If there is a missing lock then it can at most be missed while copying the data\r\n\r\nthere is not - both users of `CDiskBlockIndex` own `cs_main` when creating such objects.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T09:52:14Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822470287",
      "id" : 822470287,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBeaP",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904113356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T09:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822473212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> @MarcoFalke, I did not realize this before, thanks for pointing it out!\r\n\r\nI pointed it only out thrice up to now :sweat_smile: . https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025464313 and https://github.com/bitcoin/bitcoin/pull/22932#discussion_r794493058",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T09:55:11Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822473212",
      "id" : 822473212,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBfH8",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904117238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T09:55:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822528035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yeah, I needed a few days to grasp that :exploding_head: ",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T10:57:54Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822528035",
      "id" : 822528035,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBsgj",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904192009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T10:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822653623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822653623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : ">  I do not like this much because the members in CBlockIndex need to be guarded, but will be without a GUARDED_BY() tag.\r\n\r\nI should probably explain reasoning behind what I suggested yesterday. I don't think this is a question what anybody likes or doesn't like, but a question of what's right and wrong. It's wrong to annotate these struct members as being guarded by cs_main, because they aren't guarded by it. The whole struct is not even guarded by cs_main, just certain instances of it are. What *is* guarded by cs_main is the `m_block_index` map and pointers & references to CBlockIndex instances specifically inside that map. \r\n\r\nThe correct way to annotate this code would be not to annotate anything in CBlockIndex (Ideally I would rename it to `struct BlockInfo` and make it plain struct with no methods), but to not expose this low-level struct to high level application code. Higher level code would use a `BlockReference` accessor class that has a `BlockInfo&` member and methods appropriately annotated with EXCLUSIVE_LOCKS_REQUIRED(cs_main) to enforce the access pattern which enables our lock usage. `CBlockIndex*` pointers throughout the code would be replaced by `BlockReference` objects. In my ideal world, this would look something like:\r\n\r\n```c++\r\nstruct BlockInfo {\r\n   uint256 hash;\r\n   int height = 0;\r\n   BlockInfo* prev = nullptr;\r\n   /// ... more members here ... ///\r\n};\r\n\r\nstruct BlockState : public BlockInfo {\r\n  int flags = 0;\r\n  int file_num = -1;\r\n  unsigned data_pos = 0;\r\n  unsigned undo_pos = 0;\r\n};\r\n\r\nclass BlockReference {\r\nprivate:\r\n   BlockState& m_block;\r\npublic:\r\n   BlockInfo& info() const { return m_block; }\r\n   BlockState& state() EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return m_block; }\r\n   BlockReference prev() const { return {static_cast<BlockState&>(*Assert(m_block.prev))}; }\r\n   // Could add more fine-grained accessors like height() or flags() or whatever.\r\n};\r\n\r\nclass BlockManager {\r\nprivate:\r\n  std::unordered_set<BlockState> m_blocks GUARDED_BY(cs_main);\r\npublic:\r\n  BlockReference FindBlock(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n   /// ... more stuff ... ///\r\n}\r\n```\r\n\r\nThe appoach I suggested yesterday does the same thing but keeps everything mushed into the same CBlockIndex class/struct hybrid instead of splitting it out. It would be pretty easy to implement what I suggested yesterday as a followup to this PR to re-enable thread safety checking. In any case I was not suggesting doing something bigger like that in this PR.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T13:35:38Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822653623",
      "id" : 822653623,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xCLK3",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904367531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822653623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T13:39:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822653623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823521820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823521820"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "_to use another wording (not like/dislike):_\r\n\r\nIt is a [design smell](https://en.wikipedia.org/wiki/Design_smell) to have a variable without `GUARDED_BY()` and rely on `EXCLUSIVE_LOCKS_REQUIRED()` on some methods to protect it. This way, if the code goes wrong (like, new access is added to the variable from a function not marked with `EXCLUSIVE_LOCKS_REQUIRED()`) then the compiler has no way to detect that. This defeats the purpose of thread safety annotations which is to **enforce** proper access and detect mistakes if the code goes wrong.\r\n\r\nYour [suggestion above](https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074) does that:\r\n> replace public guarded variables with private unguarded variables ... And add `EXCLUSIVE_LOCKS_REQUIRED` accessor methods as needed to ensure variables are always accessed with the right locks held.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-10T09:36:09Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823521820",
      "id" : 823521820,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xFfIc",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 905558001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823521820/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-10T09:36:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823521820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823530377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823530377"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the review feedback! Given the number of pulls that are currently touching this area of the codebase, it seems good to keep this change minimal and perhaps propose these ideas as a follow-up (happy to review them).",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-10T09:44:54Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823530377",
      "id" : 823530377,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xFhOJ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 905569646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823530377/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-10T09:44:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823530377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823670409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823670409"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It is a [design smell](https://en.wikipedia.org/wiki/Design_smell) to have a variable without `GUARDED_BY()` and rely on `EXCLUSIVE_LOCKS_REQUIRED()` on some methods to protect it. This way, if the code goes wrong (like, new access is added to the variable from a function not marked with `EXCLUSIVE_LOCKS_REQUIRED()`) then the compiler has no way to detect that. This defeats the purpose of thread safety annotations which is to **enforce** proper access and detect mistakes if the code goes wrong.\r\n\r\nThese are mostly incorrect claims made without specific reasoning or justification. If you have an inner variable that does *not* require lucking, and an outer data structure containing the variable, or an outer pointer pointing to the variable, or an outer function accessing the variable, and the outer container/pointer/function *does* require locking, the correct way of annotating the code is to _not annotate_ the variable, and _to annotate_ the outer container/pointer/function.\r\n\r\nIf you look at the actual code I posted in https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822653623, you can see that the compiler will detect all unsafe accesses. If you want to talk about a code smell, NO_THREAD_SAFETY_ANALYSIS is the code smell, and the design in that post shows how to get rid of it.\r\n\r\nThat said, there is a difference between the bigger change I posted yesterday https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822653623, and the smaller suggestion https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074 I posted two days ago. In both cases the compiler can guarantee thread safety outside of chain.h/chain.cpp if these files are annotated correctly. But in the bigger change where I split up CBlockIndex class into separate BlockInfo / BlockState / BlockReference components, it's easy to annotate everything correctly, while in the smaller change where CBlockIndex is kept as a monolithic class, what you are saying about it being trickier to see notice missing EXCLUSIVE_LOCKS_REQUIRED annotations on CBlockIndex methods is true.\r\n\r\nIf you want to argue that using incorrect annotations is better than using correct ones for practical reasons (e.g. it is better to use NO_THREAD_SAFETY_ANALYSIS in one method, so the rest of the file is easier to maintain), that's fine. But let's not create confusion about what correct annotations are and what incorrect annotations are. Correct annotations do not require using NO_THREAD_SAFETY_ANALYSIS, and that's just the most obvious clue.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-10T12:33:11Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r823670409",
      "id" : 823670409,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xGDaJ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 905765226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823670409/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-10T12:33:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/823670409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r827927512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/827927512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wrt `NO_THREAD_SAFETY_ANALYSIS` I tend to agree with @luke-jr: https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025479698. This is why I did not ACK this PR, which contains `NO_THREAD_SAFETY_ANALYSIS`. Personally, I do not see a good and elegant solution to the problem this PR aims to fix (yet).",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-16T11:58:44Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r827927512",
      "id" : 827927512,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xWSvY",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 911512326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/827927512/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-16T11:58:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/827927512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/24199#pullrequestreview-903405458) |\n| Concept NACK | [luke-jr](https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025353705) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25862](https://github.com/bitcoin/bitcoin/pull/25862) (refactor, kernel: Remove gArgs accesses from dbwrapper and txdb by ryanofsky)\n* [#19463](https://github.com/bitcoin/bitcoin/pull/19463) (Prune locks by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-08-17T23:26:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1218641707",
      "id" : 1218641707,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585Iov8r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218641707/reactions"
      },
      "updated_at" : "2023-02-11T01:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218641707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Are you still working on this?",
      "created_at" : "2022-10-12T19:01:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1276608379",
      "id" : 1276608379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585MF397",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276608379/reactions"
      },
      "updated_at" : "2022-10-12T19:01:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276608379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this as it has not had any activity in a while. If you are interested in continuing work on this, please leave a comment so that it can be reopened.",
      "created_at" : "2022-11-10T17:13:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1310621131",
      "id" : 1310621131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585OHn3L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310621131/reactions"
      },
      "updated_at" : "2022-11-10T17:13:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310621131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Are you still working on this?\r\n\r\nYes, sorry not to have seen this comment and replied. There is valuable review feedback here so it may be helpful to re-open here rather than open a new pull (mentioning as I do not have the privileges to re-open it.)",
      "created_at" : "2022-11-10T17:19:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1310628492",
      "id" : 1310628492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585OHpqM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310628492/reactions"
      },
      "updated_at" : "2022-11-10T17:19:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310628492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Moved this to draft. It's not clear what the status of this is. There is clearly disagreement about the approach amongst contributors. Was re-opened to address feedback, but no activity in the 4 months since.",
      "created_at" : "2023-02-06T15:02:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1419224245",
      "id" : 1419224245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585Ul6S1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419224245/reactions"
      },
      "updated_at" : "2023-02-06T15:02:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1419224245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-17T23:35:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1435396126",
      "id" : 1435396126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII585Vjmge",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435396126/reactions"
      },
      "updated_at" : "2023-02-17T23:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435396126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
