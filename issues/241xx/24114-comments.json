[
   {
      "author_association" : "MEMBER",
      "body" : "Ping @sanket1729 @apoelstra @darosior @achow101, others.",
      "created_at" : "2022-01-20T16:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017697672",
      "id" : 1017697672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848qNWI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017697672/reactions"
      },
      "updated_at" : "2022-01-20T16:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017697672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this makes sense. Already mentioned elsewhere but to be noted here: the Rust implementation of Miniscript/Descriptors allows hashes inside `pkh()`/`pk_h()`.",
      "created_at" : "2022-01-20T17:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017726613",
      "id" : 1017726613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848qUaV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017726613/reactions"
      },
      "updated_at" : "2022-01-20T17:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017726613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@darosior It's my understanding that this is only the case if you instantiate it with a key type that does so, and not generally true for the descriptor language implementation. This is (not exactly the same, but similarly) true for the C++ code as well - e.g. the signing instantiation uses a key type where all keys are actually key hashes.\r\n\r\nSo to be clear, this isn't about the implementation(s), which already have some affordances for permitting things like this internally; only about the descriptor language (and miniscript-as-used-in-descriptors) specification.",
      "created_at" : "2022-01-20T17:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017730429",
      "id" : 1017730429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848qVV9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017730429/reactions"
      },
      "updated_at" : "2022-01-20T17:16:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017730429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's my understanding that this is only the case if you instantiate it with a key type that does so, and not generally true for descriptors\r\n\r\nIt's more complicated. It is the default to parse `pk_h()` descriptors for \"raw\" public keys using their hash. However it's the default to parse `pk_h()` descriptors for xpubs using the xpub itself.\r\nEDIT: the default in the xpub context is also to parse `pkh()` containing raw keys by their key, not its hash. I think how convoluted the implicit parsing of keyhash inside `pkh()` is makes a point for having explicit `rawpk()` descriptors.\r\nâââââââ Original Message âââââââ\r\nLe jeudi 20 janvier 2022 Ã  6:13 PM, Pieter Wuille ***@***.***> a Ã©crit :\r\n\r\n> ***@***.***(https://github.com/darosior) It's my understanding that this is only the case if you instantiate it with a key type that does so, and not generally true for descriptors. This is (not exactly the same, but similarly) true for the C++ code - e.g. the signing/inference instantiation uses a key type where all keys hashes.\r\n>\r\n> So to be clear, this isn't about the implementation(s), which already have some affordances for permitting things like this internally; only about the descriptor (and miniscript-as-used-in-descriptors) specification.\r\n>\r\n> â\r\n> Reply to this email directly, [view it on GitHub](https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017730429), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AFLK3F7J5TNG6UMDZ6FRTM3UXA7CZANCNFSM5MNHXFKA).\r\n> Triage notifications on the go with GitHub Mobile for [iOS](https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675) or [Android](https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub).\r\n> You are receiving this because you were mentioned.Message ID: ***@***.***>",
      "created_at" : "2022-01-20T17:25:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017742704",
      "id" : 1017742704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848qYVw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017742704/reactions"
      },
      "updated_at" : "2022-01-21T10:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017742704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK.\r\n\r\n@darosior after some IRC discussion, I think what this might look like is to replace our current `PkH(Pk::Hash)` with something like `PkH(Pk::Hash, Option<Pk>)`. That is, make it explicit that pubkeys may be available, or not, and that this may be different for different `pk_h`s in the same descriptor.\r\n\r\nSimilarly taptrees would be `(TapTreeHash, Option<TapTree>)` etc",
      "created_at" : "2022-01-20T18:03:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1017775233",
      "id" : 1017775233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848qgSB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017775233/reactions"
      },
      "updated_at" : "2022-01-20T18:03:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1017775233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> we get the nice logistical benefit of being able to represent all information extracted from PSBT/SPKM/scripts/... into a descriptor regardless of what is present or missing. \r\n> ...and the signing logic becomes a descriptor method\r\n\r\n+1.  While implementing taproot miniscript descriptors, I found this wanting. Inferring descriptor from PSBTs is a very useful property to simplify signing/finalizing implementations. \r\n\r\n> Add a rawnode(HEX) fragment, only usable inside P2TR script tree expressions, indicating a tree node with specified hash, but no specified subtree.\r\n\r\nI believe we discussed `hidden(HEX)`, but I like `rawnode` is more in the spirit of `raw`. I like the overall idea that `raw*` means something other additional special information might be required at signing. ",
      "created_at" : "2022-01-21T01:54:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1018090358",
      "id" : 1018090358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5848rtN2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018090358/reactions"
      },
      "updated_at" : "2022-01-21T01:54:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018090358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It has been suggested before (though I can't find a reference now)\r\n\r\nc/f N2KB taproot paths https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851",
      "created_at" : "2022-02-02T22:48:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1028430143",
      "id" : 1028430143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5849TJk_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1028430143/reactions"
      },
      "updated_at" : "2022-02-02T22:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1028430143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin Thanks, included in description.",
      "created_at" : "2022-02-02T22:50:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1028431516",
      "id" : 1028431516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII5849TJ6c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1028431516/reactions"
      },
      "updated_at" : "2022-02-02T22:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1028431516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "One more possibility: a `rawleaf(HEXSCRIPT[,LEAFVERSION])` fragment inside `tr()` to represent leaves of unknown version/script.",
      "created_at" : "2022-02-13T17:46:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1038293144",
      "id" : 1038293144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII58494xiY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038293144/reactions"
      },
      "updated_at" : "2022-02-13T17:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038293144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't see any reason for not having this, but additional information would `rawleaf(HEXSCRIPT[,LEAFVERSION])` serve over `rawnode(HEX)`? \r\n\r\nIn psbt workflow, parties can provide a mapping `control_block -> (leaf_script, leaf_version)` to convey the same information.",
      "created_at" : "2022-02-13T21:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1038440498",
      "id" : 1038440498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII58495Vgy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038440498/reactions"
      },
      "updated_at" : "2022-02-13T21:28:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038440498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sanket1729 Well, exactly! It can be conveyed using PSBT, why shouldn't it be representable using descriptors? `rawleaf` contains information that `rawnode` cannot represent: the preimage of the node hash, in case it is a leaf.",
      "created_at" : "2022-02-13T21:31:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1038441246",
      "id" : 1038441246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII58495Vse",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038441246/reactions"
      },
      "updated_at" : "2022-02-13T21:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038441246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, taking this reasoning to its logical conclusion, I think we also should have `rawsh()` (for P2SH with specified scripthash), `rawwsh()` (for P2WSH with specified scripthash) and `rawwpkh()` (for P2WPKH with specified pubkey hash).",
      "created_at" : "2022-02-14T13:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1039106357",
      "id" : 1039106357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII584974E1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1039106357/reactions"
      },
      "updated_at" : "2022-02-14T13:46:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1039106357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Actually, `rawsh`, `rawwsh`, and `rawwpkh` don't add anything over straight up `addr` when used at the top level. For `rawwsh` and `rawsh` inside sh, we could instead just permit `raw` inside `sh` and `wsh` (i think permitting `addr` inside `sh` and `wsh` would be misleading).",
      "created_at" : "2022-02-14T14:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1039150866",
      "id" : 1039150866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII58498C8S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1039150866/reactions"
      },
      "updated_at" : "2022-02-14T14:35:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1039150866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I've long held that there shouldn't be any level in between, in the sense that you shouldn't be using a descriptor if you don't know everything about its construction. I'm starting to think that's not a tenable position\r\n\r\nCurious if there was a specific rationale or concern behind the previous position, or if it just seemed simpler at the time",
      "created_at" : "2022-02-24T16:40:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1050045224",
      "id" : 1050045224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII584-lmso",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050045224/reactions"
      },
      "updated_at" : "2022-02-24T16:40:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050045224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One more use-case for `rawtr` descriptors is to allow people test new things with a valid key spend that might not be clearly repesentable in current descriptor spec. Things like #24897 are a good example.\r\n\r\n> we could instead just permit `raw` inside `sh` and `wsh`\r\n\r\nAgreed. This seems to be in spirit of `rawleaf()` inside taproot nodes. Given all of this, it makes the descriptor language _complete_. Complete meaning we can represent the explicit spending script regardless it is inside p2sh/p2wsh/or a leaf. It was already possible to do at the top level with `raw`, but it lacked the power to express the underlying explicit spending script.",
      "created_at" : "2022-04-22T18:16:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1106751023",
      "id" : 1106751023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII585B964v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106751023/reactions"
      },
      "updated_at" : "2022-04-22T18:16:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1106751023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky Slow response but:\r\n\r\n> Curious if there was a specific rationale or concern behind the previous position, or if it just seemed simpler at the time\r\n\r\nMy thinking used to be that descriptor's goal was to encapsulate full knowledge of \"how to spend an output, excluding private keys\", with `addr`/`raw` as exceptions added specifically for the purpose of allowing `scantxoutset` to work with raw scripts/addresses. But there didn't seem to be a use case for anything in between \"know everything\" (normal descriptors) and \"know nothing except the scriptPubKey\" (raw/addr), because such an in-between thing would be useless for everything except scanning, and thus all the information it would have beyond what raw/addr provide would be redundant.\r\n\r\nI've come around because I'm convinced now there *are* use cases for these in-between situations. At least internally, signing is definitely possible, and useful, even with partial knowledge. Imagine a 2-of-2 script that's (abusing notation here) `and(pkh(A),pkh(B))` (so something where the script has pubkey hashes of two keys). If an output to such a script exists, and you have the private key to `A`, but don't have even the unhashed public key to `B`, you do want to participate in signing. With the introduction of taproot, this notion is even extended, where you may be able to individually know enough to spend according to one branch fully, but not know anything about other branches. The current miniscript final PR bypasses descriptors for its signing logic, and effectively uses a different layer (the Key type template in miniscript) to represent this partial knowledge *without* needed descriptors to represent that. That's another sign that there may be (even only \"internal\") use cases where it would greatly help to permit just everything in descriptors.\r\n\r\nAnd if we're going to need to add more \"exceptions\" anyway because there are use cases demanding them, that's perhaps a sign the philosophy is wrong to begin with, and we should just embrace the fact that there can always be a spectrum of available knowledge, rather than think about every missing piece as an exception.",
      "created_at" : "2022-05-16T18:07:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1127978154",
      "id" : 1127978154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
      "node_id" : "IC_kwDOABII585DO5Sq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127978154/reactions"
      },
      "updated_at" : "2022-05-16T18:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127978154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
