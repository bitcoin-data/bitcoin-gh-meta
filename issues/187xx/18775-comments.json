[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18736 (test: Add fuzzing harnesses for various classes/functions in util/ by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-27T04:33:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#issuecomment-619710149",
      "id" : 619710149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18775",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTcxMDE0OQ==",
      "updated_at" : "2020-04-27T04:33:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619710149",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415840299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415840299"
         }
      },
      "author_association" : "MEMBER",
      "body" : "how is this possible? ConsumeMoney should be less than 34873208148477500",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-27T14:03:55Z",
      "diff_hunk" : "@@ -97,6 +100,18 @@ NODISCARD inline arith_uint256 ConsumeArithUInt256(FuzzedDataProvider& fuzzed_da\n     return UintToArith256(ConsumeUInt256(fuzzed_data_provider));\n }\n \n+NODISCARD inline CTxMemPoolEntry ConsumeTxMemPoolEntry(FuzzedDataProvider& fuzzed_data_provider, const CTransaction& tx) noexcept\n+{\n+    // Avoid:\n+    // policy/feerate.cpp:28:34: runtime error: signed integer overflow: 34873208148477500 * 1000 cannot be represented in type 'long'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415840299",
      "id" : 415840299,
      "line" : 106,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0MDI5OQ==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 106,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 23,
      "pull_request_review_id" : 400983821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415840299",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415841752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415841752"
         }
      },
      "author_association" : "MEMBER",
      "body" : "does this do anything for the small inputs that  the fuzz engine produces by default?",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-27T14:05:44Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());\n+            }\n+            break;\n+        }\n+        case 1: {\n+            std::vector<CTxMemPoolEntry> mempool_entries;\n+            while (fuzzed_data_provider.ConsumeBool()) {\n+                const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+                if (!mtx) {\n+                    break;\n+                }\n+                const CTransaction tx{*mtx};\n+                mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\n+            }\n+            std::vector<const CTxMemPoolEntry*> ptrs;\n+            ptrs.reserve(mempool_entries.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415841752",
      "id" : 415841752,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0MTc1Mg==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : 46,
      "pull_request_review_id" : 400985600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415841752",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415842808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415842808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            (void)block_policy_estimator.removeTx(ConsumeUInt256(fuzzed_data_provider), /* inBlock */ fuzzed_data_provider.ConsumeBool());\r\n```",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-27T14:07:00Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());\n+            }\n+            break;\n+        }\n+        case 1: {\n+            std::vector<CTxMemPoolEntry> mempool_entries;\n+            while (fuzzed_data_provider.ConsumeBool()) {\n+                const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+                if (!mtx) {\n+                    break;\n+                }\n+                const CTransaction tx{*mtx};\n+                mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\n+            }\n+            std::vector<const CTxMemPoolEntry*> ptrs;\n+            ptrs.reserve(mempool_entries.size());\n+            for (const CTxMemPoolEntry& mempool_entry : mempool_entries) {\n+                ptrs.push_back(&mempool_entry);\n+            }\n+            block_policy_estimator.processBlock(fuzzed_data_provider.ConsumeIntegral<unsigned int>(), ptrs);\n+            break;\n+        }\n+        case 2: {\n+            (void)block_policy_estimator.removeTx(ConsumeUInt256(fuzzed_data_provider), fuzzed_data_provider.ConsumeBool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415842808",
      "id" : 415842808,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0MjgwOA==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : null,
      "pull_request_review_id" : 400986789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415842808",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415843074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415843074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                (void)block_policy_estimator.removeTx(tx.GetHash(), /* inBlock */ fuzzed_data_provider.ConsumeBool());\r\n```",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-27T14:07:20Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r415843074",
      "id" : 415843074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0MzA3NA==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 31,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : null,
      "pull_request_review_id" : 400986789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415843074",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-29T23:28:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#issuecomment-621522428",
      "id" : 621522428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18775",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTUyMjQyOA==",
      "updated_at" : "2020-04-29T23:28:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621522428",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r417998493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417998493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think the impact (if any) will be large, but it doesn't hurt and it makes `clang-tidy` happy :)",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-30T13:12:54Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());\n+            }\n+            break;\n+        }\n+        case 1: {\n+            std::vector<CTxMemPoolEntry> mempool_entries;\n+            while (fuzzed_data_provider.ConsumeBool()) {\n+                const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+                if (!mtx) {\n+                    break;\n+                }\n+                const CTransaction tx{*mtx};\n+                mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\n+            }\n+            std::vector<const CTxMemPoolEntry*> ptrs;\n+            ptrs.reserve(mempool_entries.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r417998493",
      "id" : 417998493,
      "in_reply_to_id" : 415841752,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5ODQ5Mw==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : 46,
      "pull_request_review_id" : 403504980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417998493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418003132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418003132"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed!",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-30T13:19:55Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());\n+            }\n+            break;\n+        }\n+        case 1: {\n+            std::vector<CTxMemPoolEntry> mempool_entries;\n+            while (fuzzed_data_provider.ConsumeBool()) {\n+                const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+                if (!mtx) {\n+                    break;\n+                }\n+                const CTransaction tx{*mtx};\n+                mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\n+            }\n+            std::vector<const CTxMemPoolEntry*> ptrs;\n+            ptrs.reserve(mempool_entries.size());\n+            for (const CTxMemPoolEntry& mempool_entry : mempool_entries) {\n+                ptrs.push_back(&mempool_entry);\n+            }\n+            block_policy_estimator.processBlock(fuzzed_data_provider.ConsumeIntegral<unsigned int>(), ptrs);\n+            break;\n+        }\n+        case 2: {\n+            (void)block_policy_estimator.removeTx(ConsumeUInt256(fuzzed_data_provider), fuzzed_data_provider.ConsumeBool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418003132",
      "id" : 418003132,
      "in_reply_to_id" : 415842808,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAwMzEzMg==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : null,
      "pull_request_review_id" : 403511017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418003132",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418003214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418003214"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed!",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-30T13:20:03Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <txmempool.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CBlockPolicyEstimator block_policy_estimator;\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3)) {\n+        case 0: {\n+            const Optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mtx) {\n+                break;\n+            }\n+            const CTransaction tx{*mtx};\n+            block_policy_estimator.processTransaction(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx), fuzzed_data_provider.ConsumeBool());\n+            if (fuzzed_data_provider.ConsumeBool()) {\n+                (void)block_policy_estimator.removeTx(tx.GetHash(), fuzzed_data_provider.ConsumeBool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418003214",
      "id" : 418003214,
      "in_reply_to_id" : 415843074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAwMzIxNA==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 31,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/test/fuzz/policy_estimator.cpp",
      "position" : null,
      "pull_request_review_id" : 403511143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418003214",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418015926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418015926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you're misunderstanding what is happening here: note that it `ConsumeMoney` is always returning within the money bounds, but the calculation does not take place directly on that amount :)\r\n\r\nSee this example:\r\n\r\n```c++\r\nconst CAmount fee_paid = 348732081484775;\r\nassert(MoneyRange(fee_paid));\r\nconst size_t bytes = 10;\r\nconst CFeeRate fee_rate(fee_paid, bytes);\r\n(void)fee_rate.GetFeePerK();\r\npolicy/feerate.cpp:28:34: runtime error: signed integer overflow: 34873208148477500 * 1000 cannot be represented in type 'long'\r\n```",
      "commit_id" : "2bcc2bd742392730b4f21e3d4f00438c34acac1f",
      "created_at" : "2020-04-30T13:38:24Z",
      "diff_hunk" : "@@ -97,6 +100,18 @@ NODISCARD inline arith_uint256 ConsumeArithUInt256(FuzzedDataProvider& fuzzed_da\n     return UintToArith256(ConsumeUInt256(fuzzed_data_provider));\n }\n \n+NODISCARD inline CTxMemPoolEntry ConsumeTxMemPoolEntry(FuzzedDataProvider& fuzzed_data_provider, const CTransaction& tx) noexcept\n+{\n+    // Avoid:\n+    // policy/feerate.cpp:28:34: runtime error: signed integer overflow: 34873208148477500 * 1000 cannot be represented in type 'long'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#discussion_r418015926",
      "id" : 418015926,
      "in_reply_to_id" : 415840299,
      "line" : 106,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAxNTkyNg==",
      "original_commit_id" : "9e8bf1c000ddc1e3bdbcd82f6591c11c9e237d13",
      "original_line" : 106,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 23,
      "pull_request_review_id" : 403527490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18775",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-30T14:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418015926",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit which clarifies how the signed integer overflow in `CFeeRate::GetFeePerK()` is avoided when fuzzing :)",
      "created_at" : "2020-04-30T14:21:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18775#issuecomment-621884400",
      "id" : 621884400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18775",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTg4NDQwMA==",
      "updated_at" : "2020-04-30T14:21:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621884400",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
