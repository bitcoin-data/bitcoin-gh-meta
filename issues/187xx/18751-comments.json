[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414103517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414103517"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand this.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T20:31:46Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414103517",
      "id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMzUxNw==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399453431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414103517",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414105697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414105697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh you mean because it would use the type of the input (hours) as precision, effectively, and then converted to microseconds afterwards?\r\n\r\nThat's a very roundabout way of describing the problem, and wouldn't apply to a `GetRandMicros` that always interpreted the input as microseconds.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T20:35:36Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414105697",
      "id" : 414105697,
      "in_reply_to_id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNTY5Nw==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399455968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414105697",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414109709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414109709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I don't understand this.\r\n\r\n\r\nHere is the code. I am happy to remove the sentence and replace it with code instead.\r\n\r\n```cpp\r\ntemplate <typename D>\r\nD GetRandDur(const D& duration_max)\r\n{\r\n    return D{GetRand(duration_max.count())};\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(util_time_GetRandTime)\r\n{\r\n    std::chrono::seconds rand_hour = GetRandDur(std::chrono::hours{1});\r\n    // Want seconds to be in range [0..1hour), but always get zero :((((\r\n    BOOST_CHECK_EQUAL(rand_hour.count(), 0);\r\n}\r\n\r\n",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T20:41:59Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414109709",
      "id" : 414109709,
      "in_reply_to_id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwOTcwOQ==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399460302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414109709",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414111751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414111751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> That's a very roundabout way of describing the problem, and wouldn't apply to a GetRandMicros that always interpreted the input as microseconds.\r\n\r\nYes, that is the reason why I added GetRandMicros in fa883ab35ad2d4328e35b1e855d0833740a6b910, but I forgot to add documentation back then.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T20:45:26Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414111751",
      "id" : 414111751,
      "in_reply_to_id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExMTc1MQ==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399462615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414111751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414130756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414130756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, I understand now. You mean templatizing to avoid the \"Micros\" in the function name (and implicitly pass the resolution of the result that).\r\n\r\nThere's a rather crazy way to work around that:\r\n\r\n```c++\r\ntemplate<typename In, typename OutRep = typename In::rep, typename OutPeriod = typename In::period>\r\nstd::chrono::duration<OutRep, OutPeriod> GetRand(std::chrono::duration<OutRep, OutPeriod> arg) {\r\n    return arg;\r\n}\r\n```\r\nThat's a GetRand that only applies to durations, but you still always have to explicitly state the resolution you want (e.g. `GetRand<std::chrono::milliseconds>(SOME_CONSTANT_OF_TYPE_CHRONO_HOURS)` will work as expected; `GetRand(...)` won't compile).",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T21:17:48Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414130756",
      "id" : 414130756,
      "in_reply_to_id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMDc1Ng==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399483897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414130756",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414132382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414132382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I doubt that's more appealing than just GetRandMicros, GetRandMillis, ... functions, though.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-23T21:20:45Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414132382",
      "id" : 414132382,
      "in_reply_to_id" : 414103517,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMjM4Mg==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 75,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 399485719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414132382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414819576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414819576"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My knowledge is pretty limited, but maybe I can make a suggestion for clearer wording?\r\n\r\nIt seems like the issue is that, if `GetRand*(std::chrono::*)` is templated with this implementation, the `max_duration`'s count() is used as-is instead of converting between the argument type and return type like we would expect it to. Instead, the conversion happens at the end. In simple terms, the `std::chrono` types won't convert nicely which means we lose precision if we want random small units of time over the duration of a large unit of time (which I'm guessing is a common use case). For example, when you try to get random seconds over the duration of 1 hour, the only return value you can get is 0 hours = 0 seconds.\r\n\r\nOther example: `std::chrono::seconds rand_seconds = GetRandDur(std::chrono::hours{4});` can return non-zero values, but only at the precision of hours (i.e. 0, 3600, 7200, or 10800 seconds). \r\n\r\nIf you were to make a template, it only necessarily works as intended if you pass in a `max_duration` of strictly the same type (or @sipa's workaround).",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T19:42:30Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414819576",
      "id" : 414819576,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxOTU3Ng==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 73,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400223405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414819576",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414833700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414833700"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think this is true? its just random in relation to the duration type of the input. \r\n\r\neg. `std::chrono::seconds foo = GetRand(std::chrono::hours{5})`\r\nmight return 3600, 7200, 10800 etc.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T20:09:04Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414833700",
      "id" : 414833700,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMzcwMA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 76,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400238797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414833700",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414836790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414836790"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "is it impossible, or does the compiler just select template duration of param thats passed & then tries to convert afterwards? \r\n\r\nseems that way to me because `std::chrono::seconds val = GetRandDur(std::chrono::hours)` gives a type conversion error",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T20:15:11Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414836790",
      "id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNjc5MA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400238797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414836790",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No it doesn't give a type conversion error.\r\n\r\nThis compiles fine for me and the test pass:\r\n\r\n```cpp\r\ntemplate <typename D>\r\nD GetRandDur(const D& duration_max)\r\n{\r\n    return D{GetRand(duration_max.count())};\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(util_time_GetRandTime)\r\n{\r\n    std::chrono::seconds rand_hour = GetRandDur(std::chrono::hours{1});\r\n    // Want seconds to be in range [0..1hour), but always get zero :((((\r\n    BOOST_CHECK_EQUAL(rand_hour.count(), 0);\r\n}",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T20:53:14Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856381",
      "id" : 414856381,
      "in_reply_to_id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjM4MQ==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400263471,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856381",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856628"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any suggestions to improve the wording? Something with \"quantized\", maybe?",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T20:53:42Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856628",
      "id" : 414856628,
      "in_reply_to_id" : 414833700,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjYyOA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 76,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400263724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856628",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414895938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414895938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oh interesting. maybe its different in gcc vs clang?? or I'm missing something obvious.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:23:11Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414895938",
      "id" : 414895938,
      "in_reply_to_id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5NTkzOA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400303884,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414895938",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414897548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414897548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I hope not; that would violate the language spec.\n\nstd::chrono::hours should always be implicitly convertible into std::chrono::seconds.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:27:37Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414897548",
      "id" : 414897548,
      "in_reply_to_id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5NzU0OA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400305420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414897548",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414899354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414899354"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ok I tried again and it works. I must have made an accidental error. my mistake!",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:32:46Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414899354",
      "id" : 414899354,
      "in_reply_to_id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5OTM1NA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400307112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414899354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902570"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke - I built on @gzhao408's description. here's an attempt at a comment: \r\n\r\nThe following `GetRand<duration>` MUST NOT be templated on the type of the `<duration>` to prevent unexpected results. If there is a mismatch between the return type and the argument type, the compiler is unable to reliably select the correct template. The unexpected conversion handling can lead to precision loss. \r\n\r\nEg. \r\n`std::chrono::seconds rand_seconds = GetRandDur(std::chrono::hours{2})` will return 1 of 2 values rather than 1 of 120 values. \r\n",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:42:17Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902570",
      "id" : 414902570,
      "in_reply_to_id" : 414819576,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMjU3MA==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 73,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400310135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902570",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "think precision loss captures it better, esp with example. attempted in other comment thread.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:43:07Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902826",
      "id" : 414902826,
      "in_reply_to_id" : 414833700,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMjgyNg==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 76,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400310412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902826",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @gzhao408 and @amitiuttarwar for helping me to explain this. Took your suggestion and added you both as co author in the commit.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:57:45Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907465",
      "id" : 414907465,
      "in_reply_to_id" : 414819576,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNzQ2NQ==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 73,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400314616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907465",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907943"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oh, my error was in what I was typing here. I get conversion issue when I do `std::chrono::minutes val = GetRandDur(std::chrono::seconds{120})` \r\n\r\nso when function arg is higher precision than return value. \r\n\r\nwhich is why I was suspecting compiler selects template duration based on function arg, then tries to convert afterwards. so selection is deterministic vs unexpected, but can lead to unexpected results.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T22:58:54Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907943",
      "id" : 414907943,
      "in_reply_to_id" : 414836790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNzk0Mw==",
      "original_commit_id" : "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400314983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK fa6c75bdbe7f842c7c4c3846467cb47dd1431a75... but not sure if my ack counts anymore ð ",
      "created_at" : "2020-04-24T23:04:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619273930",
      "id" : 619273930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTI3MzkzMA==",
      "updated_at" : "2020-04-24T23:04:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619273930",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414912568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414912568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry to nitpick here, but i think this is still confusing.\r\n\r\nIn a hypothetical\r\n\r\n```c++\r\ntemplate<typename T>\r\nT GetRandDur(T max) { return T{GetRand(max.count())}; }\r\n\r\nstd::chrono::seconds r = GetRandDur(std::chrono::hours{1})\r\n```\r\n\r\nthere is no unreliable template selection or mismatch between types. `GetRandDur` is reliably instantiated with `T`=`std::chrono::hours`, and is returning a random value of the same type. It's in the assignment outside of the function call that the conversion to `std::chrono::seconds` happens, and this assignment doesn't lose precision; the precision was never requested in the first place.\r\n\r\nHow about this instead:\r\n\r\n    Templates cannot be used here to avoid stating explicitly what precision\r\n    is desired in the result. A hypothetical\r\n    `template<typename T> T GetRandDur(T)` invoked on a\r\n    `std::chrono::hours` argument will only ever return a duration with the\r\n    resolution of 1 hours, which may be unexpected when assigning to\r\n    a variable of a higher resolution duration like `std::chrono::seconds`.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T23:13:15Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414912568",
      "id" : 414912568,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxMjU2OA==",
      "original_commit_id" : "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400319081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:41:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414912568",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414921034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414921034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks. Copy-pasted your text.",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T23:42:19Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414921034",
      "id" : 414921034,
      "in_reply_to_id" : 414912568,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyMTAzNA==",
      "original_commit_id" : "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400325969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414921034",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414923293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414923293"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah yes. ok this confirms what I was trying to get at in the other thread. thanks!",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-24T23:50:19Z",
      "diff_hunk" : "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414923293",
      "id" : 414923293,
      "in_reply_to_id" : 414912568,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyMzI5Mw==",
      "original_commit_id" : "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "original_line" : 74,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : null,
      "pull_request_review_id" : 400327767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-24T23:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414923293",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It does actually seem possible to create a templated `GetRandDur` that works as expected(?) when assigning to higher-resolution duration types. I'm not sure it's a good idea, but posting this here in case people are interested:\r\n\r\n```c++\r\ntemplate<typename D>\r\nclass RandDur\r\n{\r\n    const D m_max;\r\npublic:\r\n    constexpr RandDur(D max) : m_max(max) {}\r\n    template<typename D2>\r\n    operator D2() const { return D2{GetRand(D2{m_max}.count())}; }\r\n};\r\n\r\ntemplate<typename D>\r\nRandDur<D> GetRandDur(D duration_max)\r\n{\r\n    return RandDur<D>(duration_max);\r\n}\r\n\r\nstd::chrono::seconds s = GetRandDur(std::chrono::hours{2});\r\n```\r\n\r\n`s` will take on a value between 0 and 7200 seconds here. It works by returning an object `RandDuration` from `GetRandDur` that is an unevaluated random-duration operation. It's evaluated when converting it to seconds, at which time the destination type is known.\r\n\r\nA reason this may not be a good idea is because now\r\n\r\n```c++\r\nauto r = GetRandDur(std::chrono::hours{2});\r\nstd::chrono::seconds s1 = r;\r\nstd::chrono::seconds s2 = r;\r\nprintf(\"%i, %i\\n\", (int)s1.count(), (int)s2.count());\r\n```\r\n\r\nwould print two different numbers.",
      "created_at" : "2020-04-25T02:40:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619308096",
      "id" : 619308096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTMwODA5Ng==",
      "updated_at" : "2020-04-25T02:40:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619308096",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What if we prevent template argument deduction?\r\n\r\nhow?",
      "created_at" : "2020-04-26T14:34:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619561836",
      "id" : 619561836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTU2MTgzNg==",
      "updated_at" : "2020-04-26T14:34:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619561836",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag That would work, for example using:\r\n\r\n```c++\r\ntemplate<typename D>\r\nD GetRandDur(typename std::common_type<D>::type max) { ... }\r\n```\r\n\r\nbut you'd still be left with a templated function which you'd need to call as\r\n\r\n```c++\r\nstd::chrono::microseconds r = GetRandDur<std::chrono::microseconds>(std::chrono::hours{2});\r\n```\r\n\r\nso it wouldn't avoid the need for explicitly passing in the precision. The current codebase's approach effectively does the same thing, but with a slightly shorter notation (where `GetRandMicros` is effectively `GetRandDur<std::chrono::microseconds>`.",
      "created_at" : "2020-04-26T22:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619635073",
      "id" : 619635073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTYzNTA3Mw==",
      "updated_at" : "2020-04-26T22:37:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619635073",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wasn't aware that there is a way to tell the compiler that a template argument must be passed. I'll switch out the implementation here with the `std::common_type` one.",
      "created_at" : "2020-04-26T23:21:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619640697",
      "id" : 619640697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTY0MDY5Nw==",
      "updated_at" : "2020-04-26T23:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619640697",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r415432459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415432459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What magic? ",
      "commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "created_at" : "2020-04-26T23:59:01Z",
      "diff_hunk" : "@@ -1348,6 +1348,13 @@ BOOST_AUTO_TEST_CASE(gettime)\n     BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(util_time_GetRandTime)\n+{\n+    // Check that GetRand* can not magically increase the resolution of the result",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r415432459",
      "id" : 415432459,
      "line" : 1353,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQzMjQ1OQ==",
      "original_commit_id" : "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_line" : 1353,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : 6,
      "pull_request_review_id" : 400565249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-27T00:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415432459",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why?",
      "created_at" : "2020-04-27T02:51:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619680891",
      "id" : 619680891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTY4MDg5MQ==",
      "updated_at" : "2020-04-27T02:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619680891",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe because scoped changed Marco will open a new PR? ð¤ ",
      "created_at" : "2020-04-27T08:04:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619807887",
      "id" : 619807887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTgwNzg4Nw==",
      "updated_at" : "2020-04-27T08:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619807887",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
