{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "master @ 5f19155e5bca37bf1fe14515758c6f589f6806ae\r\n```bash\r\n./autogen.sh\r\nCC=/usr/local/opt/llvm/bin/clang-10 CXX=/usr/local/opt/llvm/bin/clang-10 ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\r\nmake -j8\r\nsrc/test/fuzz/strprintf ../qa-assets/fuzz_seed_corpus/strprintf\r\n```\r\n\r\n```bash\r\nsrc/test/fuzz/strprintf ../qa-assets/fuzz_seed_corpus/strprintf\r\nINFO: Seed: 2966642833\r\nINFO: Loaded 1 modules   (5426 inline 8-bit counters): 5426 [0x1090e45b8, 0x1090e5aea), \r\nINFO: Loaded 1 PC tables (5426 PCs): 5426 [0x1090e5af0,0x1090fae10), \r\nINFO:      542 files found in ../qa-assets/fuzz_seed_corpus/strprintf\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 542 min: 1b max: 128b total: 6053b rss: 28Mb\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==6966==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fff70692e52 bp 0x7ffee6bc1740 sp 0x7ffee6bc1740 T0)\r\n==6966==The signal is caused by a READ memory access.\r\n==6966==Hint: address points to the zero page.\r\n    #0 0x7fff70692e52 in _platform_strlen+0x12 (libsystem_platform.dylib:x86_64+0xe52)\r\n    #1 0x1091aeff7 in wrap_strlen+0x37 (libclang_rt.asan_osx_dynamic.dylib:x86_64+0x14ff7)\r\n    #2 0x10905bf63 in void tinyformat::formatValue<signed char*>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, char const*, int, signed char* const&) tinyformat.h:358\r\n    #3 0x10904d338 in tinyformat::detail::formatImpl(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, tinyformat::detail::FormatArg const*, int) tinyformat.h:907\r\n    #4 0x10904a135 in void tinyformat::format<signed char*>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, signed char* const&) tinyformat.h:1064\r\n    #5 0x10904122b in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > tinyformat::format<signed char*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, signed char* const&) tinyformat.h:1156\r\n    #6 0x10903e6ee in test_one_input(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&) strprintf.cpp:49\r\n    #7 0x109079d9d in LLVMFuzzerTestOneInput fuzz.cpp:38\r\n    #8 0x1090a3560 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) FuzzerLoop.cpp:556\r\n    #9 0x1090a2ca5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) FuzzerLoop.cpp:470\r\n    #10 0x1090a5347 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) FuzzerLoop.cpp:765\r\n    #11 0x1090a56a9 in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) FuzzerLoop.cpp:792\r\n    #12 0x109092a8d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) FuzzerDriver.cpp:829\r\n    #13 0x1090bed52 in main FuzzerMain.cpp:19\r\n    #14 0x7fff7049ccc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)\r\n\r\n==6966==Register values:\r\nrax = 0x0000000109e9c934  rbx = 0x0000000000000000  rcx = 0x0000000000000000  rdx = 0x0000000000000000  \r\nrdi = 0x0000000000000000  rsi = 0x0000000000000000  rbp = 0x00007ffee6bc1740  rsp = 0x00007ffee6bc1740  \r\n r8 = 0x00000001090ff400   r9 = 0x0000008482df9980  r10 = 0xffffffffffffffff  r11 = 0x0000000000000020  \r\nr12 = 0x00000000ffffffff  r13 = 0x0000000000000000  r14 = 0x00007ffee6bc2500  r15 = 0x00007ffee6bc27c0  \r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (libsystem_platform.dylib:x86_64+0xe52) in _platform_strlen+0x12\r\n==6966==ABORTING\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n0x25,0x78,\r\n%x\r\nartifact_prefix='./'; Test unit written to ./crash-f7d71ad6a293c739fdb380f7e3761bf9ccf1933b\r\nBase64: JXg=\r\n[1]    6966 abort      src/test/fuzz/strprintf ../qa-assets/fuzz_seed_corpus/strprintf\r\n```",
   "closed_at" : "2022-03-24T20:41:57Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 5,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762/comments",
   "created_at" : "2020-04-25T09:15:07Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18762",
   "id" : 606727389,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "bfd4f2",
         "default" : false,
         "description" : null,
         "id" : 159815356,
         "name" : "Upstream",
         "node_id" : "MDU6TGFiZWwxNTk4MTUzNTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2MDY3MjczODk=",
   "number" : 18762,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762/timeline",
   "title" : "fuzz: AddressSanitizer: SEGV on unknown address in /strprintf",
   "updated_at" : "2022-03-24T20:41:58Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18762",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
