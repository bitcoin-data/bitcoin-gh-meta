{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This is a c++20 feature, so it's obviously not a rush to get in, but it may be useful while we play around with ranges in the codebase before actually switching to c++20.\r\n\r\nThis matches the behavior of std::span.\r\n\r\nThe below sample program demonstrates what these enable:\r\n```c++\r\n#include <vector>\r\n#include <ranges>\r\n#include <cstdio>\r\n#include \"span.h\"\r\n\r\nstatic std::vector<int> g_vec{1, 2, 3, 4, 5, 6};\r\n\r\nvoid span_view_filter() {\r\n    auto even = [](int i) { return 0 == i % 2; };\r\n    printf(\"evens: \");\r\n    for (int i : Span<int>(g_vec) | std::views::filter(even)) {\r\n        printf(\"%i \", i);\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\nvoid span_no_dangle()\r\n{\r\n    auto get_span = [] {\r\n        return Span<int>(g_vec);\r\n    };\r\n    auto iter = std::ranges::max_element(get_span());\r\n    static_assert(std::is_same_v<int*, decltype(iter)>);\r\n    printf(\"max: %i\\n\", *iter);\r\n}\r\n\r\nint main()\r\n{\r\n    span_no_dangle();\r\n    span_view_filter();\r\n}\r\n```\r\nCompiled with: `g++-10 -O2 -std=c++2a span.cpp -o span`\r\n\r\nIf `enable_view` is disabled, the first example will fail to compile.\r\nIf `enable_borrowed_range` is disabled, the second will fail to compile.\r\n\r\nSidenote: `std::ranges::dangling` is neat :)",
   "closed_at" : "2022-07-25T07:15:28Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 7,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226/comments",
   "created_at" : "2021-10-08T00:16:31Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/23226",
   "id" : 1020561877,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 955867938,
         "name" : "Needs rebase",
         "node_id" : "MDU6TGFiZWw5NTU4Njc5Mzg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584s60PF",
   "number" : 23226,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/23226.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23226",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/23226.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23226"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226/timeline",
   "title" : "c++20: Opt-in to modeling view and borrowed_range for Span",
   "updated_at" : "2022-07-25T07:15:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23226",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
      "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theuni/followers",
      "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theuni",
      "id" : 417043,
      "login" : "theuni",
      "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
      "organizations_url" : "https://api.github.com/users/theuni/orgs",
      "received_events_url" : "https://api.github.com/users/theuni/received_events",
      "repos_url" : "https://api.github.com/users/theuni/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theuni"
   }
}
