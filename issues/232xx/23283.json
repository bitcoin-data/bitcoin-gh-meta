{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Hi , I am a newbie in bitcoin learning.  I am just learning the source of bitcoin. Now  my aim is to change the hash algorithm in order to learn the knowledge.The version is bitcoin-0.20.\r\nI want to change the hash to x13, so I add the x13 files in ~/src/crypto/x13hash$ ls\r\n```\r\naes_helper.c  bmw.c\t  echo.c   groestl.c  hamsi_helper.c  keccak.c\tshavite.c  skein.c  sph_blake.h  sph_cubehash.h  sph_fugue.h\tsph_hamsi.h  sph_keccak.h  sph_shavite.h  sph_skein.h  sph_types.h\r\nblake.c       cubehash.c  fugue.c  hamsi.c    jh.c\t      luffa.c\tsimd.c\t   sm3.c    sph_bmw.h\t sph_echo.h\t sph_groestl.h\tsph_jh.h     sph_luffa.h   sph_simd.h\t  sph_sm3.h\r\n```\r\n modify the Makefile.am in src \r\n```\r\ncrypto_libbitcoin_crypto_base_a_CPPFLAGS = $(AM_CPPFLAGS)\r\ncrypto_libbitcoin_crypto_base_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\r\ncrypto_libbitcoin_crypto_base_a_SOURCES = \\\r\n\t#crypto/siphash.cpp \\\r\n\t#crypto/siphash.h \\\r\n\tcrypto/aes.cpp \\\r\n\tcrypto/aes.h \\\r\n\tcrypto/chacha_poly_aead.h \\\r\n\tcrypto/chacha_poly_aead.cpp \\\r\n\tcrypto/chacha20.h \\\r\n\tcrypto/chacha20.cpp \\\r\n\tcrypto/common.h \\\r\n\tcrypto/hkdf_sha256_32.cpp \\\r\n\tcrypto/hkdf_sha256_32.h \\\r\n\tcrypto/hmac_sha256.cpp \\\r\n\tcrypto/hmac_sha256.h \\\r\n\tcrypto/hmac_sha512.cpp \\\r\n\tcrypto/hmac_sha512.h \\\r\n\tcrypto/poly1305.h \\\r\n\tcrypto/poly1305.cpp \\\r\n\tcrypto/ripemd160.cpp \\\r\n\tcrypto/ripemd160.h \\\r\n\tcrypto/sha1.cpp \\\r\n\tcrypto/sha1.h \\\r\n\tcrypto/sha256.cpp \\\r\n\tcrypto/sha256.h \\\r\n\tcrypto/sha512.cpp \\\r\n\tcrypto/sha512.h \\\r\n\tcrypto/siphash.cpp \\\r\n\tcrypto/siphash.h \\\r\n\tcrypto/x13hash/aes_helper.c \\\r\n\tcrypto/x13hash/blake.c \\\r\n\tcrypto/x13hash/bmw.c \\\r\n\tcrypto/x13hash/cubehash.c \\\r\n\tcrypto/x13hash/echo.c \\\r\n\tcrypto/x13hash/fugue.c \\\r\n\tcrypto/x13hash/groestl.c \\\r\n\tcrypto/x13hash/hamsi_helper.c \\\r\n\tcrypto/x13hash/hamsi.c \\\r\n\tcrypto/x13hash/jh.c \\\r\n\tcrypto/x13hash/keccak.c \\\r\n\tcrypto/x13hash/luffa.c \\\r\n\tcrypto/x13hash/shavite.c \\\r\n\tcrypto/x13hash/simd.c \\\r\n\tcrypto/x13hash/skein.c \\\r\n\tcrypto/x13hash/sm3.c \\\r\n\tcrypto/x13hash/sph_blake.h \\\r\n\tcrypto/x13hash/sph_bmw.h \\\r\n\tcrypto/x13hash/sph_cubehash.h \\\r\n\tcrypto/x13hash/sph_echo.h \\\r\n\tcrypto/x13hash/sph_fugue.h \\\r\n\tcrypto/x13hash/sph_groestl.h \r\n\tcrypto/x13hash/sph_hamsi.h \\\r\n\tcrypto/x13hash/sph_jh.h \\\r\n\tcrypto/x13hash/sph_keccak.h \\\r\n\tcrypto/x13hash/sph_luffa.h \\\r\n\tcrypto/x13hash/sph_shavite.h \\\r\n\tcrypto/x13hash/sph_simd.h \\\r\n\tcrypto/x13hash/sph_skein.h \\\r\n\tcrypto/x13hash/sph_sm3.h \\\r\n\tcrypto/x13hash/sph_types.h\r\n\t\r\n```\r\nin ./primitives/block.cpp add below:\r\n```\r\nuint256 CBlockHeader::GetNewPoWHash() const \r\n {\r\n     return HashX13sm3(BEGIN(nVersion), END(nNonce));\r\n }\r\n```\r\n\r\n./primitives/block.h:    \r\n```\r\n#define BEGIN(a)            ((char*)&(a))\r\n#define END(a)              ((char*)&((&(a))[1]))\r\n#define UBEGIN(a)           ((unsigned char*)&(a))\r\n#define UEND(a)             ((unsigned char*)&((&(a))[1]))\r\n#define ARRAYLEN(array)     (sizeof(array)/sizeof((array)[0]))\r\nuint256 GetNewPoWHash() const; \r\n```\r\n\r\nand in hash.h\r\n```\r\n#ifndef BITCOIN_HASH_H\r\n#define BITCOIN_HASH_H\r\n\r\n#include <crypto/common.h>\r\n#include <crypto/ripemd160.h>\r\n#include <crypto/sha256.h>\r\n#include <prevector.h>\r\n#include <serialize.h>\r\n#include <uint256.h>\r\n#include <version.h>\r\n\r\n#include <vector>\r\n\r\n#include \"crypto/x13hash/sph_blake.h\"\r\n#include \"crypto/x13hash/sph_bmw.h\"\r\n#include \"crypto/x13hash/sph_groestl.h\"\r\n#include \"crypto/x13hash/sph_jh.h\"\r\n#include \"crypto/x13hash/sph_keccak.h\"\r\n#include \"crypto/x13hash/sph_skein.h\"\r\n#include \"crypto/x13hash/sph_luffa.h\"\r\n#include \"crypto/x13hash/sph_cubehash.h\"\r\n#include \"crypto/x13hash/sph_shavite.h\"\r\n#include \"crypto/x13hash/sph_simd.h\"\r\n#include \"crypto/x13hash/sph_echo.h\"\r\n#include \"crypto/x13hash/sph_hamsi.h\"\r\n#include \"crypto/x13hash/sph_fugue.h\"\r\n#include \"crypto/x13hash/sph_sm3.h\"\r\n\r\n#ifdef GLOBALDEFINED\r\n#define GLOBAL\r\n#else\r\n#define GLOBAL extern\r\n#endif\r\n\r\nGLOBAL sph_blake512_context     z_blake;\r\nGLOBAL sph_bmw512_context       z_bmw;\r\nGLOBAL sph_groestl512_context   z_groestl;\r\nGLOBAL sph_jh512_context        z_jh;\r\nGLOBAL sph_keccak512_context    z_keccak;\r\nGLOBAL sph_skein512_context     z_skein;\r\nGLOBAL sph_luffa512_context     z_luffa;\r\nGLOBAL sph_cubehash512_context  z_cubehash;\r\nGLOBAL sph_shavite512_context   z_shavite;\r\nGLOBAL sph_simd512_context      z_simd;\r\nGLOBAL sph_echo512_context      z_echo;\r\nGLOBAL sph_hamsi512_context     z_hamsi;\r\nGLOBAL sph_fugue512_context     z_fugue;\r\n#define fillz() do { \\\r\n    sph_blake512_init(&z_blake); \\\r\n    sph_bmw512_init(&z_bmw); \\\r\n    sph_groestl512_init(&z_groestl); \\\r\n    sph_jh512_init(&z_jh); \\\r\n    sph_keccak512_init(&z_keccak); \\\r\n    sph_skein512_init(&z_skein); \\\r\n    sph_luffa512_init(&z_luffa); \\\r\n    sph_cubehash512_init(&z_cubehash); \\\r\n    sph_shavite512_init(&z_shavite); \\\r\n    sph_simd512_init(&z_simd); \\\r\n    sph_echo512_init(&z_echo); \\\r\n    sph_hamsi512_init(&z_hamsi); \\\r\n    sph_fugue512_init(&z_fugue); \\\r\n} while (0) \r\ntypedef uint256 ChainCode;\r\ntemplate<typename T1>\r\ninline uint256 HashX13(const T1 pbegin, const T1 pend)\r\n{\r\n    sph_blake512_context     ctx_blake;\r\n    sph_bmw512_context       ctx_bmw;\r\n    sph_groestl512_context   ctx_groestl;\r\n    sph_jh512_context        ctx_jh;\r\n    sph_keccak512_context    ctx_keccak;\r\n    sph_skein512_context     ctx_skein;\r\n    sph_luffa512_context     ctx_luffa;\r\n    sph_cubehash512_context  ctx_cubehash;\r\n    sph_shavite512_context   ctx_shavite;\r\n    sph_simd512_context      ctx_simd;\r\n    sph_echo512_context      ctx_echo;\r\n    sph_hamsi512_context      ctx_hamsi;\r\n    sph_fugue512_context      ctx_fugue;\r\n    static unsigned char pblank[1];\r\n\r\n#ifndef QT_NO_DEBUG\r\n    //std::string strhash;\r\n    //strhash = \"\";\r\n#endif\r\n\r\n    uint256 hash[34];\r\n\r\n    sph_blake512_init(&ctx_blake);\r\n    sph_blake512 (&ctx_blake, (pbegin == pend ? pblank : static_cast<const void*>(&pbegin[0])), (pend - pbegin) * sizeof(pbegin[0]));\r\n    sph_blake512_close(&ctx_blake, static_cast<void*>(&hash[0]));\r\n\r\n    sph_bmw512_init(&ctx_bmw);\r\n    sph_bmw512 (&ctx_bmw, static_cast<const void*>(&hash[0]), 64);\r\n    sph_bmw512_close(&ctx_bmw, static_cast<void*>(&hash[2]));\r\n\r\n    sph_groestl512_init(&ctx_groestl);\r\n    sph_groestl512 (&ctx_groestl, static_cast<const void*>(&hash[2]), 64);\r\n    sph_groestl512_close(&ctx_groestl, static_cast<void*>(&hash[4]));\r\n\r\n    sph_skein512_init(&ctx_skein);\r\n    sph_skein512 (&ctx_skein, static_cast<const void*>(&hash[4]), 64);\r\n    sph_skein512_close(&ctx_skein, static_cast<void*>(&hash[6]));\r\n\r\n    sph_jh512_init(&ctx_jh);\r\n    sph_jh512 (&ctx_jh, static_cast<const void*>(&hash[6]), 64);\r\n    sph_jh512_close(&ctx_jh, static_cast<void*>(&hash[8]));\r\n\r\n    sph_keccak512_init(&ctx_keccak);\r\n    sph_keccak512 (&ctx_keccak, static_cast<const void*>(&hash[8]), 64);\r\n    sph_keccak512_close(&ctx_keccak, static_cast<void*>(&hash[10]));\r\n\r\n    sph_luffa512_init(&ctx_luffa);\r\n    sph_luffa512 (&ctx_luffa, static_cast<void*>(&hash[10]), 64);\r\n    sph_luffa512_close(&ctx_luffa, static_cast<void*>(&hash[12]));\r\n\r\n    sph_cubehash512_init(&ctx_cubehash);\r\n    sph_cubehash512 (&ctx_cubehash, static_cast<const void*>(&hash[12]), 64);\r\n    sph_cubehash512_close(&ctx_cubehash, static_cast<void*>(&hash[14]));\r\n\r\n    sph_shavite512_init(&ctx_shavite);\r\n    sph_shavite512(&ctx_shavite, static_cast<const void*>(&hash[14]), 64);\r\n    sph_shavite512_close(&ctx_shavite, static_cast<void*>(&hash[16]));\r\n\r\n    sph_simd512_init(&ctx_simd);\r\n    sph_simd512 (&ctx_simd, static_cast<const void*>(&hash[16]), 64);\r\n    sph_simd512_close(&ctx_simd, static_cast<void*>(&hash[18]));\r\n\r\n    sph_echo512_init(&ctx_echo);\r\n    sph_echo512 (&ctx_echo, static_cast<const void*>(&hash[18]), 64);\r\n    sph_echo512_close(&ctx_echo, static_cast<void*>(&hash[20]));\r\n\r\n    sph_hamsi512_init(&ctx_hamsi);\r\n    sph_hamsi512 (&ctx_hamsi, static_cast<const void*>(&hash[20]), 64);\r\n    sph_hamsi512_close(&ctx_hamsi, static_cast<void*>(&hash[22]));\r\n\r\n    sph_fugue512_init(&ctx_fugue);\r\n    sph_fugue512 (&ctx_fugue, static_cast<const void*>(&hash[22]), 64);\r\n    sph_fugue512_close(&ctx_fugue, static_cast<void*>(&hash[24]));\r\n\r\n\r\n    return hash[24];\r\n}\r\n\r\n\r\ntemplate<typename T1>\r\ninline uint256 HashX13sm3(const T1 pbegin, const T1 pend)\r\n{\r\n    sph_blake512_context     ctx_blake;\r\n    sph_bmw512_context       ctx_bmw;\r\n    sph_groestl512_context   ctx_groestl;\r\n    sph_jh512_context        ctx_jh;\r\n    sph_keccak512_context    ctx_keccak;\r\n    sph_skein512_context     ctx_skein;\r\n    sm3_ctx_t                ctx_sm3;\r\n    sph_cubehash512_context  ctx_cubehash;\r\n    sph_shavite512_context   ctx_shavite;\r\n    sph_simd512_context      ctx_simd;\r\n    sph_echo512_context      ctx_echo;\r\n    sph_hamsi512_context      ctx_hamsi;\r\n    sph_fugue512_context      ctx_fugue;\r\n    static unsigned char pblank[1];\r\n\r\n#ifndef QT_NO_DEBUG\r\n    //std::string strhash;\r\n    //strhash = \"\";\r\n#endif\r\n\r\n    uint256 hash[34];\r\n\r\n    sph_blake512_init(&ctx_blake);\r\n    sph_blake512 (&ctx_blake, (pbegin == pend ? pblank : static_cast<const void*>(&pbegin[0])), (pend - pbegin) * sizeof(pbegin[0]));\r\n    sph_blake512_close(&ctx_blake, static_cast<void*>(&hash[0]));\r\n\r\n    sph_bmw512_init(&ctx_bmw);\r\n    sph_bmw512 (&ctx_bmw, static_cast<const void*>(&hash[0]), 64);\r\n    sph_bmw512_close(&ctx_bmw, static_cast<void*>(&hash[2]));\r\n\r\n    sph_groestl512_init(&ctx_groestl);\r\n    sph_groestl512 (&ctx_groestl, static_cast<const void*>(&hash[2]), 64);\r\n    sph_groestl512_close(&ctx_groestl, static_cast<void*>(&hash[4]));\r\n\r\n    sph_skein512_init(&ctx_skein);\r\n    sph_skein512 (&ctx_skein, static_cast<const void*>(&hash[4]), 64);\r\n    sph_skein512_close(&ctx_skein, static_cast<void*>(&hash[6]));\r\n\r\n    sph_jh512_init(&ctx_jh);\r\n    sph_jh512 (&ctx_jh, static_cast<const void*>(&hash[6]), 64);\r\n    sph_jh512_close(&ctx_jh, static_cast<void*>(&hash[8]));\r\n\r\n    sph_keccak512_init(&ctx_keccak);\r\n    sph_keccak512 (&ctx_keccak, static_cast<const void*>(&hash[8]), 64);\r\n    sph_keccak512_close(&ctx_keccak, static_cast<void*>(&hash[10]));\r\n\r\n    hash[12].SetNull(); //sm3 is 256bit, just in case\r\n    hash[13].SetNull();\r\n    sm3_init(&ctx_sm3);\r\n    sph_sm3(&ctx_sm3, static_cast<const void*>(&hash[10]), 64);\r\n    sph_sm3_close(&ctx_sm3, static_cast<void*>(&hash[12]));\r\n\r\n    sph_cubehash512_init(&ctx_cubehash);\r\n    sph_cubehash512 (&ctx_cubehash, static_cast<const void*>(&hash[12]), 64);\r\n    sph_cubehash512_close(&ctx_cubehash, static_cast<void*>(&hash[14]));\r\n\r\n    sph_shavite512_init(&ctx_shavite);\r\n    sph_shavite512(&ctx_shavite, static_cast<const void*>(&hash[14]), 64);\r\n    sph_shavite512_close(&ctx_shavite, static_cast<void*>(&hash[16]));\r\n\r\n    sph_simd512_init(&ctx_simd);\r\n    sph_simd512 (&ctx_simd, static_cast<const void*>(&hash[16]), 64);\r\n    sph_simd512_close(&ctx_simd, static_cast<void*>(&hash[18]));\r\n\r\n    sph_echo512_init(&ctx_echo);\r\n    sph_echo512 (&ctx_echo, static_cast<const void*>(&hash[18]), 64);\r\n    sph_echo512_close(&ctx_echo, static_cast<void*>(&hash[20]));\r\n\r\n    sph_hamsi512_init(&ctx_hamsi);\r\n    sph_hamsi512 (&ctx_hamsi, static_cast<const void*>(&hash[20]), 64);\r\n    sph_hamsi512_close(&ctx_hamsi, static_cast<void*>(&hash[22]));\r\n\r\n    sph_fugue512_init(&ctx_fugue);\r\n    sph_fugue512 (&ctx_fugue, static_cast<const void*>(&hash[22]), 64);\r\n    sph_fugue512_close(&ctx_fugue, static_cast<void*>(&hash[24]));\r\n\r\n\r\n    return hash[24];\r\n} \r\n```\r\nBut the result is below:\r\ngilsun91@DESKTOP-EEM7CKJ:~$ make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/gilsun91/bitcoin-0.20/src'\r\nMakefile:18525: warning: overriding recipe for target 'libbitcoin_util_a-clientversion.o'\r\nMakefile:10842: warning: ignoring old recipe for target 'libbitcoin_util_a-clientversion.o'\r\nmake[2]: Entering directory '/home/gilsun91/bitcoin-0.20/src'\r\nMakefile:18525: warning: overriding recipe for target 'libbitcoin_util_a-clientversion.o'\r\nMakefile:10842: warning: ignoring old recipe for target 'libbitcoin_util_a-clientversion.o'\r\nlibbitcoin_common.a \\\r\nlibbitcoin_consensus.a \\\r\nlibbitcoin_util.a \\\r\ncrypto/libbitcoin_crypto_base.a crypto/libbitcoin_crypto_sse41.a crypto/libbitcoin_crypto_avx2.a crypto/libbitcoin_crypto_shani.a \\\r\n \\\r\nleveldb/libleveldb.a crc32c/libcrc32c.a crc32c/libcrc32c_sse42.a  \\\r\n \\\r\nleveldb/libmemenv.a \\\r\nsecp256k1/libsecp256k1.la \\\r\nunivalue/libunivalue.la\r\n/bin/bash: line 1: libbitcoin_common.a: command not found\r\nmake[2]: *** [Makefile:18525: libbitcoin_util_a-clientversion.o] Error 127\r\nmake[2]: Leaving directory '/home/gilsun91/bitcoin-0.20/src'\r\nmake[1]: *** [Makefile:16859: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/gilsun91/bitcoin-0.20/src'\r\nmake: *** [Makefile:781: all-recursive] Error 1\r\n",
   "closed_at" : "2021-10-15T06:47:29Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283/comments",
   "created_at" : "2021-10-15T06:41:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/23283",
   "id" : 1027130122,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII5849OMMK",
   "number" : 23283,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283/timeline",
   "title" : "I am a newbie in bitcoin learning,would you please help me ?It couldn't make success.thanks.",
   "updated_at" : "2021-10-15T06:47:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23283",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7414491?v=4",
      "events_url" : "https://api.github.com/users/jiebanghan/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jiebanghan/followers",
      "following_url" : "https://api.github.com/users/jiebanghan/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jiebanghan/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jiebanghan",
      "id" : 7414491,
      "login" : "jiebanghan",
      "node_id" : "MDQ6VXNlcjc0MTQ0OTE=",
      "organizations_url" : "https://api.github.com/users/jiebanghan/orgs",
      "received_events_url" : "https://api.github.com/users/jiebanghan/received_events",
      "repos_url" : "https://api.github.com/users/jiebanghan/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jiebanghan/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jiebanghan/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jiebanghan"
   }
}
