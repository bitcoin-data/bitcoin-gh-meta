[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and lint errors fixed. Ready for review.",
      "created_at" : "2021-10-08T22:45:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939153782",
      "id" : 939153782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5843-ll2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939153782/reactions"
      },
      "updated_at" : "2021-10-08T22:45:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939153782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725442331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725442331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                (void)aead.DecryptLength(in.data());\r\n```\r\n\r\nDoes this not work?",
      "commit_id" : "f81e8add760ea721e938c2dc7c3fb6c74c11f965",
      "created_at" : "2021-10-09T06:28:27Z",
      "diff_hunk" : "@@ -37,32 +34,11 @@ FUZZ_TARGET(crypto_chacha20_poly1305_aead)\n                 out = std::vector<uint8_t>(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n             },\n             [&] {\n-                (void)aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, out.data(), out.size(), in.data(), buffer_size, is_encrypt);\n+                (void)aead.Crypt(out.data(), out.size(), in.data(), buffer_size, is_encrypt);\n             },\n             [&] {\n-                uint32_t len = 0;\n-                const bool ok = aead.GetLength(&len, seqnr_aad, aad_pos, in.data());\n-                assert(ok);\n-            },\n-            [&] {\n-                if (AdditionOverflow(seqnr_payload, static_cast<uint64_t>(1))) {\n-                    return;\n-                }\n-                seqnr_payload += 1;\n-                aad_pos += CHACHA20_POLY1305_AEAD_AAD_LEN;\n-                if (aad_pos + CHACHA20_POLY1305_AEAD_AAD_LEN > CHACHA20_ROUND_OUTPUT) {\n-                    aad_pos = 0;\n-                    if (AdditionOverflow(seqnr_aad, static_cast<uint64_t>(1))) {\n-                        return;\n-                    }\n-                    seqnr_aad += 1;\n-                }\n-            },\n-            [&] {\n-                seqnr_payload = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n-            },\n-            [&] {\n-                seqnr_aad = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n+                uint32_t len = aead.DecryptLength(in.data());\n+                len = 0; // addressing the [[nodiscard]] and otherwise unused variable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725442331",
      "id" : 725442331,
      "line" : 41,
      "node_id" : "PRRC_kwDOABII584rPV8b",
      "original_commit_id" : "f81e8add760ea721e938c2dc7c3fb6c74c11f965",
      "original_line" : 41,
      "original_position" : 42,
      "original_start_line" : 40,
      "path" : "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
      "position" : 42,
      "pull_request_review_id" : 775548796,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725442331/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 40,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-09T06:30:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725442331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stratospher](https://github.com/bitcoin/bitcoin/pull/23233#pullrequestreview-798495512) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27534](https://github.com/bitcoin/bitcoin/pull/27534) (rpc: add 'getnetmsgstats', new rpc to view network message statistics by satsie)\n* [#27530](https://github.com/bitcoin/bitcoin/pull/27530) (Remove now-unnecessary poll, fcntl includes from net(base).cpp by Empact)\n* [#27479](https://github.com/bitcoin/bitcoin/pull/27479) (BIP324: ElligatorSwift integrations by sipa)\n* [#27411](https://github.com/bitcoin/bitcoin/pull/27411) (p2p: Restrict self-advertisements with privacy networks to avoid fingerprinting by mzumsande)\n* [#27407](https://github.com/bitcoin/bitcoin/pull/27407) (net, refactor: Privatise CNode send queue by dergoegge)\n* [#27385](https://github.com/bitcoin/bitcoin/pull/27385) (net, refactor: extract Network and BIP155Network logic to node/network by jonatack)\n* [#26684](https://github.com/bitcoin/bitcoin/pull/26684) (bench: add readblock benchmark by andrewtoth)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2021-10-09T19:00:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939346404",
      "id" : 939346404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5843_Unk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939346404/reactions"
      },
      "updated_at" : "2023-05-01T09:44:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939346404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725576786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725576786"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That does indeed work. Thank you.\r\n\r\nI've updated the commit in PR #20962 (where it originally belongs) and also here(this PR is based off that one).",
      "commit_id" : "ced51514336b0f3c2c0b195644b4e600d13d422a",
      "created_at" : "2021-10-10T04:50:53Z",
      "diff_hunk" : "@@ -37,32 +34,11 @@ FUZZ_TARGET(crypto_chacha20_poly1305_aead)\n                 out = std::vector<uint8_t>(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n             },\n             [&] {\n-                (void)aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, out.data(), out.size(), in.data(), buffer_size, is_encrypt);\n+                (void)aead.Crypt(out.data(), out.size(), in.data(), buffer_size, is_encrypt);\n             },\n             [&] {\n-                uint32_t len = 0;\n-                const bool ok = aead.GetLength(&len, seqnr_aad, aad_pos, in.data());\n-                assert(ok);\n-            },\n-            [&] {\n-                if (AdditionOverflow(seqnr_payload, static_cast<uint64_t>(1))) {\n-                    return;\n-                }\n-                seqnr_payload += 1;\n-                aad_pos += CHACHA20_POLY1305_AEAD_AAD_LEN;\n-                if (aad_pos + CHACHA20_POLY1305_AEAD_AAD_LEN > CHACHA20_ROUND_OUTPUT) {\n-                    aad_pos = 0;\n-                    if (AdditionOverflow(seqnr_aad, static_cast<uint64_t>(1))) {\n-                        return;\n-                    }\n-                    seqnr_aad += 1;\n-                }\n-            },\n-            [&] {\n-                seqnr_payload = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n-            },\n-            [&] {\n-                seqnr_aad = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\n+                uint32_t len = aead.DecryptLength(in.data());\n+                len = 0; // addressing the [[nodiscard]] and otherwise unused variable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725576786",
      "id" : 725576786,
      "in_reply_to_id" : 725442331,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584rP2xS",
      "original_commit_id" : "f81e8add760ea721e938c2dc7c3fb6c74c11f965",
      "original_line" : 41,
      "original_position" : 42,
      "original_start_line" : 40,
      "path" : "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 775628218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725576786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-10T04:50:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725576786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725442331 - ready for further review.",
      "created_at" : "2021-10-10T04:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939406571",
      "id" : 939406571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5843_jTr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939406571/reactions"
      },
      "updated_at" : "2021-10-10T04:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/939406571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-10-21T20:41:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-948987033",
      "id" : 948987033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5844kGSZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/948987033/reactions"
      },
      "updated_at" : "2021-10-21T20:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/948987033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Ready for further review.",
      "created_at" : "2021-10-22T18:24:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-949867586",
      "id" : 949867586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5844ndRC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/949867586/reactions"
      },
      "updated_at" : "2021-10-22T18:24:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/949867586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743387596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743387596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n```\r\nThis comment can be removed since it's related to the AEAD cipher suite implementation and doesn't play a role here.",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T04:44:41Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743387596",
      "id" : 743387596,
      "line" : 776,
      "node_id" : "PRRC_kwDOABII584sTzHM",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 776,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 37,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743387596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743387596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743389384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743389384"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This will need to be updated to be consistent with the BIP since [MAX_SIZE](https://github.com/bitcoin/bitcoin/blob/24abd8312ec1caa04f9b3bd92cd960e28ca91e17/src/serialize.h#L31) is 2^25 bytes.",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T04:51:46Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743389384",
      "id" : 743389384,
      "line" : 780,
      "node_id" : "PRRC_kwDOABII584sTzjI",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 780,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 41,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743389384/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743389384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This function can be modified to keep it's format consistent with the v1 GetMessage since [#22735](https://github.com/bitcoin/bitcoin/pull/22735) got merged.",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T05:33:17Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399462",
      "id" : 743399462,
      "line" : 807,
      "node_id" : "PRRC_kwDOABII584sT2Am",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 807,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 68,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399785"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "``` suggestion\r\n    // prepare the packet length that will later be encrypted and part of the MAC (AAD)\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T05:34:47Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399785",
      "id" : 743399785,
      "line" : 886,
      "node_id" : "PRRC_kwDOABII584sT2Fp",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 886,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 147,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399785/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743399785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743400111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743400111"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "``` suggestion\r\n    //       the AAD, payload and MAC, we could avoid a insert and thus a potential reallocation\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T05:36:07Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)\n+    // the packet length excludes the 16 byte MAC tag\n+    uint32_t packet_length = serialized_command_size + msg.data.size();\n+\n+    // prepare the packet length & message command and reserve 4 bytes (3bytes AAD + 1byte short-ID)\n+    std::vector<unsigned char> serialized_header(CHACHA20_POLY1305_AEAD_AAD_LEN + 1);\n+    // LE serialize the 24bits length\n+    // we do \"manually\" encode this since there is no helper for 24bit serialization\n+    packet_length = htole32(packet_length);\n+    memcpy(serialized_header.data(), &packet_length, 3);\n+\n+    // append the short-ID or (eventually) the varstr of the command\n+    CVectorWriter vector_writer(SER_NETWORK, INIT_PROTO_VERSION, serialized_header, 3);\n+    if (cmd_short_id) {\n+        // append the single byte short ID...\n+        vector_writer << cmd_short_id.value();\n+    } else {\n+        // or the ASCII command string\n+        vector_writer << msg.m_type;\n+    }\n+\n+    // insert header directly into the CSerializedNetMsg data buffer (insert at begin)\n+    // TODO: if we refactor the ChaCha20Poly1350 crypt function to allow separate buffers for\n+    //       the AD, payload and MAC, we could avoid a insert and thus a potential reallocation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743400111",
      "id" : 743400111,
      "line" : 909,
      "node_id" : "PRRC_kwDOABII584sT2Kv",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 909,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 170,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743400111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743400111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743402532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743402532"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "``` suggestion\r\n    CDataStream vRecv;           // received message header and data\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T05:46:17Z",
      "diff_hunk" : "@@ -375,18 +377,86 @@ class V1TransportDeserializer final : public TransportDeserializer\n     std::optional<CNetMessage> GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size) override;\n };\n \n+/** V2TransportDeserializer is a transport deserializer after BIP324 */\n+class V2TransportDeserializer final : public TransportDeserializer\n+{\n+private:\n+    std::unique_ptr<ChaCha20Poly1305AEAD> m_aead;\n+    const NodeId m_node_id;      // Only for logging\n+    bool m_in_data = false;      // parsing header (false) or data (true)\n+    uint32_t m_message_size = 0; // expected message size\n+    CDataStream vRecv;           // received message data",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743402532",
      "id" : 743402532,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584sT2wk",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 388,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743402532/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743402532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743404596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743404596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "``` suggestion\r\n    // TODO: if we refactor the ChaCha20Poly1305 crypt function to allow separate buffers for\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T05:54:07Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)\n+    // the packet length excludes the 16 byte MAC tag\n+    uint32_t packet_length = serialized_command_size + msg.data.size();\n+\n+    // prepare the packet length & message command and reserve 4 bytes (3bytes AAD + 1byte short-ID)\n+    std::vector<unsigned char> serialized_header(CHACHA20_POLY1305_AEAD_AAD_LEN + 1);\n+    // LE serialize the 24bits length\n+    // we do \"manually\" encode this since there is no helper for 24bit serialization\n+    packet_length = htole32(packet_length);\n+    memcpy(serialized_header.data(), &packet_length, 3);\n+\n+    // append the short-ID or (eventually) the varstr of the command\n+    CVectorWriter vector_writer(SER_NETWORK, INIT_PROTO_VERSION, serialized_header, 3);\n+    if (cmd_short_id) {\n+        // append the single byte short ID...\n+        vector_writer << cmd_short_id.value();\n+    } else {\n+        // or the ASCII command string\n+        vector_writer << msg.m_type;\n+    }\n+\n+    // insert header directly into the CSerializedNetMsg data buffer (insert at begin)\n+    // TODO: if we refactor the ChaCha20Poly1350 crypt function to allow separate buffers for",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743404596",
      "id" : 743404596,
      "line" : 908,
      "node_id" : "PRRC_kwDOABII584sT3Q0",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 908,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 169,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743404596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743404596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743408559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743408559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    // In v2, vRecv contains the AAD, encrypted payload plus the MAC tag (3 byte AAD + 1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T06:08:56Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743408559",
      "id" : 743408559,
      "line" : 809,
      "node_id" : "PRRC_kwDOABII584sT4Ov",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 809,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 70,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743408559/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743408559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743409108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743409108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n            if (msg.data.size() > read_bytes) {\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T06:10:54Z",
      "diff_hunk" : "@@ -704,4 +705,82 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n     BOOST_CHECK(!IsLocal(addr));\n }\n \n+void message_serialize_deserialize_test(bool v2, const std::vector<CSerializedNetMsg>& test_msgs)\n+{\n+    // use 32 byte keys with all zeros\n+    CPrivKey k1(32, 0);\n+    CPrivKey k2(32, 0);\n+\n+    // construct the serializers\n+    std::unique_ptr<TransportSerializer> serializer;\n+    std::unique_ptr<TransportDeserializer> deserializer;\n+\n+    if (v2) {\n+        serializer = std::make_unique<V2TransportSerializer>(V2TransportSerializer(k1, k2));\n+        deserializer = std::make_unique<V2TransportDeserializer>(V2TransportDeserializer((NodeId)0, k1, k2));\n+    } else {\n+        serializer = std::make_unique<V1TransportSerializer>(V1TransportSerializer());\n+        deserializer = std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), (NodeId)0, SER_NETWORK, INIT_PROTO_VERSION));\n+    }\n+    // run a couple of times through all messages with the same AEAD instance\n+    for (unsigned int i = 0; i < 100; i++) {\n+        for (const CSerializedNetMsg& msg_orig : test_msgs) {\n+            // bypass the copy protection\n+            CSerializedNetMsg msg;\n+            msg.data = msg_orig.data;\n+            msg.m_type = msg_orig.m_type;\n+            size_t raw_msg_size = msg.data.size();\n+\n+            std::vector<unsigned char> serialized_header;\n+            serializer->prepareForTransport(msg, serialized_header);\n+\n+            // read two times\n+            //  first: read header\n+            size_t read_bytes = 0;\n+            Span<const uint8_t> span_header(serialized_header.data(), serialized_header.size());\n+            if (serialized_header.size() > 0) read_bytes += deserializer->Read(span_header);\n+            //  second: read the encrypted payload (if required)\n+            Span<const uint8_t> span_msg(msg.data.data(), msg.data.size());\n+            if (msg.data.size() > 0) read_bytes += deserializer->Read(span_msg);\n+            if (msg.data.size() > read_bytes && msg.data.size() - read_bytes > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743409108",
      "id" : 743409108,
      "line" : 745,
      "node_id" : "PRRC_kwDOABII584sT4XU",
      "original_commit_id" : "1820cdfa18736ecaa6e053c50e667a17bcdd348c",
      "original_line" : 745,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 49,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743409108/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743409108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743411366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743411366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This can be updated to keep it consistent with [22735](https://github.com/bitcoin/bitcoin/pull/22735)'s change.\r\n```suggestion\r\n            bool reject_message{false};\r\n            CNetMessage result{deserializer->GetMessage(GetTime<std::chrono::microseconds>(), reject_message)};\r\n```",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T06:18:50Z",
      "diff_hunk" : "@@ -704,4 +705,82 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n     BOOST_CHECK(!IsLocal(addr));\n }\n \n+void message_serialize_deserialize_test(bool v2, const std::vector<CSerializedNetMsg>& test_msgs)\n+{\n+    // use 32 byte keys with all zeros\n+    CPrivKey k1(32, 0);\n+    CPrivKey k2(32, 0);\n+\n+    // construct the serializers\n+    std::unique_ptr<TransportSerializer> serializer;\n+    std::unique_ptr<TransportDeserializer> deserializer;\n+\n+    if (v2) {\n+        serializer = std::make_unique<V2TransportSerializer>(V2TransportSerializer(k1, k2));\n+        deserializer = std::make_unique<V2TransportDeserializer>(V2TransportDeserializer((NodeId)0, k1, k2));\n+    } else {\n+        serializer = std::make_unique<V1TransportSerializer>(V1TransportSerializer());\n+        deserializer = std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), (NodeId)0, SER_NETWORK, INIT_PROTO_VERSION));\n+    }\n+    // run a couple of times through all messages with the same AEAD instance\n+    for (unsigned int i = 0; i < 100; i++) {\n+        for (const CSerializedNetMsg& msg_orig : test_msgs) {\n+            // bypass the copy protection\n+            CSerializedNetMsg msg;\n+            msg.data = msg_orig.data;\n+            msg.m_type = msg_orig.m_type;\n+            size_t raw_msg_size = msg.data.size();\n+\n+            std::vector<unsigned char> serialized_header;\n+            serializer->prepareForTransport(msg, serialized_header);\n+\n+            // read two times\n+            //  first: read header\n+            size_t read_bytes = 0;\n+            Span<const uint8_t> span_header(serialized_header.data(), serialized_header.size());\n+            if (serialized_header.size() > 0) read_bytes += deserializer->Read(span_header);\n+            //  second: read the encrypted payload (if required)\n+            Span<const uint8_t> span_msg(msg.data.data(), msg.data.size());\n+            if (msg.data.size() > 0) read_bytes += deserializer->Read(span_msg);\n+            if (msg.data.size() > read_bytes && msg.data.size() - read_bytes > 0) {\n+                Span<const uint8_t> span_msg(msg.data.data() + read_bytes, msg.data.size() - read_bytes);\n+                read_bytes += deserializer->Read(span_msg);\n+            }\n+            BOOST_CHECK(deserializer->Complete());\n+            BOOST_CHECK_EQUAL(read_bytes, msg.data.size() + serialized_header.size());\n+            // message must be complete\n+            uint32_t out_err_raw_size{0};\n+            std::optional<CNetMessage> result{deserializer->GetMessage(GetTime<std::chrono::microseconds>(), out_err_raw_size)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743411366",
      "id" : 743411366,
      "line" : 753,
      "node_id" : "PRRC_kwDOABII584sT46m",
      "original_commit_id" : "1820cdfa18736ecaa6e053c50e667a17bcdd348c",
      "original_line" : 753,
      "original_position" : 57,
      "original_start_line" : 752,
      "path" : "src/test/net_tests.cpp",
      "position" : 57,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743411366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 752,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743411366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743412234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743412234"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n            bool reject_message{false};\r\n            CNetMessage result{deserializer.GetMessage(m_time, reject_message)};\r\n```\r\nHere also.",
      "commit_id" : "ab5b49d1e3d1ae792cb4f1ce2834f126e9eabbe0",
      "created_at" : "2021-11-05T06:21:55Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha_poly_aead.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(32, 0);\n+    const CPrivKey k2(32, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+\n+    while (buffer.size() > 0) {\n+        const int handled = deserializer.Read(buffer);\n+        if (handled < 0) {\n+            break;\n+        }\n+        if (deserializer.Complete()) {\n+            const std::chrono::microseconds m_time{std::numeric_limits<int64_t>::max()};\n+            uint32_t out_err_raw_size{0};\n+            std::optional<CNetMessage> result{deserializer.GetMessage(m_time, out_err_raw_size)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743412234",
      "id" : 743412234,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII584sT5IK",
      "original_commit_id" : "757d68c0f359b117e226c9c04ff6e4ec7b92a71a",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : 56,
      "pull_request_review_id" : 798495512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743412234/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 55,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-05T06:38:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/743412234",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to bring in changes from #22735, and addressed comments from @stratospher (Thank you!). Ready for further review.",
      "created_at" : "2021-11-09T00:28:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-963698675",
      "id" : 963698675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5845cN_z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/963698675/reactions"
      },
      "updated_at" : "2021-11-09T01:53:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/963698675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195684"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good find. Removed.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:28:57Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195684",
      "id" : 745195684,
      "in_reply_to_id" : 743387596,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sasik",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 776,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800736492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195684/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195888"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the catch. Fixed.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:29:08Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195888",
      "id" : 745195888,
      "in_reply_to_id" : 743389384,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584saslw",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 780,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800736583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195888/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:29:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745195888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196158"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done. Rebased with master.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:29:23Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196158",
      "id" : 745196158,
      "in_reply_to_id" : 743399462,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sasp-",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 807,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800736675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196158/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196283"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:29:30Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196283",
      "id" : 745196283,
      "in_reply_to_id" : 743399785,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sasr7",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 886,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800736737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196283/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:29:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196411"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:29:37Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)\n+    // the packet length excludes the 16 byte MAC tag\n+    uint32_t packet_length = serialized_command_size + msg.data.size();\n+\n+    // prepare the packet length & message command and reserve 4 bytes (3bytes AAD + 1byte short-ID)\n+    std::vector<unsigned char> serialized_header(CHACHA20_POLY1305_AEAD_AAD_LEN + 1);\n+    // LE serialize the 24bits length\n+    // we do \"manually\" encode this since there is no helper for 24bit serialization\n+    packet_length = htole32(packet_length);\n+    memcpy(serialized_header.data(), &packet_length, 3);\n+\n+    // append the short-ID or (eventually) the varstr of the command\n+    CVectorWriter vector_writer(SER_NETWORK, INIT_PROTO_VERSION, serialized_header, 3);\n+    if (cmd_short_id) {\n+        // append the single byte short ID...\n+        vector_writer << cmd_short_id.value();\n+    } else {\n+        // or the ASCII command string\n+        vector_writer << msg.m_type;\n+    }\n+\n+    // insert header directly into the CSerializedNetMsg data buffer (insert at begin)\n+    // TODO: if we refactor the ChaCha20Poly1350 crypt function to allow separate buffers for\n+    //       the AD, payload and MAC, we could avoid a insert and thus a potential reallocation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196411",
      "id" : 745196411,
      "in_reply_to_id" : 743400111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sast7",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 909,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800736801,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:29:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745196411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, so, the term \"header\" doesn't really make sense without the context of which layer we are talking about. `net` covers both transport and p2p(application) layers to some degree. For the transport layer, perhaps the \"header\" is the encrypted length. For the application layer, the p2p message type is arguably part of the \"header\". I updated the comment to be clear in a different way though.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:31:56Z",
      "diff_hunk" : "@@ -375,18 +377,86 @@ class V1TransportDeserializer final : public TransportDeserializer\n     std::optional<CNetMessage> GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size) override;\n };\n \n+/** V2TransportDeserializer is a transport deserializer after BIP324 */\n+class V2TransportDeserializer final : public TransportDeserializer\n+{\n+private:\n+    std::unique_ptr<ChaCha20Poly1305AEAD> m_aead;\n+    const NodeId m_node_id;      // Only for logging\n+    bool m_in_data = false;      // parsing header (false) or data (true)\n+    uint32_t m_message_size = 0; // expected message size\n+    CDataStream vRecv;           // received message data",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197474",
      "id" : 745197474,
      "in_reply_to_id" : 743402532,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sas-i",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 388,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 800737843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197510"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:32:02Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        return std::nullopt;\n+    }\n+\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    std::optional<CNetMessage> msg(std::move(vRecv)); // result in a message with CDataStream with readpos pointing to the message payload\n+    msg->m_command = command_name;\n+\n+    // if we could successfully decrypt the message, the message no longer contains the \"header\" (AAD & MAC)\n+    // if failed to decrypt â which we tolerate at this point â we need to reduce the message size by the length of the AAD & MAC\n+    // to conform to the abstract TransportDeserializer protocol\n+    msg->m_message_size = valid_checksum ? msg->m_recv.size() : (msg->m_recv.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    msg->m_raw_message_size = CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN; // raw wire size\n+\n+    // store receive time\n+    msg->m_time = time;\n+\n+    Reset();\n+    return msg;\n+}\n+\n+bool V2TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header)\n+{\n+    size_t serialized_command_size = 1; // short-IDs are 1 byte\n+    std::optional<uint8_t> cmd_short_id = GetShortIDFromMessageType(msg.m_type);\n+    if (!cmd_short_id) {\n+        // message command without an assigned short-ID\n+        assert(msg.m_type.size() <= NET_P2P_V2_CMD_MAX_CHARS_SIZE);\n+        // encode as varstr, max 12 chars\n+        serialized_command_size = ::GetSerializeSize(msg.m_type, PROTOCOL_VERSION);\n+    }\n+    // prepare the packet length that will later be encrypted and part of the MAC (AD)\n+    // the packet length excludes the 16 byte MAC tag\n+    uint32_t packet_length = serialized_command_size + msg.data.size();\n+\n+    // prepare the packet length & message command and reserve 4 bytes (3bytes AAD + 1byte short-ID)\n+    std::vector<unsigned char> serialized_header(CHACHA20_POLY1305_AEAD_AAD_LEN + 1);\n+    // LE serialize the 24bits length\n+    // we do \"manually\" encode this since there is no helper for 24bit serialization\n+    packet_length = htole32(packet_length);\n+    memcpy(serialized_header.data(), &packet_length, 3);\n+\n+    // append the short-ID or (eventually) the varstr of the command\n+    CVectorWriter vector_writer(SER_NETWORK, INIT_PROTO_VERSION, serialized_header, 3);\n+    if (cmd_short_id) {\n+        // append the single byte short ID...\n+        vector_writer << cmd_short_id.value();\n+    } else {\n+        // or the ASCII command string\n+        vector_writer << msg.m_type;\n+    }\n+\n+    // insert header directly into the CSerializedNetMsg data buffer (insert at begin)\n+    // TODO: if we refactor the ChaCha20Poly1350 crypt function to allow separate buffers for",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197510",
      "id" : 745197510,
      "in_reply_to_id" : 743404596,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sas_G",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 908,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800737884,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197510/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:32:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197555"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:32:08Z",
      "diff_hunk" : "@@ -755,7 +758,170 @@ std::optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    // we keep the sequence numbers unchanged at this point. Once the message is authenticated and decrypted, we increase the sequence numbers (or the aad_pos)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > MAX_SIZE) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+std::optional<CNetMessage> V2TransportDeserializer::GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size)\n+{\n+    // In v2, vRecv contains the encrypted payload plus the MAC tag (1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197555",
      "id" : 745197555,
      "in_reply_to_id" : 743408559,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sas_z",
      "original_commit_id" : "a53a06cc75a9f07e6211d5770ea8fcd0e7ecb2f7",
      "original_line" : 809,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 800737917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197708"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, that was quite silly. Thanks for reviewing closely. Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:32:29Z",
      "diff_hunk" : "@@ -704,4 +705,82 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n     BOOST_CHECK(!IsLocal(addr));\n }\n \n+void message_serialize_deserialize_test(bool v2, const std::vector<CSerializedNetMsg>& test_msgs)\n+{\n+    // use 32 byte keys with all zeros\n+    CPrivKey k1(32, 0);\n+    CPrivKey k2(32, 0);\n+\n+    // construct the serializers\n+    std::unique_ptr<TransportSerializer> serializer;\n+    std::unique_ptr<TransportDeserializer> deserializer;\n+\n+    if (v2) {\n+        serializer = std::make_unique<V2TransportSerializer>(V2TransportSerializer(k1, k2));\n+        deserializer = std::make_unique<V2TransportDeserializer>(V2TransportDeserializer((NodeId)0, k1, k2));\n+    } else {\n+        serializer = std::make_unique<V1TransportSerializer>(V1TransportSerializer());\n+        deserializer = std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), (NodeId)0, SER_NETWORK, INIT_PROTO_VERSION));\n+    }\n+    // run a couple of times through all messages with the same AEAD instance\n+    for (unsigned int i = 0; i < 100; i++) {\n+        for (const CSerializedNetMsg& msg_orig : test_msgs) {\n+            // bypass the copy protection\n+            CSerializedNetMsg msg;\n+            msg.data = msg_orig.data;\n+            msg.m_type = msg_orig.m_type;\n+            size_t raw_msg_size = msg.data.size();\n+\n+            std::vector<unsigned char> serialized_header;\n+            serializer->prepareForTransport(msg, serialized_header);\n+\n+            // read two times\n+            //  first: read header\n+            size_t read_bytes = 0;\n+            Span<const uint8_t> span_header(serialized_header.data(), serialized_header.size());\n+            if (serialized_header.size() > 0) read_bytes += deserializer->Read(span_header);\n+            //  second: read the encrypted payload (if required)\n+            Span<const uint8_t> span_msg(msg.data.data(), msg.data.size());\n+            if (msg.data.size() > 0) read_bytes += deserializer->Read(span_msg);\n+            if (msg.data.size() > read_bytes && msg.data.size() - read_bytes > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197708",
      "id" : 745197708,
      "in_reply_to_id" : 743409108,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584satCM",
      "original_commit_id" : "1820cdfa18736ecaa6e053c50e667a17bcdd348c",
      "original_line" : 745,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 800738074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197708/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T00:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197708",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:32:36Z",
      "diff_hunk" : "@@ -704,4 +705,82 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n     BOOST_CHECK(!IsLocal(addr));\n }\n \n+void message_serialize_deserialize_test(bool v2, const std::vector<CSerializedNetMsg>& test_msgs)\n+{\n+    // use 32 byte keys with all zeros\n+    CPrivKey k1(32, 0);\n+    CPrivKey k2(32, 0);\n+\n+    // construct the serializers\n+    std::unique_ptr<TransportSerializer> serializer;\n+    std::unique_ptr<TransportDeserializer> deserializer;\n+\n+    if (v2) {\n+        serializer = std::make_unique<V2TransportSerializer>(V2TransportSerializer(k1, k2));\n+        deserializer = std::make_unique<V2TransportDeserializer>(V2TransportDeserializer((NodeId)0, k1, k2));\n+    } else {\n+        serializer = std::make_unique<V1TransportSerializer>(V1TransportSerializer());\n+        deserializer = std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), (NodeId)0, SER_NETWORK, INIT_PROTO_VERSION));\n+    }\n+    // run a couple of times through all messages with the same AEAD instance\n+    for (unsigned int i = 0; i < 100; i++) {\n+        for (const CSerializedNetMsg& msg_orig : test_msgs) {\n+            // bypass the copy protection\n+            CSerializedNetMsg msg;\n+            msg.data = msg_orig.data;\n+            msg.m_type = msg_orig.m_type;\n+            size_t raw_msg_size = msg.data.size();\n+\n+            std::vector<unsigned char> serialized_header;\n+            serializer->prepareForTransport(msg, serialized_header);\n+\n+            // read two times\n+            //  first: read header\n+            size_t read_bytes = 0;\n+            Span<const uint8_t> span_header(serialized_header.data(), serialized_header.size());\n+            if (serialized_header.size() > 0) read_bytes += deserializer->Read(span_header);\n+            //  second: read the encrypted payload (if required)\n+            Span<const uint8_t> span_msg(msg.data.data(), msg.data.size());\n+            if (msg.data.size() > 0) read_bytes += deserializer->Read(span_msg);\n+            if (msg.data.size() > read_bytes && msg.data.size() - read_bytes > 0) {\n+                Span<const uint8_t> span_msg(msg.data.data() + read_bytes, msg.data.size() - read_bytes);\n+                read_bytes += deserializer->Read(span_msg);\n+            }\n+            BOOST_CHECK(deserializer->Complete());\n+            BOOST_CHECK_EQUAL(read_bytes, msg.data.size() + serialized_header.size());\n+            // message must be complete\n+            uint32_t out_err_raw_size{0};\n+            std::optional<CNetMessage> result{deserializer->GetMessage(GetTime<std::chrono::microseconds>(), out_err_raw_size)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197760",
      "id" : 745197760,
      "in_reply_to_id" : 743411366,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584satDA",
      "original_commit_id" : "1820cdfa18736ecaa6e053c50e667a17bcdd348c",
      "original_line" : 753,
      "original_position" : 57,
      "original_start_line" : 752,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 800738117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-09T00:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-09T00:32:44Z",
      "diff_hunk" : "@@ -0,0 +1,43 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha_poly_aead.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(32, 0);\n+    const CPrivKey k2(32, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+\n+    while (buffer.size() > 0) {\n+        const int handled = deserializer.Read(buffer);\n+        if (handled < 0) {\n+            break;\n+        }\n+        if (deserializer.Complete()) {\n+            const std::chrono::microseconds m_time{std::numeric_limits<int64_t>::max()};\n+            uint32_t out_err_raw_size{0};\n+            std::optional<CNetMessage> result{deserializer.GetMessage(m_time, out_err_raw_size)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197826",
      "id" : 745197826,
      "in_reply_to_id" : 743412234,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584satEC",
      "original_commit_id" : "757d68c0f359b117e226c9c04ff6e4ec7b92a71a",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : 29,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : null,
      "pull_request_review_id" : 800738173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-09T00:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745197826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r751429722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751429722"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note for myself: This should result in a dropped connection, not just a rejected message.",
      "commit_id" : "2f4211313c3598c14b1b5a7cd09628fba203139d",
      "created_at" : "2021-11-17T16:45:03Z",
      "diff_hunk" : "@@ -756,7 +761,174 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > V2_MAX_PAYLOAD_LENGTH) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+\n+CNetMessage V2TransportDeserializer::GetMessage(const std::chrono::microseconds time, bool& reject_message)\n+{\n+    // Initialize out parameter\n+    reject_message = false;\n+\n+    // In v2, vRecv contains the encrypted length (AAD), encrypted payload plus the MAC tag\n+    // (3 bytes AAD + 1-13 bytes serialized message command + ? bytes message payload + 16 byte MAC tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        reject_message = true;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        reject_message = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r751429722",
      "id" : 751429722,
      "line" : 863,
      "node_id" : "PRRC_kwDOABII584syeha",
      "original_commit_id" : "286c0b881f5354edd6e083a97c5c60ffe9c34693",
      "original_line" : 863,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 130,
      "pull_request_review_id" : 808851626,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751429722/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T16:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/751429722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r755584647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755584647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "0305c31cb447cd37272303dac0b01c911c4124a6",
      "created_at" : "2021-11-23T23:29:39Z",
      "diff_hunk" : "@@ -756,7 +761,174 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > V2_MAX_PAYLOAD_LENGTH) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(std::min(CHACHA20_POLY1305_AEAD_AAD_LEN + m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN, CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes + 256 * 1024 + CHACHA20_POLY1305_AEAD_TAG_LEN));\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+\n+CNetMessage V2TransportDeserializer::GetMessage(const std::chrono::microseconds time, bool& reject_message)\n+{\n+    // Initialize out parameter\n+    reject_message = false;\n+\n+    // In v2, vRecv contains the encrypted length (AAD), encrypted payload plus the MAC tag\n+    // (3 bytes AAD + 1-13 bytes serialized message command + ? bytes message payload + 16 byte MAC tag)\n+    assert(Complete());\n+\n+    // defensive decoding (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails), we always increase the AEAD sequence numbers\n+    bool valid_checksum = false;\n+    bool valid_header = false;\n+    std::string command_name;\n+\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        valid_checksum = true;\n+\n+        // okay, we could decrypt it, now remove packet length and MAC tag\n+        assert(vRecv.size() > CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid command name\\n\");\n+        }\n+        valid_header = true;\n+        if (size_or_shortid > 0 && size_or_shortid <= NET_P2P_V2_CMD_MAX_CHARS_SIZE && vRecv.size() >= size_or_shortid) {\n+            // first byte is a number between 1 and 12. Must be a string command.\n+            // use direct read since we already read the varlens size uint8_t\n+            command_name.resize(size_or_shortid);\n+            vRecv.read(&command_name[0], size_or_shortid);\n+        } else {\n+            // try for short ID in case the first byte is a number larger than 12\n+            if (!GetMessageTypeFromShortID(size_or_shortid, command_name)) {\n+                // unknown-short-id\n+                // results in a valid but unknown message (will be skipped)\n+                command_name = \"unknown-\" + ToString(size_or_shortid);\n+            }\n+        }\n+    }\n+    if (!valid_header) {\n+        LogPrint(BCLog::NET, \"PACKAGE FORMAT ERROR, peer=%d\\n\", m_node_id);\n+        Reset();\n+        reject_message = true;\n+    } else if (!valid_checksum) {\n+        LogPrint(BCLog::NET, \"DECRYPTION INVALID MAC, peer=%d\\n\", m_node_id);\n+        Reset();\n+        reject_message = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r755584647",
      "id" : 755584647,
      "in_reply_to_id" : 751429722,
      "line" : 864,
      "node_id" : "PRRC_kwDOABII584tCU6H",
      "original_commit_id" : "286c0b881f5354edd6e083a97c5c60ffe9c34693",
      "original_line" : 864,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 159,
      "pull_request_review_id" : 814284286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755584647/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-23T23:29:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755584647",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushed changes to enforce connection termination upon finding an invalid mac tag. Ready for further review.",
      "created_at" : "2021-11-23T23:29:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-977279224",
      "id" : 977279224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5846QBj4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/977279224/reactions"
      },
      "updated_at" : "2021-11-23T23:29:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/977279224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@stratospher found a couple crashing fuzz [seeds](https://github.com/bitcoin/bitcoin/files/7656364/crash-seeds.zip). They were occurring because the fuzz test allowed for a mac_assist to be provided even if the length was not assisted. And when that happens, the test assertion for a valid mac tag would fail.\r\n\r\nRebased with master due to unrelated tests failing on CI.\r\n\r\nReady for further review.\r\n\r\n",
      "created_at" : "2021-12-05T16:33:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-986261170",
      "id" : 986261170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5846ySay",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/986261170/reactions"
      },
      "updated_at" : "2021-12-05T16:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/986261170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771520711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771520711"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please add a reference in the doc-comment that these are defined in BIP324, section Message-Type-ID.",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T16:17:58Z",
      "diff_hunk" : "@@ -46,46 +46,44 @@ const char *CFCHECKPT=\"cfcheckpt\";\n const char *WTXIDRELAY=\"wtxidrelay\";\n } // namespace NetMsgType\n \n-/** All known message types. Keep this in the same order as the list of\n+/** All known message types including the short-ID. Keep this in the same order as the list of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771520711",
      "id" : 771520711,
      "line" : 49,
      "node_id" : "PRRC_kwDOABII584t_HjH",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 49,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/protocol.cpp",
      "position" : 5,
      "pull_request_review_id" : 835413499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771520711/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T16:18:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771520711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771529310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771529310"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Checked that this matches the table in https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#message-type-id  (but not the one in Jonas' PR https://github.com/bitcoin/bips/blob/2d331e8a897abdd09fc3af8e352bb0b74f2cbc93/bip-0324.mediawiki#message-type-id )",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T16:30:27Z",
      "diff_hunk" : "@@ -46,46 +46,44 @@ const char *CFCHECKPT=\"cfcheckpt\";\n const char *WTXIDRELAY=\"wtxidrelay\";\n } // namespace NetMsgType\n \n-/** All known message types. Keep this in the same order as the list of\n+/** All known message types including the short-ID. Keep this in the same order as the list of\n  * messages above and in protocol.h.\n  */\n-const static std::string allNetMessageTypes[] = {\n-    NetMsgType::VERSION,\n-    NetMsgType::VERACK,\n-    NetMsgType::ADDR,\n-    NetMsgType::ADDRV2,\n-    NetMsgType::SENDADDRV2,\n-    NetMsgType::INV,\n-    NetMsgType::GETDATA,\n-    NetMsgType::MERKLEBLOCK,\n-    NetMsgType::GETBLOCKS,\n-    NetMsgType::GETHEADERS,\n-    NetMsgType::TX,\n-    NetMsgType::HEADERS,\n-    NetMsgType::BLOCK,\n-    NetMsgType::GETADDR,\n-    NetMsgType::MEMPOOL,\n-    NetMsgType::PING,\n-    NetMsgType::PONG,\n-    NetMsgType::NOTFOUND,\n-    NetMsgType::FILTERLOAD,\n-    NetMsgType::FILTERADD,\n-    NetMsgType::FILTERCLEAR,\n-    NetMsgType::SENDHEADERS,\n-    NetMsgType::FEEFILTER,\n-    NetMsgType::SENDCMPCT,\n-    NetMsgType::CMPCTBLOCK,\n-    NetMsgType::GETBLOCKTXN,\n-    NetMsgType::BLOCKTXN,\n-    NetMsgType::GETCFILTERS,\n-    NetMsgType::CFILTER,\n-    NetMsgType::GETCFHEADERS,\n-    NetMsgType::CFHEADERS,\n-    NetMsgType::GETCFCHECKPT,\n-    NetMsgType::CFCHECKPT,\n-    NetMsgType::WTXIDRELAY,\n-};\n-const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));\n+const static std::map<uint8_t, std::string> allNetMessageTypes = {\n+    {37, NetMsgType::VERSION},\n+    {36, NetMsgType::VERACK},\n+    {13, NetMsgType::ADDR},\n+    {45, NetMsgType::ADDRV2},\n+    {46, NetMsgType::SENDADDRV2},\n+    {27, NetMsgType::INV},\n+    {24, NetMsgType::GETDATA},\n+    {29, NetMsgType::MERKLEBLOCK},\n+    {22, NetMsgType::GETBLOCKS},\n+    {25, NetMsgType::GETHEADERS},\n+    {35, NetMsgType::TX},\n+    {26, NetMsgType::HEADERS},\n+    {14, NetMsgType::BLOCK},\n+    {21, NetMsgType::GETADDR},\n+    {28, NetMsgType::MEMPOOL},\n+    {31, NetMsgType::PING},\n+    {32, NetMsgType::PONG},\n+    {30, NetMsgType::NOTFOUND},\n+    {20, NetMsgType::FILTERLOAD},\n+    {18, NetMsgType::FILTERADD},\n+    {19, NetMsgType::FILTERCLEAR},\n+    {34, NetMsgType::SENDHEADERS},\n+    {17, NetMsgType::FEEFILTER},\n+    {33, NetMsgType::SENDCMPCT},\n+    {16, NetMsgType::CMPCTBLOCK},\n+    {23, NetMsgType::GETBLOCKTXN},\n+    {15, NetMsgType::BLOCKTXN},\n+    {38, NetMsgType::GETCFILTERS},\n+    {39, NetMsgType::CFILTER},\n+    {40, NetMsgType::GETCFHEADERS},\n+    {41, NetMsgType::CFHEADERS},\n+    {42, NetMsgType::GETCFCHECKPT},\n+    {43, NetMsgType::CFCHECKPT},\n+    {44, NetMsgType::WTXIDRELAY}};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771529310",
      "id" : 771529310,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII584t_Jpe",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 86,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/protocol.cpp",
      "position" : 79,
      "pull_request_review_id" : 835425568,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771529310/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T16:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771529310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771538159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771538159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Isn't comparing at the end of the last iteration essentially the same as moving this outside the loop?",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T16:43:44Z",
      "diff_hunk" : "@@ -629,56 +616,29 @@ static void TestChaCha20Poly1305AEAD(bool must_succeed, unsigned int expected_aa\n     BOOST_CHECK_EQUAL(expected_ciphertext_and_mac.size(), ciphertext_buf.size());\n     BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac.data(), ciphertext_buf.size()) == 0);\n \n-    // manually construct the AAD keystream\n-    cmp_ctx.SetIV(seqnr_aad);\n-    cmp_ctx.Seek(0);\n-    cmp_ctx.Keystream(cmp_ctx_buffer.data(), 64);\n-    BOOST_CHECK(memcmp(expected_aad_keystream.data(), cmp_ctx_buffer.data(), expected_aad_keystream.size()) == 0);\n-    // crypt the 3 length bytes and compare the length\n-    uint32_t len_cmp = 0;\n-    len_cmp = (ciphertext_buf[0] ^ cmp_ctx_buffer[aad_pos + 0]) |\n-              (ciphertext_buf[1] ^ cmp_ctx_buffer[aad_pos + 1]) << 8 |\n-              (ciphertext_buf[2] ^ cmp_ctx_buffer[aad_pos + 2]) << 16;\n-    BOOST_CHECK_EQUAL(len_cmp, expected_aad_length);\n-\n-    // encrypt / decrypt 1000 packets\n+    out_len = aead_in.DecryptLength(ciphertext_buf.data());\n+    BOOST_CHECK_EQUAL(out_len, expected_aad_length);\n+    res = aead_in.Crypt(plaintext_buf.data(), plaintext_buf.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n+    BOOST_CHECK_EQUAL(res, must_succeed);\n+    WriteLE32(plaintext_buf.data(), out_len);\n+\n+    // encrypt / decrypt the packet 1000 times\n     for (size_t i = 0; i < 1000; ++i) {\n-        res = aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, ciphertext_buf.data(), ciphertext_buf.size(), plaintext_buf.data(), plaintext_buf.size(), true);\n+        res = aead_out.Crypt(ciphertext_buf.data(), ciphertext_buf.size(), plaintext_buf.data(), plaintext_buf.size(), true);\n         BOOST_CHECK(res);\n-        BOOST_CHECK(aead.GetLength(&out_len, seqnr_aad, aad_pos, ciphertext_buf.data()));\n+        out_len = aead_in.DecryptLength(ciphertext_buf.data());\n         BOOST_CHECK_EQUAL(out_len, expected_aad_length);\n-        res = aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, plaintext_buf_new.data(), plaintext_buf_new.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n+        res = aead_in.Crypt(plaintext_buf_new.data(), plaintext_buf_new.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n         BOOST_CHECK(res);\n \n+        // length is not decrypted, copy it over\n+        WriteLE32(plaintext_buf_new.data(), out_len);\n+\n         // make sure we repetitive get the same plaintext\n         BOOST_CHECK(memcmp(plaintext_buf.data(), plaintext_buf_new.data(), plaintext_buf.size()) == 0);\n \n-        // compare sequence number 999 against the test vector\n-        if (seqnr_payload == 999) {\n-            BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac_sequence999.data(), expected_ciphertext_and_mac_sequence999.size()) == 0);\n-        }\n-        // set nonce and block counter, output the keystream\n-        cmp_ctx.SetIV(seqnr_aad);\n-        cmp_ctx.Seek(0);\n-        cmp_ctx.Keystream(cmp_ctx_buffer.data(), 64);\n-\n-        // crypt the 3 length bytes and compare the length\n-        len_cmp = 0;\n-        len_cmp = (ciphertext_buf[0] ^ cmp_ctx_buffer[aad_pos + 0]) |\n-                  (ciphertext_buf[1] ^ cmp_ctx_buffer[aad_pos + 1]) << 8 |\n-                  (ciphertext_buf[2] ^ cmp_ctx_buffer[aad_pos + 2]) << 16;\n-        BOOST_CHECK_EQUAL(len_cmp, expected_aad_length);\n-\n-        // increment the sequence number(s)\n-        // always increment the payload sequence number\n-        // increment the AAD keystream position by its size (3)\n-        // increment the AAD sequence number if we would hit the 64 byte limit\n-        seqnr_payload++;\n-        aad_pos += CHACHA20_POLY1305_AEAD_AAD_LEN;\n-        if (aad_pos + CHACHA20_POLY1305_AEAD_AAD_LEN > CHACHA20_ROUND_OUTPUT) {\n-            aad_pos = 0;\n-            seqnr_aad++;\n-        }\n+        // compare at iteration 999 against the test vector\n+        if (i == 999) BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac_sequence999.data(), expected_ciphertext_and_mac_sequence999.size()) == 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771538159",
      "id" : 771538159,
      "line" : 641,
      "node_id" : "PRRC_kwDOABII584t_Lzv",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 641,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/test/crypto_tests.cpp",
      "position" : 110,
      "pull_request_review_id" : 835437970,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771538159/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T16:43:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771538159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771571024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771571024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo in comment",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T17:35:06Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771571024",
      "id" : 771571024,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII584t_T1Q",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : 28,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771571024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771571024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771572445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771572445"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please use our own `WriteLE32` here instead of `htole32` and `memcmp` directly",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T17:37:41Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.\n+    bool mac_assist = length_assist && fuzzed_data_provider.ConsumeBool();\n+    auto payload_bytes = fuzzed_data_provider.ConsumeRemainingBytes<uint8_t>();\n+\n+    if (payload_bytes.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN) {\n+        if (length_assist) {\n+            uint32_t packet_length = payload_bytes.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN;\n+            packet_length = htole32(packet_length);\n+            memcpy(payload_bytes.data(), &packet_length, 3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771572445",
      "id" : 771572445,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII584t_ULd",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : 36,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771572445/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771572445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771577330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771577330"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would prefer to return a `std::optional<std::string>` instead of a separate bool and output argument (more symmetrical with GetShortIDFromMessageType as well).",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T17:46:00Z",
      "diff_hunk" : "@@ -265,7 +265,17 @@ extern const char* WTXIDRELAY;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */\n-const std::vector<std::string>& getAllNetMessageTypes();\n+const std::map<uint8_t, std::string>& getAllNetMessageTypes();\n+\n+/** Short message type IDs are a low bandwidth representations of a message type\n+ *   The mapping is a peer to peer agreement\n+ *\n+ *   returns the short ID for a message type (if known) */\n+std::optional<uint8_t> GetShortIDFromMessageType(const std::string& message_type);\n+\n+/** returns the message type (string) from a short ID\n+ * returns an empty string if short ID has not been found */\n+bool GetMessageTypeFromShortID(const uint8_t shortID, std::string& message_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771577330",
      "id" : 771577330,
      "line" : 278,
      "node_id" : "PRRC_kwDOABII584t_VXy",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 278,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 15,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771577330/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771577330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771579687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771579687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use `Span` instead of `const unsigned char*, size_t`` pairs (here and in some other places)",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T17:50:01Z",
      "diff_hunk" : "@@ -27,20 +26,56 @@ int timingsafe_bcmp(const unsigned char* b1, const unsigned char* b2, size_t n)\n \n #endif // TIMINGSAFE_BCMP\n \n-ChaCha20Poly1305AEAD::ChaCha20Poly1305AEAD(const unsigned char* K_1, size_t K_1_len, const unsigned char* K_2, size_t K_2_len)\n+ChaCha20Forward4064::ChaCha20Forward4064(const unsigned char* key, size_t keylen)\n {\n-    assert(K_1_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n-    assert(K_2_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    assert(keylen == 32);\n+    m_ctx.SetKey(key, keylen);\n \n-    m_chacha_header.SetKey(K_1, CHACHA20_POLY1305_AEAD_KEY_LEN);\n-    m_chacha_main.SetKey(K_2, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    // Set IV to the initial sequence number 0.\n+    m_ctx.SetIV(m_seqnr);\n \n-    // set the cached sequence number to uint64 max which hints for an unset cache.\n-    // we can't hit uint64 max since the rekey rule (which resets the sequence number) is 1GB\n-    m_cached_aad_seqnr = std::numeric_limits<uint64_t>::max();\n+    // precompute first chunk of keystream\n+    m_ctx.Keystream(m_keystream, KEYSTREAM_SIZE);\n }\n \n-bool ChaCha20Poly1305AEAD::Crypt(uint64_t seqnr_payload, uint64_t seqnr_aad, int aad_pos, unsigned char* dest, size_t dest_len /* length of the output buffer for sanity checks */, const unsigned char* src, size_t src_len, bool is_encrypt)\n+void ChaCha20Forward4064::Crypt(const unsigned char* input, unsigned char* output, size_t bytes)\n+{\n+    size_t message_pos = 0;\n+\n+    // TODO: speedup with a block approach (rather then looping over every byte)\n+    while (bytes > message_pos) {\n+        output[message_pos] = input[message_pos] ^ m_keystream[m_keystream_pos];\n+        m_keystream_pos++;\n+        message_pos++;\n+        if (m_keystream_pos == KEYSTREAM_SIZE - CHACHA20_POLY1305_AEAD_KEY_LEN) {\n+            // we reached the end of the keystream\n+            // rekey with the remaining and last 32 bytes and precompute the next 4096 bytes\n+            m_ctx.SetKey(&m_keystream[m_keystream_pos], CHACHA20_POLY1305_AEAD_KEY_LEN);\n+\n+            // m_ctx.SetKey() sets both IV and counter to zero, but we need the IV to increment.\n+            m_ctx.SetIV(++m_seqnr);\n+            m_ctx.Keystream(m_keystream, KEYSTREAM_SIZE);\n+            // reset keystream position\n+            m_keystream_pos = 0;\n+        }\n+    }\n+}\n+\n+ChaCha20Forward4064::~ChaCha20Forward4064()\n+{\n+    memory_cleanse(m_keystream, KEYSTREAM_SIZE);\n+}\n+\n+ChaCha20Poly1305AEAD::ChaCha20Poly1305AEAD(const unsigned char* K_1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771579687",
      "id" : 771579687,
      "line" : 69,
      "node_id" : "PRRC_kwDOABII584t_V8n",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 69,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/crypto/chacha_poly_aead.cpp",
      "position" : 71,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771579687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771579687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771583584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771583584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is a linear iteration fast enough here? Or would it be better to build a hash table the other way around as well?",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T17:56:29Z",
      "diff_hunk" : "@@ -225,3 +223,23 @@ GenTxid ToGenTxid(const CInv& inv)\n     assert(inv.IsGenTxMsg());\n     return inv.IsMsgWtx() ? GenTxid::Wtxid(inv.hash) : GenTxid::Txid(inv.hash);\n }\n+\n+std::optional<uint8_t> GetShortIDFromMessageType(const std::string& message_type)\n+{\n+    for (const std::pair<uint8_t, std::string> entry : allNetMessageTypes) {\n+        if (entry.second == message_type) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771583584",
      "id" : 771583584,
      "line" : 230,
      "node_id" : "PRRC_kwDOABII584t_W5g",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 230,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/protocol.cpp",
      "position" : 103,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771583584/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771583584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771588744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771588744"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why an int not a `size_t`?",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T18:05:21Z",
      "diff_hunk" : "@@ -40,107 +39,109 @@ static constexpr int AAD_PACKAGES_PER_ROUND = 21;        /* 64 / 3 round down*/\n  * output from the key exchange. Each key (K_1 and K_2) are used by two separate\n  * instances of chacha20.\n  *\n- * The instance keyed by K_1 is a stream cipher that is used only to encrypt the 3\n- * byte packet length field and has its own sequence number. The second instance,\n- * keyed by K_2, is used in conjunction with poly1305 to build an AEAD\n- * (Authenticated Encryption with Associated Data) that is used to encrypt and\n- * authenticate the entire packet.\n+ * The instance keyed by K_1 is a stream cipher that is used for the per-message\n+ * metadata, specifically for the poly1305 authentication key as well as for the\n+ * length encryption. The second instance, keyed by K_2, is used to encrypt the\n+ * entire payload.\n  *\n  * Two separate cipher instances are used here so as to keep the packet lengths\n- * confidential but not create an oracle for the packet payload cipher by\n- * decrypting and using the packet length prior to checking the MAC. By using an\n- * independently-keyed cipher instance to encrypt the length, an active attacker\n- * seeking to exploit the packet input handling as a decryption oracle can learn\n- * nothing about the payload contents or its MAC (assuming key derivation,\n- * ChaCha20 and Poly1305 are secure).\n- *\n- * The AEAD is constructed as follows: for each packet, generate a Poly1305 key by\n- * taking the first 256 bits of ChaCha20 stream output generated using K_2, an IV\n- * consisting of the packet sequence number encoded as an LE uint64 and a ChaCha20\n- * block counter of zero. The K_2 ChaCha20 block counter is then set to the\n- * little-endian encoding of 1 (i.e. {1, 0, 0, 0, 0, 0, 0, 0}) and this instance\n- * is used for encryption of the packet payload.\n+ * confidential (best effort; for passive observing) but not create an oracle for\n+ * the packet payload cipher by decrypting and using the packet length prior to\n+ * checking the MAC. By using an independently-keyed cipher instance to encrypt\n+ * the length, an active attacker seeking to exploit the packet input handling as\n+ * a decryption oracle can learn nothing about the payload contents or its MAC\n+ * (assuming key derivation, ChaCha20 and Poly1305 are secure). Active observers\n+ * can still obtain the message length (ex. active ciphertext bit flipping or\n+ * traffic semantics analysis)\n  *\n- * ==== Packet Handling ====\n+ * The AEAD is constructed as follows: generate two ChaCha20 streams, initially\n+ * keyed with K_1 and K_2 and sequence number 0 as IV and a block counter of 0.\n+ * After encrypting 4064 bytes, the following 32 bytes are used to\n+ * re-key the ChaCha20 context.\n  *\n- * When receiving a packet, the length must be decrypted first. When 3 bytes of\n- * ciphertext length have been received, they may be decrypted.\n+ * Byte-level forward security is possible by precomputing 4096 bytes of stream\n+ * output, caching it, resetting the key to the final 32 bytes of the output, and\n+ * then wiping the remaining 4064 bytes of cached data as it gets used.\n+ *\n+ * For each packet, use 3 bytes from the remaining ChaCha20 stream generated using\n+ * K_1 to encrypt the length. Use additional 32 bytes of the same stream to\n+ * generate a Poly1305 key.\n  *\n- * A ChaCha20 round always calculates 64bytes which is sufficient to crypt 21\n- * times a 3 bytes length field (21*3 = 63). The length field sequence number can\n- * thus be used 21 times (keystream caching).\n+ * If we reach bytes 4064 on the ChaCha20 stream, use the next 32 bytes (byte\n+ * 4065-4096) and set is as the new ChaCha20 key, reset the counter to 0 while\n+ * incrementing the sequence number + 1 and set is as IV (little endian encoding).\n  *\n- * The length field must be enc-/decrypted with the ChaCha20 keystream keyed with\n- * K_1 defined by block counter 0, the length field sequence number in little\n- * endian and a keystream position from 0 to 60.\n+ * For the payload, use the ChaCha20 stream keyed with K_2 and apply the same\n+ * re-key rules.\n+ *\n+ *\n+ * ==== Packet Handling ====\n+ *\n+ * When receiving a packet, the length must be decrypted first. When 3 bytes of\n+ * ciphertext length have been received, they MUST be decrypted.\n  *\n  * Once the entire packet has been received, the MAC MUST be checked before\n  * decryption. A per-packet Poly1305 key is generated as described above and the\n- * MAC tag calculated using Poly1305 with this key over the ciphertext of the\n+ * MAC tag is calculated using Poly1305 with this key over the ciphertext of the\n  * packet length and the payload together. The calculated MAC is then compared in\n  * constant time with the one appended to the packet and the packet decrypted\n- * using ChaCha20 as described above (with K_2, the packet sequence number as\n- * nonce and a starting block counter of 1).\n+ * using ChaCha20 as described above (using stream keyed with K_2).\n  *\n  * Detection of an invalid MAC MUST lead to immediate connection termination.\n  *\n- * To send a packet, first encode the 3 byte length and encrypt it using K_1 as\n- * described above. Encrypt the packet payload (using K_2) and append it to the\n- * encrypted length. Finally, calculate a MAC tag and append it.\n- *\n- * The initiating peer MUST use <code>K_1_A, K_2_A</code> to encrypt messages on\n- * the send channel, <code>K_1_B, K_2_B</code> MUST be used to decrypt messages on\n- * the receive channel.\n- *\n- * The responding peer MUST use <code>K_1_A, K_2_A</code> to decrypt messages on\n- * the receive channel, <code>K_1_B, K_2_B</code> MUST be used to encrypt messages\n- * on the send channel.\n- *\n- * Optimized implementations of ChaCha20-Poly1305@bitcoin are relatively fast in\n- * general, therefore it is very likely that encrypted messages require not more\n- * CPU cycles per bytes then the current unencrypted p2p message format\n- * (ChaCha20/Poly1305 versus double SHA256).\n- *\n- * The initial packet sequence numbers are 0.\n- *\n- * K_2 ChaCha20 cipher instance (payload) must never reuse a {key, nonce} for\n- * encryption nor may it be used to encrypt more than 2^70 bytes under the same\n- * {key, nonce}.\n- *\n- * K_1 ChaCha20 cipher instance (length field/AAD) must never reuse a {key, nonce,\n- * position-in-keystream} for encryption nor may it be used to encrypt more than\n- * 2^70 bytes under the same {key, nonce}.\n- *\n- * We use message sequence numbers for both communication directions.\n+ * To send a packet, first encode the 3 byte length and encrypt it using the\n+ * ChaCha20 stream keyed with K_1 as described above. Encrypt the packet payload\n+ * (using the ChaCha20 stream keyed with K_2) and append it to the encrypted\n+ * length. Finally, calculate a MAC tag (using poly1305 key from stream keyed with K_1)\n+ * and append it.\n  */\n \n+const int KEYSTREAM_SIZE = 4096;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771588744",
      "id" : 771588744,
      "line" : 99,
      "node_id" : "PRRC_kwDOABII584t_YKI",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 99,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/crypto/chacha_poly_aead.h",
      "position" : 135,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771588744/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:24:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771588744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771589966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771589966"
         }
      },
      "author_association" : "MEMBER",
      "body" : "comment: missing space after `//`",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T18:07:40Z",
      "diff_hunk" : "@@ -107,6 +110,8 @@ const std::string NET_MESSAGE_COMMAND_OTHER = \"*other*\";\n static const uint64_t RANDOMIZER_ID_NETGROUP = 0x6c0edd8036ef4036ULL; // SHA256(\"netgroup\")[0:8]\n static const uint64_t RANDOMIZER_ID_LOCALHOSTNONCE = 0xd93e69e2bbfa5735ULL; // SHA256(\"localhostnonce\")[0:8]\n static const uint64_t RANDOMIZER_ID_ADDRCACHE = 0x1cf2e4ddd306dda9ULL; // SHA256(\"addrcache\")[0:8]\n+\n+static constexpr uint8_t NET_P2P_V2_CMD_MAX_CHARS_SIZE = 12; //maximal length for V2 (BIP324) string message commands",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771589966",
      "id" : 771589966,
      "line" : 114,
      "node_id" : "PRRC_kwDOABII584t_YdO",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 114,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 22,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771589966/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771589966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771594438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771594438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to use `unsigned int` for offsets/sizes here and in `readData` instead of `size_t`?",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T18:15:50Z",
      "diff_hunk" : "@@ -776,7 +791,160 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771594438",
      "id" : 771594438,
      "line" : 798,
      "node_id" : "PRRC_kwDOABII584t_ZjG",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 798,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 73,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771594438/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771594438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771599942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771599942"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So in this case, `size_or_shortid` will stay at 0, and it can simply continue below?",
      "commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "created_at" : "2021-12-17T18:22:00Z",
      "diff_hunk" : "@@ -776,7 +791,160 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > V2_MAX_PAYLOAD_LENGTH) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(CHACHA20_POLY1305_AEAD_AAD_LEN + std::min(m_message_size, m_data_pos + copy_bytes + 256 * 1024) + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+\n+CNetMessage V2TransportDeserializer::GetMessage(const std::chrono::microseconds time, bool& reject_message, bool& disconnect)\n+{\n+    // Initialize out parameters\n+    reject_message = false;\n+    disconnect = false;\n+\n+    // In v2, vRecv contains the encrypted length (AAD), encrypted payload plus the MAC tag\n+    // (3 bytes AAD + 1-13 bytes serialized message command + ? bytes message payload + 16 byte MAC tag)\n+    assert(Complete());\n+\n+    std::string command_name;\n+\n+    // defensive decryption (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails)\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        // We can remove packet length (stored in m_message_size) and MAC tag (verified)\n+        assert(vRecv.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid message type, peer=%d\\n\", m_node_id);\n+            reject_message = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r771599942",
      "id" : 771599942,
      "line" : 868,
      "node_id" : "PRRC_kwDOABII584t_a5G",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 868,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 143,
      "pull_request_review_id" : 835484408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771599942/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771599942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358301"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:47:20Z",
      "diff_hunk" : "@@ -46,46 +46,44 @@ const char *CFCHECKPT=\"cfcheckpt\";\n const char *WTXIDRELAY=\"wtxidrelay\";\n } // namespace NetMsgType\n \n-/** All known message types. Keep this in the same order as the list of\n+/** All known message types including the short-ID. Keep this in the same order as the list of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358301",
      "id" : 789358301,
      "in_reply_to_id" : 771520711,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKbd",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 49,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/protocol.cpp",
      "position" : null,
      "pull_request_review_id" : 859106320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358301/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice suggestion. Done in #20962(where the commit belongs) and brought in here.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:47:44Z",
      "diff_hunk" : "@@ -629,56 +616,29 @@ static void TestChaCha20Poly1305AEAD(bool must_succeed, unsigned int expected_aa\n     BOOST_CHECK_EQUAL(expected_ciphertext_and_mac.size(), ciphertext_buf.size());\n     BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac.data(), ciphertext_buf.size()) == 0);\n \n-    // manually construct the AAD keystream\n-    cmp_ctx.SetIV(seqnr_aad);\n-    cmp_ctx.Seek(0);\n-    cmp_ctx.Keystream(cmp_ctx_buffer.data(), 64);\n-    BOOST_CHECK(memcmp(expected_aad_keystream.data(), cmp_ctx_buffer.data(), expected_aad_keystream.size()) == 0);\n-    // crypt the 3 length bytes and compare the length\n-    uint32_t len_cmp = 0;\n-    len_cmp = (ciphertext_buf[0] ^ cmp_ctx_buffer[aad_pos + 0]) |\n-              (ciphertext_buf[1] ^ cmp_ctx_buffer[aad_pos + 1]) << 8 |\n-              (ciphertext_buf[2] ^ cmp_ctx_buffer[aad_pos + 2]) << 16;\n-    BOOST_CHECK_EQUAL(len_cmp, expected_aad_length);\n-\n-    // encrypt / decrypt 1000 packets\n+    out_len = aead_in.DecryptLength(ciphertext_buf.data());\n+    BOOST_CHECK_EQUAL(out_len, expected_aad_length);\n+    res = aead_in.Crypt(plaintext_buf.data(), plaintext_buf.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n+    BOOST_CHECK_EQUAL(res, must_succeed);\n+    WriteLE32(plaintext_buf.data(), out_len);\n+\n+    // encrypt / decrypt the packet 1000 times\n     for (size_t i = 0; i < 1000; ++i) {\n-        res = aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, ciphertext_buf.data(), ciphertext_buf.size(), plaintext_buf.data(), plaintext_buf.size(), true);\n+        res = aead_out.Crypt(ciphertext_buf.data(), ciphertext_buf.size(), plaintext_buf.data(), plaintext_buf.size(), true);\n         BOOST_CHECK(res);\n-        BOOST_CHECK(aead.GetLength(&out_len, seqnr_aad, aad_pos, ciphertext_buf.data()));\n+        out_len = aead_in.DecryptLength(ciphertext_buf.data());\n         BOOST_CHECK_EQUAL(out_len, expected_aad_length);\n-        res = aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, plaintext_buf_new.data(), plaintext_buf_new.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n+        res = aead_in.Crypt(plaintext_buf_new.data(), plaintext_buf_new.size(), ciphertext_buf.data(), ciphertext_buf.size(), false);\n         BOOST_CHECK(res);\n \n+        // length is not decrypted, copy it over\n+        WriteLE32(plaintext_buf_new.data(), out_len);\n+\n         // make sure we repetitive get the same plaintext\n         BOOST_CHECK(memcmp(plaintext_buf.data(), plaintext_buf_new.data(), plaintext_buf.size()) == 0);\n \n-        // compare sequence number 999 against the test vector\n-        if (seqnr_payload == 999) {\n-            BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac_sequence999.data(), expected_ciphertext_and_mac_sequence999.size()) == 0);\n-        }\n-        // set nonce and block counter, output the keystream\n-        cmp_ctx.SetIV(seqnr_aad);\n-        cmp_ctx.Seek(0);\n-        cmp_ctx.Keystream(cmp_ctx_buffer.data(), 64);\n-\n-        // crypt the 3 length bytes and compare the length\n-        len_cmp = 0;\n-        len_cmp = (ciphertext_buf[0] ^ cmp_ctx_buffer[aad_pos + 0]) |\n-                  (ciphertext_buf[1] ^ cmp_ctx_buffer[aad_pos + 1]) << 8 |\n-                  (ciphertext_buf[2] ^ cmp_ctx_buffer[aad_pos + 2]) << 16;\n-        BOOST_CHECK_EQUAL(len_cmp, expected_aad_length);\n-\n-        // increment the sequence number(s)\n-        // always increment the payload sequence number\n-        // increment the AAD keystream position by its size (3)\n-        // increment the AAD sequence number if we would hit the 64 byte limit\n-        seqnr_payload++;\n-        aad_pos += CHACHA20_POLY1305_AEAD_AAD_LEN;\n-        if (aad_pos + CHACHA20_POLY1305_AEAD_AAD_LEN > CHACHA20_ROUND_OUTPUT) {\n-            aad_pos = 0;\n-            seqnr_aad++;\n-        }\n+        // compare at iteration 999 against the test vector\n+        if (i == 999) BOOST_CHECK(memcmp(ciphertext_buf.data(), expected_ciphertext_and_mac_sequence999.data(), expected_ciphertext_and_mac_sequence999.size()) == 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358417",
      "id" : 789358417,
      "in_reply_to_id" : 771538159,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKdR",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 641,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/test/crypto_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 859106474,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358417/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:56:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:47:50Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789358442",
      "id" : 789358442,
      "in_reply_to_id" : 771571024,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKdq",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : null,
      "pull_request_review_id" : 859106519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789358442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I might be missing something, but, wouldn't `WriteLE32` here mean that the fourth byte (which is the first byte in the ciphertext payload) would be written over. Is there a way for me to use `WriteLE32` only for 3 bytes?\r\n\r\nI guess that is still deterministic, so the fuzz test would work, but I'm not sure if it will work against the fuzzing engine.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:50:25Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.\n+    bool mac_assist = length_assist && fuzzed_data_provider.ConsumeBool();\n+    auto payload_bytes = fuzzed_data_provider.ConsumeRemainingBytes<uint8_t>();\n+\n+    if (payload_bytes.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN) {\n+        if (length_assist) {\n+            uint32_t packet_length = payload_bytes.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN;\n+            packet_length = htole32(packet_length);\n+            memcpy(payload_bytes.data(), &packet_length, 3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359238",
      "id" : 789359238,
      "in_reply_to_id" : 771572445,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII584vDKqG",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : 36,
      "pull_request_review_id" : 859107457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:50:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359297"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice suggestion. Done!",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:50:39Z",
      "diff_hunk" : "@@ -265,7 +265,17 @@ extern const char* WTXIDRELAY;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */\n-const std::vector<std::string>& getAllNetMessageTypes();\n+const std::map<uint8_t, std::string>& getAllNetMessageTypes();\n+\n+/** Short message type IDs are a low bandwidth representations of a message type\n+ *   The mapping is a peer to peer agreement\n+ *\n+ *   returns the short ID for a message type (if known) */\n+std::optional<uint8_t> GetShortIDFromMessageType(const std::string& message_type);\n+\n+/** returns the message type (string) from a short ID\n+ * returns an empty string if short ID has not been found */\n+bool GetMessageTypeFromShortID(const uint8_t shortID, std::string& message_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359297",
      "id" : 789359297,
      "in_reply_to_id" : 771577330,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKrB",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 278,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 859107536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:50:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359334"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This had been on my list for far too long. Thanks for the nudge. Done in #20962 and brought in here. (First commit is a separate PR #20962 and this PR builds on it).",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:50:48Z",
      "diff_hunk" : "@@ -27,20 +26,56 @@ int timingsafe_bcmp(const unsigned char* b1, const unsigned char* b2, size_t n)\n \n #endif // TIMINGSAFE_BCMP\n \n-ChaCha20Poly1305AEAD::ChaCha20Poly1305AEAD(const unsigned char* K_1, size_t K_1_len, const unsigned char* K_2, size_t K_2_len)\n+ChaCha20Forward4064::ChaCha20Forward4064(const unsigned char* key, size_t keylen)\n {\n-    assert(K_1_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n-    assert(K_2_len == CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    assert(keylen == 32);\n+    m_ctx.SetKey(key, keylen);\n \n-    m_chacha_header.SetKey(K_1, CHACHA20_POLY1305_AEAD_KEY_LEN);\n-    m_chacha_main.SetKey(K_2, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    // Set IV to the initial sequence number 0.\n+    m_ctx.SetIV(m_seqnr);\n \n-    // set the cached sequence number to uint64 max which hints for an unset cache.\n-    // we can't hit uint64 max since the rekey rule (which resets the sequence number) is 1GB\n-    m_cached_aad_seqnr = std::numeric_limits<uint64_t>::max();\n+    // precompute first chunk of keystream\n+    m_ctx.Keystream(m_keystream, KEYSTREAM_SIZE);\n }\n \n-bool ChaCha20Poly1305AEAD::Crypt(uint64_t seqnr_payload, uint64_t seqnr_aad, int aad_pos, unsigned char* dest, size_t dest_len /* length of the output buffer for sanity checks */, const unsigned char* src, size_t src_len, bool is_encrypt)\n+void ChaCha20Forward4064::Crypt(const unsigned char* input, unsigned char* output, size_t bytes)\n+{\n+    size_t message_pos = 0;\n+\n+    // TODO: speedup with a block approach (rather then looping over every byte)\n+    while (bytes > message_pos) {\n+        output[message_pos] = input[message_pos] ^ m_keystream[m_keystream_pos];\n+        m_keystream_pos++;\n+        message_pos++;\n+        if (m_keystream_pos == KEYSTREAM_SIZE - CHACHA20_POLY1305_AEAD_KEY_LEN) {\n+            // we reached the end of the keystream\n+            // rekey with the remaining and last 32 bytes and precompute the next 4096 bytes\n+            m_ctx.SetKey(&m_keystream[m_keystream_pos], CHACHA20_POLY1305_AEAD_KEY_LEN);\n+\n+            // m_ctx.SetKey() sets both IV and counter to zero, but we need the IV to increment.\n+            m_ctx.SetIV(++m_seqnr);\n+            m_ctx.Keystream(m_keystream, KEYSTREAM_SIZE);\n+            // reset keystream position\n+            m_keystream_pos = 0;\n+        }\n+    }\n+}\n+\n+ChaCha20Forward4064::~ChaCha20Forward4064()\n+{\n+    memory_cleanse(m_keystream, KEYSTREAM_SIZE);\n+}\n+\n+ChaCha20Poly1305AEAD::ChaCha20Poly1305AEAD(const unsigned char* K_1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359334",
      "id" : 789359334,
      "in_reply_to_id" : 771579687,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKrm",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 69,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/crypto/chacha_poly_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 859107578,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359334/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:50:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359412"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doesn't hurt! Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:51:04Z",
      "diff_hunk" : "@@ -225,3 +223,23 @@ GenTxid ToGenTxid(const CInv& inv)\n     assert(inv.IsGenTxMsg());\n     return inv.IsMsgWtx() ? GenTxid::Wtxid(inv.hash) : GenTxid::Txid(inv.hash);\n }\n+\n+std::optional<uint8_t> GetShortIDFromMessageType(const std::string& message_type)\n+{\n+    for (const std::pair<uint8_t, std::string> entry : allNetMessageTypes) {\n+        if (entry.second == message_type) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359412",
      "id" : 789359412,
      "in_reply_to_id" : 771583584,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKs0",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 230,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/protocol.cpp",
      "position" : null,
      "pull_request_review_id" : 859107692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359412/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:51:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:51:17Z",
      "diff_hunk" : "@@ -40,107 +39,109 @@ static constexpr int AAD_PACKAGES_PER_ROUND = 21;        /* 64 / 3 round down*/\n  * output from the key exchange. Each key (K_1 and K_2) are used by two separate\n  * instances of chacha20.\n  *\n- * The instance keyed by K_1 is a stream cipher that is used only to encrypt the 3\n- * byte packet length field and has its own sequence number. The second instance,\n- * keyed by K_2, is used in conjunction with poly1305 to build an AEAD\n- * (Authenticated Encryption with Associated Data) that is used to encrypt and\n- * authenticate the entire packet.\n+ * The instance keyed by K_1 is a stream cipher that is used for the per-message\n+ * metadata, specifically for the poly1305 authentication key as well as for the\n+ * length encryption. The second instance, keyed by K_2, is used to encrypt the\n+ * entire payload.\n  *\n  * Two separate cipher instances are used here so as to keep the packet lengths\n- * confidential but not create an oracle for the packet payload cipher by\n- * decrypting and using the packet length prior to checking the MAC. By using an\n- * independently-keyed cipher instance to encrypt the length, an active attacker\n- * seeking to exploit the packet input handling as a decryption oracle can learn\n- * nothing about the payload contents or its MAC (assuming key derivation,\n- * ChaCha20 and Poly1305 are secure).\n- *\n- * The AEAD is constructed as follows: for each packet, generate a Poly1305 key by\n- * taking the first 256 bits of ChaCha20 stream output generated using K_2, an IV\n- * consisting of the packet sequence number encoded as an LE uint64 and a ChaCha20\n- * block counter of zero. The K_2 ChaCha20 block counter is then set to the\n- * little-endian encoding of 1 (i.e. {1, 0, 0, 0, 0, 0, 0, 0}) and this instance\n- * is used for encryption of the packet payload.\n+ * confidential (best effort; for passive observing) but not create an oracle for\n+ * the packet payload cipher by decrypting and using the packet length prior to\n+ * checking the MAC. By using an independently-keyed cipher instance to encrypt\n+ * the length, an active attacker seeking to exploit the packet input handling as\n+ * a decryption oracle can learn nothing about the payload contents or its MAC\n+ * (assuming key derivation, ChaCha20 and Poly1305 are secure). Active observers\n+ * can still obtain the message length (ex. active ciphertext bit flipping or\n+ * traffic semantics analysis)\n  *\n- * ==== Packet Handling ====\n+ * The AEAD is constructed as follows: generate two ChaCha20 streams, initially\n+ * keyed with K_1 and K_2 and sequence number 0 as IV and a block counter of 0.\n+ * After encrypting 4064 bytes, the following 32 bytes are used to\n+ * re-key the ChaCha20 context.\n  *\n- * When receiving a packet, the length must be decrypted first. When 3 bytes of\n- * ciphertext length have been received, they may be decrypted.\n+ * Byte-level forward security is possible by precomputing 4096 bytes of stream\n+ * output, caching it, resetting the key to the final 32 bytes of the output, and\n+ * then wiping the remaining 4064 bytes of cached data as it gets used.\n+ *\n+ * For each packet, use 3 bytes from the remaining ChaCha20 stream generated using\n+ * K_1 to encrypt the length. Use additional 32 bytes of the same stream to\n+ * generate a Poly1305 key.\n  *\n- * A ChaCha20 round always calculates 64bytes which is sufficient to crypt 21\n- * times a 3 bytes length field (21*3 = 63). The length field sequence number can\n- * thus be used 21 times (keystream caching).\n+ * If we reach bytes 4064 on the ChaCha20 stream, use the next 32 bytes (byte\n+ * 4065-4096) and set is as the new ChaCha20 key, reset the counter to 0 while\n+ * incrementing the sequence number + 1 and set is as IV (little endian encoding).\n  *\n- * The length field must be enc-/decrypted with the ChaCha20 keystream keyed with\n- * K_1 defined by block counter 0, the length field sequence number in little\n- * endian and a keystream position from 0 to 60.\n+ * For the payload, use the ChaCha20 stream keyed with K_2 and apply the same\n+ * re-key rules.\n+ *\n+ *\n+ * ==== Packet Handling ====\n+ *\n+ * When receiving a packet, the length must be decrypted first. When 3 bytes of\n+ * ciphertext length have been received, they MUST be decrypted.\n  *\n  * Once the entire packet has been received, the MAC MUST be checked before\n  * decryption. A per-packet Poly1305 key is generated as described above and the\n- * MAC tag calculated using Poly1305 with this key over the ciphertext of the\n+ * MAC tag is calculated using Poly1305 with this key over the ciphertext of the\n  * packet length and the payload together. The calculated MAC is then compared in\n  * constant time with the one appended to the packet and the packet decrypted\n- * using ChaCha20 as described above (with K_2, the packet sequence number as\n- * nonce and a starting block counter of 1).\n+ * using ChaCha20 as described above (using stream keyed with K_2).\n  *\n  * Detection of an invalid MAC MUST lead to immediate connection termination.\n  *\n- * To send a packet, first encode the 3 byte length and encrypt it using K_1 as\n- * described above. Encrypt the packet payload (using K_2) and append it to the\n- * encrypted length. Finally, calculate a MAC tag and append it.\n- *\n- * The initiating peer MUST use <code>K_1_A, K_2_A</code> to encrypt messages on\n- * the send channel, <code>K_1_B, K_2_B</code> MUST be used to decrypt messages on\n- * the receive channel.\n- *\n- * The responding peer MUST use <code>K_1_A, K_2_A</code> to decrypt messages on\n- * the receive channel, <code>K_1_B, K_2_B</code> MUST be used to encrypt messages\n- * on the send channel.\n- *\n- * Optimized implementations of ChaCha20-Poly1305@bitcoin are relatively fast in\n- * general, therefore it is very likely that encrypted messages require not more\n- * CPU cycles per bytes then the current unencrypted p2p message format\n- * (ChaCha20/Poly1305 versus double SHA256).\n- *\n- * The initial packet sequence numbers are 0.\n- *\n- * K_2 ChaCha20 cipher instance (payload) must never reuse a {key, nonce} for\n- * encryption nor may it be used to encrypt more than 2^70 bytes under the same\n- * {key, nonce}.\n- *\n- * K_1 ChaCha20 cipher instance (length field/AAD) must never reuse a {key, nonce,\n- * position-in-keystream} for encryption nor may it be used to encrypt more than\n- * 2^70 bytes under the same {key, nonce}.\n- *\n- * We use message sequence numbers for both communication directions.\n+ * To send a packet, first encode the 3 byte length and encrypt it using the\n+ * ChaCha20 stream keyed with K_1 as described above. Encrypt the packet payload\n+ * (using the ChaCha20 stream keyed with K_2) and append it to the encrypted\n+ * length. Finally, calculate a MAC tag (using poly1305 key from stream keyed with K_1)\n+ * and append it.\n  */\n \n+const int KEYSTREAM_SIZE = 4096;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359474",
      "id" : 789359474,
      "in_reply_to_id" : 771588744,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKty",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 99,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/crypto/chacha_poly_aead.h",
      "position" : null,
      "pull_request_review_id" : 859107781,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:51:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:51:22Z",
      "diff_hunk" : "@@ -107,6 +110,8 @@ const std::string NET_MESSAGE_COMMAND_OTHER = \"*other*\";\n static const uint64_t RANDOMIZER_ID_NETGROUP = 0x6c0edd8036ef4036ULL; // SHA256(\"netgroup\")[0:8]\n static const uint64_t RANDOMIZER_ID_LOCALHOSTNONCE = 0xd93e69e2bbfa5735ULL; // SHA256(\"localhostnonce\")[0:8]\n static const uint64_t RANDOMIZER_ID_ADDRCACHE = 0x1cf2e4ddd306dda9ULL; // SHA256(\"addrcache\")[0:8]\n+\n+static constexpr uint8_t NET_P2P_V2_CMD_MAX_CHARS_SIZE = 12; //maximal length for V2 (BIP324) string message commands",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359494",
      "id" : 789359494,
      "in_reply_to_id" : 771589966,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKuG",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 114,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 859107813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359494/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359550"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a good idea. Done.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:51:35Z",
      "diff_hunk" : "@@ -776,7 +791,160 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359550",
      "id" : 789359550,
      "in_reply_to_id" : 771594438,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vDKu-",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 798,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 859107894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359550/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359891"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes. It makes some of the invariants about `msg` below hold and that makes fuzz testing easier. The client of this function is expected to reject the message in this case.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T04:52:38Z",
      "diff_hunk" : "@@ -776,7 +791,160 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > V2_MAX_PAYLOAD_LENGTH) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(CHACHA20_POLY1305_AEAD_AAD_LEN + std::min(m_message_size, m_data_pos + copy_bytes + 256 * 1024) + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+\n+CNetMessage V2TransportDeserializer::GetMessage(const std::chrono::microseconds time, bool& reject_message, bool& disconnect)\n+{\n+    // Initialize out parameters\n+    reject_message = false;\n+    disconnect = false;\n+\n+    // In v2, vRecv contains the encrypted length (AAD), encrypted payload plus the MAC tag\n+    // (3 bytes AAD + 1-13 bytes serialized message command + ? bytes message payload + 16 byte MAC tag)\n+    assert(Complete());\n+\n+    std::string command_name;\n+\n+    // defensive decryption (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails)\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        // We can remove packet length (stored in m_message_size) and MAC tag (verified)\n+        assert(vRecv.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid message type, peer=%d\\n\", m_node_id);\n+            reject_message = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789359891",
      "id" : 789359891,
      "in_reply_to_id" : 771599942,
      "line" : 868,
      "node_id" : "PRRC_kwDOABII584vDK0T",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 868,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 143,
      "pull_request_review_id" : 859108302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359891/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T04:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789359891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you for the review, @laanwj. Comments addressed. I ended up rebasing against master due to a local issue.\r\n\r\nReady for further review.",
      "created_at" : "2022-01-21T04:53:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1018179534",
      "id" : 1018179534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5848sC_O",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018179534/reactions"
      },
      "updated_at" : "2022-01-21T04:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018179534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789467099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789467099"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh you're right, here you see how easy it is to miss a off-by-one like that with memcpy! Never mind my comment. What about writing it out explicitly?\r\n```c++\r\npayload_bytes.data[0] = packet_length & 0xff;\r\npayload_bytes.data[1] = (packet_length >> 8) & 0xff;\r\npayload_bytes.data[2] = (packet_length >> 16) & 0xff;\r\n```",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T08:55:01Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.\n+    bool mac_assist = length_assist && fuzzed_data_provider.ConsumeBool();\n+    auto payload_bytes = fuzzed_data_provider.ConsumeRemainingBytes<uint8_t>();\n+\n+    if (payload_bytes.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN) {\n+        if (length_assist) {\n+            uint32_t packet_length = payload_bytes.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN;\n+            packet_length = htole32(packet_length);\n+            memcpy(payload_bytes.data(), &packet_length, 3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789467099",
      "id" : 789467099,
      "in_reply_to_id" : 771572445,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII584vDk_b",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : 36,
      "pull_request_review_id" : 859260177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789467099/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T08:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789467099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789585263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789585263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, clear.",
      "commit_id" : "f098a0642ed79f2abe53334a2bc87ad5a21315b0",
      "created_at" : "2022-01-21T11:35:26Z",
      "diff_hunk" : "@@ -776,7 +791,160 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+int V2TransportDeserializer::readHeader(Span<const uint8_t> msg_bytes)\n+{\n+    // copy data to temporary parsing buffer\n+    const unsigned int remaining = CHACHA20_POLY1305_AEAD_AAD_LEN - m_hdr_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    memcpy(&vRecv[m_hdr_pos], msg_bytes.data(), copy_bytes);\n+    m_hdr_pos += copy_bytes;\n+\n+    // if AAD incomplete, exit\n+    if (m_hdr_pos < CHACHA20_POLY1305_AEAD_AAD_LEN) {\n+        return copy_bytes;\n+    }\n+\n+    // we got the AAD bytes at this point (3 bytes encrypted packet length)\n+    m_message_size = m_aead->DecryptLength((const uint8_t*)vRecv.data());\n+\n+    // reject messages larger than MAX_SIZE\n+    if (m_message_size > V2_MAX_PAYLOAD_LENGTH) {\n+        return -1;\n+    }\n+\n+    // switch state to reading message data\n+    m_in_data = true;\n+\n+    return copy_bytes;\n+}\n+int V2TransportDeserializer::readData(Span<const uint8_t> msg_bytes)\n+{\n+    // Read the message data (command, payload & MAC)\n+    const unsigned int remaining = m_message_size + CHACHA20_POLY1305_AEAD_TAG_LEN - m_data_pos;\n+    const unsigned int copy_bytes = std::min<unsigned int>(remaining, msg_bytes.size());\n+\n+    // extend buffer, respect previous copied AAD part\n+    if (vRecv.size() < CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos + copy_bytes) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size (incl. AAD & TAG).\n+        vRecv.resize(CHACHA20_POLY1305_AEAD_AAD_LEN + std::min(m_message_size, m_data_pos + copy_bytes + 256 * 1024) + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+    }\n+\n+    memcpy(&vRecv[CHACHA20_POLY1305_AEAD_AAD_LEN + m_data_pos], msg_bytes.data(), copy_bytes);\n+    m_data_pos += copy_bytes;\n+\n+    return copy_bytes;\n+}\n+\n+\n+CNetMessage V2TransportDeserializer::GetMessage(const std::chrono::microseconds time, bool& reject_message, bool& disconnect)\n+{\n+    // Initialize out parameters\n+    reject_message = false;\n+    disconnect = false;\n+\n+    // In v2, vRecv contains the encrypted length (AAD), encrypted payload plus the MAC tag\n+    // (3 bytes AAD + 1-13 bytes serialized message command + ? bytes message payload + 16 byte MAC tag)\n+    assert(Complete());\n+\n+    std::string command_name;\n+\n+    // defensive decryption (MAC check, decryption, command deserialization)\n+    // we'll always return a CNetMessage (even if decryption fails)\n+    if (m_aead->Crypt((unsigned char*)vRecv.data(), vRecv.size(), (const uint8_t*)vRecv.data(), vRecv.size(), false)) {\n+        // MAC check was successful\n+        // We can remove packet length (stored in m_message_size) and MAC tag (verified)\n+        assert(vRecv.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN);\n+\n+        // CDataStream::erase at the begin will just increase the read pos\n+        vRecv.erase(vRecv.begin(), vRecv.begin() + CHACHA20_POLY1305_AEAD_AAD_LEN);\n+        vRecv.erase(vRecv.end() - CHACHA20_POLY1305_AEAD_TAG_LEN, vRecv.end());\n+\n+        uint8_t size_or_shortid = 0;\n+        try {\n+            vRecv >> size_or_shortid;\n+        } catch (const std::ios_base::failure&) {\n+            LogPrint(BCLog::NET, \"Invalid message type, peer=%d\\n\", m_node_id);\n+            reject_message = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789585263",
      "id" : 789585263,
      "in_reply_to_id" : 771599942,
      "line" : 868,
      "node_id" : "PRRC_kwDOABII584vEB1v",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 868,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 143,
      "pull_request_review_id" : 859435911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789585263/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T11:35:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789585263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789870969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789870969"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done!",
      "commit_id" : "952eae41d86fc44fc87acbae985c9daeaf6ddd68",
      "created_at" : "2022-01-21T17:40:55Z",
      "diff_hunk" : "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <compat/endian.h>\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <key.h>\n+#include <net.h>\n+#include <netmessagemaker.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cassert>\n+\n+FUZZ_TARGET(p2p_v2_transport_serialization)\n+{\n+    const CPrivKey k1(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+    const CPrivKey k2(CHACHA20_POLY1305_AEAD_KEY_LEN, 0);\n+\n+    // Construct deserializer, with a dummy NodeId\n+    V2TransportDeserializer deserializer{(NodeId)0, k1, k2};\n+    V2TransportSerializer serializer{k1, k2};\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    bool length_assist = fuzzed_data_provider.ConsumeBool();\n+\n+    // There is no sense is providing a mac assist if the length is incorrect.\n+    bool mac_assist = length_assist && fuzzed_data_provider.ConsumeBool();\n+    auto payload_bytes = fuzzed_data_provider.ConsumeRemainingBytes<uint8_t>();\n+\n+    if (payload_bytes.size() >= CHACHA20_POLY1305_AEAD_AAD_LEN + CHACHA20_POLY1305_AEAD_TAG_LEN) {\n+        if (length_assist) {\n+            uint32_t packet_length = payload_bytes.size() - CHACHA20_POLY1305_AEAD_AAD_LEN - CHACHA20_POLY1305_AEAD_TAG_LEN;\n+            packet_length = htole32(packet_length);\n+            memcpy(payload_bytes.data(), &packet_length, 3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789870969",
      "id" : 789870969,
      "in_reply_to_id" : 771572445,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584vFHl5",
      "original_commit_id" : "6f819714a3f5143393144d41cfde5e72dfecb75f",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/fuzz/p2p_v2_transport_serialization.cpp",
      "position" : null,
      "pull_request_review_id" : 859851139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789870969/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-21T17:40:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/789870969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushed to address https://github.com/bitcoin/bitcoin/pull/23233#discussion_r789467099\r\n\r\nReady for further review.",
      "created_at" : "2022-01-21T17:41:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1018724889",
      "id" : 1018724889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5848uIIZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018724889/reactions"
      },
      "updated_at" : "2022-01-21T17:41:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1018724889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-24T09:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1019902196",
      "id" : 1019902196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5848ynj0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019902196/reactions"
      },
      "updated_at" : "2022-01-24T09:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019902196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Ready for further review.",
      "created_at" : "2022-01-24T19:41:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1020474976",
      "id" : 1020474976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII58480zZg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1020474976/reactions"
      },
      "updated_at" : "2022-01-24T19:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1020474976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-31T08:07:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1025472478",
      "id" : 1025472478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5849H3fe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025472478/reactions"
      },
      "updated_at" : "2022-01-31T08:07:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025472478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Ready for further review.\r\n\r\n`git range-diff 02e1d8d06f a999f11 ed5f00d`",
      "created_at" : "2022-02-02T02:49:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1027525100",
      "id" : 1027525100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5849Psns",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1027525100/reactions"
      },
      "updated_at" : "2022-02-02T02:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1027525100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Update to bring in #24253. Please review with: `git range-diff 5e8e0b3d7f ed5f00d d7afc96`\r\n\r\nReady for further review.",
      "created_at" : "2022-02-10T02:28:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1034427302",
      "id" : 1034427302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII5849qBum",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034427302/reactions"
      },
      "updated_at" : "2022-02-10T02:28:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034427302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated code due to bug found while fuzzing and testing a new BIP324 PR which is WIP. Please review diff with: `git range-diff refs/heads/master d7afc96 HEAD`\r\n\r\nReady for further review.",
      "created_at" : "2022-02-23T01:47:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1048379665",
      "id" : 1048379665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII584-fQER",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1048379665/reactions"
      },
      "updated_at" : "2022-02-23T01:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1048379665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-03T14:28:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1058097008",
      "id" : 1058097008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII584_EUdw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058097008/reactions"
      },
      "updated_at" : "2022-03-03T14:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058097008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Ready for further review.",
      "created_at" : "2022-03-11T01:00:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1064666344",
      "id" : 1064666344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII584_dYTo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064666344/reactions"
      },
      "updated_at" : "2022-03-11T01:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064666344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Bringing in [upstream changes](https://github.com/bitcoin/bitcoin/pull/20962#issuecomment-1074367550) from #20962. Ready for further review.",
      "created_at" : "2022-03-21T20:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1074371258",
      "id" : 1074371258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585ACZq6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074371258/reactions"
      },
      "updated_at" : "2022-03-21T20:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074371258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-08T14:34:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1092928540",
      "id" : 1092928540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585BJMQc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092928540/reactions"
      },
      "updated_at" : "2022-04-08T14:34:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092928540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. `git range-diff e0680bbce 8264b14 92c51da7d`.\r\n\r\nReady for further review.",
      "created_at" : "2022-04-09T15:46:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1094071738",
      "id" : 1094071738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585BNjW6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1094071738/reactions"
      },
      "updated_at" : "2022-04-09T15:46:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1094071738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-05T07:48:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1118265229",
      "id" : 1118265229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585Cp1-N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118265229/reactions"
      },
      "updated_at" : "2022-05-05T07:48:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1118265229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Changes incorporate latest working group changes and leverage #25361. Rebased with master. Ready for further review.",
      "created_at" : "2022-06-30T04:17:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1170737244",
      "id" : 1170737244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585FyAhc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170737244/reactions"
      },
      "updated_at" : "2022-06-30T04:17:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170737244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re-pushed to force CI to run (it was trying to checkout old git objects and failing repeatedly). Ready for further review.",
      "created_at" : "2022-06-30T04:48:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1170758591",
      "id" : 1170758591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585FyFu_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170758591/reactions"
      },
      "updated_at" : "2022-06-30T04:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170758591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated to reflect upstream correction in #25361.",
      "created_at" : "2022-07-06T19:45:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1176625232",
      "id" : 1176625232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585GIeBQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1176625232/reactions"
      },
      "updated_at" : "2022-07-06T19:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1176625232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-07-20T14:01:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1190326542",
      "id" : 1190326542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585G8vEO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190326542/reactions"
      },
      "updated_at" : "2022-07-20T14:01:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190326542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Ready for further review.",
      "created_at" : "2022-07-22T13:54:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1192601185",
      "id" : 1192601185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585HFaZh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192601185/reactions"
      },
      "updated_at" : "2022-07-22T13:54:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192601185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Amended a commit description to force push again as CI would not trigger. No code changes. Ready for further review.",
      "created_at" : "2022-07-22T13:59:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1192605773",
      "id" : 1192605773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585HFbhN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192605773/reactions"
      },
      "updated_at" : "2022-07-22T13:59:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1192605773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-30T10:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1231461990",
      "id" : 1231461990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585JZp5m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231461990/reactions"
      },
      "updated_at" : "2022-08-30T10:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231461990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Modified code to bring in upstream interface changes from #25361 and exposed the `BIP324CipherSuite` AAD via the `V2TransportSerializer` and `V2TransportDeserializer`classes to facilitate the authentication of the garbage bytes in the shapable handshake.\r\n\r\nReady for further review.",
      "created_at" : "2022-09-11T20:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1243036473",
      "id" : 1243036473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585KFzs5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1243036473/reactions"
      },
      "updated_at" : "2022-09-11T20:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1243036473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-09-25T15:57:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1257223161",
      "id" : 1257223161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585K77P5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257223161/reactions"
      },
      "updated_at" : "2022-09-25T15:57:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257223161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Latest push:\r\n- Rebased\r\n- Bring in upstream PR #25361 which was updated\r\n- New nomenclature to correspond to latest working group draft",
      "created_at" : "2022-09-29T04:38:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1261744467",
      "id" : 1261744467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585LNLFT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1261744467/reactions"
      },
      "updated_at" : "2022-09-29T04:38:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1261744467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Latest push:\r\n- Nomenclature update\r\n- Encrypted length is now len(contents) instead of len(header) + len(contents)\r\n- Rekey salt is now 23 bytes instead of 32 bytes to save on SHA256 compression upon rekey event\r\n- Bring in upstream changes",
      "created_at" : "2022-10-01T06:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1264263181",
      "id" : 1264263181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585LWyAN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264263181/reactions"
      },
      "updated_at" : "2022-10-01T06:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1264263181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-10-17T17:47:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1281235682",
      "id" : 1281235682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585MXhri",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1281235682/reactions"
      },
      "updated_at" : "2022-10-17T17:47:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1281235682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r997384314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997384314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "8a1901cc: s/vector/map also in the comments.",
      "commit_id" : "81bd1cf4eee838d4e29f95c2d7673c336797e233",
      "created_at" : "2022-10-17T18:29:53Z",
      "diff_hunk" : "@@ -261,7 +261,16 @@ extern const char* WTXIDRELAY;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r997384314",
      "id" : 997384314,
      "line" : 263,
      "node_id" : "PRRC_kwDOABII5847cuB6",
      "original_commit_id" : "8a1901cc6d05d89b97dd8743f1a55c9a1d5ceba2",
      "original_line" : 263,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 3,
      "pull_request_review_id" : 1144630432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997384314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-17T18:38:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997384314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r997390445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997390445"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "1f22117: it'd be easier to understand if we renamed `header` to `transport_header`.",
      "commit_id" : "81bd1cf4eee838d4e29f95c2d7673c336797e233",
      "created_at" : "2022-10-17T18:37:18Z",
      "diff_hunk" : "@@ -797,7 +812,7 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) const\n+bool V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r997390445",
      "id" : 997390445,
      "line" : 818,
      "node_id" : "PRRC_kwDOABII5847cvht",
      "original_commit_id" : "1f22117fa8424dff222a020f6e87d9aa1ed20c67",
      "original_line" : 815,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 82,
      "pull_request_review_id" : 1144630432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997390445/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-17T18:38:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997390445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Addressed a comment from @stratospher.",
      "created_at" : "2022-10-21T05:45:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1286488909",
      "id" : 1286488909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585MrkNN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286488909/reactions"
      },
      "updated_at" : "2022-10-21T05:45:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286488909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r1001389427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389427"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Going to keep this as-is for now as it'd be less confusing for v2 and perhaps more confusing for v1.",
      "commit_id" : "7925cf53b41e17775ee36c33babd0d5a6881e8a7",
      "created_at" : "2022-10-21T05:46:55Z",
      "diff_hunk" : "@@ -797,7 +812,7 @@ CNetMessage V1TransportDeserializer::GetMessage(const std::chrono::microseconds\n     return msg;\n }\n \n-void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) const\n+bool V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r1001389427",
      "id" : 1001389427,
      "in_reply_to_id" : 997390445,
      "line" : 817,
      "node_id" : "PRRC_kwDOABII5847r_1z",
      "original_commit_id" : "1f22117fa8424dff222a020f6e87d9aa1ed20c67",
      "original_line" : 817,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 85,
      "pull_request_review_id" : 1150369238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-21T05:46:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r1001389519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389519"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7925cf53b41e17775ee36c33babd0d5a6881e8a7",
      "created_at" : "2022-10-21T05:47:05Z",
      "diff_hunk" : "@@ -261,7 +261,16 @@ extern const char* WTXIDRELAY;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#discussion_r1001389519",
      "id" : 1001389519,
      "in_reply_to_id" : 997384314,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5847r_3P",
      "original_commit_id" : "8a1901cc6d05d89b97dd8743f1a55c9a1d5ceba2",
      "original_line" : 263,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 1150369361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389519/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-21T05:47:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001389519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-11-19T01:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1320737098",
      "id" : 1320737098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585OuNlK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1320737098/reactions"
      },
      "updated_at" : "2022-11-19T01:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1320737098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Bringing in upstream rebase (#26153)",
      "created_at" : "2022-11-23T05:11:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1324560160",
      "id" : 1324560160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585O8y8g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1324560160/reactions"
      },
      "updated_at" : "2022-11-23T05:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1324560160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-11-30T01:22:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1331525825",
      "id" : 1331525825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585PXXjB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331525825/reactions"
      },
      "updated_at" : "2022-11-30T01:22:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331525825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Latest push:\r\n- Rebased upstream changes\r\n- Upstream changes include a new rekey ratchet mechanism (forward security) based on ChaCha20 instead of SHA256. BIP changes are WIP and coming soon.",
      "created_at" : "2022-12-15T16:52:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1353393500",
      "id" : 1353393500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585QqyVc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353393500/reactions"
      },
      "updated_at" : "2022-12-15T16:52:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353393500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-25T11:35:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1364667082",
      "id" : 1364667082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585RVyrK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1364667082/reactions"
      },
      "updated_at" : "2022-12-25T11:35:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1364667082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased",
      "created_at" : "2023-01-12T19:10:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1380881670",
      "id" : 1380881670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585STpUG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380881670/reactions"
      },
      "updated_at" : "2023-01-12T19:10:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380881670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased changes from #26153",
      "created_at" : "2023-01-23T22:12:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1401068862",
      "id" : 1401068862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585Tgp0-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1401068862/reactions"
      },
      "updated_at" : "2023-01-23T22:12:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1401068862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Brought in upstream changes.",
      "created_at" : "2023-02-02T06:27:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1413217187",
      "id" : 1413217187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585UO_uj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413217187/reactions"
      },
      "updated_at" : "2023-02-02T06:27:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1413217187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-15T15:53:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1431589941",
      "id" : 1431589941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585VVFQ1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1431589941/reactions"
      },
      "updated_at" : "2023-02-15T15:53:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1431589941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.",
      "created_at" : "2023-02-21T03:34:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1437813348",
      "id" : 1437813348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585Vs0pk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437813348/reactions"
      },
      "updated_at" : "2023-02-21T03:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437813348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Latest push:\r\n- Implemented changes from https://github.com/bitcoin/bips/pull/1428 involving fixed length message type ids (there's also a relevant discussion on the ML)\r\n- While implementing it, I found a bug in the arm of code that serialized/deserialized message types without assigned short ids. That branch of code was previously unexercised by any tests. This is no longer the case.\r\n",
      "created_at" : "2023-03-08T15:26:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1460331730",
      "id" : 1460331730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585XCuTS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1460331730/reactions"
      },
      "updated_at" : "2023-03-08T15:26:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1460331730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Latest push:\r\n- Upstream changes from #25361\r\n- Rebased",
      "created_at" : "2023-03-21T04:01:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1477250064",
      "id" : 1477250064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585YDQwQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1477250064/reactions"
      },
      "updated_at" : "2023-03-21T04:01:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1477250064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing for now. This will be picked up again later. BIP324 review attention should be directed towards #27479 and https://github.com/bitcoin-core/secp256k1/pull/1129.",
      "created_at" : "2023-05-06T11:11:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-1537118838",
      "id" : 1537118838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
      "node_id" : "IC_kwDOABII585bnpJ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1537118838/reactions"
      },
      "updated_at" : "2023-05-06T11:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1537118838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
