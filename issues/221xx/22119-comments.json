[
   {
      "author_association" : "MEMBER",
      "body" : "How is this different from getblocktemplate proposal?\r\n\r\n* https://bitcoincore.org/en/doc/0.21.0/rpc/mining/getblocktemplate/\r\n* https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki#block-proposal",
      "created_at" : "2021-06-01T13:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852105671",
      "id" : 852105671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjEwNTY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-01T13:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852105671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "It is no changes to any rules or validation, only one change to the order in which they are done, to **optionally** do the difficulty test last rather then where it is now done.",
      "created_at" : "2021-06-01T13:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852108765",
      "id" : 852108765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjEwODc2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-01T13:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852108765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "They BIP says: \"The block data MUST be validated and checked against the server's usual acceptance rules (excluding the check for a valid proof-of-work)\", which is what your feature request is asking for, no? I am saying this is already implemented unless I am missing something.",
      "created_at" : "2021-06-01T13:08:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852109929",
      "id" : 852109929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjEwOTkyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-01T13:08:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852109929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I'm under the impression that not all validity and consensus tests are done on a block submitted, that only fails the difficulty test, and is valid under all other rules.\r\nI have purposely corrupted a transaction in the data submitted and still only get high-hash",
      "created_at" : "2021-06-01T13:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852113339",
      "id" : 852113339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjExMzMzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-01T22:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852113339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kanoi Note that @MarcoFalke is referring to the \"block proposal\" mode of `getblocktemplate`, not `submitblock`.",
      "created_at" : "2021-06-02T00:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852624621",
      "id" : 852624621,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjYyNDYyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T00:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852624621",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Ah OK, I am referring to submitblock - but I'm not sure if he meant there is some method in getblocktemplate with the workid, to later use that workid to submit a low difficulty block with otherwise full testing.\r\nAlas if there is, it's not obvious (and I can't see it explained in the BIPs)",
      "created_at" : "2021-06-02T02:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852665621",
      "id" : 852665621,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjY2NTYyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T02:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852665621",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  Alas if there is, it's not obvious (and I can't see it explained in the BIPs)\r\n\r\nI agree this is a bit hidden, but I linked you the RPC documentation and the section in the BIP that explains this.",
      "created_at" : "2021-06-02T04:59:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-852722740",
      "id" : 852722740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MjcyMjc0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T04:59:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852722740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Since this was changed to 'Help' ...\r\nAlas, either I can't understand the code (i.e. my fault) or it doesn't work any more - I've tried this back to 0.17\r\n\r\nThe normal submit is of course is:\r\n`{\"method\":\"submitblock\",\"params\":[\"blockdata\"],\"id\":1}`\r\nWith the expected result for a block without enough difficulty:\r\n`{\"result\":\"high-hash\",\"error\":null,\"id\":1}`\r\n\r\nLooking at the rpc/mining.cpp code for 0.21.1 getblocktemplate when it sees the 'mode' of 'proposal' it says (skipping some parts):\r\n\r\n`const UniValue& dataval = find_value(oparam, \"data\");`\r\n`DecodeHexBlk(block, dataval.get_str())`\r\n`pindex = LookupBlockIndex(hash);`\r\n`if (pindex) {`\r\n`  if (pindex->IsValid(BLOCK_VALID_SCRIPTS))`\r\n`    return \"duplicate\";`\r\n`  if (pindex->nStatus & BLOCK_FAILED_MASK)`\r\n`    return \"duplicate-invalid\";`\r\n`  return \"duplicate-inconclusive\";`\r\n`}`\r\n`TestBlockValidity(state, Params(), block, pindexPrev, false, true);`\r\n`  return BIP22ValidationResult(state);`\r\n\r\nSo, if instead I do this with the same data:\r\n`{\"method\":\"getblocktemplate\",\"params\":[{\"mode\":\"proposal\",\"data\":\"blockdata\"}],\"id\":6}`\r\nThe response is:\r\n`{\"result\":\"bad-witness-nonce-size\",\"error\":null,\"id\":6}`\r\nWhich seems to be incorrect.\r\n\r\nSo to verify this I remove the difficulty test from the code pow.cpp:\r\n`    // Check proof of work matches claimed amount`\r\n`//    if (UintToArith256(hash) > bnTarget)`\r\n`//        return false;`\r\n\r\nNow the above submitblock replies:\r\n`{\"result\":null,\"error\":null,\"id\":1}`\r\ni.e. it's a valid block - ignoring difficulty\r\nand the proposal returns:\r\n`{\"result\":\"duplicate\",\"error\":null,\"id\":6}`\r\n\r\nSo what I can make of all this is either the code is deprecated and not been updated, or there's some other data required for the proposal, that isn't needed until it gets to whatever causes \"bad-witness-nonce-size\"\r\n\r\n**So** my suggestion, then, since a completely unexpected designed interface exists for submitting a proposal, that the 'submitblock' should be passed an optional 'proposal' and do the:\r\n`TestBlockValidity(state, Params(), block, pindexPrev, false, true);`\r\n`  return BIP22ValidationResult(state);`\r\n\r\ni.e. from the code point of view, how my original suggested change could be best implemented and used in a manner that makes sense using 'submitblock' not 'getblocktemplate'\r\nThough the current TestBlockValidity() may or may not also need fixing, unrelated to my suggested change.\r\n\r\nEdit: and in case it wasn't obvious, the line in validation.cpp that gives this error is:\r\n`if (block.vtx[0]->vin[0].scriptWitness.stack.size() != 1 || block.vtx[0]->vin[0].scriptWitness.stack[0].size() != 32) {`\r\n`                return state.Invalid(BlockValidationResult::BLOCK_MUTATED, \"bad-witness-nonce-size\", strprintf(\"%s : invalid witness reserved value size\", __func__));`\r\n`}`\r\nBut this doesn't fail when calling submitblock",
      "created_at" : "2021-06-08T00:57:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-856359630",
      "id" : 856359630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NjM1OTYzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-08T01:31:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856359630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Though I've not yet attempted to test the change to determine if it is related to the TestBlockValidity() issue,\r\nI've found there was a commit/merge to core on 1-Feb but it isn't in the 0.21.1 tag https://github.com/bitcoin/bitcoin/releases/tag/v0.21.1 that was released on 30-Apr\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/20749\r\nthat modifies the call parameters and a later change to tidy up the calling and usage of the new parameter.\r\n\r\nSo I guess for the issue I've brought up about TestBlockValidity() possibly not working since at least 0.17, I'll shortly do some more testing with the current git to see if that's related or not.",
      "created_at" : "2021-06-11T05:34:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-859280701",
      "id" : 859280701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTI4MDcwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-11T05:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859280701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've noticed that the TestBlockValidity() issue is still the same even with V23.0\r\n\r\nHaving read through the code to consider a simple implementation to place the POW check last when requested but leave it first if the latePOW isn't requested, I've found that the check code repeats many checks when it gets a block submission.\r\n\r\nTo be specific: src/rpc/mining.cpp submitblock() does some checks then calls src/validation.cpp ProcessNewBlock()\r\n\r\nHowever ProcessNewBlock() repeats checks due to:\r\n CheckBlock() followed by AcceptBlock()\r\n\r\nThese two overlap some checks and also do some different checks.\r\nCheckBlock() calls:\r\n  CheckBlockHeader() <- this is the POW check\r\n  various validation checks\r\n  then finally flags the block as checked\r\nAcceptBlock() calls:\r\n  AcceptBlockHeader()\r\n  CheckBlock() (again)\r\n  ContextualCheckBlock()\r\n  disk storage\r\n\r\nThus to optionally run the POW check last, it would have to disable it everywhere CheckBlockHeader() is called\r\nand put it near the end of AcceptBlock()\r\n\r\nI wonder if this convolution is due to the unnecessary TestBlockValidity() code that appears to be unsupported and poorly documented.\r\n\r\nIf anyone has the nous to work out how to implement this cleanly, that would be much appreciated. \r\nRPC submitblock has a randomly documented optional 2nd parameter that could be used to add an optional \"latepow\" string to enable this. (or 'proposal' as suggested earlier, but 'latepow' seems to be more informative about it's action)",
      "created_at" : "2022-09-02T11:42:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22119#issuecomment-1235396957",
      "id" : 1235396957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22119",
      "node_id" : "IC_kwDOABII585Joqld",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235396957/reactions"
      },
      "updated_at" : "2022-09-02T11:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235396957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=4",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "node_id" : "MDQ6VXNlcjEwNTkxNjY=",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   }
]
