{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "This issue is about depends subsystem only.\r\n\r\nOnce everything is built, subsequent runs of make result in\r\nmake redoing some of the earlier done work.\r\n\r\nThere are 2 files which are being rebuilt.\r\nconfig.site and .stamp_$(final_build_id).\r\n\r\nconfig.site is rebuilt because\r\n1. check-packages and check-sources are both phony and create no files.\r\n2. A real file (config.site) depends on check-packages and check-sources.\r\nWhen a file depends on a phony prerequisite, the file is rebuilt every time. In\r\nthis case, config.site is rebuilt every time.\r\n\r\n.stamp_$(final_build_id) is rebuild because\r\n\r\n1. every package (expat, boost, etc) is phony.\r\n.PHONY: $(1)\r\nSee funcs.mk:239.\r\n2. The rule for every package\r\n$(1): | $($(1)_cached_checksum)\r\ndoes not create any file.\r\nSee funcs.mk:240.\r\n3. A real file (.stamp_$(final_build_id)) depends on packages.\r\nWhen a file depends on a phony prerequisite, the file is rebuilt every time. In\r\nthis case, .stamp_$(final_build_id) is rebuilt every time.\r\n\r\n\r\nWhat can be done about this?\r\n\r\nThere are a few options.\r\n\r\nRegarding config.site.\r\n\r\n1. Given that subsequent runs of make do not download the tarball, then what is\r\nthe purpose of computing the hash of the earlier downloaded tarball and\r\ncomparing against the hash stored earlier in the stamp file?\r\nIf some malicious person could substitute the local copy of the tarball, then\r\nthat same person could store the new hash in the stamp file.\r\n\r\ni see, that check-sources and check-packages were introduced in commit\r\n235b3a789d6c54b042a241ffcfaba4404f6245fa. The comment says this is for travis.\r\nGiven that travis is no longer used, we should figure out if this commit can\r\nbe reverted.\r\n\r\n2. Another option is to mark check-packages and check-sources as not phony and\r\nintroduce sentinel files.\r\nE.g.\r\n\r\ncheck-packages: $(prereqs_of_check_packages)\r\n    $(foreach package,$(all_packages),$(call\r\ncheck_or_remove_cached,$(package));)\r\n    touch $@\r\n\r\ncheck-sources: $(prereqs_of_check_sources)\r\n    $(foreach package,$(all_packages),$(call\r\ncheck_or_remove_sources,$(package));)\r\n    touch $@\r\n\r\nIn addition, both of these rules will need to have prerequisites.\r\nIn addition, the same trouble with .stamp_$(final_build_id) has to be fixed,\r\nbecause config.site depends on .stamp_$(final_build_id).\r\n\r\n3. Or keep the makefile as is. Apparently, this does not bother anybody.\r\n\r\nAs for .stamp_$(final_build_id), either the rule can be modified to create a\r\nsentinel file and each package can be marked to be not phony or the keep the\r\nmakefile as is.\r\n\r\n<!--- What behavior did you expect? -->\r\n\"Nothing to be done for 'all'.\" message from make.\r\n\r\n<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\r\nEvery time.\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\nLatest soucrce from git.\r\n\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22134/comments",
   "created_at" : "2021-06-02T19:44:22Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22134/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/22134",
   "id" : 909829142,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22134/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU5MDk4MjkxNDI=",
   "number" : 22134,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "make keeps redoing some of the earlier done work.",
   "updated_at" : "2021-06-02T19:44:22Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22134",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/74753?v=4",
      "events_url" : "https://api.github.com/users/dgoncharov/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dgoncharov/followers",
      "following_url" : "https://api.github.com/users/dgoncharov/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dgoncharov/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dgoncharov",
      "id" : 74753,
      "login" : "dgoncharov",
      "node_id" : "MDQ6VXNlcjc0NzUz",
      "organizations_url" : "https://api.github.com/users/dgoncharov/orgs",
      "received_events_url" : "https://api.github.com/users/dgoncharov/received_events",
      "repos_url" : "https://api.github.com/users/dgoncharov/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dgoncharov/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dgoncharov/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dgoncharov"
   }
}
